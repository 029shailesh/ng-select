{"version":3,"sources":["webpack:///js/app.ae88d3d741ea3c82786d.js","webpack:///./src/ng-select/virtual-scroll.component.ts","webpack:///./demo/main.ts","webpack:///./demo/app/app.module.ts","webpack:///./src/index.ts","webpack:///./src/ng-select/items-list.ts","webpack:///./src/ng-select/search-helper.ts","webpack:///./src/ng-select/ng-select.component.html","webpack:///./src/ng-select/ng-select.component.scss","webpack:///./src/ng-select/ng-select.module.ts","webpack:///./src/ng-select/spinner.component.ts","webpack:///./demo/app/app.component.ts","webpack:///./demo/app/app.component.html","webpack:///./demo/app/examples/custom-templates.component.ts","webpack:///./demo/app/examples/bindings.component.ts","webpack:///./demo/app/examples/search.component.ts","webpack:///./demo/app/examples/reactive-forms.component.ts","webpack:///./demo/app/examples/events.component.ts","webpack:///./demo/app/examples/multi.component.ts","webpack:///./demo/app/examples/tags.component.ts","webpack:///./demo/app/layout/header.component.ts","webpack:///./demo/app/layout/sidenav-component.ts","webpack:///./node_modules/@angular/common/@angular/common/http.es5.js","webpack:///./src/ng-select/ng-select.types.ts","webpack:///./node_modules/@angular/router/@angular/router.es5.js","webpack:///./src/ng-select/ng-select.component.ts","webpack:///./src/ng-select/ng-templates.directive.ts"],"names":["webpackJsonp","100","module","exports","__webpack_require__","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","value","core_1","common_1","VirtualScrollComponent","element","zone","renderer","items","bufferAmount","update","EventEmitter","startupLoop","disposeScrollListener","prototype","get","enumerable","configurable","handleScroll","_this","handler","enabled","emit","refresh","listen","nativeElement","ngOnInit","scrollbarWidth","scrollbarHeight","ngOnDestroy","ngOnChanges","changes","previousStart","undefined","previousEnd","previousValue","currentValue","runOutsideAngular","requestAnimationFrame","calculateItems","scrollInto","item","el","index","indexOf","calculateDimensions","buffer","Math","floor","viewHeight","childHeight","scrollTop","itemsPerRow","min","countItemsPerRow","offsetTop","children","contentElementRef","getElementsOffset","containerElementRef","contentDimensions","itemCount","viewWidth","clientWidth","clientHeight","childWidth","content","getBoundingClientRect","width","height","max","itemsPerRowByCalc","itemsPerCol","scrollHeight","NgZone","assertNotInAngularZone","indexByScrollTop","end","ceil","maxStartEnd","modEnd","maxStart","start","topPadding","isNaN","run","slice","Input","Array","Number","Output","ViewChild","read","ElementRef","ContentChild","Component","selector","exportAs","template","host","[style.overflow-y]","styles","Renderer2","VirtualScrollModule","NgModule","imports","CommonModule","declarations","175","platform_browser_dynamic_1","app_module_1","platformBrowserDynamic","bootstrapModule","AppModule","179","http_1","forms_1","platform_browser_1","router_1","ng_select_1","ng_bootstrap_1","app_component_1","custom_templates_component_1","bindings_component_1","search_component_1","reactive_forms_component_1","events_component_1","multi_component_1","tags_component_1","header_component_1","sidenav_component_1","appRoutes","path","redirectTo","pathMatch","component","ReactiveFormsComponent","data","title","SelectBindingsComponent","SelectSearchComponent","SelectTagsComponent","SelectWithTemplatesComponent","SelectMultiComponent","SelectEventsComponent","BrowserModule","NgSelectModule","forRoot","notFoundText","typeToSearchText","addTagText","FormsModule","ReactiveFormsModule","HttpClientModule","NgbModule","RouterModule","useHash","AppComponent","LayoutHeaderComponent","LayoutSidenavComponent","bootstrap","183","ng_select_component_1","NgSelectComponent","ng_select_module_1","ng_select_types_1","NgSelectConfig","184","__assign","assign","t","s","n","p","hasOwnProperty","call","searchHelper","ItemsList","filteredItems","_markedIndex","_selected","_multiple","setItems","mapItems","setMultiple","multiple","clearSelected","select","push","selected","findItem","bindLabel","bindValue","find","x","unselect","filter","unselectLastItem","splice","addTag","forEach","marked","term","filterFuncVal","getDefaultFilterFunc","val","clearFilter","markNextItem","stepToItem","markPreviousItem","markItem","lastSelectedItem","getNextItemIndex","steps","markedItem","disabled","stripSpecialChars","toUpperCase","map","185","text","match","a","diacritics","replace","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","187","188","189","provideModule","config","ngModule","providers","provide","useValue","ng_templates_directive_1","virtual_scroll_component_1","spinner_component_1","forChild","NgOptionTemplateDirective","NgLabelTemplateDirective","SpinnerComponent","190","196","router","activatedRoute","titleService","version","window","setTitle","events","event","NavigationEnd","route","firstChild","outlet","mergeMap","subscribe","Router","ActivatedRoute","Title","197","198","199","cities","id","name","avatar","cities2","JSON","parse","stringify","cities3","selectedCity","selectedCity2","selectedCity3","200","defaultBindingsList","label","selectedCityId2","201","Observable_1","http","companies","companies2","filteredCompanies2","typeahead","placeholder","customFilter","companiesNames","distinctUntilChanged","debounceTime","switchMap","loadGithubUsers","err","console","log","rsp","Observable","of","toggleMultiple","HttpClient","202","fb","modalService","isCitiesControlVisible","ages","albums","allAlbums","photos","loadAlbums","loadPhotos","heroForm","group","selectedCitiesIds","age","album","photo","toggleAgeDisable","controls","enable","disable","toggleCitiesControl","clearCities","patchValue","selectFirstPhoto","thumbnailUrl","selectFirstAlbum","selectAlbumsRange","from","to","openModel","open","changePhoto","togglePhotoDisabled","FormBuilder","NgbModal","203","onChange","$event","onFocus","onBlur","onOpen","onClose","204","users","selectedCompaniesDisabled","clearModel","selectedCompanies","205","tag","206","String","207","39","__webpack_exports__","paramParser","rawParams","codec","map$$1","Map","split","param","eqIdx","_a","decodeKey","decodeValue","list","set","standardEncoding","encodeURIComponent","mightHaveBody","method","isArrayBuffer","ArrayBuffer","isBlob","Blob","isFormData","FormData","addBody","options","body","headers","observe","params","reportProgress","responseType","withCredentials","getResponseUrl","xhr","responseURL","test","getAllResponseHeaders","getResponseHeader","interceptingHandler","backend","interceptors","reduceRight","next","interceptor","HttpInterceptorHandler","jsonpCallbackContext","HttpBackend","HttpHandler","HttpHeaders","HTTP_INTERCEPTORS","JsonpClientBackend","JsonpInterceptor","HttpClientJsonpModule","HttpClientXsrfModule","HttpParams","HttpUrlEncodingCodec","HttpRequest","HttpErrorResponse","HttpEventType","HttpHeaderResponse","HttpResponse","HttpResponseBase","HttpXhrBackend","XhrFactory","HttpXsrfTokenExtractor","NoopInterceptor","JsonpCallbackContext","BrowserXhr","HttpXsrfCookieExtractor","HttpXsrfInterceptor","XSRF_COOKIE_NAME","XSRF_HEADER_NAME","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1__angular_core__","__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_of__","__WEBPACK_IMPORTED_MODULE_3_rxjs_operator_concatMap__","__WEBPACK_IMPORTED_MODULE_4_rxjs_operator_filter__","__WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__","__WEBPACK_IMPORTED_MODULE_6__angular_common__","__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__","handle","req","encodeKey","encodeValue","decodeURIComponent","updates","cloneFrom","encoder","fromString","has","init","res","getAll","keys","append","clone","op","delete","toString","eKey","join","concat","base","base_1","idx","normalizedNames","lazyUpdate","lazyInit","line","toLowerCase","trim","maybeSetNormalizedName","values","lcName","copyFrom","applyUpdate","other","apply","toDelete_1","existing","fn","url","third","fourth","urlWithParams","qIdx","sep","serializeBody","isArray","detectContentTypeHeader","type","setHeaders","reduce","setParams","Sent","UploadProgress","ResponseHeader","DownloadProgress","Response","User","defaultStatus","defaultStatusText","status","statusText","ok","_super","message","error","request","first","events$","res$","Error","head","jsonp","callbackParam","patch","post","put","ctorParameters","intercept","nextRequestId","callbackMap","document","nextCallback","observer","callback","node","createElement","src","finished","cancelled","cleanup","parentNode","removeChild","onLoad","complete","onError","addEventListener","appendChild","removeEventListener","args","XSSI_PREFIX","build","XMLHttpRequest","xhrFactory","setRequestHeader","detectedType","reqBody","headerResponse","partialFromXhr","response","responseText","sentHeaders","onDownProgress","progressEvent","loaded","lengthComputable","total","partialText","onUpProgress","progress","upload","send","abort","getToken","doc","platform","cookieName","lastCookieString","lastToken","parseCount","cookieString","cookie","tokenService","headerName","lcUrl","startsWith","token","useClass","withOptions","useExisting","multi","useFactory","deps","54","KeyCode","90","convertToParamMap","ParamsAsMap","navigationCancelingError","NAVIGATION_CANCELING_ERROR","isNavigationCancelingError","defaultUrlMatcher","segments","segmentGroup","parts","hasChildren","posParams","part","segment","substring","consumed","validateConfig","parentPath","validateNode","getFullPath","fullPath","PRIMARY_OUTLET","loadChildren","matcher","charAt","currentRoute","shallowEqualArrays","b","shallowEqual","k1","k2","flatten","arr","last$1","prop","waitForMap","obj","__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__","waitHead","waitTail","mapped","__WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__","concat$","__WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__","last$","__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__","andObservables","observables","merged$","__WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__","__WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__","result","wrapIntoObservable","__WEBPACK_IMPORTED_MODULE_2__angular_core__","__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__","Promise","resolve","createEmptyUrlTree","UrlTree","UrlSegmentGroup","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","root","containsQueryParams","containsSegmentGroup","equalPath","numberOfChildren","every","containsSegmentGroupHelper","containeePaths","current","equalSegments","as","bs","parameters","mapChildrenIntoArray","child","childOutlet","serializePaths","serializePath","serializeSegment","primary","children_1","encode","decode","serializeParams","serializeQueryParams","strParams","matchSegments","str","SEGMENT_RE","matchQueryParams","QUERY_PARAM_RE","matchUrlQueryParamValue","QUERY_PARAM_VALUE_RE","noMatch","__WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__","obs","NoMatch","absoluteRedirect","newTree","AbsoluteRedirect","namedOutletsRedirect","canLoadFails","applyRedirects","moduleInjector","configLoader","urlSerializer","urlTree","ApplyRedirects","runCanLoadGuard","canLoad","__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__","injectionToken","guard","matched","consumedSegments","lastChild","positionalParamSegments","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","createChildrenForEmptySegments","mergeTrivialChildren","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","routes","_i","routes_1","isEmptyPathRedirect","getOutlet","primarySegmentGroup","routes_2","some","findNode","node_1","findPath","unshift","createEmptyState","rootComponent","snapshot","createEmptyStateSnapshot","emptyUrl","__WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__","UrlSegment","emptyParams","emptyData","emptyQueryParams","fragment","activated","RouterState","TreeNode","ActivatedRouteSnapshot","RouterStateSnapshot","inheritedParamsDataResolve","pathToRoot","pathFromRoot","inhertingStartingFrom","parent","routeConfig","curr","_resolvedData","setRouterState","state","_routerState","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","_futureSnapshot","equalParamsAndUrlSegments","equalUrlParams","parentsMismatch","createRouterState","routeReuseStrategy","prevState","createNode","_root","shouldReuseRoute","createOrReuseChildren","retrieve","tree_1","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","createUrlTree","commands","tree","nav","computeNavigation","toRoot","startingPosition","findStartingPosition","processChildren","updateSegmentGroupChildren","updateSegmentGroup","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","outletName","Navigation","numberOfDoubleDots","isAbsolute","cmd","cmdIdx","outlets_1","urlPart","partIndex","Position","_lastPathIndex","_urlSegment","modifier","createPositionApplyingDoubleDots","g","ci","dd","getPath","getOutlets","_b","startIndex","m","prefixedWith","slicedCommands","commandIndex","pathIndex","createNewSegmentGroup","outlets_2","children_2","currentCommandIndex","currentPathIndex","compare","paths","createNewSegmentChildren","recognize","rootComponentType","Recognizer","sortActivatedRouteSnapshots","nodes","sort","localeCompare","getChildConfig","match$1","NoMatch$1","checkOutletNameUniqueness","names","routeWithSameOutletName","getSourceSegmentGroup","_sourceSegment","getPathIndexShift","_segmentIndexShift","split$1","containsEmptyPathMatchesWithNamedOutlets","s_1","createChildrenForEmptyPaths","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","routes_3","emptyPathMatch","getOutlet$1","primarySegment","routes_4","getData","getResolve","defaultErrorHandler","defaultRouterHook","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","_routeConfig","_loadedConfig","closestLoadedConfig","nodeChildrenAsMap","validateCommands","attrBoolValue","routerNgProbeToken","provideLocationStrategy","platformLocationStrategy","baseHref","__WEBPACK_IMPORTED_MODULE_1__angular_common__","provideForRootGuard","provideRoutes","ROUTES","setupRouter","ref","contexts","location","injector","loader","compiler","opts","urlHandlingStrategy","errorHandler","enableTracing","dom_1","__WEBPACK_IMPORTED_MODULE_20__angular_platform_browser__","e","logGroup","logGroupEnd","rootRoute","routerState","getAppInitializer","appInitializer","bind","getBootstrapListener","bootstrapListener","provideRouterInitializer","RouterInitializer","ROUTER_INITIALIZER","RouterLink","RouterLinkWithHref","RouterLinkActive","RouterOutlet","GuardsCheckEnd","GuardsCheckStart","NavigationCancel","NavigationError","NavigationStart","ResolveEnd","ResolveStart","RouteConfigLoadEnd","RouteConfigLoadStart","RoutesRecognized","RouteReuseStrategy","ROUTER_CONFIGURATION","ChildrenOutletContexts","OutletContext","NoPreloading","PreloadAllModules","PreloadingStrategy","RouterPreloader","UrlHandlingStrategy","DefaultUrlSerializer","UrlSerializer","VERSION","ROUTER_PROVIDERS","ROUTER_FORROOT_GUARD","Tree","__WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__","__WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__","__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__","__WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__","__WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce__","__WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__","__WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError__","__WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter__","urlAfterRedirects","reason","shouldActivate","LoadedRouterConfig","_queryParamMap","DEFAULT_SERIALIZER","serialize","_parameterMap","UrlParser","parseRootSegment","parseQueryParams","parseFragment","encodeURI","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","decodeURI","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","decodedKey","decodedVal","currentVal","allowPrimary","substr","allowRedirects","expanded$","expandSegmentGroup","urlTrees$","rootSegmentGroup","noMatchError","mapped$","rootCandidate","expandChildren","expandSegment","routes$","processedRoutes$","expandSegmentAgainstRoute","concattedProcessedRoutes$","first$","_","noLeftoversInUrl","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","newSegments","rawSegmentGroup","load","cfg","rawSlicedSegments","childConfig$","routerConfig","childModule","childConfig","expanded$_1","cs","shouldLoad","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","actualSegments_1","siblings","cc","futureSnapshot","_paramMap","urlSegment","lastPathIndex","_resolve","cmdWithOutlet","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","config_1","processSegmentAgainstRoute","rawSegment","snapshot_1","children_3","shouldDetach","store","shouldAttach","future","DefaultRouteReuseStrategy","detachedTree","RouterConfigLoader","onLoadStartListener","onLoadEndListener","parentInjector","moduleFactory$","loadModuleFactory","factory","create","compileModuleAsync","shouldProcessUrl","extract","merge","newUrlPart","rawUrl","DefaultUrlHandlingStrategy","wholeUrl","rootContexts","navigations","routerEvents","navigationId","navigated","hooks","beforePreactivation","afterPreactivation","onLoadStart","triggerEvent","onLoadEnd","resetConfig","currentUrlTree","rawUrlTree","currentRouterState","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","Zone","wrap","change","source","setTimeout","scheduleNavigation","serializeUrl","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","warn","f","q","extras","skipLocationChange","parseUrl","mergedTree","navigate","removeEmptyProps","isActive","executeScheduledNavigation","promise","catch","lastNavigation","reject","rej","urlTransition","then","runNavigate","shouldPreventPushState","shouldReplaceUrl","precreatedState","go","resolvePromise","rejectPromise","urlAndSnapshot$","appliedUrl","redirectsApplied$","preActivation","navigationIsSuccessful","beforePreactivationDone$","preactivationTraverse$","PreActivation","traverse","preactivationCheckGuards$","checkGuards","preactivationResolveData$","isActivating","resolveData","preactivationDone$","routerState$","storedState","storedUrl","isCurrentPathEqualTo","replaceState","ActivateRoutes","activate","resetUrlToCurrentUrlTree","ee","CanActivate","CanDeactivate","canActivateChecks","canDeactivateChecks","parentContexts","futureRoot","currRoot","traverseChildRoutes","isDeactivating","canDeactivate$","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","checks$","runningChecks$","check","runResolve","__","futureNode","currNode","futurePath","prevChildren","traverseRoutes","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","runCanActivateChild","runCanActivate","canActivate","observable","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","runningResolvers$","resolver","futureState","currState","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","activateRoutes","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","cmpFactoryResolver","componentFactoryResolver","activateWith","tabIndex","setAttribute","preserve","onClick","propDecorators","routerLink","locationStrategy","subscription","updateTargetUrlAndHref","button","ctrlKey","metaKey","shiftKey","href","prepareExternalUrl","cdr","classes","active","routerLinkActiveOptions","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","descendants","routerLinkActive","onChildOutletCreated","onChildOutletDestroyed","changeDetector","_activatedRoute","activateEvents","deactivateEvents","instance","cmp","insert","hostView","destroy","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","notFoundValue","preload","moduleLoader","preloadingStrategy","onStartLoad","onEndLoad","setUpPreloading","navigations$","processRoutes","routes_5","preloadConfig","loaded$","ROUTER_DIRECTIVES","initNavigation","resultOfPreactivationDone","isLegacyDisabled","isLegacyEnabled","bootstrappedComponentRef","preloader","components","componentTypes","98","__param","paramIndex","decorator","items_list_1","Subject_1","NGB_ANG_SELECT_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","changeDetectorRef","elementRef","clearable","blurEvent","focusEvent","changeEvent","openEvent","closeEvent","searchEvent","isOpen","isFocused","isDisabled","itemsList","viewPortItems","isLoading","filterValue","_items$","Subject","_writeValue$","_checkWriteValue","_writeValueHandler$","onTouched","disposeDocumentClickListener","clearItem","mergeConfig","handleWriteValue","handleDocumentClick","handleKeyDown","which","ArrowDown","handleArrowDown","ArrowUp","handleArrowUp","Space","handleSpace","Enter","handleEnter","Tab","handleTab","Esc","close","Backspace","handleBackspace","handleArrowClick","stopPropagation","handleSelectClick","handleClearClick","clear","clearSearch","notifyModelChanged","isTypeahead","writeValue","registerOnChange","registerOnTouched","setDisabledState","scrollToMarked","focusSearchInput","toggle","updateModel","single","selectTag","Function","showPlaceholder","isValueSet","selectedItems","showClear","showFilter","showNoItemsFound","empty","showTypeToSearch","onFilter","onInputFocus","onInputBlur","onItemHover","combineLatest","validateWriteValue","selectWriteValue","detectChanges","contains","dropdown","getDropdownMenu","validateBinding","filterInput","focus","dropdownList","preventDefault","querySelector","observers","destroyed","TemplateRef","HostBinding","HostListener","KeyboardEvent","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","role","Optional","ChangeDetectorRef","99","Directive"],"mappings":"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","file":"js/app.ae88d3d741ea3c82786d.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 100:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Rinto Jose (rintoj)\r\n * Source code https://github.com/rintoj/angular2-virtual-scroll\r\n */\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar common_1 = __webpack_require__(7);\r\nvar VirtualScrollComponent = /** @class */ (function () {\r\n    function VirtualScrollComponent(element, zone, renderer) {\r\n        this.element = element;\r\n        this.zone = zone;\r\n        this.renderer = renderer;\r\n        this.items = [];\r\n        this.bufferAmount = 0;\r\n        this.update = new core_1.EventEmitter();\r\n        this.startupLoop = true;\r\n        this.disposeScrollListener = function () { };\r\n    }\r\n    Object.defineProperty(VirtualScrollComponent.prototype, \"enabled\", {\r\n        get: function () {\r\n            return this.items && this.items.length > 20;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    VirtualScrollComponent.prototype.handleScroll = function () {\r\n        var _this = this;\r\n        var handler = function () {\r\n            if (!_this.enabled) {\r\n                _this.update.emit(_this.items);\r\n                return;\r\n            }\r\n            _this.refresh();\r\n        };\r\n        this.disposeScrollListener = this.renderer.listen(this.element.nativeElement, 'scroll', handler);\r\n    };\r\n    VirtualScrollComponent.prototype.ngOnInit = function () {\r\n        this.handleScroll();\r\n        this.scrollbarWidth = 0; // this.element.nativeElement.offsetWidth - this.element.nativeElement.clientWidth;\r\n        this.scrollbarHeight = 0; // this.element.nativeElement.offsetHeight - this.element.nativeElement.clientHeight;\r\n    };\r\n    VirtualScrollComponent.prototype.ngOnDestroy = function () {\r\n        this.disposeScrollListener();\r\n    };\r\n    VirtualScrollComponent.prototype.ngOnChanges = function (changes) {\r\n        this.previousStart = undefined;\r\n        this.previousEnd = undefined;\r\n        var items = changes.items || {};\r\n        if (changes.items !== undefined && items.previousValue === undefined ||\r\n            (items.previousValue !== undefined && items.previousValue.length === 0)) {\r\n            this.startupLoop = true;\r\n        }\r\n        this.items = items.currentValue;\r\n        this.refresh();\r\n    };\r\n    VirtualScrollComponent.prototype.refresh = function () {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            this.update.emit(this.items);\r\n            return;\r\n        }\r\n        this.zone.runOutsideAngular(function () {\r\n            requestAnimationFrame(function () { return _this.calculateItems(); });\r\n        });\r\n    };\r\n    VirtualScrollComponent.prototype.scrollInto = function (item) {\r\n        var el = this.element.nativeElement;\r\n        var index = (this.items || []).indexOf(item);\r\n        if (index < 0 || index >= (this.items || []).length) {\r\n            return;\r\n        }\r\n        var d = this.calculateDimensions();\r\n        var buffer = Math.floor(d.viewHeight / d.childHeight) - 1;\r\n        el.scrollTop = (Math.floor(index / d.itemsPerRow) * d.childHeight)\r\n            - (d.childHeight * Math.min(index, buffer));\r\n        this.refresh();\r\n    };\r\n    VirtualScrollComponent.prototype.countItemsPerRow = function () {\r\n        var offsetTop;\r\n        var itemsPerRow;\r\n        var children = this.contentElementRef.nativeElement.children;\r\n        for (itemsPerRow = 0; itemsPerRow < children.length; itemsPerRow++) {\r\n            if (offsetTop !== undefined && offsetTop !== children[itemsPerRow].offsetTop) {\r\n                break;\r\n            }\r\n            offsetTop = children[itemsPerRow].offsetTop;\r\n        }\r\n        return itemsPerRow;\r\n    };\r\n    VirtualScrollComponent.prototype.getElementsOffset = function () {\r\n        var offsetTop = 0;\r\n        if (this.containerElementRef && this.containerElementRef.nativeElement) {\r\n            offsetTop += this.containerElementRef.nativeElement.offsetTop;\r\n        }\r\n        return offsetTop;\r\n    };\r\n    VirtualScrollComponent.prototype.calculateDimensions = function () {\r\n        var el = this.element.nativeElement;\r\n        var items = this.items || [];\r\n        var itemCount = items.length;\r\n        var viewWidth = el.clientWidth - this.scrollbarWidth;\r\n        var viewHeight = el.clientHeight - this.scrollbarHeight;\r\n        var contentDimensions;\r\n        if (this.childWidth === undefined || this.childHeight === undefined) {\r\n            var content = this.contentElementRef.nativeElement;\r\n            if (this.containerElementRef && this.containerElementRef.nativeElement) {\r\n                content = this.containerElementRef.nativeElement;\r\n            }\r\n            contentDimensions = content.children[0] ? content.children[0].getBoundingClientRect() : {\r\n                width: viewWidth,\r\n                height: viewHeight\r\n            };\r\n        }\r\n        var childWidth = this.childWidth || contentDimensions.width;\r\n        var childHeight = this.childHeight || contentDimensions.height;\r\n        var itemsPerRow = Math.max(1, this.countItemsPerRow());\r\n        var itemsPerRowByCalc = Math.max(1, Math.floor(viewWidth / childWidth));\r\n        var itemsPerCol = Math.max(1, Math.floor(viewHeight / childHeight));\r\n        var scrollTop = Math.max(0, el.scrollTop);\r\n        if (itemsPerCol === 1 && Math.floor(scrollTop / this.scrollHeight * itemCount) + itemsPerRowByCalc >= itemCount) {\r\n            itemsPerRow = itemsPerRowByCalc;\r\n        }\r\n        return {\r\n            itemCount: itemCount,\r\n            viewWidth: viewWidth,\r\n            viewHeight: viewHeight,\r\n            childWidth: childWidth,\r\n            childHeight: childHeight,\r\n            itemsPerRow: itemsPerRow,\r\n            itemsPerCol: itemsPerCol,\r\n            itemsPerRowByCalc: itemsPerRowByCalc\r\n        };\r\n    };\r\n    VirtualScrollComponent.prototype.calculateItems = function () {\r\n        var _this = this;\r\n        core_1.NgZone.assertNotInAngularZone();\r\n        var el = this.element.nativeElement;\r\n        var d = this.calculateDimensions();\r\n        var items = this.items || [];\r\n        var offsetTop = this.getElementsOffset();\r\n        this.scrollHeight = d.childHeight * d.itemCount / d.itemsPerRow;\r\n        if (el.scrollTop > this.scrollHeight) {\r\n            el.scrollTop = this.scrollHeight + offsetTop;\r\n        }\r\n        var scrollTop = Math.max(0, el.scrollTop - offsetTop);\r\n        var indexByScrollTop = scrollTop / this.scrollHeight * d.itemCount / d.itemsPerRow;\r\n        var end = Math.min(d.itemCount, Math.ceil(indexByScrollTop) * d.itemsPerRow + d.itemsPerRow * (d.itemsPerCol + 1));\r\n        var maxStartEnd = end;\r\n        var modEnd = end % d.itemsPerRow;\r\n        if (modEnd) {\r\n            maxStartEnd = end + d.itemsPerRow - modEnd;\r\n        }\r\n        var maxStart = Math.max(0, maxStartEnd - d.itemsPerCol * d.itemsPerRow - d.itemsPerRow);\r\n        var start = Math.min(maxStart, Math.floor(indexByScrollTop) * d.itemsPerRow);\r\n        this.topPadding = d.childHeight * Math.ceil(start / d.itemsPerRow) - (d.childHeight * Math.min(start, this.bufferAmount));\r\n        start = !isNaN(start) ? start : -1;\r\n        end = !isNaN(end) ? end : -1;\r\n        start -= this.bufferAmount;\r\n        start = Math.max(0, start);\r\n        end += this.bufferAmount;\r\n        end = Math.min(items.length, end);\r\n        if (start !== this.previousStart || end !== this.previousEnd) {\r\n            // update the scroll list\r\n            this.zone.run(function () {\r\n                _this.update.emit(items.slice(start, end));\r\n            });\r\n            this.previousStart = start;\r\n            this.previousEnd = end;\r\n            if (this.startupLoop === true) {\r\n                this.refresh();\r\n            }\r\n        }\r\n        else if (this.startupLoop === true) {\r\n            this.startupLoop = false;\r\n            this.refresh();\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array)\r\n    ], VirtualScrollComponent.prototype, \"items\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], VirtualScrollComponent.prototype, \"scrollbarWidth\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], VirtualScrollComponent.prototype, \"scrollbarHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], VirtualScrollComponent.prototype, \"childWidth\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], VirtualScrollComponent.prototype, \"childHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], VirtualScrollComponent.prototype, \"bufferAmount\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], VirtualScrollComponent.prototype, \"update\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('content', { read: core_1.ElementRef }),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], VirtualScrollComponent.prototype, \"contentElementRef\", void 0);\r\n    __decorate([\r\n        core_1.ContentChild('container'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], VirtualScrollComponent.prototype, \"containerElementRef\", void 0);\r\n    VirtualScrollComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'virtual-scroll,[virtualScroll]',\r\n            exportAs: 'virtualScroll',\r\n            template: \"\\n        <div *ngIf=\\\"enabled\\\" class=\\\"total-padding\\\" [style.height]=\\\"scrollHeight + 'px'\\\"></div>\\n        <div #content\\n             [class.scrollable-content]=\\\"enabled\\\"\\n             [style.transform]=\\\"enabled ? 'translateY(' + topPadding + 'px)' : 'none'\\\"\\n             [style.webkitTransform]=\\\"enabled ? 'translateY(' + topPadding + 'px)' : 'none'\\\">\\n            <ng-content></ng-content>\\n        </div>\\n    \",\r\n            host: {\r\n                '[style.overflow-y]': 'parentScroll ? \\'hidden\\' : \\'auto\\''\r\n            },\r\n            styles: [\"\\n        :host {\\n            overflow: hidden;\\n            position: relative;\\n            display: block;\\n            -webkit-overflow-scrolling: touch;\\n        }\\n\\n        .scrollable-content {\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            position: absolute;\\n        }\\n\\n        .total-padding {\\n            width: 1px;\\n            opacity: 0;\\n        }\\n    \"]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, core_1.NgZone, core_1.Renderer2])\r\n    ], VirtualScrollComponent);\r\n    return VirtualScrollComponent;\r\n}());\r\nexports.VirtualScrollComponent = VirtualScrollComponent;\r\nvar VirtualScrollModule = /** @class */ (function () {\r\n    function VirtualScrollModule() {\r\n    }\r\n    VirtualScrollModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule],\r\n            exports: [VirtualScrollComponent],\r\n            declarations: [VirtualScrollComponent]\r\n        })\r\n    ], VirtualScrollModule);\r\n    return VirtualScrollModule;\r\n}());\r\nexports.VirtualScrollModule = VirtualScrollModule;\r\n\n\n/***/ }),\n\n/***/ 175:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_dynamic_1 = __webpack_require__(76);\r\nvar app_module_1 = __webpack_require__(179);\r\nplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);\r\n\n\n/***/ }),\n\n/***/ 179:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar common_1 = __webpack_require__(7);\r\nvar http_1 = __webpack_require__(39);\r\nvar forms_1 = __webpack_require__(13);\r\nvar platform_browser_1 = __webpack_require__(23);\r\nvar router_1 = __webpack_require__(90);\r\nvar ng_select_1 = __webpack_require__(183);\r\nvar ng_bootstrap_1 = __webpack_require__(56);\r\nvar app_component_1 = __webpack_require__(196);\r\nvar custom_templates_component_1 = __webpack_require__(199);\r\nvar bindings_component_1 = __webpack_require__(200);\r\nvar search_component_1 = __webpack_require__(201);\r\nvar reactive_forms_component_1 = __webpack_require__(202);\r\nvar events_component_1 = __webpack_require__(203);\r\nvar multi_component_1 = __webpack_require__(204);\r\nvar tags_component_1 = __webpack_require__(205);\r\nvar header_component_1 = __webpack_require__(206);\r\nvar sidenav_component_1 = __webpack_require__(207);\r\nvar appRoutes = [\r\n    {\r\n        path: '',\r\n        redirectTo: '/forms',\r\n        pathMatch: 'full'\r\n    },\r\n    { path: 'forms', component: reactive_forms_component_1.ReactiveFormsComponent, data: { title: 'Real life example' } },\r\n    { path: 'bindings', component: bindings_component_1.SelectBindingsComponent, data: { title: 'Data bindings' } },\r\n    { path: 'filter', component: search_component_1.SelectSearchComponent, data: { title: 'Filter and autocomplete' } },\r\n    { path: 'tags', component: tags_component_1.SelectTagsComponent, data: { title: 'Tags' } },\r\n    { path: 'templates', component: custom_templates_component_1.SelectWithTemplatesComponent, data: { title: 'Templates' } },\r\n    { path: 'multiselect', component: multi_component_1.SelectMultiComponent, data: { title: 'Multiselect' } },\r\n    { path: 'events', component: events_component_1.SelectEventsComponent, data: { title: 'Output events' } },\r\n];\r\nvar AppModule = /** @class */ (function () {\r\n    function AppModule() {\r\n    }\r\n    AppModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [\r\n                platform_browser_1.BrowserModule,\r\n                ng_select_1.NgSelectModule.forRoot({ notFoundText: 'No items found', typeToSearchText: 'Type to search', addTagText: 'Add item' }),\r\n                common_1.CommonModule,\r\n                forms_1.FormsModule,\r\n                forms_1.ReactiveFormsModule,\r\n                http_1.HttpClientModule,\r\n                ng_bootstrap_1.NgbModule.forRoot(),\r\n                router_1.RouterModule.forRoot(appRoutes, {\r\n                    useHash: true\r\n                })\r\n            ],\r\n            declarations: [\r\n                app_component_1.AppComponent,\r\n                custom_templates_component_1.SelectWithTemplatesComponent,\r\n                bindings_component_1.SelectBindingsComponent,\r\n                search_component_1.SelectSearchComponent,\r\n                reactive_forms_component_1.ReactiveFormsComponent,\r\n                events_component_1.SelectEventsComponent,\r\n                multi_component_1.SelectMultiComponent,\r\n                tags_component_1.SelectTagsComponent,\r\n                header_component_1.LayoutHeaderComponent,\r\n                sidenav_component_1.LayoutSidenavComponent\r\n            ],\r\n            bootstrap: [app_component_1.AppComponent]\r\n        })\r\n    ], AppModule);\r\n    return AppModule;\r\n}());\r\nexports.AppModule = AppModule;\r\n\n\n/***/ }),\n\n/***/ 183:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ng_select_component_1 = __webpack_require__(98);\r\nexports.NgSelectComponent = ng_select_component_1.NgSelectComponent;\r\nvar ng_select_module_1 = __webpack_require__(189);\r\nexports.NgSelectModule = ng_select_module_1.NgSelectModule;\r\nvar ng_select_types_1 = __webpack_require__(54);\r\nexports.NgSelectConfig = ng_select_types_1.NgSelectConfig;\r\n\n\n/***/ }),\n\n/***/ 184:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar searchHelper = __webpack_require__(185);\r\nvar ItemsList = /** @class */ (function () {\r\n    function ItemsList() {\r\n        this.items = [];\r\n        this.filteredItems = [];\r\n        this._markedIndex = -1;\r\n        this._selected = [];\r\n        this._multiple = false;\r\n    }\r\n    Object.defineProperty(ItemsList.prototype, \"value\", {\r\n        get: function () {\r\n            return this._selected;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ItemsList.prototype, \"markedItem\", {\r\n        get: function () {\r\n            return this.filteredItems[this._markedIndex];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ItemsList.prototype.setItems = function (items) {\r\n        this.items = this.mapItems(items);\r\n        this.filteredItems = this.items.slice();\r\n    };\r\n    ItemsList.prototype.setMultiple = function (multiple) {\r\n        this._multiple = multiple;\r\n        this.clearSelected();\r\n    };\r\n    ItemsList.prototype.select = function (item) {\r\n        if (!this._multiple) {\r\n            this.clearSelected();\r\n        }\r\n        this._selected.push(item);\r\n        item.selected = true;\r\n    };\r\n    ItemsList.prototype.findItem = function (value, bindLabel, bindValue) {\r\n        if (bindValue) {\r\n            return this.items.find(function (x) { return x[bindValue] === value; });\r\n        }\r\n        var index = this.items.indexOf(value);\r\n        return index > -1 ? this.items[index] :\r\n            this.items.find(function (x) { return x[bindLabel] === value[bindLabel]; });\r\n    };\r\n    ItemsList.prototype.unselect = function (item) {\r\n        this._selected = this._selected.filter(function (x) { return x !== item; });\r\n        item.selected = false;\r\n    };\r\n    ItemsList.prototype.unselectLastItem = function () {\r\n        if (this._selected.length === 0) {\r\n            return;\r\n        }\r\n        this._selected[this._selected.length - 1].selected = false;\r\n        this._selected.splice(this._selected.length - 1, 1);\r\n    };\r\n    ItemsList.prototype.addTag = function (item) {\r\n        item.index = this.items.length;\r\n        this.items.push(item);\r\n        this.filteredItems.push(item);\r\n    };\r\n    ItemsList.prototype.clearSelected = function () {\r\n        this._selected.forEach(function (item) {\r\n            item.selected = false;\r\n            item.marked = false;\r\n        });\r\n        this._selected = [];\r\n    };\r\n    ItemsList.prototype.filter = function (term, bindLabel) {\r\n        var filterFuncVal = this.getDefaultFilterFunc(term, bindLabel);\r\n        this.filteredItems = term ? this.items.filter(function (val) { return filterFuncVal(val); }) : this.items;\r\n        this._markedIndex = 0;\r\n    };\r\n    ItemsList.prototype.clearFilter = function () {\r\n        this.filteredItems = this.items.slice();\r\n    };\r\n    ItemsList.prototype.markNextItem = function () {\r\n        this.stepToItem(+1);\r\n    };\r\n    ItemsList.prototype.markPreviousItem = function () {\r\n        this.stepToItem(-1);\r\n    };\r\n    ItemsList.prototype.markItem = function (item) {\r\n        if (item === void 0) { item = null; }\r\n        if (this.filteredItems.length === 0) {\r\n            return;\r\n        }\r\n        item = item || this.lastSelectedItem;\r\n        if (item) {\r\n            this._markedIndex = this.filteredItems.indexOf(item);\r\n        }\r\n        else {\r\n            this._markedIndex = 0;\r\n        }\r\n    };\r\n    ItemsList.prototype.getNextItemIndex = function (steps) {\r\n        if (steps > 0) {\r\n            return (this._markedIndex === this.filteredItems.length - 1) ? 0 : (this._markedIndex + 1);\r\n        }\r\n        else {\r\n            return (this._markedIndex === 0) ? (this.filteredItems.length - 1) : (this._markedIndex - 1);\r\n        }\r\n    };\r\n    ItemsList.prototype.stepToItem = function (steps) {\r\n        if (this.filteredItems.length === 0) {\r\n            return;\r\n        }\r\n        this._markedIndex = this.getNextItemIndex(steps);\r\n        while (this.markedItem.disabled) {\r\n            this.stepToItem(steps);\r\n        }\r\n    };\r\n    ItemsList.prototype.getDefaultFilterFunc = function (term, bindLabel) {\r\n        return function (val) {\r\n            return searchHelper.stripSpecialChars(val[bindLabel])\r\n                .toUpperCase()\r\n                .indexOf(searchHelper.stripSpecialChars(term).toUpperCase()) > -1;\r\n        };\r\n    };\r\n    Object.defineProperty(ItemsList.prototype, \"lastSelectedItem\", {\r\n        get: function () {\r\n            return this._selected[this._selected.length - 1];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ItemsList.prototype.mapItems = function (items) {\r\n        return items.map(function (item, index) {\r\n            return __assign({ index: index }, item);\r\n        });\r\n    };\r\n    return ItemsList;\r\n}());\r\nexports.ItemsList = ItemsList;\r\n\n\n/***/ }),\n\n/***/ 185:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar diacritics = {\r\n    '\\u24B6': 'A',\r\n    '\\uFF21': 'A',\r\n    '\\u00C0': 'A',\r\n    '\\u00C1': 'A',\r\n    '\\u00C2': 'A',\r\n    '\\u1EA6': 'A',\r\n    '\\u1EA4': 'A',\r\n    '\\u1EAA': 'A',\r\n    '\\u1EA8': 'A',\r\n    '\\u00C3': 'A',\r\n    '\\u0100': 'A',\r\n    '\\u0102': 'A',\r\n    '\\u1EB0': 'A',\r\n    '\\u1EAE': 'A',\r\n    '\\u1EB4': 'A',\r\n    '\\u1EB2': 'A',\r\n    '\\u0226': 'A',\r\n    '\\u01E0': 'A',\r\n    '\\u00C4': 'A',\r\n    '\\u01DE': 'A',\r\n    '\\u1EA2': 'A',\r\n    '\\u00C5': 'A',\r\n    '\\u01FA': 'A',\r\n    '\\u01CD': 'A',\r\n    '\\u0200': 'A',\r\n    '\\u0202': 'A',\r\n    '\\u1EA0': 'A',\r\n    '\\u1EAC': 'A',\r\n    '\\u1EB6': 'A',\r\n    '\\u1E00': 'A',\r\n    '\\u0104': 'A',\r\n    '\\u023A': 'A',\r\n    '\\u2C6F': 'A',\r\n    '\\uA732': 'AA',\r\n    '\\u00C6': 'AE',\r\n    '\\u01FC': 'AE',\r\n    '\\u01E2': 'AE',\r\n    '\\uA734': 'AO',\r\n    '\\uA736': 'AU',\r\n    '\\uA738': 'AV',\r\n    '\\uA73A': 'AV',\r\n    '\\uA73C': 'AY',\r\n    '\\u24B7': 'B',\r\n    '\\uFF22': 'B',\r\n    '\\u1E02': 'B',\r\n    '\\u1E04': 'B',\r\n    '\\u1E06': 'B',\r\n    '\\u0243': 'B',\r\n    '\\u0182': 'B',\r\n    '\\u0181': 'B',\r\n    '\\u24B8': 'C',\r\n    '\\uFF23': 'C',\r\n    '\\u0106': 'C',\r\n    '\\u0108': 'C',\r\n    '\\u010A': 'C',\r\n    '\\u010C': 'C',\r\n    '\\u00C7': 'C',\r\n    '\\u1E08': 'C',\r\n    '\\u0187': 'C',\r\n    '\\u023B': 'C',\r\n    '\\uA73E': 'C',\r\n    '\\u24B9': 'D',\r\n    '\\uFF24': 'D',\r\n    '\\u1E0A': 'D',\r\n    '\\u010E': 'D',\r\n    '\\u1E0C': 'D',\r\n    '\\u1E10': 'D',\r\n    '\\u1E12': 'D',\r\n    '\\u1E0E': 'D',\r\n    '\\u0110': 'D',\r\n    '\\u018B': 'D',\r\n    '\\u018A': 'D',\r\n    '\\u0189': 'D',\r\n    '\\uA779': 'D',\r\n    '\\u01F1': 'DZ',\r\n    '\\u01C4': 'DZ',\r\n    '\\u01F2': 'Dz',\r\n    '\\u01C5': 'Dz',\r\n    '\\u24BA': 'E',\r\n    '\\uFF25': 'E',\r\n    '\\u00C8': 'E',\r\n    '\\u00C9': 'E',\r\n    '\\u00CA': 'E',\r\n    '\\u1EC0': 'E',\r\n    '\\u1EBE': 'E',\r\n    '\\u1EC4': 'E',\r\n    '\\u1EC2': 'E',\r\n    '\\u1EBC': 'E',\r\n    '\\u0112': 'E',\r\n    '\\u1E14': 'E',\r\n    '\\u1E16': 'E',\r\n    '\\u0114': 'E',\r\n    '\\u0116': 'E',\r\n    '\\u00CB': 'E',\r\n    '\\u1EBA': 'E',\r\n    '\\u011A': 'E',\r\n    '\\u0204': 'E',\r\n    '\\u0206': 'E',\r\n    '\\u1EB8': 'E',\r\n    '\\u1EC6': 'E',\r\n    '\\u0228': 'E',\r\n    '\\u1E1C': 'E',\r\n    '\\u0118': 'E',\r\n    '\\u1E18': 'E',\r\n    '\\u1E1A': 'E',\r\n    '\\u0190': 'E',\r\n    '\\u018E': 'E',\r\n    '\\u24BB': 'F',\r\n    '\\uFF26': 'F',\r\n    '\\u1E1E': 'F',\r\n    '\\u0191': 'F',\r\n    '\\uA77B': 'F',\r\n    '\\u24BC': 'G',\r\n    '\\uFF27': 'G',\r\n    '\\u01F4': 'G',\r\n    '\\u011C': 'G',\r\n    '\\u1E20': 'G',\r\n    '\\u011E': 'G',\r\n    '\\u0120': 'G',\r\n    '\\u01E6': 'G',\r\n    '\\u0122': 'G',\r\n    '\\u01E4': 'G',\r\n    '\\u0193': 'G',\r\n    '\\uA7A0': 'G',\r\n    '\\uA77D': 'G',\r\n    '\\uA77E': 'G',\r\n    '\\u24BD': 'H',\r\n    '\\uFF28': 'H',\r\n    '\\u0124': 'H',\r\n    '\\u1E22': 'H',\r\n    '\\u1E26': 'H',\r\n    '\\u021E': 'H',\r\n    '\\u1E24': 'H',\r\n    '\\u1E28': 'H',\r\n    '\\u1E2A': 'H',\r\n    '\\u0126': 'H',\r\n    '\\u2C67': 'H',\r\n    '\\u2C75': 'H',\r\n    '\\uA78D': 'H',\r\n    '\\u24BE': 'I',\r\n    '\\uFF29': 'I',\r\n    '\\u00CC': 'I',\r\n    '\\u00CD': 'I',\r\n    '\\u00CE': 'I',\r\n    '\\u0128': 'I',\r\n    '\\u012A': 'I',\r\n    '\\u012C': 'I',\r\n    '\\u0130': 'I',\r\n    '\\u00CF': 'I',\r\n    '\\u1E2E': 'I',\r\n    '\\u1EC8': 'I',\r\n    '\\u01CF': 'I',\r\n    '\\u0208': 'I',\r\n    '\\u020A': 'I',\r\n    '\\u1ECA': 'I',\r\n    '\\u012E': 'I',\r\n    '\\u1E2C': 'I',\r\n    '\\u0197': 'I',\r\n    '\\u24BF': 'J',\r\n    '\\uFF2A': 'J',\r\n    '\\u0134': 'J',\r\n    '\\u0248': 'J',\r\n    '\\u24C0': 'K',\r\n    '\\uFF2B': 'K',\r\n    '\\u1E30': 'K',\r\n    '\\u01E8': 'K',\r\n    '\\u1E32': 'K',\r\n    '\\u0136': 'K',\r\n    '\\u1E34': 'K',\r\n    '\\u0198': 'K',\r\n    '\\u2C69': 'K',\r\n    '\\uA740': 'K',\r\n    '\\uA742': 'K',\r\n    '\\uA744': 'K',\r\n    '\\uA7A2': 'K',\r\n    '\\u24C1': 'L',\r\n    '\\uFF2C': 'L',\r\n    '\\u013F': 'L',\r\n    '\\u0139': 'L',\r\n    '\\u013D': 'L',\r\n    '\\u1E36': 'L',\r\n    '\\u1E38': 'L',\r\n    '\\u013B': 'L',\r\n    '\\u1E3C': 'L',\r\n    '\\u1E3A': 'L',\r\n    '\\u0141': 'L',\r\n    '\\u023D': 'L',\r\n    '\\u2C62': 'L',\r\n    '\\u2C60': 'L',\r\n    '\\uA748': 'L',\r\n    '\\uA746': 'L',\r\n    '\\uA780': 'L',\r\n    '\\u01C7': 'LJ',\r\n    '\\u01C8': 'Lj',\r\n    '\\u24C2': 'M',\r\n    '\\uFF2D': 'M',\r\n    '\\u1E3E': 'M',\r\n    '\\u1E40': 'M',\r\n    '\\u1E42': 'M',\r\n    '\\u2C6E': 'M',\r\n    '\\u019C': 'M',\r\n    '\\u24C3': 'N',\r\n    '\\uFF2E': 'N',\r\n    '\\u01F8': 'N',\r\n    '\\u0143': 'N',\r\n    '\\u00D1': 'N',\r\n    '\\u1E44': 'N',\r\n    '\\u0147': 'N',\r\n    '\\u1E46': 'N',\r\n    '\\u0145': 'N',\r\n    '\\u1E4A': 'N',\r\n    '\\u1E48': 'N',\r\n    '\\u0220': 'N',\r\n    '\\u019D': 'N',\r\n    '\\uA790': 'N',\r\n    '\\uA7A4': 'N',\r\n    '\\u01CA': 'NJ',\r\n    '\\u01CB': 'Nj',\r\n    '\\u24C4': 'O',\r\n    '\\uFF2F': 'O',\r\n    '\\u00D2': 'O',\r\n    '\\u00D3': 'O',\r\n    '\\u00D4': 'O',\r\n    '\\u1ED2': 'O',\r\n    '\\u1ED0': 'O',\r\n    '\\u1ED6': 'O',\r\n    '\\u1ED4': 'O',\r\n    '\\u00D5': 'O',\r\n    '\\u1E4C': 'O',\r\n    '\\u022C': 'O',\r\n    '\\u1E4E': 'O',\r\n    '\\u014C': 'O',\r\n    '\\u1E50': 'O',\r\n    '\\u1E52': 'O',\r\n    '\\u014E': 'O',\r\n    '\\u022E': 'O',\r\n    '\\u0230': 'O',\r\n    '\\u00D6': 'O',\r\n    '\\u022A': 'O',\r\n    '\\u1ECE': 'O',\r\n    '\\u0150': 'O',\r\n    '\\u01D1': 'O',\r\n    '\\u020C': 'O',\r\n    '\\u020E': 'O',\r\n    '\\u01A0': 'O',\r\n    '\\u1EDC': 'O',\r\n    '\\u1EDA': 'O',\r\n    '\\u1EE0': 'O',\r\n    '\\u1EDE': 'O',\r\n    '\\u1EE2': 'O',\r\n    '\\u1ECC': 'O',\r\n    '\\u1ED8': 'O',\r\n    '\\u01EA': 'O',\r\n    '\\u01EC': 'O',\r\n    '\\u00D8': 'O',\r\n    '\\u01FE': 'O',\r\n    '\\u0186': 'O',\r\n    '\\u019F': 'O',\r\n    '\\uA74A': 'O',\r\n    '\\uA74C': 'O',\r\n    '\\u01A2': 'OI',\r\n    '\\uA74E': 'OO',\r\n    '\\u0222': 'OU',\r\n    '\\u24C5': 'P',\r\n    '\\uFF30': 'P',\r\n    '\\u1E54': 'P',\r\n    '\\u1E56': 'P',\r\n    '\\u01A4': 'P',\r\n    '\\u2C63': 'P',\r\n    '\\uA750': 'P',\r\n    '\\uA752': 'P',\r\n    '\\uA754': 'P',\r\n    '\\u24C6': 'Q',\r\n    '\\uFF31': 'Q',\r\n    '\\uA756': 'Q',\r\n    '\\uA758': 'Q',\r\n    '\\u024A': 'Q',\r\n    '\\u24C7': 'R',\r\n    '\\uFF32': 'R',\r\n    '\\u0154': 'R',\r\n    '\\u1E58': 'R',\r\n    '\\u0158': 'R',\r\n    '\\u0210': 'R',\r\n    '\\u0212': 'R',\r\n    '\\u1E5A': 'R',\r\n    '\\u1E5C': 'R',\r\n    '\\u0156': 'R',\r\n    '\\u1E5E': 'R',\r\n    '\\u024C': 'R',\r\n    '\\u2C64': 'R',\r\n    '\\uA75A': 'R',\r\n    '\\uA7A6': 'R',\r\n    '\\uA782': 'R',\r\n    '\\u24C8': 'S',\r\n    '\\uFF33': 'S',\r\n    '\\u1E9E': 'S',\r\n    '\\u015A': 'S',\r\n    '\\u1E64': 'S',\r\n    '\\u015C': 'S',\r\n    '\\u1E60': 'S',\r\n    '\\u0160': 'S',\r\n    '\\u1E66': 'S',\r\n    '\\u1E62': 'S',\r\n    '\\u1E68': 'S',\r\n    '\\u0218': 'S',\r\n    '\\u015E': 'S',\r\n    '\\u2C7E': 'S',\r\n    '\\uA7A8': 'S',\r\n    '\\uA784': 'S',\r\n    '\\u24C9': 'T',\r\n    '\\uFF34': 'T',\r\n    '\\u1E6A': 'T',\r\n    '\\u0164': 'T',\r\n    '\\u1E6C': 'T',\r\n    '\\u021A': 'T',\r\n    '\\u0162': 'T',\r\n    '\\u1E70': 'T',\r\n    '\\u1E6E': 'T',\r\n    '\\u0166': 'T',\r\n    '\\u01AC': 'T',\r\n    '\\u01AE': 'T',\r\n    '\\u023E': 'T',\r\n    '\\uA786': 'T',\r\n    '\\uA728': 'TZ',\r\n    '\\u24CA': 'U',\r\n    '\\uFF35': 'U',\r\n    '\\u00D9': 'U',\r\n    '\\u00DA': 'U',\r\n    '\\u00DB': 'U',\r\n    '\\u0168': 'U',\r\n    '\\u1E78': 'U',\r\n    '\\u016A': 'U',\r\n    '\\u1E7A': 'U',\r\n    '\\u016C': 'U',\r\n    '\\u00DC': 'U',\r\n    '\\u01DB': 'U',\r\n    '\\u01D7': 'U',\r\n    '\\u01D5': 'U',\r\n    '\\u01D9': 'U',\r\n    '\\u1EE6': 'U',\r\n    '\\u016E': 'U',\r\n    '\\u0170': 'U',\r\n    '\\u01D3': 'U',\r\n    '\\u0214': 'U',\r\n    '\\u0216': 'U',\r\n    '\\u01AF': 'U',\r\n    '\\u1EEA': 'U',\r\n    '\\u1EE8': 'U',\r\n    '\\u1EEE': 'U',\r\n    '\\u1EEC': 'U',\r\n    '\\u1EF0': 'U',\r\n    '\\u1EE4': 'U',\r\n    '\\u1E72': 'U',\r\n    '\\u0172': 'U',\r\n    '\\u1E76': 'U',\r\n    '\\u1E74': 'U',\r\n    '\\u0244': 'U',\r\n    '\\u24CB': 'V',\r\n    '\\uFF36': 'V',\r\n    '\\u1E7C': 'V',\r\n    '\\u1E7E': 'V',\r\n    '\\u01B2': 'V',\r\n    '\\uA75E': 'V',\r\n    '\\u0245': 'V',\r\n    '\\uA760': 'VY',\r\n    '\\u24CC': 'W',\r\n    '\\uFF37': 'W',\r\n    '\\u1E80': 'W',\r\n    '\\u1E82': 'W',\r\n    '\\u0174': 'W',\r\n    '\\u1E86': 'W',\r\n    '\\u1E84': 'W',\r\n    '\\u1E88': 'W',\r\n    '\\u2C72': 'W',\r\n    '\\u24CD': 'X',\r\n    '\\uFF38': 'X',\r\n    '\\u1E8A': 'X',\r\n    '\\u1E8C': 'X',\r\n    '\\u24CE': 'Y',\r\n    '\\uFF39': 'Y',\r\n    '\\u1EF2': 'Y',\r\n    '\\u00DD': 'Y',\r\n    '\\u0176': 'Y',\r\n    '\\u1EF8': 'Y',\r\n    '\\u0232': 'Y',\r\n    '\\u1E8E': 'Y',\r\n    '\\u0178': 'Y',\r\n    '\\u1EF6': 'Y',\r\n    '\\u1EF4': 'Y',\r\n    '\\u01B3': 'Y',\r\n    '\\u024E': 'Y',\r\n    '\\u1EFE': 'Y',\r\n    '\\u24CF': 'Z',\r\n    '\\uFF3A': 'Z',\r\n    '\\u0179': 'Z',\r\n    '\\u1E90': 'Z',\r\n    '\\u017B': 'Z',\r\n    '\\u017D': 'Z',\r\n    '\\u1E92': 'Z',\r\n    '\\u1E94': 'Z',\r\n    '\\u01B5': 'Z',\r\n    '\\u0224': 'Z',\r\n    '\\u2C7F': 'Z',\r\n    '\\u2C6B': 'Z',\r\n    '\\uA762': 'Z',\r\n    '\\u24D0': 'a',\r\n    '\\uFF41': 'a',\r\n    '\\u1E9A': 'a',\r\n    '\\u00E0': 'a',\r\n    '\\u00E1': 'a',\r\n    '\\u00E2': 'a',\r\n    '\\u1EA7': 'a',\r\n    '\\u1EA5': 'a',\r\n    '\\u1EAB': 'a',\r\n    '\\u1EA9': 'a',\r\n    '\\u00E3': 'a',\r\n    '\\u0101': 'a',\r\n    '\\u0103': 'a',\r\n    '\\u1EB1': 'a',\r\n    '\\u1EAF': 'a',\r\n    '\\u1EB5': 'a',\r\n    '\\u1EB3': 'a',\r\n    '\\u0227': 'a',\r\n    '\\u01E1': 'a',\r\n    '\\u00E4': 'a',\r\n    '\\u01DF': 'a',\r\n    '\\u1EA3': 'a',\r\n    '\\u00E5': 'a',\r\n    '\\u01FB': 'a',\r\n    '\\u01CE': 'a',\r\n    '\\u0201': 'a',\r\n    '\\u0203': 'a',\r\n    '\\u1EA1': 'a',\r\n    '\\u1EAD': 'a',\r\n    '\\u1EB7': 'a',\r\n    '\\u1E01': 'a',\r\n    '\\u0105': 'a',\r\n    '\\u2C65': 'a',\r\n    '\\u0250': 'a',\r\n    '\\uA733': 'aa',\r\n    '\\u00E6': 'ae',\r\n    '\\u01FD': 'ae',\r\n    '\\u01E3': 'ae',\r\n    '\\uA735': 'ao',\r\n    '\\uA737': 'au',\r\n    '\\uA739': 'av',\r\n    '\\uA73B': 'av',\r\n    '\\uA73D': 'ay',\r\n    '\\u24D1': 'b',\r\n    '\\uFF42': 'b',\r\n    '\\u1E03': 'b',\r\n    '\\u1E05': 'b',\r\n    '\\u1E07': 'b',\r\n    '\\u0180': 'b',\r\n    '\\u0183': 'b',\r\n    '\\u0253': 'b',\r\n    '\\u24D2': 'c',\r\n    '\\uFF43': 'c',\r\n    '\\u0107': 'c',\r\n    '\\u0109': 'c',\r\n    '\\u010B': 'c',\r\n    '\\u010D': 'c',\r\n    '\\u00E7': 'c',\r\n    '\\u1E09': 'c',\r\n    '\\u0188': 'c',\r\n    '\\u023C': 'c',\r\n    '\\uA73F': 'c',\r\n    '\\u2184': 'c',\r\n    '\\u24D3': 'd',\r\n    '\\uFF44': 'd',\r\n    '\\u1E0B': 'd',\r\n    '\\u010F': 'd',\r\n    '\\u1E0D': 'd',\r\n    '\\u1E11': 'd',\r\n    '\\u1E13': 'd',\r\n    '\\u1E0F': 'd',\r\n    '\\u0111': 'd',\r\n    '\\u018C': 'd',\r\n    '\\u0256': 'd',\r\n    '\\u0257': 'd',\r\n    '\\uA77A': 'd',\r\n    '\\u01F3': 'dz',\r\n    '\\u01C6': 'dz',\r\n    '\\u24D4': 'e',\r\n    '\\uFF45': 'e',\r\n    '\\u00E8': 'e',\r\n    '\\u00E9': 'e',\r\n    '\\u00EA': 'e',\r\n    '\\u1EC1': 'e',\r\n    '\\u1EBF': 'e',\r\n    '\\u1EC5': 'e',\r\n    '\\u1EC3': 'e',\r\n    '\\u1EBD': 'e',\r\n    '\\u0113': 'e',\r\n    '\\u1E15': 'e',\r\n    '\\u1E17': 'e',\r\n    '\\u0115': 'e',\r\n    '\\u0117': 'e',\r\n    '\\u00EB': 'e',\r\n    '\\u1EBB': 'e',\r\n    '\\u011B': 'e',\r\n    '\\u0205': 'e',\r\n    '\\u0207': 'e',\r\n    '\\u1EB9': 'e',\r\n    '\\u1EC7': 'e',\r\n    '\\u0229': 'e',\r\n    '\\u1E1D': 'e',\r\n    '\\u0119': 'e',\r\n    '\\u1E19': 'e',\r\n    '\\u1E1B': 'e',\r\n    '\\u0247': 'e',\r\n    '\\u025B': 'e',\r\n    '\\u01DD': 'e',\r\n    '\\u24D5': 'f',\r\n    '\\uFF46': 'f',\r\n    '\\u1E1F': 'f',\r\n    '\\u0192': 'f',\r\n    '\\uA77C': 'f',\r\n    '\\u24D6': 'g',\r\n    '\\uFF47': 'g',\r\n    '\\u01F5': 'g',\r\n    '\\u011D': 'g',\r\n    '\\u1E21': 'g',\r\n    '\\u011F': 'g',\r\n    '\\u0121': 'g',\r\n    '\\u01E7': 'g',\r\n    '\\u0123': 'g',\r\n    '\\u01E5': 'g',\r\n    '\\u0260': 'g',\r\n    '\\uA7A1': 'g',\r\n    '\\u1D79': 'g',\r\n    '\\uA77F': 'g',\r\n    '\\u24D7': 'h',\r\n    '\\uFF48': 'h',\r\n    '\\u0125': 'h',\r\n    '\\u1E23': 'h',\r\n    '\\u1E27': 'h',\r\n    '\\u021F': 'h',\r\n    '\\u1E25': 'h',\r\n    '\\u1E29': 'h',\r\n    '\\u1E2B': 'h',\r\n    '\\u1E96': 'h',\r\n    '\\u0127': 'h',\r\n    '\\u2C68': 'h',\r\n    '\\u2C76': 'h',\r\n    '\\u0265': 'h',\r\n    '\\u0195': 'hv',\r\n    '\\u24D8': 'i',\r\n    '\\uFF49': 'i',\r\n    '\\u00EC': 'i',\r\n    '\\u00ED': 'i',\r\n    '\\u00EE': 'i',\r\n    '\\u0129': 'i',\r\n    '\\u012B': 'i',\r\n    '\\u012D': 'i',\r\n    '\\u00EF': 'i',\r\n    '\\u1E2F': 'i',\r\n    '\\u1EC9': 'i',\r\n    '\\u01D0': 'i',\r\n    '\\u0209': 'i',\r\n    '\\u020B': 'i',\r\n    '\\u1ECB': 'i',\r\n    '\\u012F': 'i',\r\n    '\\u1E2D': 'i',\r\n    '\\u0268': 'i',\r\n    '\\u0131': 'i',\r\n    '\\u24D9': 'j',\r\n    '\\uFF4A': 'j',\r\n    '\\u0135': 'j',\r\n    '\\u01F0': 'j',\r\n    '\\u0249': 'j',\r\n    '\\u24DA': 'k',\r\n    '\\uFF4B': 'k',\r\n    '\\u1E31': 'k',\r\n    '\\u01E9': 'k',\r\n    '\\u1E33': 'k',\r\n    '\\u0137': 'k',\r\n    '\\u1E35': 'k',\r\n    '\\u0199': 'k',\r\n    '\\u2C6A': 'k',\r\n    '\\uA741': 'k',\r\n    '\\uA743': 'k',\r\n    '\\uA745': 'k',\r\n    '\\uA7A3': 'k',\r\n    '\\u24DB': 'l',\r\n    '\\uFF4C': 'l',\r\n    '\\u0140': 'l',\r\n    '\\u013A': 'l',\r\n    '\\u013E': 'l',\r\n    '\\u1E37': 'l',\r\n    '\\u1E39': 'l',\r\n    '\\u013C': 'l',\r\n    '\\u1E3D': 'l',\r\n    '\\u1E3B': 'l',\r\n    '\\u017F': 'l',\r\n    '\\u0142': 'l',\r\n    '\\u019A': 'l',\r\n    '\\u026B': 'l',\r\n    '\\u2C61': 'l',\r\n    '\\uA749': 'l',\r\n    '\\uA781': 'l',\r\n    '\\uA747': 'l',\r\n    '\\u01C9': 'lj',\r\n    '\\u24DC': 'm',\r\n    '\\uFF4D': 'm',\r\n    '\\u1E3F': 'm',\r\n    '\\u1E41': 'm',\r\n    '\\u1E43': 'm',\r\n    '\\u0271': 'm',\r\n    '\\u026F': 'm',\r\n    '\\u24DD': 'n',\r\n    '\\uFF4E': 'n',\r\n    '\\u01F9': 'n',\r\n    '\\u0144': 'n',\r\n    '\\u00F1': 'n',\r\n    '\\u1E45': 'n',\r\n    '\\u0148': 'n',\r\n    '\\u1E47': 'n',\r\n    '\\u0146': 'n',\r\n    '\\u1E4B': 'n',\r\n    '\\u1E49': 'n',\r\n    '\\u019E': 'n',\r\n    '\\u0272': 'n',\r\n    '\\u0149': 'n',\r\n    '\\uA791': 'n',\r\n    '\\uA7A5': 'n',\r\n    '\\u01CC': 'nj',\r\n    '\\u24DE': 'o',\r\n    '\\uFF4F': 'o',\r\n    '\\u00F2': 'o',\r\n    '\\u00F3': 'o',\r\n    '\\u00F4': 'o',\r\n    '\\u1ED3': 'o',\r\n    '\\u1ED1': 'o',\r\n    '\\u1ED7': 'o',\r\n    '\\u1ED5': 'o',\r\n    '\\u00F5': 'o',\r\n    '\\u1E4D': 'o',\r\n    '\\u022D': 'o',\r\n    '\\u1E4F': 'o',\r\n    '\\u014D': 'o',\r\n    '\\u1E51': 'o',\r\n    '\\u1E53': 'o',\r\n    '\\u014F': 'o',\r\n    '\\u022F': 'o',\r\n    '\\u0231': 'o',\r\n    '\\u00F6': 'o',\r\n    '\\u022B': 'o',\r\n    '\\u1ECF': 'o',\r\n    '\\u0151': 'o',\r\n    '\\u01D2': 'o',\r\n    '\\u020D': 'o',\r\n    '\\u020F': 'o',\r\n    '\\u01A1': 'o',\r\n    '\\u1EDD': 'o',\r\n    '\\u1EDB': 'o',\r\n    '\\u1EE1': 'o',\r\n    '\\u1EDF': 'o',\r\n    '\\u1EE3': 'o',\r\n    '\\u1ECD': 'o',\r\n    '\\u1ED9': 'o',\r\n    '\\u01EB': 'o',\r\n    '\\u01ED': 'o',\r\n    '\\u00F8': 'o',\r\n    '\\u01FF': 'o',\r\n    '\\u0254': 'o',\r\n    '\\uA74B': 'o',\r\n    '\\uA74D': 'o',\r\n    '\\u0275': 'o',\r\n    '\\u01A3': 'oi',\r\n    '\\u0223': 'ou',\r\n    '\\uA74F': 'oo',\r\n    '\\u24DF': 'p',\r\n    '\\uFF50': 'p',\r\n    '\\u1E55': 'p',\r\n    '\\u1E57': 'p',\r\n    '\\u01A5': 'p',\r\n    '\\u1D7D': 'p',\r\n    '\\uA751': 'p',\r\n    '\\uA753': 'p',\r\n    '\\uA755': 'p',\r\n    '\\u24E0': 'q',\r\n    '\\uFF51': 'q',\r\n    '\\u024B': 'q',\r\n    '\\uA757': 'q',\r\n    '\\uA759': 'q',\r\n    '\\u24E1': 'r',\r\n    '\\uFF52': 'r',\r\n    '\\u0155': 'r',\r\n    '\\u1E59': 'r',\r\n    '\\u0159': 'r',\r\n    '\\u0211': 'r',\r\n    '\\u0213': 'r',\r\n    '\\u1E5B': 'r',\r\n    '\\u1E5D': 'r',\r\n    '\\u0157': 'r',\r\n    '\\u1E5F': 'r',\r\n    '\\u024D': 'r',\r\n    '\\u027D': 'r',\r\n    '\\uA75B': 'r',\r\n    '\\uA7A7': 'r',\r\n    '\\uA783': 'r',\r\n    '\\u24E2': 's',\r\n    '\\uFF53': 's',\r\n    '\\u00DF': 's',\r\n    '\\u015B': 's',\r\n    '\\u1E65': 's',\r\n    '\\u015D': 's',\r\n    '\\u1E61': 's',\r\n    '\\u0161': 's',\r\n    '\\u1E67': 's',\r\n    '\\u1E63': 's',\r\n    '\\u1E69': 's',\r\n    '\\u0219': 's',\r\n    '\\u015F': 's',\r\n    '\\u023F': 's',\r\n    '\\uA7A9': 's',\r\n    '\\uA785': 's',\r\n    '\\u1E9B': 's',\r\n    '\\u24E3': 't',\r\n    '\\uFF54': 't',\r\n    '\\u1E6B': 't',\r\n    '\\u1E97': 't',\r\n    '\\u0165': 't',\r\n    '\\u1E6D': 't',\r\n    '\\u021B': 't',\r\n    '\\u0163': 't',\r\n    '\\u1E71': 't',\r\n    '\\u1E6F': 't',\r\n    '\\u0167': 't',\r\n    '\\u01AD': 't',\r\n    '\\u0288': 't',\r\n    '\\u2C66': 't',\r\n    '\\uA787': 't',\r\n    '\\uA729': 'tz',\r\n    '\\u24E4': 'u',\r\n    '\\uFF55': 'u',\r\n    '\\u00F9': 'u',\r\n    '\\u00FA': 'u',\r\n    '\\u00FB': 'u',\r\n    '\\u0169': 'u',\r\n    '\\u1E79': 'u',\r\n    '\\u016B': 'u',\r\n    '\\u1E7B': 'u',\r\n    '\\u016D': 'u',\r\n    '\\u00FC': 'u',\r\n    '\\u01DC': 'u',\r\n    '\\u01D8': 'u',\r\n    '\\u01D6': 'u',\r\n    '\\u01DA': 'u',\r\n    '\\u1EE7': 'u',\r\n    '\\u016F': 'u',\r\n    '\\u0171': 'u',\r\n    '\\u01D4': 'u',\r\n    '\\u0215': 'u',\r\n    '\\u0217': 'u',\r\n    '\\u01B0': 'u',\r\n    '\\u1EEB': 'u',\r\n    '\\u1EE9': 'u',\r\n    '\\u1EEF': 'u',\r\n    '\\u1EED': 'u',\r\n    '\\u1EF1': 'u',\r\n    '\\u1EE5': 'u',\r\n    '\\u1E73': 'u',\r\n    '\\u0173': 'u',\r\n    '\\u1E77': 'u',\r\n    '\\u1E75': 'u',\r\n    '\\u0289': 'u',\r\n    '\\u24E5': 'v',\r\n    '\\uFF56': 'v',\r\n    '\\u1E7D': 'v',\r\n    '\\u1E7F': 'v',\r\n    '\\u028B': 'v',\r\n    '\\uA75F': 'v',\r\n    '\\u028C': 'v',\r\n    '\\uA761': 'vy',\r\n    '\\u24E6': 'w',\r\n    '\\uFF57': 'w',\r\n    '\\u1E81': 'w',\r\n    '\\u1E83': 'w',\r\n    '\\u0175': 'w',\r\n    '\\u1E87': 'w',\r\n    '\\u1E85': 'w',\r\n    '\\u1E98': 'w',\r\n    '\\u1E89': 'w',\r\n    '\\u2C73': 'w',\r\n    '\\u24E7': 'x',\r\n    '\\uFF58': 'x',\r\n    '\\u1E8B': 'x',\r\n    '\\u1E8D': 'x',\r\n    '\\u24E8': 'y',\r\n    '\\uFF59': 'y',\r\n    '\\u1EF3': 'y',\r\n    '\\u00FD': 'y',\r\n    '\\u0177': 'y',\r\n    '\\u1EF9': 'y',\r\n    '\\u0233': 'y',\r\n    '\\u1E8F': 'y',\r\n    '\\u00FF': 'y',\r\n    '\\u1EF7': 'y',\r\n    '\\u1E99': 'y',\r\n    '\\u1EF5': 'y',\r\n    '\\u01B4': 'y',\r\n    '\\u024F': 'y',\r\n    '\\u1EFF': 'y',\r\n    '\\u24E9': 'z',\r\n    '\\uFF5A': 'z',\r\n    '\\u017A': 'z',\r\n    '\\u1E91': 'z',\r\n    '\\u017C': 'z',\r\n    '\\u017E': 'z',\r\n    '\\u1E93': 'z',\r\n    '\\u1E95': 'z',\r\n    '\\u01B6': 'z',\r\n    '\\u0225': 'z',\r\n    '\\u0240': 'z',\r\n    '\\u2C6C': 'z',\r\n    '\\uA763': 'z',\r\n    '\\u0386': '\\u0391',\r\n    '\\u0388': '\\u0395',\r\n    '\\u0389': '\\u0397',\r\n    '\\u038A': '\\u0399',\r\n    '\\u03AA': '\\u0399',\r\n    '\\u038C': '\\u039F',\r\n    '\\u038E': '\\u03A5',\r\n    '\\u03AB': '\\u03A5',\r\n    '\\u038F': '\\u03A9',\r\n    '\\u03AC': '\\u03B1',\r\n    '\\u03AD': '\\u03B5',\r\n    '\\u03AE': '\\u03B7',\r\n    '\\u03AF': '\\u03B9',\r\n    '\\u03CA': '\\u03B9',\r\n    '\\u0390': '\\u03B9',\r\n    '\\u03CC': '\\u03BF',\r\n    '\\u03CD': '\\u03C5',\r\n    '\\u03CB': '\\u03C5',\r\n    '\\u03B0': '\\u03C5',\r\n    '\\u03C9': '\\u03C9',\r\n    '\\u03C2': '\\u03C3'\r\n};\r\nfunction stripSpecialChars(text) {\r\n    var match = function (a) {\r\n        return diacritics[a] || a;\r\n    };\r\n    return text.replace(/[^\\u0000-\\u007E]/g, match);\r\n}\r\nexports.stripSpecialChars = stripSpecialChars;\r\n\n\n/***/ }),\n\n/***/ 187:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div (click)=\\\"handleSelectClick($event)\\\" class=\\\"ng-control\\\">\\n    <div class=\\\"ng-value-container\\\">\\n        <div class=\\\"ng-placeholder\\\" [hidden]=\\\"!showPlaceholder()\\\">{{placeholder}}</div>\\n        <ng-template #defaultLabelTemplate let-item=\\\"item\\\">\\n            <div class=\\\"ng-value-wrapper default\\\" [class.disabled]=\\\"item.disabled\\\">\\n                <span class=\\\"ng-value-icon left\\\" (click)=\\\"unselect(item); $event.stopPropagation()\\\" aria-hidden=\\\"true\\\">×</span>\\n                <span class=\\\"ng-value-label\\\">{{item[bindLabel]}}</span>\\n            </div>\\n        </ng-template>\\n\\n        <div class=\\\"ng-value\\\" *ngFor=\\\"let item of selectedItems\\\">\\n            <ng-template\\n                [ngTemplateOutlet]=\\\"labelTemplate || defaultLabelTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ item: item, clear: clearItem }\\\">\\n            </ng-template>\\n        </div>\\n\\n        <div *ngIf=\\\"showFilter()\\\" class=\\\"ng-input\\\">\\n            <input #filterInput\\n                   [value]=\\\"filterValue\\\"\\n                   (input)=\\\"onFilter($event)\\\"\\n                   (focus)=\\\"onInputFocus($event)\\\"\\n                   (blur)=\\\"onInputBlur($event)\\\"\\n                   role=\\\"combobox\\\"\\n                   aria-expanded=\\\"false\\\"\\n                   aria-owns=\\\"\\\"\\n                   aria-haspopup=\\\"false\\\">\\n        </div>\\n    </div>\\n\\n    <spinner class=\\\"ng-spinner-zone\\\" *ngIf=\\\"isLoading\\\"></spinner>\\n\\n    <span *ngIf=\\\"showClear()\\\" (click)=\\\"handleClearClick($event)\\\" class=\\\"ng-clear-zone\\\" title=\\\"Clear all\\\" aria-label=\\\"Clear all\\\">\\n        <span class=\\\"ng-clear\\\" aria-hidden=\\\"true\\\">×</span>\\n    </span>\\n\\n    <span (click)=\\\"handleArrowClick($event)\\\" class=\\\"ng-arrow-zone\\\">\\n        <span class=\\\"ng-arrow\\\"></span>\\n    </span>\\n</div>\\n\\n<div class=\\\"ng-menu-outer\\\">\\n    <virtual-scroll role=\\\"listbox\\\" class=\\\"ng-menu\\\" [bufferAmount]=\\\"4\\\" [items]=\\\"itemsList.filteredItems\\\" (update)=\\\"viewPortItems = $event\\\">\\n        <div class=\\\"ng-option\\\" role=\\\"option\\\" (click)=\\\"toggle(item)\\\" (mousedown)=\\\"$event.preventDefault()\\\" (mouseover)=\\\"onItemHover(item)\\\"\\n             *ngFor=\\\"let item of viewPortItems\\\"\\n             [class.disabled]=\\\"item.disabled\\\"\\n             [class.selected]=\\\"item.selected\\\"\\n             [class.marked]=\\\"item === itemsList.markedItem\\\">\\n\\n            <ng-template #defaultOptionTemplate>\\n                <span>{{item[bindLabel]}}</span>\\n            </ng-template>\\n\\n            <ng-template\\n                [ngTemplateOutlet]=\\\"optionTemplate || defaultOptionTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ item: item, index: item.index }\\\">\\n            </ng-template>\\n        </div>\\n        <div class=\\\"ng-option marked\\\" role=\\\"option\\\" (click)=\\\"selectTag()\\\" *ngIf=\\\"addTag && itemsList.filteredItems.length === 0\\\">\\n            <span><span class=\\\"ng-tag-label\\\">{{addTagText}}</span>{{filterValue}}</span>\\n        </div>\\n    </virtual-scroll>\\n\\n    <div class=\\\"ng-menu\\\" *ngIf=\\\"showNoItemsFound() && !addTag\\\">\\n        <div class=\\\"ng-option disabled\\\">\\n            {{notFoundText}}\\n        </div>\\n    </div>\\n\\n    <div class=\\\"ng-menu\\\" *ngIf=\\\"showTypeToSearch()\\\">\\n        <div class=\\\"ng-option disabled\\\">\\n            {{typeToSearchText}}\\n        </div>\\n    </div>\\n</div>\\n\"\n\n/***/ }),\n\n/***/ 188:\n/***/ (function(module, exports) {\n\nmodule.exports = \"ng-select {\\n  position: relative;\\n  display: block;\\n  box-sizing: border-box; }\\n  ng-select div,\\n  ng-select input,\\n  ng-select span {\\n    box-sizing: border-box; }\\n  ng-select virtual-scroll {\\n    display: block;\\n    height: auto;\\n    box-sizing: border-box; }\\n  ng-select [hidden] {\\n    display: none; }\\n  ng-select.opened > .ng-control {\\n    border-bottom-right-radius: 0;\\n    border-bottom-left-radius: 0;\\n    background: #fff;\\n    border-color: #b3b3b3 #ccc #d9d9d9; }\\n  ng-select.opened > .ng-control .ng-arrow {\\n    top: -2px;\\n    border-color: transparent transparent #999;\\n    border-width: 0 5px 5px; }\\n    ng-select.opened > .ng-control .ng-arrow:hover {\\n      border-color: transparent transparent #666; }\\n  ng-select.opened .ng-menu-outer {\\n    visibility: visible; }\\n  ng-select:not(.opened) .ng-control .ng-value-container .ng-input {\\n    opacity: 0; }\\n  ng-select.focused:not(.opened) > .ng-control {\\n    border-color: #007eff;\\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 0 3px rgba(0, 126, 255, 0.1); }\\n  ng-select.disabled {\\n    pointer-events: none; }\\n    ng-select.disabled > .ng-control {\\n      background-color: #f9f9f9; }\\n  ng-select .ng-control {\\n    background-color: #fff;\\n    border-radius: 4px;\\n    border: 1px solid #ccc;\\n    color: #333;\\n    cursor: default;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-align: center;\\n        align-items: center;\\n    border-spacing: 0;\\n    border-collapse: separate;\\n    min-height: 36px;\\n    outline: none;\\n    overflow: hidden;\\n    position: relative;\\n    width: 100%; }\\n    ng-select .ng-control:hover {\\n      box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06); }\\n    ng-select .ng-control .ng-value-container {\\n      display: -ms-flexbox;\\n      display: flex;\\n      -ms-flex: 1;\\n          flex: 1;\\n      -ms-flex-align: center;\\n          align-items: center;\\n      padding-left: 10px; }\\n      ng-select .ng-control .ng-value-container .ng-placeholder {\\n        color: #aaa; }\\n      ng-select .ng-control .ng-value-container .ng-input > input {\\n        min-width: 5px;\\n        box-sizing: content-box;\\n        background: none transparent;\\n        border: 0 none;\\n        box-shadow: none;\\n        outline: none;\\n        cursor: default;\\n        width: 100%; }\\n  ng-select.ng-single.filtered .ng-control .ng-value-container .ng-value {\\n    visibility: hidden; }\\n  ng-select.ng-single .ng-control .ng-value-container {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n    ng-select.ng-single .ng-control .ng-value-container .ng-value {\\n      white-space: nowrap;\\n      overflow: hidden;\\n      text-overflow: ellipsis; }\\n      ng-select.ng-single .ng-control .ng-value-container .ng-value .ng-value-wrapper {\\n        white-space: nowrap;\\n        overflow: hidden;\\n        text-overflow: ellipsis; }\\n        ng-select.ng-single .ng-control .ng-value-container .ng-value .ng-value-wrapper .ng-value-icon {\\n          display: none; }\\n    ng-select.ng-single .ng-control .ng-value-container .ng-input {\\n      position: absolute;\\n      left: 0;\\n      padding-left: 10px;\\n      padding-right: 50px;\\n      width: 100%; }\\n  ng-select.ng-multiple.disabled > .ng-control .ng-value-container .ng-value .ng-value-wrapper.default {\\n    background-color: #f9f9f9;\\n    border: 1px solid #e3e3e3; }\\n    ng-select.ng-multiple.disabled > .ng-control .ng-value-container .ng-value .ng-value-wrapper.default .ng-value-icon {\\n      display: none; }\\n  ng-select.ng-multiple .ng-control .ng-value-container {\\n    padding-top: 5px;\\n    -ms-flex-wrap: wrap;\\n        flex-wrap: wrap;\\n    padding-left: 7px; }\\n    ng-select.ng-multiple .ng-control .ng-value-container .ng-placeholder {\\n      position: absolute; }\\n    ng-select.ng-multiple .ng-control .ng-value-container .ng-value {\\n      font-size: 0.9em;\\n      padding-right: 5px;\\n      padding-bottom: 5px;\\n      white-space: nowrap; }\\n      ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper {\\n        display: -ms-flexbox;\\n        display: flex; }\\n        ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper.default {\\n          background-color: #f5faff;\\n          border-radius: 2px;\\n          border: 1px solid #c2e0ff; }\\n          ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper.default.disabled {\\n            background-color: #f9f9f9;\\n            border: 1px solid #e3e3e3; }\\n          ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper.default .ng-value-icon:hover {\\n            background-color: #d8eafd; }\\n          ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper.default .ng-value-icon.left {\\n            border-right: 1px solid #c2e0ff; }\\n          ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper.default .ng-value-icon.right {\\n            border-left: 1px solid #c2e0ff; }\\n        ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper.disabled .ng-value-icon {\\n          display: none; }\\n        ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper .ng-value-label {\\n          padding: 0 5px; }\\n        ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper .ng-value-icon {\\n          padding: 0 5px;\\n          cursor: pointer; }\\n    ng-select.ng-multiple .ng-control .ng-value-container .ng-input {\\n      -ms-flex: 1;\\n          flex: 1;\\n      padding-bottom: 5px;\\n      padding-left: 3px; }\\n    ng-select.ng-multiple .ng-control .ng-value-container .ng-placeholder {\\n      padding-bottom: 5px;\\n      padding-left: 3px; }\\n  ng-select .ng-menu-outer {\\n    visibility: hidden;\\n    border-bottom-right-radius: 4px;\\n    border-bottom-left-radius: 4px;\\n    background-color: #fff;\\n    border: 1px solid #ccc;\\n    border-top-color: #e6e6e6;\\n    box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);\\n    box-sizing: border-box;\\n    margin-top: -1px;\\n    max-height: 242px;\\n    position: absolute;\\n    top: 100%;\\n    width: 100%;\\n    z-index: 3;\\n    -webkit-overflow-scrolling: touch; }\\n  ng-select .ng-menu {\\n    max-height: 240px;\\n    overflow-y: auto; }\\n  ng-select .ng-option {\\n    box-sizing: border-box;\\n    background-color: #fff;\\n    color: #666666;\\n    cursor: pointer;\\n    display: block;\\n    padding: 8px 10px; }\\n    ng-select .ng-option:last-child {\\n      border-bottom-right-radius: 4px;\\n      border-bottom-left-radius: 4px; }\\n    ng-select .ng-option.selected {\\n      background-color: #f5faff;\\n      color: #333; }\\n    ng-select .ng-option.marked {\\n      background-color: #ebf5ff;\\n      color: #333; }\\n    ng-select .ng-option.disabled {\\n      color: #cccccc;\\n      cursor: default; }\\n    ng-select .ng-option .ng-tag-label {\\n      padding-right: 5px;\\n      font-size: 80%;\\n      font-weight: 400; }\\n  ng-select .ng-clear-zone {\\n    animation: Select-animation-fadeIn 200ms;\\n    color: #999;\\n    cursor: pointer;\\n    position: relative;\\n    width: 17px; }\\n    ng-select .ng-clear-zone .ng-clear {\\n      display: inline-block;\\n      font-size: 18px;\\n      line-height: 1; }\\n      ng-select .ng-clear-zone .ng-clear:hover {\\n        color: #D0021B; }\\n  ng-select .ng-spinner-zone {\\n    cursor: pointer;\\n    display: table-cell;\\n    position: relative;\\n    text-align: center;\\n    vertical-align: middle;\\n    width: 25px;\\n    padding-right: 5px;\\n    padding-top: 5px; }\\n  ng-select .ng-arrow-zone {\\n    cursor: pointer;\\n    display: table-cell;\\n    position: relative;\\n    text-align: center;\\n    vertical-align: middle;\\n    width: 25px;\\n    padding-right: 5px; }\\n    ng-select .ng-arrow-zone .ng-arrow {\\n      border-color: #999 transparent transparent;\\n      border-style: solid;\\n      border-width: 5px 5px 2.5px;\\n      display: inline-block;\\n      height: 0;\\n      width: 0;\\n      position: relative; }\\n      ng-select .ng-arrow-zone .ng-arrow:hover {\\n        border-top-color: #666; }\\n\"\n\n/***/ }),\n\n/***/ 189:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar forms_1 = __webpack_require__(13);\r\nvar common_1 = __webpack_require__(7);\r\nvar ng_select_component_1 = __webpack_require__(98);\r\nvar ng_templates_directive_1 = __webpack_require__(99);\r\nvar virtual_scroll_component_1 = __webpack_require__(100);\r\nvar spinner_component_1 = __webpack_require__(190);\r\nvar ng_select_types_1 = __webpack_require__(54);\r\nvar NgSelectModule = /** @class */ (function () {\r\n    function NgSelectModule() {\r\n    }\r\n    NgSelectModule.forRoot = function (config) {\r\n        return provideModule(config);\r\n    };\r\n    NgSelectModule.forChild = function (config) {\r\n        return provideModule(config);\r\n    };\r\n    NgSelectModule = __decorate([\r\n        core_1.NgModule({\r\n            declarations: [\r\n                ng_select_component_1.NgSelectComponent,\r\n                ng_templates_directive_1.NgOptionTemplateDirective,\r\n                ng_templates_directive_1.NgLabelTemplateDirective,\r\n                spinner_component_1.SpinnerComponent\r\n            ],\r\n            imports: [\r\n                forms_1.FormsModule,\r\n                common_1.CommonModule,\r\n                virtual_scroll_component_1.VirtualScrollModule\r\n            ],\r\n            exports: [\r\n                ng_select_component_1.NgSelectComponent,\r\n                ng_templates_directive_1.NgOptionTemplateDirective,\r\n                ng_templates_directive_1.NgLabelTemplateDirective\r\n            ]\r\n        })\r\n    ], NgSelectModule);\r\n    return NgSelectModule;\r\n}());\r\nexports.NgSelectModule = NgSelectModule;\r\nfunction provideModule(config) {\r\n    return {\r\n        ngModule: NgSelectModule,\r\n        providers: [\r\n            { provide: ng_select_types_1.NgSelectConfig, useValue: config }\r\n        ]\r\n    };\r\n}\r\n\n\n/***/ }),\n\n/***/ 190:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\n/* tslint:disable:max-line-length */\r\nvar SpinnerComponent = /** @class */ (function () {\r\n    function SpinnerComponent() {\r\n    }\r\n    SpinnerComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'spinner',\r\n            template: \"\\n        <svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n     width=\\\"20px\\\" height=\\\"20px\\\" viewBox=\\\"0 0 50 50\\\" style=\\\"enable-background:new 0 0 50 50;\\\" xml:space=\\\"preserve\\\">\\n  <path fill=\\\"#777\\\" d=\\\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\\\">\\n    <animateTransform attributeType=\\\"xml\\\"\\n      attributeName=\\\"transform\\\"\\n      type=\\\"rotate\\\"\\n      from=\\\"0 25 25\\\"\\n      to=\\\"360 25 25\\\"\\n      dur=\\\"0.6s\\\"\\n      repeatCount=\\\"indefinite\\\"/>\\n    </path>\\n  </svg>\"\r\n        })\r\n    ], SpinnerComponent);\r\n    return SpinnerComponent;\r\n}());\r\nexports.SpinnerComponent = SpinnerComponent;\r\n/* tslint:enable:max-line-length */\r\n\n\n/***/ }),\n\n/***/ 196:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(197);\r\nvar core_1 = __webpack_require__(1);\r\nvar router_1 = __webpack_require__(90);\r\n__webpack_require__(153);\r\n__webpack_require__(154);\r\n__webpack_require__(155);\r\nvar platform_browser_1 = __webpack_require__(23);\r\nvar AppComponent = /** @class */ (function () {\r\n    function AppComponent(router, activatedRoute, titleService) {\r\n        this.router = router;\r\n        this.activatedRoute = activatedRoute;\r\n        this.titleService = titleService;\r\n        this.version = window['ngSelectVersion'];\r\n    }\r\n    AppComponent.prototype.ngOnInit = function () {\r\n        this.setTitle();\r\n    };\r\n    AppComponent.prototype.setTitle = function () {\r\n        var _this = this;\r\n        this.router.events\r\n            .filter(function (event) { return event instanceof router_1.NavigationEnd; })\r\n            .map(function () { return _this.activatedRoute; })\r\n            .map(function (route) {\r\n            while (route.firstChild) {\r\n                route = route.firstChild;\r\n            }\r\n            return route;\r\n        })\r\n            .filter(function (route) { return route.outlet === 'primary'; })\r\n            .mergeMap(function (route) { return route.data; })\r\n            .subscribe(function (event) {\r\n            _this.title = event['title'];\r\n            _this.titleService.setTitle(_this.title);\r\n        });\r\n    };\r\n    AppComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'demo-app',\r\n            template: __webpack_require__(198)\r\n        }),\r\n        __metadata(\"design:paramtypes\", [router_1.Router,\r\n            router_1.ActivatedRoute,\r\n            platform_browser_1.Title])\r\n    ], AppComponent);\r\n    return AppComponent;\r\n}());\r\nexports.AppComponent = AppComponent;\r\n\n\n/***/ }),\n\n/***/ 197:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 198:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<layout-header [version]=\\\"version\\\"></layout-header>\\n<div class=\\\"container-fluid fill\\\">\\n    <div class=\\\"row flex-xl-nowrap fill\\\">\\n        <div class=\\\"col-12 col-md-3 col-xl-2 bd-sidebar fill\\\">\\n            <layout-sidenav></layout-sidenav>\\n        </div>\\n        <main class=\\\"col-12 col-md-9 col-xl-8 py-md-3 pl-md-5 bd-content\\\">\\n            <h1 class=\\\"bd-title\\\">\\n                {{title}}\\n            </h1>\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <router-outlet></router-outlet>\\n                </div>\\n            </div>\\n        </main>\\n    </div>\\n</div>\\n\"\n\n/***/ }),\n\n/***/ 199:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar SelectWithTemplatesComponent = /** @class */ (function () {\r\n    function SelectWithTemplatesComponent() {\r\n        this.cities = [\r\n            { id: 1, name: 'Vilnius', avatar: '//www.gravatar.com/avatar/b0d8c6e5ea589e6fc3d3e08afb1873bb?d=retro&r=g&s=30 2x' },\r\n            { id: 2, name: 'Kaunas', avatar: '//www.gravatar.com/avatar/ddac2aa63ce82315b513be9dc93336e5?d=retro&r=g&s=15' },\r\n            { id: 3, name: 'Pavilnys', avatar: '//www.gravatar.com/avatar/6acb7abf486516ab7fb0a6efa372042b?d=retro&r=g&s=15' }\r\n        ];\r\n        this.cities2 = JSON.parse(JSON.stringify(this.cities));\r\n        this.cities3 = JSON.parse(JSON.stringify(this.cities));\r\n        this.selectedCity = this.cities[0].name;\r\n        this.selectedCity2 = this.cities2[1].name;\r\n        this.selectedCity3 = this.cities3[2].name;\r\n    }\r\n    SelectWithTemplatesComponent.prototype.ngOnInit = function () {\r\n    };\r\n    SelectWithTemplatesComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'select-with-templates',\r\n            template: \"\\n        <label>Custom label</label>\\n        <ng-select [items]=\\\"cities\\\" [(ngModel)]=\\\"selectedCity\\\" bindLabel=\\\"name\\\" bindValue=\\\"name\\\">\\n            <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.avatar\\\"/>\\n                {{item.name}}\\n            </ng-template>\\n        </ng-select>\\n        <p>\\n            Selected city name: {{selectedCity}}\\n        </p>\\n        <hr>\\n\\n        <label>Custom option</label>\\n        <ng-select [items]=\\\"cities2\\\" [(ngModel)]=\\\"selectedCity2\\\" bindLabel=\\\"name\\\" bindValue=\\\"name\\\">\\n            <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\">\\n                <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.avatar\\\"/>\\n                <b>{{item.name}}</b>\\n            </ng-template>\\n        </ng-select>\\n        <p>\\n            Selected city name: {{selectedCity2}}\\n        </p>\\n        <hr>\\n\\n        <label>Custom label and option</label>\\n        <ng-select [items]=\\\"cities3\\\" [(ngModel)]=\\\"selectedCity3\\\" bindLabel=\\\"name\\\" bindValue=\\\"name\\\">\\n            <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.avatar\\\"/>\\n                <b>{{item.name}}</b>\\n            </ng-template>\\n            <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\">\\n                <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.avatar\\\"/>\\n                <b>{{item.name}}</b>\\n            </ng-template>\\n        </ng-select>\\n        <p>\\n            Selected city name: {{selectedCity3}}\\n        </p>\\n    \"\r\n        })\r\n    ], SelectWithTemplatesComponent);\r\n    return SelectWithTemplatesComponent;\r\n}());\r\nexports.SelectWithTemplatesComponent = SelectWithTemplatesComponent;\r\n\n\n/***/ }),\n\n/***/ 200:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar SelectBindingsComponent = /** @class */ (function () {\r\n    function SelectBindingsComponent() {\r\n        this.defaultBindingsList = [\r\n            { value: 1, label: 'Vilnius' },\r\n            { value: 2, label: 'Kaunas' },\r\n            { value: 3, label: 'Pavilnys', disabled: true }\r\n        ];\r\n        this.cities = [\r\n            { id: 1, name: 'Vilnius' },\r\n            { id: 2, name: 'Kaunas' },\r\n            { id: 3, name: 'Pavilnys', disabled: true }\r\n        ];\r\n        this.selectedCity2 = null;\r\n        this.selectedCityId2 = null;\r\n    }\r\n    SelectBindingsComponent.prototype.ngOnInit = function () {\r\n    };\r\n    SelectBindingsComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'select-bindings',\r\n            template: \"\\n        <label>Bind to default <b>label</b>, <b>object</b> bindings</label>\\n        <ng-select [items]=\\\"defaultBindingsList\\\"\\n                   [(ngModel)]=\\\"selectedCity2\\\">\\n        </ng-select>\\n        <p>\\n            Selected city object: {{selectedCity2 | json}}\\n        </p>\\n        <hr>\\n        <label>Bind label to custom property</label>\\n        <ng-select [items]=\\\"cities\\\"\\n                   bindLabel=\\\"name\\\"\\n                   placeholder=\\\"Select value\\\"\\n                   [clearable]=\\\"false\\\"\\n                   [(ngModel)]=\\\"selectedCity\\\">\\n        </ng-select>\\n        <p>\\n            Selected city object: {{selectedCity | json}}\\n        </p>\\n        <hr>\\n        <label>Bind label and model to custom properties</label>\\n        <ng-select [items]=\\\"cities\\\"\\n                   bindLabel=\\\"name\\\"\\n                   bindValue=\\\"id\\\"\\n                   [(ngModel)]=\\\"selectedCityId2\\\">\\n        </ng-select>\\n        <p>\\n            Selected city ID: {{selectedCityId2 | json}}\\n        </p>\\n    \"\r\n        })\r\n    ], SelectBindingsComponent);\r\n    return SelectBindingsComponent;\r\n}());\r\nexports.SelectBindingsComponent = SelectBindingsComponent;\r\n\n\n/***/ }),\n\n/***/ 201:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar http_1 = __webpack_require__(39);\r\nvar Observable_1 = __webpack_require__(0);\r\nvar SelectSearchComponent = /** @class */ (function () {\r\n    /* tslint:enable */\r\n    function SelectSearchComponent(http) {\r\n        var _this = this;\r\n        this.http = http;\r\n        this.companies = [];\r\n        this.companies2 = [];\r\n        this.filteredCompanies2 = [];\r\n        this.items = [];\r\n        this.typeahead = new core_1.EventEmitter();\r\n        this.placeholder = 'Type in me. I am single';\r\n        this.multiple = false;\r\n        this.customFilter = new core_1.EventEmitter();\r\n        /* tslint:disable */\r\n        this.companiesNames = ['Miškas', 'Žalias', 'Flexigen', 'Rooforia', 'Rooblia', 'Tropoli', 'Eargo', 'Gadtron', 'Elentrix', 'Terragen', 'Medalert', 'Xelegyl', 'Bristo', 'Xylar', 'Imperium', 'Kangle', 'Earwax', 'Zanity', 'Portico', 'Tsunamia', 'Kage', 'Comstar', 'Radiantix', 'Bostonic', 'Geekko', 'Eventex', 'Stockpost', 'Silodyne', 'Enersave', 'Perkle', 'Pyramis', 'Accuprint', 'Papricut', 'Pathways', 'Circum', 'Gology', 'Buzzworks', 'Dancerity', 'Zounds', 'Diginetic', 'Snips', 'Chillium', 'Exotechno', 'Accufarm', 'Vidto', 'Signidyne', 'Escenta', 'Sureplex', 'Quarmony', 'Interfind', 'Exoswitch', 'Mondicil', 'Pyramia', 'Digitalus', 'Earthplex', 'Limozen', 'Twiist', 'Tubalum', 'Securia', 'Uni', 'Biospan', 'Zensus', 'Memora'];\r\n        this.typeahead\r\n            .distinctUntilChanged()\r\n            .debounceTime(200)\r\n            .switchMap(function (term) { return _this.loadGithubUsers(term); })\r\n            .subscribe(function (items) {\r\n            _this.items = items;\r\n        }, function (err) {\r\n            console.log(err);\r\n            _this.items = [];\r\n        });\r\n    }\r\n    SelectSearchComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.companiesNames.forEach(function (c, i) {\r\n            _this.companies.push({ id: i, name: c });\r\n            _this.companies2.push({ id: i, name: c });\r\n        });\r\n        this.filteredCompanies2 = this.companies2.slice();\r\n        this.customFilter.subscribe(function (term) {\r\n            _this.filteredCompanies2 = term ? _this.companies2.filter(function (x) { return term === 'Rooforia' && x.name === term; }) : _this.companies2;\r\n        });\r\n    };\r\n    SelectSearchComponent.prototype.loadGithubUsers = function (term) {\r\n        if (term) {\r\n            return this.http.get(\"https://api.github.com/search/users?q=\" + term).map(function (rsp) { return rsp.items; });\r\n        }\r\n        else {\r\n            return Observable_1.Observable.of([]);\r\n        }\r\n    };\r\n    SelectSearchComponent.prototype.toggleMultiple = function () {\r\n        this.multiple = !this.multiple;\r\n        this.placeholder = this.multiple ? 'Type in me. I am multiple.' : 'Type in me. I am single.';\r\n    };\r\n    SelectSearchComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'select-search',\r\n            template: \"\\n        <h5>Client side</h5>\\n        <hr>\\n        <label>Search in label text (default)</label>\\n        <ng-select [items]=\\\"companies\\\"\\n                   bindLabel=\\\"name\\\"\\n                   [(ngModel)]=\\\"selectedCompany\\\">\\n        </ng-select>\\n        <p>\\n            Selected value: {{selectedCompany | json}}\\n        </p>\\n\\n        <label>Search using custom filter handler (search for Rooforia)</label>\\n        <ng-select [items]=\\\"filteredCompanies2\\\"\\n                   bindLabel=\\\"name\\\"\\n                   [typeahead]=\\\"customFilter\\\"\\n                   [(ngModel)]=\\\"selectedCompany2\\\">\\n        </ng-select>\\n        <p>\\n            Selected value: {{selectedCompany2 | json}}\\n        </p>\\n\\n        <h5>Server side</h5>\\n        <hr>\\n        <label>Search with autocomplete in Github accounts</label>\\n        <ng-select [items]=\\\"items\\\"\\n                   notFoundText=\\\"No results found\\\"\\n                   typeToSearchText=\\\"Search for github account\\\"\\n                   bindLabel=\\\"login\\\"\\n                   [placeholder]=\\\"placeholder\\\"\\n                   [multiple]=\\\"multiple\\\"\\n                   [typeahead]=\\\"typeahead\\\"\\n                   [(ngModel)]=\\\"githubAccount\\\">\\n\\n            <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                <img [src]=\\\"item.avatar_url\\\" width=\\\"20px\\\" height=\\\"20px\\\"> {{item.login}}\\n            </ng-template>\\n\\n        </ng-select>\\n        <br>\\n        <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"toggleMultiple()\\\">Toggle multiple</button>\\n        <p>\\n            Selected github account:\\n            <span *ngIf=\\\"githubAccount\\\">\\n                <img [src]=\\\"githubAccount.avatar_url\\\" width=\\\"20px\\\" height=\\\"20px\\\"> {{githubAccount.login}}\\n            </span>\\n        </p>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [http_1.HttpClient])\r\n    ], SelectSearchComponent);\r\n    return SelectSearchComponent;\r\n}());\r\nexports.SelectSearchComponent = SelectSearchComponent;\r\n\n\n/***/ }),\n\n/***/ 202:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar forms_1 = __webpack_require__(13);\r\nvar http_1 = __webpack_require__(39);\r\nvar ng_bootstrap_1 = __webpack_require__(56);\r\nvar ReactiveFormsComponent = /** @class */ (function () {\r\n    function ReactiveFormsComponent(fb, http, modalService) {\r\n        this.fb = fb;\r\n        this.http = http;\r\n        this.modalService = modalService;\r\n        this.isCitiesControlVisible = true;\r\n        this.cities = [\r\n            { id: 1, name: 'Vilnius' },\r\n            { id: 2, name: 'Kaunas' },\r\n            { id: 3, name: 'Pavilnys (Disabled)', disabled: true },\r\n            { id: 4, name: 'Pabradė' },\r\n        ];\r\n        this.ages = [\r\n            { value: '<18', label: 'Under 18' },\r\n            { value: '18', label: '18' },\r\n            { value: '>18', label: 'More than 18' },\r\n        ];\r\n        this.albums = [];\r\n        this.allAlbums = [];\r\n        this.photos = [];\r\n    }\r\n    ReactiveFormsComponent.prototype.ngOnInit = function () {\r\n        this.loadAlbums();\r\n        this.loadPhotos();\r\n        this.heroForm = this.fb.group({\r\n            selectedCitiesIds: [],\r\n            age: '',\r\n            album: '',\r\n            photo: ''\r\n        });\r\n    };\r\n    ReactiveFormsComponent.prototype.toggleAgeDisable = function () {\r\n        if (this.heroForm.controls.age.disabled) {\r\n            this.heroForm.controls.age.enable();\r\n        }\r\n        else {\r\n            this.heroForm.controls.age.disable();\r\n        }\r\n    };\r\n    ReactiveFormsComponent.prototype.toggleCitiesControl = function () {\r\n        this.isCitiesControlVisible = !this.isCitiesControlVisible;\r\n    };\r\n    ReactiveFormsComponent.prototype.clearCities = function () {\r\n        this.heroForm.get('selectedCitiesIds').patchValue([]);\r\n    };\r\n    ReactiveFormsComponent.prototype.selectFirstPhoto = function () {\r\n        this.heroForm.get('photo').patchValue(this.photos[0].thumbnailUrl);\r\n    };\r\n    ReactiveFormsComponent.prototype.selectFirstAlbum = function () {\r\n        this.heroForm.get('album').patchValue(this.albums[0].id);\r\n    };\r\n    ReactiveFormsComponent.prototype.selectAlbumsRange = function (from, to) {\r\n        this.albums = this.allAlbums.slice(from, to);\r\n        this.selectFirstAlbum();\r\n    };\r\n    ReactiveFormsComponent.prototype.openModel = function (content) {\r\n        this.modalService.open(content);\r\n    };\r\n    ReactiveFormsComponent.prototype.changePhoto = function (photo) {\r\n        this.heroForm.get('photo').patchValue(photo ? photo.thumbnailUrl : null);\r\n    };\r\n    ReactiveFormsComponent.prototype.togglePhotoDisabled = function () {\r\n        var photo = this.heroForm.get('photo');\r\n        if (photo.disabled) {\r\n            photo.enable();\r\n        }\r\n        else {\r\n            photo.disable();\r\n        }\r\n    };\r\n    ReactiveFormsComponent.prototype.loadAlbums = function () {\r\n        var _this = this;\r\n        this.http.get('https://jsonplaceholder.typicode.com/albums').subscribe(function (albums) {\r\n            _this.allAlbums = albums;\r\n            _this.albums = _this.allAlbums.slice();\r\n            _this.selectFirstAlbum();\r\n        });\r\n    };\r\n    ReactiveFormsComponent.prototype.loadPhotos = function () {\r\n        var _this = this;\r\n        this.http.get('https://jsonplaceholder.typicode.com/photos').subscribe(function (photos) {\r\n            _this.photos = photos;\r\n            _this.selectFirstPhoto();\r\n        });\r\n    };\r\n    ReactiveFormsComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'reactive-forms',\r\n            template: \"\\n        <form [formGroup]=\\\"heroForm\\\" novalidate>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"state\\\">Cities</label>\\n                <ng-select *ngIf=\\\"isCitiesControlVisible\\\"\\n                           [items]=\\\"cities\\\"\\n                           bindLabel=\\\"name\\\"\\n                           bindValue=\\\"id\\\"\\n                           [multiple]=\\\"true\\\"\\n                           placeholder=\\\"Select cities\\\"\\n                           formControlName=\\\"selectedCitiesIds\\\">\\n                </ng-select>\\n                <br>\\n                <button (click)=\\\"toggleCitiesControl()\\\" class=\\\"btn btn-sm btn-secondary\\\">Show/Hide</button>\\n                <button (click)=\\\"clearCities()\\\" class=\\\"btn btn-sm btn-secondary\\\">Clear</button>\\n            </div>\\n            <hr>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"state\\\">Age</label>\\n                <ng-select [items]=\\\"ages\\\"\\n                           bindValue=\\\"value\\\"\\n                           placeholder=\\\"Select age\\\"\\n                           formControlName=\\\"age\\\">\\n                </ng-select>\\n                <br>\\n                <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"toggleAgeDisable()\\\">Toggle disabled</button>\\n            </div>\\n            <hr>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"album\\\">Favorite album</label>\\n                <ng-select [items]=\\\"albums\\\"\\n                           bindLabel=\\\"title\\\"\\n                           bindValue=\\\"id\\\"\\n                           placeholder=\\\"Select album\\\"\\n                           formControlName=\\\"album\\\">\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                        <div>Title: {{item.title}}</div>\\n                        <small><b>Id:</b> {{item.id}} | <b>UserId:</b> {{item.userId}}</small>\\n                    </ng-template>\\n                </ng-select>\\n                <small class=\\\"form-text text-muted\\\">Albums data from backend using HttpClient.</small>\\n                <br>\\n                <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"selectFirstAlbum()\\\">Select first album</button>\\n                <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"selectAlbumsRange(0, 10)\\\">Set 0-10 albums</button>\\n                <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"selectAlbumsRange(10, 20)\\\">Set 10-20 albums</button>\\n            </div>\\n            <hr>\\n            \\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"album\\\">Favorite photo</label>\\n                <ng-select [items]=\\\"photos\\\"\\n                           bindLabel=\\\"title\\\"\\n                           bindValue=\\\"thumbnailUrl\\\"\\n                           placeholder=\\\"Select photo\\\"\\n                           formControlName=\\\"photo\\\">\\n                    <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                        <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.thumbnailUrl\\\"/>\\n                        <span>{{item.title}}</span>\\n                    </ng-template>\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\">\\n                        <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.thumbnailUrl\\\"/>\\n                        <span>{{item.title}}</span>\\n                    </ng-template>\\n                </ng-select>\\n                <small class=\\\"form-text text-muted\\\">5000 items with virtual scroll</small>\\n                <br>\\n                <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"selectFirstPhoto()\\\">Select first photo</button>\\n                <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"openModel(content)\\\">Open in model</button>\\n                <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"togglePhotoDisabled()\\\">Toggle disabled</button>\\n            </div>\\n            \\n            <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h4 class=\\\"modal-title\\\">Select in modal</h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"album\\\">Favorite photo</label>\\n                        <ng-select [items]=\\\"photos\\\"\\n                                   (change)=\\\"changePhoto($event)\\\"\\n                                   bindLabel=\\\"title\\\"\\n                                   bindValue=\\\"thumbnailUrl\\\"\\n                                   placeholder=\\\"Select photo\\\"\\n                                   formControlName=\\\"photo\\\">\\n                            <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                                <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.thumbnailUrl\\\"/>\\n                                <span>{{item.title}}</span>\\n                            </ng-template>\\n                            <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\">\\n                                <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.thumbnailUrl\\\"/>\\n                                <span>{{item.title}}</span>\\n                            </ng-template>\\n                        </ng-select>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n                </div>\\n            </ng-template>\\n\\n        </form>\\n\\n        <p>Form value: {{ heroForm.value | json }}</p>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [forms_1.FormBuilder, http_1.HttpClient, ng_bootstrap_1.NgbModal])\r\n    ], ReactiveFormsComponent);\r\n    return ReactiveFormsComponent;\r\n}());\r\nexports.ReactiveFormsComponent = ReactiveFormsComponent;\r\n\n\n/***/ }),\n\n/***/ 203:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar SelectEventsComponent = /** @class */ (function () {\r\n    function SelectEventsComponent() {\r\n        this.cities = [\r\n            { id: 1, name: 'Vilnius' },\r\n            { id: 2, name: 'Kaunas' },\r\n            { id: 3, name: 'Pavilnys', disabled: true }\r\n        ];\r\n        this.events = [];\r\n    }\r\n    SelectEventsComponent.prototype.onChange = function ($event) {\r\n        this.events.push({ name: '(change)', value: $event });\r\n    };\r\n    SelectEventsComponent.prototype.onFocus = function ($event) {\r\n        this.events.push({ name: '(focus)', value: $event });\r\n    };\r\n    SelectEventsComponent.prototype.onBlur = function ($event) {\r\n        this.events.push({ name: '(blur)', value: $event });\r\n    };\r\n    SelectEventsComponent.prototype.onOpen = function () {\r\n        this.events.push({ name: '(open)', value: null });\r\n    };\r\n    SelectEventsComponent.prototype.onClose = function () {\r\n        this.events.push({ name: '(close)', value: null });\r\n    };\r\n    SelectEventsComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'select-events',\r\n            template: \"\\n        <label>Open, close, focus, blur, change events</label>\\n        <ng-select [items]=\\\"cities\\\"\\n                   [(ngModel)]=\\\"selectedCity\\\"\\n                   bindLabel=\\\"name\\\"\\n                   bindValue=\\\"id\\\"\\n                   (open)=\\\"onOpen()\\\"\\n                   (close)=\\\"onClose()\\\"\\n                   (focus)=\\\"onFocus($event)\\\"\\n                   (blur)=\\\"onBlur($event)\\\"\\n                   (change)=\\\"onChange($event)\\\">\\n        </ng-select>\\n\\n        <div *ngIf=\\\"events.length > 0\\\">\\n            <br>\\n            <button (click)=\\\"events = []\\\" class=\\\"btn btn-secondary btn-sm\\\">Clear events</button>\\n            <br>\\n            <br>\\n        </div>\\n\\n        <div *ngFor=\\\"let event of events\\\">\\n            <small>{{event.name}} - {{event.value | json}}</small>\\n            <hr>\\n        </div>\\n    \"\r\n        })\r\n    ], SelectEventsComponent);\r\n    return SelectEventsComponent;\r\n}());\r\nexports.SelectEventsComponent = SelectEventsComponent;\r\n\n\n/***/ }),\n\n/***/ 204:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar http_1 = __webpack_require__(39);\r\nvar SelectMultiComponent = /** @class */ (function () {\r\n    /* tslint:enable */\r\n    function SelectMultiComponent(http) {\r\n        this.http = http;\r\n        this.users = [];\r\n        this.companies = [];\r\n        this.companies2 = [];\r\n        this.disable = true;\r\n        /* tslint:disable */\r\n        this.companiesNames = ['Miškas', 'Žalias', 'Flexigen', 'Rooforia', 'Rooblia', 'Tropoli', 'Eargo', 'Gadtron', 'Elentrix', 'Terragen', 'Medalert', 'Xelegyl', 'Bristo', 'Xylar', 'Imperium', 'Kangle', 'Earwax', 'Zanity', 'Portico', 'Tsunamia', 'Kage', 'Comstar', 'Radiantix', 'Bostonic', 'Geekko', 'Eventex', 'Stockpost', 'Silodyne', 'Enersave', 'Perkle', 'Pyramis', 'Accuprint', 'Papricut', 'Pathways', 'Circum', 'Gology', 'Buzzworks', 'Dancerity', 'Zounds', 'Diginetic', 'Snips', 'Chillium', 'Exotechno', 'Accufarm', 'Vidto', 'Signidyne', 'Escenta', 'Sureplex', 'Quarmony', 'Interfind', 'Exoswitch', 'Mondicil', 'Pyramia', 'Digitalus', 'Earthplex', 'Limozen', 'Twiist', 'Tubalum', 'Securia', 'Uni', 'Biospan', 'Zensus', 'Memora'];\r\n    }\r\n    SelectMultiComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.companiesNames.forEach(function (c, i) {\r\n            _this.companies.push({ id: i, name: c });\r\n            _this.companies2.push({ id: i, name: c });\r\n        });\r\n        this.selectedCompaniesDisabled = [{ id: 0, name: 'Miškas' }, { id: 1, name: 'Žalias' }];\r\n        this.loadGithubUsers('anjm').subscribe(function (users) {\r\n            _this.users = users;\r\n        });\r\n    };\r\n    SelectMultiComponent.prototype.clearModel = function () {\r\n        this.selectedCompanies = [];\r\n    };\r\n    SelectMultiComponent.prototype.loadGithubUsers = function (term) {\r\n        return this.http.get(\"https://api.github.com/search/users?q=\" + term).map(function (rsp) { return rsp.items; });\r\n    };\r\n    SelectMultiComponent = __decorate([\r\n        core_1.Component({\r\n            template: \"\\n        <label>Select multiple elements</label>\\n        <ng-select\\n                [items]=\\\"companies\\\"\\n                bindLabel=\\\"name\\\"\\n                [multiple]=\\\"true\\\"\\n                [(ngModel)]=\\\"selectedCompanies\\\">\\n        </ng-select>\\n        <p>\\n            Selected value: {{selectedCompanies | json}} <br>\\n            <button (click)=\\\"clearModel()\\\" class=\\\"btn btn-secondary btn-sm\\\">Clear model</button>\\n        </p>\\n        <hr/>\\n\\n        <label>Disabled multiple elements</label>\\n        <ng-select\\n                [items]=\\\"companies2\\\"\\n                bindLabel=\\\"name\\\"\\n                [multiple]=\\\"true\\\"\\n                [disabled]=\\\"disable\\\"\\n                [(ngModel)]=\\\"selectedCompaniesDisabled\\\">\\n        </ng-select>\\n        <br>\\n        <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"disable = !disable\\\">Toggle disabled</button>\\n        <hr/>\\n        <label>Custom label templates</label>\\n        <ng-select\\n            [items]=\\\"users\\\"\\n            [multiple]=\\\"true\\\"\\n            [(ngModel)]=\\\"selectedUsers\\\">\\n\\n            <ng-template ng-label-tmp let-item=\\\"item\\\" let-clear=\\\"clear\\\">\\n                <div class=\\\"ng-value-wrapper default\\\">\\n                    <span class=\\\"ng-value-label\\\"><img [src]=\\\"item.avatar_url\\\" width=\\\"20px\\\" height=\\\"20px\\\"> {{item.login}}</span>\\n                    <span class=\\\"ng-value-icon right\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">\\u00D7</span>\\n                </div>\\n            </ng-template>\\n\\n            <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                <img [src]=\\\"item.avatar_url\\\" width=\\\"20px\\\" height=\\\"20px\\\"> {{item.login}}\\n            </ng-template>\\n        </ng-select>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [http_1.HttpClient])\r\n    ], SelectMultiComponent);\r\n    return SelectMultiComponent;\r\n}());\r\nexports.SelectMultiComponent = SelectMultiComponent;\r\n\n\n/***/ }),\n\n/***/ 205:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar SelectTagsComponent = /** @class */ (function () {\r\n    function SelectTagsComponent() {\r\n        this.companies = [];\r\n        this.companiesNames = ['Miškas', 'Žalias', 'Flexigen'];\r\n        this.addTag = function (name) {\r\n            return { name: name, tag: true };\r\n        };\r\n    }\r\n    SelectTagsComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.companiesNames.forEach(function (c, i) {\r\n            _this.companies.push({ id: i, name: c });\r\n        });\r\n    };\r\n    SelectTagsComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'select-tags',\r\n            template: \"\\n        <label>Default tags</label>\\n        <ng-select [items]=\\\"companies\\\"\\n                [addTag]=\\\"true\\\"\\n                bindLabel=\\\"name\\\"\\n                [(ngModel)]=\\\"selectedCompany\\\">\\n        </ng-select>\\n        <p>\\n            Selected value: {{selectedCompany | json}}\\n        </p>\\n        <hr>\\n\\n        <label>Custom tags</label>\\n        <ng-select [items]=\\\"companies\\\"\\n                [addTag]=\\\"addTag\\\"\\n                multiple=\\\"true\\\"\\n                bindLabel=\\\"name\\\"\\n                [(ngModel)]=\\\"selectedCompanyCustom\\\">\\n        </ng-select>\\n        <p>\\n            Selected value: {{selectedCompanyCustom | json}}\\n        </p>\\n        <hr>\\n    \"\r\n        })\r\n    ], SelectTagsComponent);\r\n    return SelectTagsComponent;\r\n}());\r\nexports.SelectTagsComponent = SelectTagsComponent;\r\n\n\n/***/ }),\n\n/***/ 206:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar LayoutHeaderComponent = /** @class */ (function () {\r\n    function LayoutHeaderComponent() {\r\n    }\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], LayoutHeaderComponent.prototype, \"version\", void 0);\r\n    LayoutHeaderComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'layout-header',\r\n            template: \"\\n        <nav class=\\\"navbar navbar-expand navbar-dark flex-column flex-md-row bd-navbar bg-dark\\\">\\n            <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n                <img src=\\\"https://angular.io/assets/images/logos/angular/angular.svg\\\" width=\\\"32px\\\" height=\\\"32px\\\"/>\\n                @ng-select/ng-select@{{version}}\\n            </a>\\n            <button class=\\\"navbar-toggler\\\"\\n                    type=\\\"button\\\"\\n                    data-toggle=\\\"collapse\\\"\\n                    data-target=\\\"#navbarsExampleDefault\\\"\\n                    aria-controls=\\\"navbarsExampleDefault\\\"\\n                    aria-expanded=\\\"false\\\"\\n                    aria-label=\\\"Toggle navigation\\\">\\n                <span class=\\\"navbar-toggler-icon\\\"></span>\\n            </button>\\n\\n            <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n                <ul class=\\\"navbar-nav mr-auto\\\">\\n                    <!--<li class=\\\"nav-item active\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\n                    </li>\\n                    <li class=\\\"nav-item dropdown\\\">\\n                    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdown01\\\">\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\n                    </div>\\n                    </li>-->\\n                </ul>\\n                <form class=\\\"form-inline my-2 my-lg-0\\\">\\n                    <!-- Place this tag where you want the button to render. -->\\n                    <a class=\\\"github-button\\\"\\n                       href=\\\"https://github.com/ng-select/ng-select\\\"\\n                       data-icon=\\\"octicon-star\\\"\\n                       data-size=\\\"large\\\"\\n                       data-show-count=\\\"true\\\"\\n                       aria-label=\\\"Star ng-select/ng-select on GitHub\\\">Star</a>\\n                </form>\\n            </div>\\n        </nav>\\n    \"\r\n        })\r\n    ], LayoutHeaderComponent);\r\n    return LayoutHeaderComponent;\r\n}());\r\nexports.LayoutHeaderComponent = LayoutHeaderComponent;\r\n\n\n/***/ }),\n\n/***/ 207:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar LayoutSidenavComponent = /** @class */ (function () {\r\n    function LayoutSidenavComponent() {\r\n    }\r\n    LayoutSidenavComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'layout-sidenav',\r\n            template: \"\\n        <ul class=\\\"nav flex-column\\\">\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/forms\\\" routerLinkActive=\\\"active\\\">Real life example</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/filter\\\" routerLinkActive=\\\"active\\\">Filter and autocomplete</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/tags\\\" routerLinkActive=\\\"active\\\">Tags</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/multiselect\\\" routerLinkActive=\\\"active\\\">Multiselect</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/bindings\\\" routerLinkActive=\\\"active\\\">Data bindings</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/templates\\\" routerLinkActive=\\\"active\\\">Templates</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/events\\\" routerLinkActive=\\\"active\\\">Output events</a>\\n            </li>\\n        </ul>\\n    \"\r\n        })\r\n    ], LayoutSidenavComponent);\r\n    return LayoutSidenavComponent;\r\n}());\r\nexports.LayoutSidenavComponent = LayoutSidenavComponent;\r\n\n\n/***/ }),\n\n/***/ 39:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpBackend\", function() { return HttpBackend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpHandler\", function() { return HttpHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpClient\", function() { return HttpClient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpHeaders\", function() { return HttpHeaders; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HTTP_INTERCEPTORS\", function() { return HTTP_INTERCEPTORS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JsonpClientBackend\", function() { return JsonpClientBackend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JsonpInterceptor\", function() { return JsonpInterceptor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpClientJsonpModule\", function() { return HttpClientJsonpModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpClientModule\", function() { return HttpClientModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpClientXsrfModule\", function() { return HttpClientXsrfModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵinterceptingHandler\", function() { return interceptingHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpParams\", function() { return HttpParams; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpUrlEncodingCodec\", function() { return HttpUrlEncodingCodec; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpRequest\", function() { return HttpRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpErrorResponse\", function() { return HttpErrorResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpEventType\", function() { return HttpEventType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpHeaderResponse\", function() { return HttpHeaderResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpResponse\", function() { return HttpResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpResponseBase\", function() { return HttpResponseBase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpXhrBackend\", function() { return HttpXhrBackend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XhrFactory\", function() { return XhrFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpXsrfTokenExtractor\", function() { return HttpXsrfTokenExtractor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵa\", function() { return NoopInterceptor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵb\", function() { return JsonpCallbackContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵc\", function() { return jsonpCallbackContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵd\", function() { return BrowserXhr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵg\", function() { return HttpXsrfCookieExtractor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵh\", function() { return HttpXsrfInterceptor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵe\", function() { return XSRF_COOKIE_NAME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵf\", function() { return XSRF_HEADER_NAME; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_observable_of__ = __webpack_require__(49);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_concatMap__ = __webpack_require__(50);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_concatMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_operator_concatMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_filter__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_filter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_operator_filter__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_common__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);\n\n/**\n * @license Angular v4.4.4\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpHandler = (function () {\n    function HttpHandler() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpHandler.prototype.handle = function (req) { };\n    return HttpHandler;\n}());\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpBackend = (function () {\n    function HttpBackend() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpBackend.prototype.handle = function (req) { };\n    return HttpBackend;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\n * serialize and parse URL parameter keys and values.\n *\n * \\@experimental\n */\nvar HttpUrlEncodingCodec = (function () {\n    function HttpUrlEncodingCodec() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeKey = function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeValue = function (v) { return standardEncoding(v); };\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeKey = function (k) { return decodeURIComponent(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeValue = function (v) { return decodeURIComponent(v); };\n    return HttpUrlEncodingCodec;\n}());\n/**\n * @param {?} rawParams\n * @param {?} codec\n * @return {?}\n */\nfunction paramParser(rawParams, codec) {\n    var /** @type {?} */ map$$1 = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map$$1.get(key) || [];\n            list.push(val);\n            map$$1.set(key, list);\n        });\n    }\n    return map$$1;\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immuatable - all mutation operations return a new instance.\n *\n * \\@experimental\n */\nvar HttpParams = (function () {\n    /**\n     * @param {?=} options\n     */\n    function HttpParams(options) {\n        if (options === void 0) { options = {}; }\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        this.map = !!options.fromString ? paramParser(options.fromString, this.encoder) : null;\n    }\n    /**\n     * Check whether the body has one or more values for the given parameter name.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.has = function (param) {\n        this.init();\n        return ((this.map)).has(param);\n    };\n    /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.get = function (param) {\n        this.init();\n        var /** @type {?} */ res = ((this.map)).get(param);\n        return !!res ? res[0] : null;\n    };\n    /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.getAll = function (param) {\n        this.init();\n        return ((this.map)).get(param) || null;\n    };\n    /**\n     * Get all the parameter names for this body.\n     * @return {?}\n     */\n    HttpParams.prototype.keys = function () {\n        this.init();\n        return Array.from(/** @type {?} */ ((this.map)).keys());\n    };\n    /**\n     * Construct a new body with an appended value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.append = function (param, value) { return this.clone({ param: param, value: value, op: 'a' }); };\n    /**\n     * Construct a new body with a new value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.set = function (param, value) { return this.clone({ param: param, value: value, op: 's' }); };\n    /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     * @param {?} param\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpParams.prototype.delete = function (param, value) { return this.clone({ param: param, value: value, op: 'd' }); };\n    /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    HttpParams.prototype.toString = function () {\n        var _this = this;\n        this.init();\n        return this.keys()\n            .map(function (key) {\n            var /** @type {?} */ eKey = _this.encoder.encodeKey(key);\n            return ((((_this.map)).get(key))).map(function (value) { return eKey + '=' + _this.encoder.encodeValue(value); })\n                .join('&');\n        })\n            .join('&');\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpParams.prototype.clone = function (update) {\n        var /** @type {?} */ clone = new HttpParams({ encoder: this.encoder });\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @return {?}\n     */\n    HttpParams.prototype.init = function () {\n        var _this = this;\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(function (key) { return ((_this.map)).set(key, /** @type {?} */ ((((((_this.cloneFrom)).map)).get(key)))); }); /** @type {?} */\n            ((this.updates)).forEach(function (update) {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        var /** @type {?} */ base = (update.op === 'a' ? ((_this.map)).get(update.param) : undefined) || [];\n                        base.push(/** @type {?} */ ((update.value))); /** @type {?} */\n                        ((_this.map)).set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            var /** @type {?} */ base_1 = ((_this.map)).get(update.param) || [];\n                            var /** @type {?} */ idx = base_1.indexOf(update.value);\n                            if (idx !== -1) {\n                                base_1.splice(idx, 1);\n                            }\n                            if (base_1.length > 0) {\n                                ((_this.map)).set(update.param, base_1);\n                            }\n                            else {\n                                ((_this.map)).delete(update.param);\n                            }\n                        }\n                        else {\n                            ((_this.map)).delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = null;\n        }\n    };\n    return HttpParams;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Immutable set of Http headers, with lazy parsing.\n * \\@experimental\n */\nvar HttpHeaders = (function () {\n    /**\n     * @param {?=} headers\n     */\n    function HttpHeaders(headers) {\n        var _this = this;\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                headers.split('\\n').forEach(function (line) {\n                    var index = line.indexOf(':');\n                    if (index > 0) {\n                        var name = line.slice(0, index);\n                        var key = name.toLowerCase();\n                        var value = line.slice(index + 1).trim();\n                        _this.maybeSetNormalizedName(name, key);\n                        if (_this.headers.has(key)) {\n                            _this.headers.get(key).push(value);\n                        }\n                        else {\n                            _this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                Object.keys(headers).forEach(function (name) {\n                    var values = headers[name];\n                    var key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        _this.headers.set(key, values);\n                        _this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.has = function (name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    };\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.get = function (name) {\n        this.init();\n        var /** @type {?} */ values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    HttpHeaders.prototype.keys = function () {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    };\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.getAll = function (name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.append = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'a' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.set = function (name, value) {\n        return this.clone({ name: name, value: value, op: 's' });\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.delete = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'd' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    HttpHeaders.prototype.maybeSetNormalizedName = function (name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    HttpHeaders.prototype.init = function () {\n        var _this = this;\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(function (update) { return _this.applyUpdate(update); });\n                this.lazyUpdate = null;\n            }\n        }\n    };\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    HttpHeaders.prototype.copyFrom = function (other) {\n        var _this = this;\n        other.init();\n        Array.from(other.headers.keys()).forEach(function (key) {\n            _this.headers.set(key, /** @type {?} */ ((other.headers.get(key))));\n            _this.normalizedNames.set(key, /** @type {?} */ ((other.normalizedNames.get(key))));\n        });\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.clone = function (update) {\n        var /** @type {?} */ clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.applyUpdate = function (update) {\n        var /** @type {?} */ key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                var /** @type {?} */ value = ((update.value));\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                var /** @type {?} */ base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push.apply(base, value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                var /** @type {?} */ toDelete_1 = (update.value);\n                if (!toDelete_1) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    var /** @type {?} */ existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(function (value) { return toDelete_1.indexOf(value) === -1; });\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    HttpHeaders.prototype.forEach = function (fn) {\n        var _this = this;\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(function (key) { return fn(/** @type {?} */ ((_this.normalizedNames.get(key))), /** @type {?} */ ((_this.headers.get(key)))); });\n    };\n    return HttpHeaders;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine whether the given HTTP method may include a body.\n * @param {?} method\n * @return {?}\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * \\@experimental\n */\nvar HttpRequest = (function () {\n    /**\n     * @param {?} method\n     * @param {?} url\n     * @param {?=} third\n     * @param {?=} fourth\n     */\n    function HttpRequest(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        var options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = third || null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = third;\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            var params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                var qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                var sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    HttpRequest.prototype.serializeBody = function () {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return ((this.body)).toString();\n    };\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    HttpRequest.prototype.detectContentTypeHeader = function () {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    };\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpRequest.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        var /** @type {?} */ method = update.method || this.method;\n        var /** @type {?} */ url = update.url || this.url;\n        var /** @type {?} */ responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        var /** @type {?} */ body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        var /** @type {?} */ withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        var /** @type {?} */ reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        var /** @type {?} */ headers = update.headers || this.headers;\n        var /** @type {?} */ params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce(function (headers, name) { return headers.set(name, /** @type {?} */ ((update.setHeaders))[name]); }, headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce(function (params, param) { return params.set(param, /** @type {?} */ ((update.setParams))[param]); }, params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params: params, headers: headers, reportProgress: reportProgress, responseType: responseType, withCredentials: withCredentials,\n        });\n    };\n    return HttpRequest;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HttpEventType = {};\nHttpEventType.Sent = 0;\nHttpEventType.UploadProgress = 1;\nHttpEventType.ResponseHeader = 2;\nHttpEventType.DownloadProgress = 3;\nHttpEventType.Response = 4;\nHttpEventType.User = 5;\nHttpEventType[HttpEventType.Sent] = \"Sent\";\nHttpEventType[HttpEventType.UploadProgress] = \"UploadProgress\";\nHttpEventType[HttpEventType.ResponseHeader] = \"ResponseHeader\";\nHttpEventType[HttpEventType.DownloadProgress] = \"DownloadProgress\";\nHttpEventType[HttpEventType.Response] = \"Response\";\nHttpEventType[HttpEventType.User] = \"User\";\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpResponseBase = (function () {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     * @param {?} init\n     * @param {?=} defaultStatus\n     * @param {?=} defaultStatusText\n     */\n    function HttpResponseBase(init, defaultStatus, defaultStatusText) {\n        if (defaultStatus === void 0) { defaultStatus = 200; }\n        if (defaultStatusText === void 0) { defaultStatusText = 'OK'; }\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n    return HttpResponseBase;\n}());\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * \\@experimental\n */\nvar HttpHeaderResponse = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](HttpHeaderResponse, _super);\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     * @param {?=} init\n     */\n    function HttpHeaderResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.ResponseHeader;\n        return _this;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpHeaderResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpHeaderResponse;\n}(HttpResponseBase));\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * \\@experimental\n */\nvar HttpResponse = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](HttpResponse, _super);\n    /**\n     * Construct a new `HttpResponse`.\n     * @param {?=} init\n     */\n    function HttpResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.Response;\n        _this.body = init.body || null;\n        return _this;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpResponse;\n}(HttpResponseBase));\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * \\@experimental\n */\nvar HttpErrorResponse = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](HttpErrorResponse, _super);\n    /**\n     * @param {?} init\n     */\n    function HttpErrorResponse(init) {\n        var _this = \n        // Initialize with a default status of 0 / Unknown Error.\n        _super.call(this, init, 0, 'Unknown Error') || this;\n        _this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        _this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (_this.status >= 200 && _this.status < 300) {\n            _this.message = \"Http failure during parsing for \" + (init.url || '(unknown url)');\n        }\n        else {\n            _this.message =\n                \"Http failure response for \" + (init.url || '(unknown url)') + \": \" + init.status + \" \" + init.statusText;\n        }\n        _this.error = init.error || null;\n        return _this;\n    }\n    return HttpErrorResponse;\n}(HttpResponseBase));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. Basically, this clones the object and adds the body.\n * @template T\n * @param {?} options\n * @param {?} body\n * @return {?}\n */\nfunction addBody(options, body) {\n    return {\n        body: body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Perform HTTP requests.\n *\n * `HttpClient` is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies according to which\n * signature is called (mainly the values of `observe` and `responseType`).\n *\n * \\@experimental\n */\nvar HttpClient = (function () {\n    /**\n     * @param {?} handler\n     */\n    function HttpClient(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * This method can be called in one of two ways. Either an `HttpRequest`\n     * instance can be passed directly as the only parameter, or a method can be\n     * passed as the first parameter, a string URL as the second, and an\n     * options hash as the third.\n     *\n     * If a `HttpRequest` object is passed directly, an `Observable` of the\n     * raw `HttpEvent` stream will be returned.\n     *\n     * If a request is instead built by providing a URL, the options object\n     * determines the return type of `request()`. In addition to configuring\n     * request parameters such as the outgoing headers and/or the body, the options\n     * hash specifies two key pieces of information about the request: the\n     * `responseType` and what to `observe`.\n     *\n     * The `responseType` value determines how a successful response body will be\n     * parsed. If `responseType` is the default `json`, a type interface for the\n     * resulting object may be passed as a type parameter to `request()`.\n     *\n     * The `observe` value determines the return type of `request()`, based on what\n     * the consumer is interested in observing. A value of `events` will return an\n     * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n     * including progress events by default. A value of `response` will return an\n     * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n     * depends on the `responseType` and any optionally provided type parameter.\n     * A value of `body` will return an `Observable<T>` with the same `T` body type.\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.request = function (first, url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var /** @type {?} */ req;\n        // Firstly, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = (first);\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming GET unless a method is\n            // provided.\n            req = new HttpRequest(first, /** @type {?} */ ((url)), options.body || null, {\n                headers: options.headers,\n                params: options.params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        var /** @type {?} */ events$ = __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_concatMap__[\"concatMap\"].call(Object(__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_of__[\"of\"])(req), function (req) { return _this.handler.handle(req); });\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        var /** @type {?} */ res$ = __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_filter__[\"filter\"].call(events$, function (event) { return event instanceof HttpResponse; });\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__[\"map\"].call(res$, function (res) {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        });\n                    case 'blob':\n                        return __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__[\"map\"].call(res$, function (res) {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        });\n                    case 'text':\n                        return __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__[\"map\"].call(res$, function (res) {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        });\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__[\"map\"].call(res$, function (res) { return res.body; });\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(\"Unreachable: unhandled observe type \" + options.observe + \"}\");\n        }\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * DELETE request to be executed on the server. See the individual overloads for\n     * details of `delete()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('DELETE', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * GET request to be executed on the server. See the individual overloads for\n     * details of `get()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('GET', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * HEAD request to be executed on the server. See the individual overloads for\n     * details of `head()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.head = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('HEAD', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause a request\n     * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n     *\n     * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n     * If no such interceptor is reached, then the `JSONP` request will likely be\n     * rejected by the configured backend.\n     * @template T\n     * @param {?} url\n     * @param {?} callbackParam\n     * @return {?}\n     */\n    HttpClient.prototype.jsonp = function (url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * OPTIONS request to be executed on the server. See the individual overloads for\n     * details of `options()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.options = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('OPTIONS', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PATCH request to be executed on the server. See the individual overloads for\n     * details of `patch()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.patch = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PATCH', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.post = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('POST', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.put = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PUT', url, addBody(options, body));\n    };\n    return HttpClient;\n}());\nHttpClient.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nHttpClient.ctorParameters = function () { return [\n    { type: HttpHandler, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n * \\@experimental\n */\nvar HttpInterceptorHandler = (function () {\n    /**\n     * @param {?} next\n     * @param {?} interceptor\n     */\n    function HttpInterceptorHandler(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    HttpInterceptorHandler.prototype.handle = function (req) {\n        return this.interceptor.intercept(req, this.next);\n    };\n    return HttpInterceptorHandler;\n}());\n/**\n * A multi-provider token which represents the array of `HttpInterceptor`s that\n * are registered.\n *\n * \\@experimental\n */\nvar HTTP_INTERCEPTORS = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('HTTP_INTERCEPTORS');\nvar NoopInterceptor = (function () {\n    function NoopInterceptor() {\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    NoopInterceptor.prototype.intercept = function (req, next) {\n        return next.handle(req);\n    };\n    return NoopInterceptor;\n}());\nNoopInterceptor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nNoopInterceptor.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nvar nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nvar JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n * \\@experimental\n * @abstract\n */\nvar JsonpCallbackContext = (function () {\n    function JsonpCallbackContext() {\n    }\n    return JsonpCallbackContext;\n}());\n/**\n * `HttpBackend` that only processes `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n *\n * \\@experimental\n */\nvar JsonpClientBackend = (function () {\n    /**\n     * @param {?} callbackMap\n     * @param {?} document\n     */\n    function JsonpClientBackend(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.nextCallback = function () { return \"ng_jsonp_callback_\" + nextRequestId++; };\n    /**\n     * Process a JSONP request and return an event stream of the results.\n     * @param {?} req\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__[\"Observable\"](function (observer) {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            var /** @type {?} */ callback = _this.nextCallback();\n            var /** @type {?} */ url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, \"=\" + callback + \"$1\");\n            // Construct the <script> tag and point it at the URL.\n            var /** @type {?} */ node = _this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            var /** @type {?} */ body = null;\n            // Whether the response callback has been called.\n            var /** @type {?} */ finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            var /** @type {?} */ cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            _this.callbackMap[callback] = function (data) {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete _this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            var /** @type {?} */ cleanup = function () {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete _this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            var /** @type {?} */ onLoad = function (event) {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url: url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body: body,\n                    status: 200,\n                    statusText: 'OK', url: url,\n                }));\n                // Complete the stream, the resposne is over.\n                observer.complete();\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            var /** @type {?} */ onError = function (error) {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error: error,\n                    status: 0,\n                    statusText: 'JSONP Error', url: url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            _this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return function () {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    };\n    return JsonpClientBackend;\n}());\nJsonpClientBackend.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nJsonpClientBackend.ctorParameters = function () { return [\n    { type: JsonpCallbackContext, },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_6__angular_common__[\"DOCUMENT\"],] },] },\n]; };\n/**\n * An `HttpInterceptor` which identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * \\@experimental\n */\nvar JsonpInterceptor = (function () {\n    /**\n     * @param {?} jsonp\n     */\n    function JsonpInterceptor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    JsonpInterceptor.prototype.intercept = function (req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(/** @type {?} */ (req));\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    };\n    return JsonpInterceptor;\n}());\nJsonpInterceptor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nJsonpInterceptor.ctorParameters = function () { return [\n    { type: JsonpClientBackend, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * \\@experimental\n * @abstract\n */\nvar XhrFactory = (function () {\n    function XhrFactory() {\n    }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    XhrFactory.prototype.build = function () { };\n    return XhrFactory;\n}());\n/**\n * A factory for \\@{link HttpXhrBackend} that uses the `XMLHttpRequest` browser API.\n *\n * \\@experimental\n */\nvar BrowserXhr = (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = function () { return ((new XMLHttpRequest())); };\n    return BrowserXhr;\n}());\nBrowserXhr.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nBrowserXhr.ctorParameters = function () { return []; };\n/**\n * An `HttpBackend` which uses the XMLHttpRequest API to send\n * requests to a backend server.\n *\n * \\@experimental\n */\nvar HttpXhrBackend = (function () {\n    /**\n     * @param {?} xhrFactory\n     */\n    function HttpXhrBackend(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Process a request and return a stream of response events.\n     * @param {?} req\n     * @return {?}\n     */\n    HttpXhrBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(\"Attempted to construct Jsonp request without JsonpClientModule installed.\");\n        }\n        // Everything happens on Observable subscription.\n        return new __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__[\"Observable\"](function (observer) {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            var /** @type {?} */ xhr = _this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach(function (name, values) { return xhr.setRequestHeader(name, values.join(',')); });\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                var /** @type {?} */ detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                var /** @type {?} */ responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = (((responseType !== 'json') ? responseType : 'text'));\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            var /** @type {?} */ reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            var /** @type {?} */ headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            var /** @type {?} */ partialFromXhr = function () {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                var /** @type {?} */ status = xhr.status === 1223 ? 204 : xhr.status;\n                var /** @type {?} */ statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                var /** @type {?} */ headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                var /** @type {?} */ url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers: headers, status: status, statusText: statusText, url: url });\n                return headerResponse;\n            };\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            var /** @type {?} */ onLoad = function () {\n                // Read response state from the memoized partial data.\n                var _a = partialFromXhr(), headers = _a.headers, status = _a.status, statusText = _a.statusText, url = _a.url;\n                // The body will be read out if present.\n                var /** @type {?} */ body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                var /** @type {?} */ ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (ok && req.responseType === 'json' && typeof body === 'string') {\n                    // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        body = JSON.parse(body);\n                    }\n                    catch (error) {\n                        // Even though the response status was 2xx, this is still an error.\n                        ok = false;\n                        // The parse error contains the text of the body that failed to parse.\n                        body = ({ error: error, text: body });\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            var /** @type {?} */ onError = function (error) {\n                var /** @type {?} */ res = new HttpErrorResponse({\n                    error: error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                });\n                observer.error(res);\n            };\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            var /** @type {?} */ sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onDownProgress = function (event) {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                var /** @type {?} */ progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onUpProgress = function (event) {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                var /** @type {?} */ progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return function () {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            };\n        });\n    };\n    return HttpXhrBackend;\n}());\nHttpXhrBackend.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nHttpXhrBackend.ctorParameters = function () { return [\n    { type: XhrFactory, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSRF_COOKIE_NAME = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('XSRF_COOKIE_NAME');\nvar XSRF_HEADER_NAME = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpXsrfTokenExtractor = (function () {\n    function HttpXsrfTokenExtractor() {\n    }\n    /**\n     * Get the XSRF token to use with an outgoing request.\n     *\n     * Will be called for every request, so the token may change between requests.\n     * @abstract\n     * @return {?}\n     */\n    HttpXsrfTokenExtractor.prototype.getToken = function () { };\n    return HttpXsrfTokenExtractor;\n}());\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nvar HttpXsrfCookieExtractor = (function () {\n    /**\n     * @param {?} doc\n     * @param {?} platform\n     * @param {?} cookieName\n     */\n    function HttpXsrfCookieExtractor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * \\@internal for testing\n         */\n        this.parseCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    HttpXsrfCookieExtractor.prototype.getToken = function () {\n        if (this.platform === 'server') {\n            return null;\n        }\n        var /** @type {?} */ cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = Object(__WEBPACK_IMPORTED_MODULE_6__angular_common__[\"ɵparseCookieValue\"])(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    };\n    return HttpXsrfCookieExtractor;\n}());\nHttpXsrfCookieExtractor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nHttpXsrfCookieExtractor.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_6__angular_common__[\"DOCUMENT\"],] },] },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"PLATFORM_ID\"],] },] },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [XSRF_COOKIE_NAME,] },] },\n]; };\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nvar HttpXsrfInterceptor = (function () {\n    /**\n     * @param {?} tokenService\n     * @param {?} headerName\n     */\n    function HttpXsrfInterceptor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    HttpXsrfInterceptor.prototype.intercept = function (req, next) {\n        var /** @type {?} */ lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        var /** @type {?} */ token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    };\n    return HttpXsrfInterceptor;\n}());\nHttpXsrfInterceptor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nHttpXsrfInterceptor.ctorParameters = function () { return [\n    { type: HttpXsrfTokenExtractor, },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [XSRF_HEADER_NAME,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Constructs an `HttpHandler` that applies a bunch of `HttpInterceptor`s\n * to a request before passing it to the given `HttpBackend`.\n *\n * Meant to be used as a factory function within `HttpClientModule`.\n *\n * \\@experimental\n * @param {?} backend\n * @param {?=} interceptors\n * @return {?}\n */\nfunction interceptingHandler(backend, interceptors) {\n    if (interceptors === void 0) { interceptors = []; }\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight(function (next, interceptor) { return new HttpInterceptorHandler(next, interceptor); }, backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n * \\@experimental\n * @return {?}\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * `NgModule` which adds XSRF protection support to outgoing requests.\n *\n * Provided the server supports a cookie-based XSRF protection system, this\n * module can be used directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no such names are provided, the default is to use `X-XSRF-TOKEN` for\n * the header name and `XSRF-TOKEN` for the cookie name.\n *\n * \\@experimental\n */\nvar HttpClientXsrfModule = (function () {\n    function HttpClientXsrfModule() {\n    }\n    /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    HttpClientXsrfModule.disable = function () {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    };\n    /**\n     * Configure XSRF protection to use the given cookie name or header name,\n     * or the default names (as described above) if not provided.\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClientXsrfModule.withOptions = function (options) {\n        if (options === void 0) { options = {}; }\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    };\n    return HttpClientXsrfModule;\n}());\nHttpClientXsrfModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientXsrfModule.ctorParameters = function () { return []; };\n/**\n * `NgModule` which provides the `HttpClient` and associated services.\n *\n * Interceptors can be added to the chain behind `HttpClient` by binding them\n * to the multiprovider for `HTTP_INTERCEPTORS`.\n *\n * \\@experimental\n */\nvar HttpClientModule = (function () {\n    function HttpClientModule() {\n    }\n    return HttpClientModule;\n}());\nHttpClientModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN',\n                    }),\n                ],\n                providers: [\n                    HttpClient,\n                    // HttpHandler is the backend + interceptors and is constructed\n                    // using the interceptingHandler factory function.\n                    {\n                        provide: HttpHandler,\n                        useFactory: interceptingHandler,\n                        deps: [HttpBackend, [new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"](), new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"](HTTP_INTERCEPTORS)]],\n                    },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientModule.ctorParameters = function () { return []; };\n/**\n * `NgModule` which enables JSONP support in `HttpClient`.\n *\n * Without this module, Jsonp requests will reach the backend\n * with method JSONP, where they'll be rejected.\n *\n * \\@experimental\n */\nvar HttpClientJsonpModule = (function () {\n    function HttpClientJsonpModule() {\n    }\n    return HttpClientJsonpModule;\n}());\nHttpClientJsonpModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientJsonpModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=http.es5.js.map\n\n\n/***/ }),\n\n/***/ 54:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar KeyCode;\r\n(function (KeyCode) {\r\n    KeyCode[KeyCode[\"Tab\"] = 9] = \"Tab\";\r\n    KeyCode[KeyCode[\"Enter\"] = 13] = \"Enter\";\r\n    KeyCode[KeyCode[\"Esc\"] = 27] = \"Esc\";\r\n    KeyCode[KeyCode[\"Space\"] = 32] = \"Space\";\r\n    KeyCode[KeyCode[\"ArrowUp\"] = 38] = \"ArrowUp\";\r\n    KeyCode[KeyCode[\"ArrowDown\"] = 40] = \"ArrowDown\";\r\n    KeyCode[KeyCode[\"Backspace\"] = 8] = \"Backspace\";\r\n})(KeyCode = exports.KeyCode || (exports.KeyCode = {}));\r\nvar NgSelectConfig = /** @class */ (function () {\r\n    function NgSelectConfig() {\r\n        this.notFoundText = '';\r\n        this.typeToSearchText = '';\r\n        this.addTagText = '';\r\n    }\r\n    return NgSelectConfig;\r\n}());\r\nexports.NgSelectConfig = NgSelectConfig;\r\n\n\n/***/ }),\n\n/***/ 90:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterLink\", function() { return RouterLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterLinkWithHref\", function() { return RouterLinkWithHref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterLinkActive\", function() { return RouterLinkActive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterOutlet\", function() { return RouterOutlet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GuardsCheckEnd\", function() { return GuardsCheckEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GuardsCheckStart\", function() { return GuardsCheckStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationCancel\", function() { return NavigationCancel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationEnd\", function() { return NavigationEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationError\", function() { return NavigationError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationStart\", function() { return NavigationStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResolveEnd\", function() { return ResolveEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResolveStart\", function() { return ResolveStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouteConfigLoadEnd\", function() { return RouteConfigLoadEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouteConfigLoadStart\", function() { return RouteConfigLoadStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RoutesRecognized\", function() { return RoutesRecognized; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouteReuseStrategy\", function() { return RouteReuseStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Router\", function() { return Router; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROUTES\", function() { return ROUTES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROUTER_CONFIGURATION\", function() { return ROUTER_CONFIGURATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROUTER_INITIALIZER\", function() { return ROUTER_INITIALIZER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterModule\", function() { return RouterModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"provideRoutes\", function() { return provideRoutes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChildrenOutletContexts\", function() { return ChildrenOutletContexts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OutletContext\", function() { return OutletContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoPreloading\", function() { return NoPreloading; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PreloadAllModules\", function() { return PreloadAllModules; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PreloadingStrategy\", function() { return PreloadingStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterPreloader\", function() { return RouterPreloader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActivatedRoute\", function() { return ActivatedRoute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActivatedRouteSnapshot\", function() { return ActivatedRouteSnapshot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterState\", function() { return RouterState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterStateSnapshot\", function() { return RouterStateSnapshot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PRIMARY_OUTLET\", function() { return PRIMARY_OUTLET; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"convertToParamMap\", function() { return convertToParamMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlHandlingStrategy\", function() { return UrlHandlingStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultUrlSerializer\", function() { return DefaultUrlSerializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlSegment\", function() { return UrlSegment; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlSegmentGroup\", function() { return UrlSegmentGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlSerializer\", function() { return UrlSerializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlTree\", function() { return UrlTree; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VERSION\", function() { return VERSION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵROUTER_PROVIDERS\", function() { return ROUTER_PROVIDERS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵflatten\", function() { return flatten; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵa\", function() { return ROUTER_FORROOT_GUARD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵg\", function() { return RouterInitializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵh\", function() { return getAppInitializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵi\", function() { return getBootstrapListener; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵd\", function() { return provideForRootGuard; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵc\", function() { return provideLocationStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵj\", function() { return provideRouterInitializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵf\", function() { return rootRoute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵb\", function() { return routerNgProbeToken; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵe\", function() { return setupRouter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵk\", function() { return Tree; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵl\", function() { return TreeNode; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__ = __webpack_require__(91);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__ = __webpack_require__(49);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__ = __webpack_require__(50);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__ = __webpack_require__(93);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__ = __webpack_require__(94);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__ = __webpack_require__(95);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__ = __webpack_require__(51);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__ = __webpack_require__(96);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__ = __webpack_require__(97);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError__ = __webpack_require__(30);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__ = __webpack_require__(52);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__angular_platform_browser__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter__);\n\n/**\n * @license Angular v4.4.4\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents an event triggered when a navigation starts.\n *\n * \\@stable\n */\nvar NavigationStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     */\n    function NavigationStart(id, url) {\n        this.id = id;\n        this.url = url;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation ends successfully.\n *\n * \\@stable\n */\nvar NavigationEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     */\n    function NavigationEnd(id, url, urlAfterRedirects) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationEnd.prototype.toString = function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation is canceled.\n *\n * \\@stable\n */\nvar NavigationCancel = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} reason\n     */\n    function NavigationCancel(id, url, reason) {\n        this.id = id;\n        this.url = url;\n        this.reason = reason;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n *\n * \\@stable\n */\nvar NavigationError = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} error\n     */\n    function NavigationError(id, url, error) {\n        this.id = id;\n        this.url = url;\n        this.error = error;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationError.prototype.toString = function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when routes are recognized.\n *\n * \\@stable\n */\nvar RoutesRecognized = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function RoutesRecognized(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    RoutesRecognized.prototype.toString = function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}());\n/**\n * \\@whatItDoes Represents an event triggered before lazy loading a route config.\n *\n * \\@experimental\n */\nvar RouteConfigLoadStart = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadStart(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a route has been lazy loaded.\n *\n * \\@experimental\n */\nvar RouteConfigLoadEnd = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadEnd(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function GuardsCheckStart(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckStart.prototype.toString = function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}());\n/**\n * \\@whatItDoes Represents the end of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     * @param {?} shouldActivate\n     */\n    function GuardsCheckEnd(id, url, urlAfterRedirects, state, shouldActivate) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n        this.shouldActivate = shouldActivate;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckEnd.prototype.toString = function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * \\@experimental\n */\nvar ResolveStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveStart(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveStart.prototype.toString = function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}());\n/**\n * \\@whatItDoes Represents the end of the Resolve phase of routing. See note on\n * {\\@link ResolveStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ResolveEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveEnd(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveEnd.prototype.toString = function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Name of the primary outlet.\n *\n * \\@stable\n */\nvar PRIMARY_OUTLET = 'primary';\nvar ParamsAsMap = (function () {\n    /**\n     * @param {?} params\n     */\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.get = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.getAll = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a {\\@link Params} instance to a {\\@link ParamMap}.\n *\n * \\@stable\n * @param {?} params\n * @return {?}\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nfunction navigationCancelingError(message) {\n    var /** @type {?} */ error = Error('NavigationCancelingError: ' + message);\n    ((error))[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isNavigationCancelingError(error) {\n    return ((error))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var /** @type {?} */ parts = ((route.path)).split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var /** @type {?} */ posParams = {};\n    // Check each config part against the actual URL\n    for (var /** @type {?} */ index = 0; index < parts.length; index++) {\n        var /** @type {?} */ part = parts[index];\n        var /** @type {?} */ segment = segments[index];\n        var /** @type {?} */ isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LoadedRouterConfig = (function () {\n    /**\n     * @param {?} routes\n     * @param {?} module\n     */\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\n/**\n * @param {?} config\n * @param {?=} parentPath\n * @return {?}\n */\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var /** @type {?} */ i = 0; i < config.length; i++) {\n        var /** @type {?} */ route = config[i];\n        var /** @type {?} */ fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\n/**\n * @param {?} route\n * @param {?} fullPath\n * @return {?}\n */\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var /** @type {?} */ exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\n/**\n * @param {?} parentPath\n * @param {?} currentRoute\n * @return {?}\n */\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqual(a, b) {\n    var /** @type {?} */ k1 = Object.keys(a);\n    var /** @type {?} */ k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var /** @type {?} */ key;\n    for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * @template T\n * @param {?} a\n * @return {?}\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * @param {?} bools\n * @return {?}\n */\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nfunction forEach(map$$1, callback) {\n    for (var /** @type {?} */ prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])({});\n    }\n    var /** @type {?} */ waitHead = [];\n    var /** @type {?} */ waitTail = [];\n    var /** @type {?} */ res = {};\n    forEach(obj, function (a, k) {\n        var /** @type {?} */ mapped = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(fn(k, a), function (r) { return res[k] = r; });\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    var /** @type {?} */ concat$ = __WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__[\"concatAll\"].call(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"].apply(void 0, waitHead.concat(waitTail)));\n    var /** @type {?} */ last$ = __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__[\"last\"].call(concat$);\n    return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(last$, function () { return res; });\n}\n/**\n * @param {?} observables\n * @return {?}\n */\nfunction andObservables(observables) {\n    var /** @type {?} */ merged$ = __WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__[\"mergeAll\"].call(observables);\n    return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__[\"every\"].call(merged$, function (result) { return result === true; });\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction wrapIntoObservable(value) {\n    if (Object(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ɵisObservable\"])(value)) {\n        return value;\n    }\n    if (Object(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ɵisPromise\"])(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return Object(__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__[\"fromPromise\"])(Promise.resolve(value));\n    }\n    return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(/** @type {?} */ (value));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} exact\n * @return {?}\n */\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalQueryParams(container, containee) {\n    return shallowEqual(container, containee);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var /** @type {?} */ c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} containeePaths\n * @return {?}\n */\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var /** @type {?} */ current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var /** @type {?} */ c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var /** @type {?} */ current = containeePaths.slice(0, container.segments.length);\n        var /** @type {?} */ next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * \\@whatItDoes Represents the parsed URL.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * \\@stable\n */\nvar UrlTree = (function () {\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} queryParams\n     * @param {?} fragment\n     */\n    function UrlTree(root, queryParams, fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * \\@whatItDoes Represents the parsed URL segment group.\n *\n * See {\\@link UrlTree} for more information.\n *\n * \\@stable\n */\nvar UrlSegmentGroup = (function () {\n    /**\n     * @param {?} segments\n     * @param {?} children\n     */\n    function UrlSegmentGroup(segments, children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /**\n         * The parent node in the url tree\n         */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /**\n         * Number of child segments\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * \\@whatItDoes Represents a single URL segment.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * \\@stable\n */\nvar UrlSegment = (function () {\n    /**\n     * @param {?} path\n     * @param {?} parameters\n     */\n    function UrlSegment(path, parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegment.prototype.toString = function () { return serializePath(this); };\n    return UrlSegment;\n}());\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\n/**\n * @template T\n * @param {?} segment\n * @param {?} fn\n * @return {?}\n */\nfunction mapChildrenIntoArray(segment, fn) {\n    var /** @type {?} */ res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * \\@whatItDoes Serializes and deserializes a URL string into a URL tree.\n *\n * \\@description The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See {\\@link DefaultUrlSerializer} for an example of a URL serializer.\n *\n * \\@stable\n * @abstract\n */\nvar UrlSerializer = (function () {\n    function UrlSerializer() {\n    }\n    /**\n     * Parse a url into a {\\@link UrlTree}\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlSerializer.prototype.parse = function (url) { };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @abstract\n     * @param {?} tree\n     * @return {?}\n     */\n    UrlSerializer.prototype.serialize = function (tree) { };\n    return UrlSerializer;\n}());\n/**\n * \\@whatItDoes A default implementation of the {\\@link UrlSerializer}.\n *\n * \\@description\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * \\@stable\n */\nvar DefaultUrlSerializer = (function () {\n    function DefaultUrlSerializer() {\n    }\n    /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.parse = function (url) {\n        var /** @type {?} */ p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.serialize = function (tree) {\n        var /** @type {?} */ segment = \"/\" + serializeSegment(tree.root, true);\n        var /** @type {?} */ query = serializeQueryParams(tree.queryParams);\n        var /** @type {?} */ fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeURI(/** @type {?} */ ((tree.fragment))) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n/**\n * @param {?} segment\n * @return {?}\n */\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\n/**\n * @param {?} segment\n * @param {?} root\n * @return {?}\n */\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var /** @type {?} */ primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var /** @type {?} */ children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var /** @type {?} */ children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query         = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"\\@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * @param {?} s\n * @return {?}\n */\nfunction encode(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';');\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction serializePath(path) {\n    return \"\" + encode(path.path) + serializeParams(path.parameters);\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeParams(params) {\n    return Object.keys(params).map(function (key) { return \";\" + encode(key) + \"=\" + encode(params[key]); }).join('');\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeQueryParams(params) {\n    var /** @type {?} */ strParams = Object.keys(params).map(function (name) {\n        var /** @type {?} */ value = params[name];\n        return Array.isArray(value) ? value.map(function (v) { return encode(name) + \"=\" + encode(v); }).join('&') :\n            encode(name) + \"=\" + encode(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchSegments(str) {\n    var /** @type {?} */ match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchQueryParams(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchUrlQueryParamValue(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = (function () {\n    /**\n     * @param {?} url\n     */\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseRootSegment = function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParams = function () {\n        var /** @type {?} */ params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseFragment = function () {\n        return this.consumeOptional('#') ? decodeURI(this.remaining) : null;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseChildren = function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var /** @type {?} */ segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var /** @type {?} */ children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var /** @type {?} */ res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseSegment = function () {\n        var /** @type {?} */ path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseMatrixParams = function () {\n        var /** @type {?} */ params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseParam = function (params) {\n        var /** @type {?} */ key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParam = function (params) {\n        var /** @type {?} */ key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var /** @type {?} */ decodedKey = decode(key);\n        var /** @type {?} */ decodedVal = decode(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var /** @type {?} */ currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    UrlParser.prototype.parseParens = function (allowPrimary) {\n        var /** @type {?} */ segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var /** @type {?} */ path = matchSegments(this.remaining);\n            var /** @type {?} */ next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var /** @type {?} */ outletName = ((undefined));\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var /** @type {?} */ children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.consumeOptional = function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.capture = function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = (function () {\n    /**\n     * @param {?=} segmentGroup\n     */\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = (function () {\n    /**\n     * @param {?} urlTree\n     */\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction noMatch(segmentGroup) {\n    return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\n/**\n * @param {?} newTree\n * @return {?}\n */\nfunction absoluteRedirect(newTree) {\n    return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\n/**\n * @param {?} redirectTo\n * @return {?}\n */\nfunction namedOutletsRedirect(redirectTo) {\n    return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction canLoadFails(route) {\n    return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n * @return {?}\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = (function () {\n    /**\n     * @param {?} moduleInjector\n     * @param {?} configLoader\n     * @param {?} urlSerializer\n     * @param {?} urlTree\n     * @param {?} config\n     */\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleRef\"]);\n    }\n    /**\n     * @return {?}\n     */\n    ApplyRedirects.prototype.apply = function () {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ urlTrees$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, /** @type {?} */ ((_this.urlTree.fragment))); });\n        return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(urlTrees$, function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} tree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.match = function (tree) {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ mapped$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, tree.queryParams, /** @type {?} */ ((tree.fragment))); });\n        return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(mapped$, function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noMatchError = function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n        var /** @type {?} */ root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.expandChildren(ngModule, routes, segmentGroup), function (children) { return new UrlSegmentGroup([], children); });\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        var /** @type {?} */ routes$ = __WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"].apply(void 0, routes);\n        var /** @type {?} */ processedRoutes$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(routes$, function (r) {\n            var /** @type {?} */ expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(expanded$, function (e) {\n                if (e instanceof NoMatch) {\n                    return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null);\n                }\n                throw e;\n            });\n        });\n        var /** @type {?} */ concattedProcessedRoutes$ = __WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__[\"concatAll\"].call(processedRoutes$);\n        var /** @type {?} */ first$ = __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__[\"first\"].call(concattedProcessedRoutes$, function (s) { return !!s; });\n        return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(first$, function (e, _) {\n            if (e instanceof __WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError__[\"EmptyError\"]) {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var /** @type {?} */ newTree = this.applyRedirectCommands([], /** @type {?} */ ((route.redirectTo)), {});\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            var /** @type {?} */ group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var /** @type {?} */ newTree = this.applyRedirectCommands(consumedSegments, /** @type {?} */ ((route.redirectTo)), /** @type {?} */ (positionalParamSegments));\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.configLoader.load(ngModule.injector, route), function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                });\n            }\n            return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig$ = this.getChildConfig(ngModule, route);\n        return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(childConfig$, function (routerConfig) {\n            var /** @type {?} */ childModule = routerConfig.module;\n            var /** @type {?} */ childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var /** @type {?} */ expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(expanded$_1, function (children) { return new UrlSegmentGroup(consumedSegments, children); });\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var /** @type {?} */ expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(expanded$, function (cs) { return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children); });\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(route._loadedConfig);\n            }\n            return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(runCanLoadGuard(ngModule.injector, route), function (shouldLoad) {\n                if (shouldLoad) {\n                    return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(_this.configLoader.load(ngModule.injector, route), function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    });\n                }\n                return canLoadFails(route);\n            });\n        }\n        return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new LoadedRouterConfig([], ngModule));\n    };\n    /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n        var /** @type {?} */ res = [];\n        var /** @type {?} */ c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(/** @type {?} */ ((route.redirectTo)));\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n        var /** @type {?} */ newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n        var /** @type {?} */ res = {};\n        forEach(redirectToParams, function (v, k) {\n            var /** @type {?} */ copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var /** @type {?} */ sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var /** @type {?} */ updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var /** @type {?} */ children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n            _this.findOrReturn(s, actualSegments); });\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n        var /** @type {?} */ pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n        var /** @type {?} */ idx = 0;\n        for (var _i = 0, actualSegments_1 = actualSegments; _i < actualSegments_1.length; _i++) {\n            var s = actualSegments_1[_i];\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    };\n    return ApplyRedirects;\n}());\n/**\n * @param {?} moduleInjector\n * @param {?} route\n * @return {?}\n */\nfunction runCanLoadGuard(moduleInjector, route) {\n    var /** @type {?} */ canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(true);\n    var /** @type {?} */ obs = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(canLoad), function (injectionToken) {\n        var /** @type {?} */ guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    });\n    return andObservables(obs);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: /** @type {?} */ ([]),\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: /** @type {?} */ ((res.consumed)),\n        lastChild: /** @type {?} */ ((res.consumed.length)),\n        positionalParamSegments: /** @type {?} */ ((res.posParams)),\n    };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var /** @type {?} */ c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} routes\n * @param {?} primarySegmentGroup\n * @return {?}\n */\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} r\n * @return {?}\n */\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = (function () {\n    /**\n     * @param {?} root\n     */\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.parent = function (t) {\n        var /** @type {?} */ p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.children = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.firstChild = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.siblings = function (t) {\n        var /** @type {?} */ p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var /** @type {?} */ c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ node_1 = findNode(value, child);\n        if (node_1)\n            return node_1;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\nvar TreeNode = (function () {\n    /**\n     * @param {?} value\n     * @param {?} children\n     */\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @return {?}\n     */\n    TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the state of the router.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * See {\\@link ActivatedRoute} for more information.\n *\n * \\@stable\n */\nvar RouterState = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](RouterState, _super);\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} snapshot\n     */\n    function RouterState(root, snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyState(urlTree, rootComponent) {\n    var /** @type {?} */ snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var /** @type {?} */ emptyUrl = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]([new UrlSegment('', {})]);\n    var /** @type {?} */ emptyParams = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]({});\n    var /** @type {?} */ emptyData = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]({});\n    var /** @type {?} */ emptyQueryParams = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]({});\n    var /** @type {?} */ fragment = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]('');\n    var /** @type {?} */ activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var /** @type {?} */ emptyParams = {};\n    var /** @type {?} */ emptyData = {};\n    var /** @type {?} */ emptyQueryParams = {};\n    var /** @type {?} */ fragment = '';\n    var /** @type {?} */ activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet.\n * An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRoute = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} futureSnapshot\n     */\n    function ActivatedRoute(url, params, queryParams, fragment, data, outlet, component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.params, function (p) { return convertToParamMap(p); });\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.queryParams, function (p) { return convertToParamMap(p); });\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRoute.prototype.toString = function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * \\@internal\n * @param {?} route\n * @return {?}\n */\nfunction inheritedParamsDataResolve(route) {\n    var /** @type {?} */ pathToRoot = route.pathFromRoot;\n    var /** @type {?} */ inhertingStartingFrom = pathToRoot.length - 1;\n    while (inhertingStartingFrom >= 1) {\n        var /** @type {?} */ current = pathToRoot[inhertingStartingFrom];\n        var /** @type {?} */ parent = pathToRoot[inhertingStartingFrom - 1];\n        // current route is an empty path => inherits its parent's params and data\n        if (current.routeConfig && current.routeConfig.path === '') {\n            inhertingStartingFrom--;\n            // parent is componentless => current route should inherit its params and data\n        }\n        else if (!parent.component) {\n            inhertingStartingFrom--;\n        }\n        else {\n            break;\n        }\n    }\n    return pathToRoot.slice(inhertingStartingFrom).reduce(function (res, curr) {\n        var /** @type {?} */ params = Object.assign({}, res.params, curr.params);\n        var /** @type {?} */ data = Object.assign({}, res.data, curr.data);\n        var /** @type {?} */ resolve = Object.assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, /** @type {?} */ ({ params: {}, data: {}, resolve: {} }));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet\n * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router\n * state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRouteSnapshot = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} routeConfig\n     * @param {?} urlSegment\n     * @param {?} lastPathIndex\n     * @param {?} resolve\n     */\n    function ActivatedRouteSnapshot(url, params, queryParams, fragment, data, outlet, component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRouteSnapshot.prototype.toString = function () {\n        var /** @type {?} */ url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var /** @type {?} */ matched = this._routeConfig ? this._routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * \\@whatItDoes Represents the state of the router at a moment in time.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * \\@stable\n */\nvar RouterStateSnapshot = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](RouterStateSnapshot, _super);\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} root\n     */\n    function RouterStateSnapshot(url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\n/**\n * @template U, T\n * @param {?} state\n * @param {?} node\n * @return {?}\n */\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction serializeNode(node) {\n    var /** @type {?} */ c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(\", \") + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n * @param {?} route\n * @return {?}\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var /** @type {?} */ currentSnapshot = route.snapshot;\n        var /** @type {?} */ nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            ((route.queryParams)).next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            ((route.fragment)).next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            ((route.params)).next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            ((route.url)).next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            ((route.data)).next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        ((route.data)).next(route._futureSnapshot.data);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalParamsAndUrlSegments(a, b) {\n    var /** @type {?} */ equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var /** @type {?} */ parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, /** @type {?} */ ((b.parent))));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var /** @type {?} */ root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var /** @type {?} */ value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var /** @type {?} */ children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else if (routeReuseStrategy.retrieve(curr.value)) {\n        var /** @type {?} */ tree_1 = ((routeReuseStrategy.retrieve(curr.value))).route;\n        setFutureSnapshotsOfActivatedRoutes(curr, tree_1);\n        return tree_1;\n    }\n    else {\n        var /** @type {?} */ value = createActivatedRoute(curr.value);\n        var /** @type {?} */ children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n        return new TreeNode(value, children);\n    }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var /** @type {?} */ i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        for (var _i = 0, _a = prevState.children; _i < _a.length; _i++) {\n            var p = _a[_i];\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.url), new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.params), new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.queryParams), new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.fragment), new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.data), c.outlet, c.component, c);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} route\n * @param {?} urlTree\n * @param {?} commands\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ startingPosition = findStartingPosition(nav, urlTree, route);\n    var /** @type {?} */ segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * @param {?} oldSegmentGroup\n * @param {?} newSegmentGroup\n * @param {?} urlTree\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var /** @type {?} */ qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n/**\n * @param {?} current\n * @param {?} oldSegment\n * @param {?} newSegment\n * @return {?}\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var /** @type {?} */ children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = (function () {\n    /**\n     * @param {?} isAbsolute\n     * @param {?} numberOfDoubleDots\n     * @param {?} commands\n     */\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Navigation.prototype.toRoot = function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/**\n * Transforms commands to a normalized `Navigation`\n * @param {?} commands\n * @return {?}\n */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var /** @type {?} */ numberOfDoubleDots = 0;\n    var /** @type {?} */ isAbsolute = false;\n    var /** @type {?} */ res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var /** @type {?} */ outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return res.concat([{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return res.concat([cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return res.concat([cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') {\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') {\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return res.concat([cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = (function () {\n    /**\n     * @param {?} segmentGroup\n     * @param {?} processChildren\n     * @param {?} index\n     */\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\n/**\n * @param {?} nav\n * @param {?} tree\n * @param {?} route\n * @return {?}\n */\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var /** @type {?} */ modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var /** @type {?} */ index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n/**\n * @param {?} group\n * @param {?} index\n * @param {?} numberOfDoubleDots\n * @return {?}\n */\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var /** @type {?} */ g = group;\n    var /** @type {?} */ ci = index;\n    var /** @type {?} */ dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = ((g.parent));\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var /** @type {?} */ m = prefixedWith(segmentGroup, startIndex, commands);\n    var /** @type {?} */ slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var /** @type {?} */ g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var /** @type {?} */ outlets_2 = getOutlets(commands);\n        var /** @type {?} */ children_2 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_2[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_2[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_2);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ currentCommandIndex = 0;\n    var /** @type {?} */ currentPathIndex = startIndex;\n    var /** @type {?} */ noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var /** @type {?} */ path = segmentGroup.segments[currentPathIndex];\n        var /** @type {?} */ curr = getPath(commands[currentCommandIndex]);\n        var /** @type {?} */ next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ paths = segmentGroup.segments.slice(0, startIndex);\n    var /** @type {?} */ i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var /** @type {?} */ children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var /** @type {?} */ p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var /** @type {?} */ curr = getPath(commands[i]);\n        var /** @type {?} */ next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\n/**\n * @param {?} outlets\n * @return {?}\n */\nfunction createNewSegmentChildren(outlets) {\n    var /** @type {?} */ children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction stringify(params) {\n    var /** @type {?} */ res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\n/**\n * @param {?} path\n * @param {?} params\n * @param {?} segment\n * @return {?}\n */\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch$1 = (function () {\n    function NoMatch$1() {\n    }\n    return NoMatch$1;\n}());\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n * @return {?}\n */\nfunction recognize(rootComponentType, config, urlTree, url) {\n    return new Recognizer(rootComponentType, config, urlTree, url).recognize();\n}\nvar Recognizer = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} config\n     * @param {?} urlTree\n     * @param {?} url\n     */\n    function Recognizer(rootComponentType, config, urlTree, url) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n    }\n    /**\n     * @return {?}\n     */\n    Recognizer.prototype.recognize = function () {\n        try {\n            var /** @type {?} */ rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var /** @type {?} */ children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var /** @type {?} */ root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var /** @type {?} */ rootNode = new TreeNode(root, children);\n            var /** @type {?} */ routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(routeState);\n        }\n        catch (e) {\n            return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(e); });\n        }\n    };\n    /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n        var _this = this;\n        var /** @type {?} */ route = routeNode.value;\n        var /** @type {?} */ i = inheritedParamsDataResolve(route);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    Recognizer.prototype.processChildren = function (config, segmentGroup) {\n        var _this = this;\n        var /** @type {?} */ children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n        for (var _i = 0, config_1 = config; _i < config_1.length; _i++) {\n            var r = config_1[_i];\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        if (route.path === '**') {\n            var /** @type {?} */ params = segments.length > 0 ? ((last$1(segments))).parameters : {};\n            var /** @type {?} */ snapshot_1 = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            return [new TreeNode(snapshot_1, [])];\n        }\n        var _a = match$1(rawSegment, route, segments), consumedSegments = _a.consumedSegments, parameters = _a.parameters, lastChild = _a.lastChild;\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig = getChildConfig(route);\n        var _b = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _b.segmentGroup, slicedSegments = _b.slicedSegments;\n        var /** @type {?} */ snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var /** @type {?} */ children_3 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_3)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var /** @type {?} */ children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return ((route._loadedConfig)).routes;\n    }\n    return [];\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var /** @type {?} */ posParams = {};\n    forEach(/** @type {?} */ ((res.posParams)), function (v, k) { posParams[k] = v.path; });\n    var /** @type {?} */ parameters = res.consumed.length > 0 ? Object.assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction checkOutletNameUniqueness(nodes) {\n    var /** @type {?} */ names = {};\n    nodes.forEach(function (n) {\n        var /** @type {?} */ routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var /** @type {?} */ p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var /** @type {?} */ c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getSourceSegmentGroup(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getPathIndexShift(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    var /** @type {?} */ res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_3 = routes; _i < routes_3.length; _i++) {\n        var r = routes_3[_i];\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = segmentGroup.segments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} routes\n * @param {?} primarySegment\n * @return {?}\n */\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (var _i = 0, routes_4 = routes; _i < routes_4.length; _i++) {\n        var r = routes_4[_i];\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} r\n * @return {?}\n */\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getData(route) {\n    return route.data || {};\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to customize when activated routes get reused.\n *\n * \\@experimental\n * @abstract\n */\nvar RouteReuseStrategy = (function () {\n    function RouteReuseStrategy() {\n    }\n    /**\n     * Determines if this route (and its subtree) should be detached to be reused later\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldDetach = function (route) { };\n    /**\n     * Stores the detached route.\n     *\n     * Storing a `null` value should erase the previously stored value.\n     * @abstract\n     * @param {?} route\n     * @param {?} handle\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.store = function (route, handle) { };\n    /**\n     * Determines if this route (and its subtree) should be reattached\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldAttach = function (route) { };\n    /**\n     * Retrieves the previously stored route\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.retrieve = function (route) { };\n    /**\n     * Determines if a route should be reused\n     * @abstract\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) { };\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docsNotRequired\n * \\@experimental\n */\nvar ROUTES = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"InjectionToken\"]('ROUTES');\nvar RouterConfigLoader = (function () {\n    /**\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?=} onLoadStartListener\n     * @param {?=} onLoadEndListener\n     */\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.load = function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var /** @type {?} */ moduleFactory$ = this.loadModuleFactory(/** @type {?} */ ((route.loadChildren)));\n        return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(moduleFactory$, function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var /** @type {?} */ module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)), module);\n        });\n    };\n    /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return Object(__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__[\"fromPromise\"])(this.loader.load(loadChildren));\n        }\n        else {\n            return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(wrapIntoObservable(loadChildren()), function (t) {\n                if (t instanceof __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleFactory\"]) {\n                    return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(t);\n                }\n                else {\n                    return Object(__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__[\"fromPromise\"])(_this.compiler.compileModuleAsync(t));\n                }\n            });\n        }\n    };\n    return RouterConfigLoader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to migrate AngularJS applications to Angular.\n *\n * \\@experimental\n * @abstract\n */\nvar UrlHandlingStrategy = (function () {\n    function UrlHandlingStrategy() {\n    }\n    /**\n     * Tells the router if this URL should be processed.\n     *\n     * When it returns true, the router will execute the regular navigation.\n     * When it returns false, the router will set the router state to an empty state.\n     * As a result, all the active components will be destroyed.\n     *\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { };\n    /**\n     * Extracts the part of the URL that should be handled by the router.\n     * The rest of the URL will remain untouched.\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.extract = function (url) { };\n    /**\n     * Merges the URL fragment with the rest of the URL.\n     * @abstract\n     * @param {?} newUrlPart\n     * @param {?} rawUrl\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.merge = function (newUrlPart, rawUrl) { };\n    return UrlHandlingStrategy;\n}());\n/**\n * \\@experimental\n */\nvar DefaultUrlHandlingStrategy = (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n    /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * \\@internal\n * @param {?} snapshot\n * @return {?}\n */\nfunction defaultRouterHook(snapshot) {\n    return (Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null));\n}\n/**\n * \\@whatItDoes Provides the navigation and url manipulation capabilities.\n *\n * See {\\@link Routes} for more details and examples.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar Router = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} urlSerializer\n     * @param {?} rootContexts\n     * @param {?} location\n     * @param {?} injector\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?} config\n     */\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](/** @type {?} */ ((null)));\n        this.routerEvents = new __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__[\"Subject\"]();\n        this.navigationId = 0;\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See {\\@link ErrorHandler} for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * \\@internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleRef\"]);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.currentRouterState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    Router.prototype.resetRootComponentType = function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.currentRouterState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    Router.prototype.initialNavigation = function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    Router.prototype.setUpLocationChangeListener = function () {\n        var _this = this;\n        // Zone.current.wrap is needed because of the issue with RxJS scheduler,\n        // which does not work properly with zone.js in IE and Safari\n        if (!this.locationSubscription) {\n            this.locationSubscription = (this.location.subscribe(Zone.current.wrap(function (change) {\n                var /** @type {?} */ rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var /** @type {?} */ source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, { replaceUrl: true }); }, 0);\n            })));\n        }\n    };\n    Object.defineProperty(Router.prototype, \"routerState\", {\n        /**\n         * The current route state\n         * @return {?}\n         */\n        get: function () { return this.currentRouterState; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"url\", {\n        /**\n         * The current url\n         * @return {?}\n         */\n        get: function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"events\", {\n        /**\n         * An observable of router events\n         * @return {?}\n         */\n        get: function () { return this.routerEvents; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    Router.prototype.triggerEvent = function (e) { this.routerEvents.next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    Router.prototype.resetConfig = function (config) {\n        validateConfig(config);\n        this.config = config;\n        this.navigated = false;\n    };\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    Router.prototype.ngOnDestroy = function () { this.dispose(); };\n    /**\n     * Disposes of the router\n     * @return {?}\n     */\n    Router.prototype.dispose = function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = ((null));\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    Router.prototype.createUrlTree = function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (Object(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"isDevMode\"])() && preserveQueryParams && (console) && (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var /** @type {?} */ a = relativeTo || this.routerState.root;\n        var /** @type {?} */ f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var /** @type {?} */ q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = Object.assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, /** @type {?} */ ((q)), /** @type {?} */ ((f)));\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigateByUrl = function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var /** @type {?} */ urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        var /** @type {?} */ mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigate = function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        if (typeof extras.queryParams === 'object' && extras.queryParams !== null) {\n            extras.queryParams = this.removeEmptyProps(extras.queryParams);\n        }\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n    /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.parseUrl = function (url) { return this.urlSerializer.parse(url); };\n    /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    Router.prototype.isActive = function (url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var /** @type {?} */ urlTree = this.urlSerializer.parse(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    Router.prototype.removeEmptyProps = function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var /** @type {?} */ value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.processNavigations = function () {\n        var _this = this;\n        __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__[\"concatMap\"]\n            .call(this.navigations, function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return (Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null));\n            }\n        })\n            .subscribe(function () { });\n    };\n    /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    Router.prototype.scheduleNavigation = function (rawUrl, source, extras) {\n        var /** @type {?} */ lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var /** @type {?} */ resolve = null;\n        var /** @type {?} */ reject = null;\n        var /** @type {?} */ promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var /** @type {?} */ id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    Router.prototype.executeScheduledNavigation = function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject;\n        var /** @type {?} */ url = this.urlHandlingStrategy.extract(rawUrl);\n        var /** @type {?} */ urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null); })\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} shouldPreventPushState\n     * @param {?} shouldReplaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    Router.prototype.runNavigate = function (url, rawUrl, shouldPreventPushState, shouldReplaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            this.location.go(this.urlSerializer.serialize(this.currentUrlTree));\n            this.routerEvents.next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var /** @type {?} */ urlAndSnapshot$;\n            if (!precreatedState) {\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                var /** @type {?} */ redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(redirectsApplied$, function (appliedUrl) {\n                    return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl)), function (snapshot) {\n                        _this.routerEvents.next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    });\n                });\n            }\n            else {\n                urlAndSnapshot$ = Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var /** @type {?} */ beforePreactivationDone$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(urlAndSnapshot$, function (p) {\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(_this.hooks.beforePreactivation(p.snapshot), function () { return p; });\n            });\n            // run preactivation: guards and data resolvers\n            var /** @type {?} */ preActivation;\n            var /** @type {?} */ preactivationTraverse$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(beforePreactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                preActivation =\n                    new PreActivation(snapshot, _this.currentRouterState.snapshot, moduleInjector);\n                preActivation.traverse(_this.rootContexts);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            });\n            var /** @type {?} */ preactivationCheckGuards$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(preactivationTraverse$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                if (_this.navigationId !== id)\n                    return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(false);\n                _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), appliedUrl, snapshot));\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(preActivation.checkGuards(), function (shouldActivate) {\n                    _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), appliedUrl, snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                });\n            });\n            var /** @type {?} */ preactivationResolveData$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(preactivationCheckGuards$, function (p) {\n                if (_this.navigationId !== id)\n                    return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                    return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(preActivation.resolveData(), function () {\n                        _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                        return p;\n                    });\n                }\n                else {\n                    return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(p);\n                }\n            });\n            var /** @type {?} */ preactivationDone$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(preactivationResolveData$, function (p) {\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(_this.hooks.afterPreactivation(p.snapshot), function () { return p; });\n            });\n            // create router state\n            // this operation has side effects => route state is being affected\n            var /** @type {?} */ routerState$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(preactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot, shouldActivate = _a.shouldActivate;\n                if (shouldActivate) {\n                    var /** @type {?} */ state = createRouterState(_this.routeReuseStrategy, snapshot, _this.currentRouterState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            });\n            // applied the new router state\n            // this operation has side effects\n            var /** @type {?} */ navigationIsSuccessful;\n            var /** @type {?} */ storedState = _this.currentRouterState;\n            var /** @type {?} */ storedUrl = _this.currentUrlTree;\n            routerState$\n                .forEach(function (_a) {\n                var appliedUrl = _a.appliedUrl, state = _a.state, shouldActivate = _a.shouldActivate;\n                if (!shouldActivate || id !== _this.navigationId) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.currentRouterState = state;\n                if (!shouldPreventPushState) {\n                    var /** @type {?} */ path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                    if (_this.location.isCurrentPathEqualTo(path) || shouldReplaceUrl) {\n                        _this.location.replaceState(path);\n                    }\n                    else {\n                        _this.location.go(path);\n                    }\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState)\n                    .activate(_this.rootContexts);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    _this.routerEvents.next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        rejectPromise(ee);\n                    }\n                }\n                _this.currentRouterState = storedState;\n                _this.currentUrlTree = storedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.location.replaceState(_this.serializeUrl(_this.rawUrlTree));\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.resetUrlToCurrentUrlTree = function () {\n        var /** @type {?} */ path = this.urlSerializer.serialize(this.rawUrlTree);\n        this.location.replaceState(path);\n    };\n    return Router;\n}());\nvar CanActivate = (function () {\n    /**\n     * @param {?} path\n     */\n    function CanActivate(path) {\n        this.path = path;\n    }\n    Object.defineProperty(CanActivate.prototype, \"route\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    return CanActivate;\n}());\nvar CanDeactivate = (function () {\n    /**\n     * @param {?} component\n     * @param {?} route\n     */\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\nvar PreActivation = (function () {\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @param {?} moduleInjector\n     */\n    function PreActivation(future, curr, moduleInjector) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    PreActivation.prototype.traverse = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.future._root;\n        var /** @type {?} */ currRoot = this.curr ? this.curr._root : null;\n        this.traverseChildRoutes(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.checkGuards = function () {\n        var _this = this;\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(true);\n        }\n        var /** @type {?} */ canDeactivate$ = this.runCanDeactivateChecks();\n        return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(canDeactivate$, function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(false); });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.resolveData = function () {\n        var _this = this;\n        if (!this.isActivating())\n            return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null);\n        var /** @type {?} */ checks$ = Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__[\"concatMap\"].call(checks$, function (check) { return _this.runResolve(check.route); });\n        return __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce__[\"reduce\"].call(runningChecks$, function (_, __) { return _; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseChildRoutes = function (futureNode, currNode, contexts, futurePath) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            _this.traverseRoutes(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) { return _this.deactivateRouteAndItsChildren(v, /** @type {?} */ ((contexts)).getContext(k)); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseRoutes = function (futureNode, currNode, parentContexts, futurePath) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        var /** @type {?} */ context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future._routeConfig === curr._routeConfig) {\n            var /** @type {?} */ shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, /** @type {?} */ ((future._routeConfig)).runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.traverseChildRoutes(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                var /** @type {?} */ outlet = ((((context)).outlet));\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.traverseChildRoutes(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    };\n    /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(route);\n        var /** @type {?} */ r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                _this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                _this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(this.canDeactivateChecks);\n        var /** @type {?} */ runningChecks$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(checks$, function (check) { return _this.runCanDeactivate(check.component, check.route); });\n        return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__[\"every\"].call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__[\"concatMap\"].call(checks$, function (check) { return andObservables(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])([_this.runCanActivateChild(check.path), _this.runCanActivate(check.route)])); });\n        return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__[\"every\"].call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivate = function (future) {\n        var _this = this;\n        var /** @type {?} */ canActivate = future._routeConfig ? future._routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(true);\n        var /** @type {?} */ obs = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(canActivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, future);\n            var /** @type {?} */ observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__[\"first\"].call(observable);\n        });\n        return andObservables(obs);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChild = function (path) {\n        var _this = this;\n        var /** @type {?} */ future = path[path.length - 1];\n        var /** @type {?} */ canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(__WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(canActivateChildGuards), function (d) {\n            var /** @type {?} */ obs = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(d.guards), function (c) {\n                var /** @type {?} */ guard = _this.getToken(c, d.node);\n                var /** @type {?} */ observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__[\"first\"].call(observable);\n            });\n            return andObservables(obs);\n        }));\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    PreActivation.prototype.extractCanActivateChild = function (p) {\n        var /** @type {?} */ canActivateChild = p._routeConfig ? p._routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivate = function (component, curr) {\n        var _this = this;\n        var /** @type {?} */ canDeactivate = curr && curr._routeConfig ? curr._routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(true);\n        var /** @type {?} */ canDeactivate$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(canDeactivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, curr);\n            var /** @type {?} */ observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__[\"first\"].call(observable);\n        });\n        return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__[\"every\"].call(canDeactivate$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runResolve = function (future) {\n        var /** @type {?} */ resolve = future._resolve;\n        return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.resolveNode(resolve, future), function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = Object.assign({}, future.data, inheritedParamsDataResolve(future).resolve);\n            return null;\n        });\n    };\n    /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.resolveNode = function (resolve, future) {\n        var _this = this;\n        var /** @type {?} */ keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])({});\n        }\n        if (keys.length === 1) {\n            var /** @type {?} */ key_1 = keys[0];\n            return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.getResolver(resolve[key_1], future), function (value) {\n                return _a = {}, _a[key_1] = value, _a;\n                var _a;\n            });\n        }\n        var /** @type {?} */ data = {};\n        var /** @type {?} */ runningResolvers$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(keys), function (key) {\n            return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(_this.getResolver(resolve[key], future), function (value) {\n                data[key] = value;\n                return value;\n            });\n        });\n        return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__[\"last\"].call(runningResolvers$), function () { return data; });\n    };\n    /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.getResolver = function (injectionToken, future) {\n        var /** @type {?} */ resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    };\n    /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.getToken = function (token, snapshot) {\n        var /** @type {?} */ config = closestLoadedConfig(snapshot);\n        var /** @type {?} */ injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\nvar ActivateRoutes = (function () {\n    /**\n     * @param {?} routeReuseStrategy\n     * @param {?} futureState\n     * @param {?} currState\n     */\n    function ActivateRoutes(routeReuseStrategy, futureState, currState) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activate = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.futureState._root;\n        var /** @type {?} */ currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var /** @type {?} */ childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var /** @type {?} */ componentRef = context.outlet.detach();\n            var /** @type {?} */ contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n        var _this = this;\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var /** @type {?} */ children = nodeChildrenAsMap(route);\n            var /** @type {?} */ contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) { _this.activateRoutes(c, children[c.value.outlet], contexts); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var /** @type {?} */ stored = ((this.routeReuseStrategy.retrieve(future.snapshot)));\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var /** @type {?} */ config = parentLoadedConfig(future.snapshot);\n                    var /** @type {?} */ cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot) {\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap(node) {\n    var /** @type {?} */ map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands) {\n    for (var /** @type {?} */ i = 0; i < commands.length; i++) {\n        var /** @type {?} */ cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * \\@howToUse\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`\n *\n * When linking to this `user/:name` route, you can write:\n * `<a routerLink='/user/bob'>link to user component</a>`\n *\n * \\@description\n *\n * The RouterLink directives let you link to specific parts of your app.\n *\n * When the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - 'merge' merge the queryParams into the current queryParams\n *  - 'preserve' preserve the current queryParams\n *  - default / '' use the queryParams only\n *  same options for {\\@link NavigationExtras#queryParamsHandling}\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * \\@ngModule RouterModule\n *\n * See {\\@link Router#createUrlTree} for more information.\n *\n * \\@stable\n */\nvar RouterLink = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} tabIndex\n     * @param {?} renderer\n     * @param {?} el\n     */\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (Object(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"isDevMode\"])() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLink.prototype.onClick = function () {\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLink;\n}());\nRouterLink.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Directive\"], args: [{ selector: ':not(a)[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLink.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Attribute\"], args: ['tabindex',] },] },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ElementRef\"], },\n]; };\nRouterLink.propDecorators = {\n    'queryParams': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'fragment': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'queryParamsHandling': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'preserveFragment': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'skipLocationChange': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'replaceUrl': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'routerLink': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'preserveQueryParams': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'onClick': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"HostListener\"], args: ['click',] },],\n};\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * See {\\@link RouterLink} for more information.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkWithHref = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} locationStrategy\n     */\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (Object(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"isDevMode\"])() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLinkWithHref;\n}());\nRouterLinkWithHref.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Directive\"], args: [{ selector: 'a[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkWithHref.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"LocationStrategy\"], },\n]; };\nRouterLinkWithHref.propDecorators = {\n    'target': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"HostBinding\"], args: ['attr.target',] }, { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'queryParams': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'fragment': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'queryParamsHandling': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'preserveFragment': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'skipLocationChange': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'replaceUrl': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'href': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"HostBinding\"] },],\n    'routerLink': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'preserveQueryParams': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'onClick': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"HostListener\"], args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] },],\n};\n/**\n * @param {?} s\n * @return {?}\n */\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n *\n * \\@howToUse\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * \\@description\n *\n * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkActive = (function () {\n    /**\n     * @param {?} router\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} cdr\n     */\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.active = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkActive.prototype, \"isActive\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.active; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        set: function (data) {\n            var /** @type {?} */ classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.update = function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        var /** @type {?} */ hasActiveLinks = this.hasActiveLinks();\n        // react only when status has changed to prevent unnecessary dom updates\n        if (this.active !== hasActiveLinks) {\n            this.classes.forEach(function (c) {\n                if (hasActiveLinks) {\n                    _this.renderer.addClass(_this.element.nativeElement, c);\n                }\n                else {\n                    _this.renderer.removeClass(_this.element.nativeElement, c);\n                }\n            });\n            Promise.resolve(hasActiveLinks).then(function (active) { return _this.active = active; });\n        }\n    };\n    /**\n     * @param {?} router\n     * @return {?}\n     */\n    RouterLinkActive.prototype.isLinkActive = function (router) {\n        var _this = this;\n        return function (link) { return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact); };\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.hasActiveLinks = function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    return RouterLinkActive;\n}());\nRouterLinkActive.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Directive\"], args: [{\n                selector: '[routerLinkActive]',\n                exportAs: 'routerLinkActive',\n            },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkActive.ctorParameters = function () { return [\n    { type: Router, },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ChangeDetectorRef\"], },\n]; };\nRouterLinkActive.propDecorators = {\n    'links': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ContentChildren\"], args: [RouterLink, { descendants: true },] },],\n    'linksWithHrefs': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ContentChildren\"], args: [RouterLinkWithHref, { descendants: true },] },],\n    'routerLinkActiveOptions': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'routerLinkActive': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar OutletContext = (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar ChildrenOutletContexts = (function () {\n    function ChildrenOutletContexts() {\n        this.contexts = new Map();\n    }\n    /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n        var /** @type {?} */ context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n        var /** @type {?} */ contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n * state.\n *\n * \\@howToUse\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterOutlet = (function () {\n    /**\n     * @param {?} parentContexts\n     * @param {?} location\n     * @param {?} resolver\n     * @param {?} name\n     * @param {?} changeDetector\n     */\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"EventEmitter\"]();\n        this.deactivateEvents = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"EventEmitter\"]();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnInit = function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var /** @type {?} */ context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"locationInjector\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.location.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"locationFactoryResolver\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return (this._activatedRoute);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    RouterOutlet.prototype.detach = function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var /** @type {?} */ cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.deactivate = function () {\n        if (this.activated) {\n            var /** @type {?} */ c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n        var /** @type {?} */ component = (((snapshot._routeConfig)).component);\n        resolver = resolver || this.resolver;\n        var /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n        var /** @type {?} */ childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var /** @type {?} */ injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    return RouterOutlet;\n}());\nRouterOutlet.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Directive\"], args: [{ selector: 'router-outlet', exportAs: 'outlet' },] },\n];\n/**\n * @nocollapse\n */\nRouterOutlet.ctorParameters = function () { return [\n    { type: ChildrenOutletContexts, },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ViewContainerRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ComponentFactoryResolver\"], },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Attribute\"], args: ['name',] },] },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ChangeDetectorRef\"], },\n]; };\nRouterOutlet.propDecorators = {\n    'activateEvents': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Output\"], args: ['activate',] },],\n    'deactivateEvents': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Output\"], args: ['deactivate',] },],\n};\nvar OutletInjector = (function () {\n    /**\n     * @param {?} route\n     * @param {?} childContexts\n     * @param {?} parent\n     */\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    OutletInjector.prototype.get = function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * \\@whatItDoes Provides a preloading strategy.\n *\n * \\@experimental\n * @abstract\n */\nvar PreloadingStrategy = (function () {\n    function PreloadingStrategy() {\n    }\n    /**\n     * @abstract\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadingStrategy.prototype.preload = function (route, fn) { };\n    return PreloadingStrategy;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * \\@howToUse\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * \\@experimental\n */\nvar PreloadAllModules = (function () {\n    function PreloadAllModules() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadAllModules.prototype.preload = function (route, fn) {\n        return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(fn(), function () { return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null); });\n    };\n    return PreloadAllModules;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that does not preload any modules.\n *\n * \\@description\n *\n * This strategy is enabled by default.\n *\n * \\@experimental\n */\nvar NoPreloading = (function () {\n    function NoPreloading() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    NoPreloading.prototype.preload = function (route, fn) { return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * \\@stable\n */\nvar RouterPreloader = (function () {\n    /**\n     * @param {?} router\n     * @param {?} moduleLoader\n     * @param {?} compiler\n     * @param {?} injector\n     * @param {?} preloadingStrategy\n     */\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    ;\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.setUpPreloading = function () {\n        var _this = this;\n        var /** @type {?} */ navigations$ = __WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter__[\"filter\"].call(this.router.events, function (e) { return e instanceof NavigationEnd; });\n        this.subscription = __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__[\"concatMap\"].call(navigations$, function () { return _this.preload(); }).subscribe(function () { });\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.preload = function () {\n        var /** @type {?} */ ngModule = this.injector.get(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleRef\"]);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n        var /** @type {?} */ res = [];\n        for (var _i = 0, routes_5 = routes; _i < routes_5.length; _i++) {\n            var route = routes_5[_i];\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                var /** @type {?} */ childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                // no config loaded, fetch the config\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n                // recurse into children\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return __WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__[\"mergeAll\"].call(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(res));\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var /** @type {?} */ loaded$ = _this.loader.load(ngModule.injector, route);\n            return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(loaded$, function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            });\n        });\n    };\n    return RouterPreloader;\n}());\nRouterPreloader.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nRouterPreloader.ctorParameters = function () { return [\n    { type: Router, },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleFactoryLoader\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Compiler\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injector\"], },\n    { type: PreloadingStrategy, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Contains a list of directives\n * \\@stable\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * \\@whatItDoes Is used in DI to configure the router.\n * \\@stable\n */\nvar ROUTER_CONFIGURATION = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"InjectionToken\"]('ROUTER_CONFIGURATION');\n/**\n * \\@docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"InjectionToken\"]('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"Location\"],\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ApplicationRef\"], UrlSerializer, ChildrenOutletContexts, __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"Location\"], __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injector\"],\n            __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleFactoryLoader\"], __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Compiler\"], ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"]()], [RouteReuseStrategy, new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"]()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleFactoryLoader\"], useClass: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"SystemJsNgModuleLoader\"] },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\n/**\n * @return {?}\n */\nfunction routerNgProbeToken() {\n    return new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgProbeToken\"]('Router', Router);\n}\n/**\n * \\@whatItDoes Adds router directives and providers.\n *\n * \\@howToUse\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@description\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n * \\@stable\n */\nvar RouterModule = (function () {\n    /**\n     * @param {?} guard\n     * @param {?} router\n     */\n    function RouterModule(guard, router) {\n    }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options:\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    RouterModule.forRoot = function (routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"](), new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"SkipSelf\"]()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"LocationStrategy\"],\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"PlatformLocation\"], [new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Inject\"](__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"APP_BASE_HREF\"]), new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"]()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgProbeToken\"], multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterModule.forChild = function (routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    };\n    return RouterModule;\n}());\nRouterModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModule\"], args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] },\n];\n/**\n * @nocollapse\n */\nRouterModule.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Inject\"], args: [ROUTER_FORROOT_GUARD,] },] },\n    { type: Router, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"] },] },\n]; };\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"HashLocationStrategy\"](platformLocationStrategy, baseHref) :\n        new __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"PathLocationStrategy\"](platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * \\@whatItDoes Registers routes.\n *\n * \\@howToUse\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@stable\n * @param {?} routes\n * @return {?}\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ANALYZE_FOR_ENTRY_COMPONENTS\"], multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var /** @type {?} */ router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var /** @type {?} */ dom_1 = Object(__WEBPACK_IMPORTED_MODULE_20__angular_platform_browser__[\"ɵgetDOM\"])();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + ((e.constructor)).name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = (function () {\n    /**\n     * @param {?} injector\n     */\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__[\"Subject\"]();\n    }\n    /**\n     * @return {?}\n     */\n    RouterInitializer.prototype.appInitializer = function () {\n        var _this = this;\n        var /** @type {?} */ p = this.injector.get(__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"LOCATION_INITIALIZED\"], Promise.resolve(null));\n        return p.then(function () {\n            var /** @type {?} */ resolve = ((null));\n            var /** @type {?} */ res = new Promise(function (r) { return resolve = r; });\n            var /** @type {?} */ router = _this.injector.get(Router);\n            var /** @type {?} */ opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return (Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null));\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n        var /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n        var /** @type {?} */ preloader = this.injector.get(RouterPreloader);\n        var /** @type {?} */ router = this.injector.get(Router);\n        var /** @type {?} */ ref = this.injector.get(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ApplicationRef\"]);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(/** @type {?} */ ((null)));\n        this.resultOfPreactivationDone.complete();\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    return RouterInitializer;\n}());\nRouterInitializer.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nRouterInitializer.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injector\"], },\n]; };\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * \\@experimental\n */\nvar ROUTER_INITIALIZER = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"InjectionToken\"]('Router Initializer');\n/**\n * @return {?}\n */\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"APP_INITIALIZER\"],\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"APP_BOOTSTRAP_LISTENER\"], multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Version\"]('4.4.4');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=router.es5.js.map\n\n\n/***/ }),\n\n/***/ 98:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar forms_1 = __webpack_require__(13);\r\nvar ng_templates_directive_1 = __webpack_require__(99);\r\nvar virtual_scroll_component_1 = __webpack_require__(100);\r\nvar ng_select_types_1 = __webpack_require__(54);\r\nvar items_list_1 = __webpack_require__(184);\r\nvar Subject_1 = __webpack_require__(5);\r\nvar Observable_1 = __webpack_require__(0);\r\n__webpack_require__(101);\r\n__webpack_require__(102);\r\nvar NGB_ANG_SELECT_VALUE_ACCESSOR = {\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    useExisting: core_1.forwardRef(function () { return NgSelectComponent; }),\r\n    multi: true\r\n};\r\nvar NgSelectComponent = /** @class */ (function () {\r\n    function NgSelectComponent(config, changeDetectorRef, elementRef, renderer) {\r\n        var _this = this;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.elementRef = elementRef;\r\n        this.renderer = renderer;\r\n        this.clearable = true;\r\n        this.notFoundText = 'No items found';\r\n        this.typeToSearchText = 'Type to search';\r\n        this.addTagText = 'Add item';\r\n        this.multiple = false;\r\n        this.addTag = false;\r\n        // output events\r\n        this.blurEvent = new core_1.EventEmitter();\r\n        this.focusEvent = new core_1.EventEmitter();\r\n        this.changeEvent = new core_1.EventEmitter();\r\n        this.openEvent = new core_1.EventEmitter();\r\n        this.closeEvent = new core_1.EventEmitter();\r\n        this.searchEvent = new core_1.EventEmitter();\r\n        this.isOpen = false;\r\n        this.isFocused = false;\r\n        this.isDisabled = false;\r\n        this.itemsList = new items_list_1.ItemsList();\r\n        this.viewPortItems = [];\r\n        this.isLoading = false;\r\n        this.filterValue = null;\r\n        this._items$ = new Subject_1.Subject();\r\n        this._writeValue$ = new Subject_1.Subject();\r\n        this._checkWriteValue = false;\r\n        this._writeValueHandler$ = null;\r\n        this.onChange = function (_) { };\r\n        this.onTouched = function () { };\r\n        this.disposeDocumentClickListener = function () { };\r\n        this.clearItem = function (item) { return _this.unselect(item); };\r\n        this.mergeConfig(config);\r\n        this.handleWriteValue();\r\n    }\r\n    Object.defineProperty(NgSelectComponent.prototype, \"single\", {\r\n        get: function () {\r\n            return !this.multiple;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NgSelectComponent.prototype, \"filtered\", {\r\n        get: function () { return !!this.filterValue; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Object.defineProperty(NgSelectComponent.prototype, \"items\", {\r\n        get: function () {\r\n            return this.itemsList.items;\r\n        },\r\n        set: function (items) {\r\n            this.setItems(items || []);\r\n            this._items$.next(true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NgSelectComponent.prototype, \"selectedItems\", {\r\n        get: function () {\r\n            return this.itemsList.value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    NgSelectComponent.prototype.ngOnInit = function () {\r\n        this.handleDocumentClick();\r\n        this.bindLabel = this.bindLabel || 'label';\r\n    };\r\n    NgSelectComponent.prototype.ngOnChanges = function (changes) {\r\n        if (changes.multiple) {\r\n            this.itemsList.setMultiple(changes.multiple.currentValue);\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.ngOnDestroy = function () {\r\n        this.changeDetectorRef.detach();\r\n        this.disposeDocumentClickListener();\r\n        this._writeValueHandler$.unsubscribe();\r\n    };\r\n    NgSelectComponent.prototype.handleKeyDown = function ($event) {\r\n        if (ng_select_types_1.KeyCode[$event.which]) {\r\n            switch ($event.which) {\r\n                case ng_select_types_1.KeyCode.ArrowDown:\r\n                    this.handleArrowDown($event);\r\n                    break;\r\n                case ng_select_types_1.KeyCode.ArrowUp:\r\n                    this.handleArrowUp($event);\r\n                    break;\r\n                case ng_select_types_1.KeyCode.Space:\r\n                    this.handleSpace($event);\r\n                    break;\r\n                case ng_select_types_1.KeyCode.Enter:\r\n                    this.handleEnter($event);\r\n                    break;\r\n                case ng_select_types_1.KeyCode.Tab:\r\n                    this.handleTab($event);\r\n                    break;\r\n                case ng_select_types_1.KeyCode.Esc:\r\n                    this.close();\r\n                    break;\r\n                case ng_select_types_1.KeyCode.Backspace:\r\n                    this.handleBackspace();\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.handleArrowClick = function ($event) {\r\n        $event.stopPropagation();\r\n        if (this.isOpen) {\r\n            this.close();\r\n        }\r\n        else {\r\n            this.open();\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.handleSelectClick = function ($event) {\r\n        $event.stopPropagation();\r\n        this.open();\r\n    };\r\n    NgSelectComponent.prototype.handleClearClick = function ($event) {\r\n        $event.stopPropagation();\r\n        this.clear();\r\n    };\r\n    NgSelectComponent.prototype.clear = function () {\r\n        if (!this.clearable) {\r\n            return;\r\n        }\r\n        this.itemsList.clearSelected();\r\n        this.clearSearch();\r\n        this.notifyModelChanged();\r\n        if (this.isTypeahead()) {\r\n            this.typeahead.next(this.filterValue);\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.writeValue = function (value) {\r\n        this._checkWriteValue = true;\r\n        this._writeValue$.next(value);\r\n    };\r\n    NgSelectComponent.prototype.registerOnChange = function (fn) {\r\n        this.onChange = fn;\r\n    };\r\n    NgSelectComponent.prototype.registerOnTouched = function (fn) {\r\n        this.onTouched = fn;\r\n    };\r\n    NgSelectComponent.prototype.setDisabledState = function (isDisabled) {\r\n        this.isDisabled = isDisabled;\r\n    };\r\n    NgSelectComponent.prototype.open = function () {\r\n        if (this.isDisabled || this.isOpen) {\r\n            return;\r\n        }\r\n        this.isOpen = true;\r\n        this.itemsList.markItem();\r\n        this.scrollToMarked();\r\n        this.focusSearchInput();\r\n        this.openEvent.emit();\r\n    };\r\n    NgSelectComponent.prototype.close = function () {\r\n        if (!this.isOpen) {\r\n            return;\r\n        }\r\n        this.isOpen = false;\r\n        this.clearSearch();\r\n        this.closeEvent.emit();\r\n    };\r\n    NgSelectComponent.prototype.toggle = function (item) {\r\n        if (!item || item.disabled || this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.multiple && item.selected) {\r\n            this.unselect(item);\r\n        }\r\n        else {\r\n            this.select(item);\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.select = function (item) {\r\n        this._checkWriteValue = false;\r\n        if (!item.selected) {\r\n            this.itemsList.select(item);\r\n            this.clearSearch();\r\n            this.updateModel();\r\n        }\r\n        if (this.single) {\r\n            this.close();\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.unselect = function (item) {\r\n        this.itemsList.unselect(item);\r\n        this.updateModel();\r\n    };\r\n    NgSelectComponent.prototype.selectTag = function () {\r\n        var tag = {};\r\n        if (this.addTag instanceof Function) {\r\n            tag = this.addTag(this.filterValue);\r\n        }\r\n        else {\r\n            tag[this.bindLabel] = this.filterValue;\r\n        }\r\n        this.itemsList.addTag(tag);\r\n        this.select(tag);\r\n    };\r\n    NgSelectComponent.prototype.showPlaceholder = function () {\r\n        return this.placeholder && !this.isValueSet(this.selectedItems) && !this.filterValue;\r\n    };\r\n    NgSelectComponent.prototype.showClear = function () {\r\n        return this.clearable && (this.isValueSet(this.selectedItems) || this.filterValue) && !this.isDisabled;\r\n    };\r\n    NgSelectComponent.prototype.showFilter = function () {\r\n        return !this.isDisabled;\r\n    };\r\n    NgSelectComponent.prototype.showNoItemsFound = function () {\r\n        var empty = this.itemsList.filteredItems.length === 0;\r\n        return (empty && !this.isTypeahead()) ||\r\n            (empty && this.isTypeahead() && this.filterValue && !this.isLoading);\r\n    };\r\n    NgSelectComponent.prototype.showTypeToSearch = function () {\r\n        var empty = this.itemsList.filteredItems.length === 0;\r\n        return empty && this.isTypeahead() && !this.filterValue && !this.isLoading;\r\n    };\r\n    NgSelectComponent.prototype.onFilter = function ($event) {\r\n        if (!this.isOpen) {\r\n            this.open();\r\n        }\r\n        this.filterValue = $event.target.value;\r\n        if (this.isTypeahead()) {\r\n            this.isLoading = true;\r\n            this.typeahead.next(this.filterValue);\r\n        }\r\n        else {\r\n            this.itemsList.filter(this.filterValue, this.bindLabel);\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.onInputFocus = function () {\r\n        this.isFocused = true;\r\n        this.focusEvent.emit(null);\r\n    };\r\n    NgSelectComponent.prototype.onInputBlur = function () {\r\n        this.isFocused = false;\r\n        this.blurEvent.emit(null);\r\n        if (!this.isOpen && !this.isDisabled) {\r\n            this.onTouched();\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.onItemHover = function (item) {\r\n        if (item.disabled) {\r\n            return;\r\n        }\r\n        this.itemsList.markItem(item);\r\n    };\r\n    NgSelectComponent.prototype.handleWriteValue = function () {\r\n        var _this = this;\r\n        // combineLatest ensures that write value is always set after latest items are loaded\r\n        this._writeValueHandler$ = Observable_1.Observable.combineLatest(this._items$, this._writeValue$).subscribe(function (result) {\r\n            if (!_this._checkWriteValue) {\r\n                return;\r\n            }\r\n            var value = result[1];\r\n            _this.validateWriteValue(value);\r\n            _this.itemsList.clearSelected();\r\n            if (value) {\r\n                if (_this.multiple) {\r\n                    value.forEach(function (item) {\r\n                        _this.selectWriteValue(item);\r\n                    });\r\n                }\r\n                else {\r\n                    _this.selectWriteValue(value);\r\n                }\r\n            }\r\n            _this.detectChanges();\r\n        });\r\n    };\r\n    NgSelectComponent.prototype.setItems = function (items) {\r\n        this.itemsList.setItems(items);\r\n        if (this.isTypeahead()) {\r\n            this.isLoading = false;\r\n            this.itemsList.markItem();\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.handleDocumentClick = function () {\r\n        var _this = this;\r\n        var handler = function ($event) {\r\n            // prevent close if clicked on select\r\n            if (_this.elementRef.nativeElement.contains($event.target)) {\r\n                return;\r\n            }\r\n            // prevent close if clicked on dropdown menu\r\n            var dropdown = _this.getDropdownMenu();\r\n            if (dropdown && dropdown.contains($event.target)) {\r\n                return;\r\n            }\r\n            if (_this.isFocused) {\r\n                _this.onInputBlur();\r\n            }\r\n            if (_this.isOpen) {\r\n                _this.close();\r\n            }\r\n        };\r\n        this.disposeDocumentClickListener = this.renderer.listen('document', 'click', handler);\r\n    };\r\n    NgSelectComponent.prototype.validateWriteValue = function (value) {\r\n        var _this = this;\r\n        if (!value) {\r\n            return;\r\n        }\r\n        var validateBinding = function (item) {\r\n            if (item instanceof Object && _this.bindValue) {\r\n                throw new Error('Binding object with bindValue is not allowed.');\r\n            }\r\n        };\r\n        if (this.multiple) {\r\n            if (!Array.isArray(value)) {\r\n                throw new Error('Multiple select model should be array.');\r\n            }\r\n            value.forEach(function (item) { return validateBinding(item); });\r\n        }\r\n        else {\r\n            validateBinding(value);\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.selectWriteValue = function (value) {\r\n        var item = this.itemsList.findItem(value, this.bindLabel, this.bindValue);\r\n        if (item) {\r\n            this.itemsList.select(item);\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.updateModel = function () {\r\n        this.notifyModelChanged();\r\n        this.changeDetectorRef.markForCheck();\r\n    };\r\n    NgSelectComponent.prototype.clearSearch = function () {\r\n        this.filterValue = null;\r\n        this.itemsList.clearFilter();\r\n    };\r\n    NgSelectComponent.prototype.focusSearchInput = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            _this.filterInput.nativeElement.focus(); // TODO: this won't work on mobile\r\n        });\r\n    };\r\n    NgSelectComponent.prototype.scrollToMarked = function () {\r\n        this.dropdownList.scrollInto(this.itemsList.markedItem);\r\n    };\r\n    NgSelectComponent.prototype.handleTab = function ($event) {\r\n        if (this.isOpen) {\r\n            this.close();\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.handleEnter = function ($event) {\r\n        if (this.isOpen) {\r\n            if (this.itemsList.markedItem) {\r\n                this.toggle(this.itemsList.markedItem);\r\n            }\r\n            else if (this.addTag) {\r\n                this.selectTag();\r\n            }\r\n        }\r\n        $event.preventDefault();\r\n    };\r\n    NgSelectComponent.prototype.handleSpace = function ($event) {\r\n        if (this.isOpen) {\r\n            return;\r\n        }\r\n        this.open();\r\n        $event.preventDefault();\r\n    };\r\n    NgSelectComponent.prototype.handleArrowDown = function ($event) {\r\n        if (!this.isOpen) {\r\n            this.open();\r\n        }\r\n        else {\r\n            this.itemsList.markNextItem();\r\n            this.scrollToMarked();\r\n        }\r\n        $event.preventDefault();\r\n    };\r\n    NgSelectComponent.prototype.handleArrowUp = function ($event) {\r\n        this.itemsList.markPreviousItem();\r\n        this.scrollToMarked();\r\n        $event.preventDefault();\r\n    };\r\n    NgSelectComponent.prototype.handleBackspace = function () {\r\n        if (this.filterValue) {\r\n            return;\r\n        }\r\n        if (this.multiple) {\r\n            this.itemsList.unselectLastItem();\r\n            this.updateModel();\r\n        }\r\n        else {\r\n            this.clear();\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.notifyModelChanged = function () {\r\n        var _this = this;\r\n        var value = this.value;\r\n        if (!value) {\r\n            this.onChange(null);\r\n        }\r\n        else if (this.bindValue) {\r\n            var bindValue = Array.isArray(value) ?\r\n                value.map(function (x) { return x[_this.bindValue]; }) :\r\n                value[this.bindValue];\r\n            this.onChange(bindValue);\r\n        }\r\n        else {\r\n            this.onChange(value);\r\n        }\r\n        this.changeEvent.emit(value);\r\n    };\r\n    NgSelectComponent.prototype.getDropdownMenu = function () {\r\n        if (!this.isOpen || !this.dropdownList) {\r\n            return null;\r\n        }\r\n        return this.elementRef.nativeElement.querySelector('.ng-menu-outer');\r\n    };\r\n    NgSelectComponent.prototype.isTypeahead = function () {\r\n        return this.typeahead && this.typeahead.observers.length > 0;\r\n    };\r\n    NgSelectComponent.prototype.detectChanges = function () {\r\n        if (!this.changeDetectorRef.destroyed) {\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n    };\r\n    Object.defineProperty(NgSelectComponent.prototype, \"value\", {\r\n        get: function () {\r\n            if (this.multiple) {\r\n                return this.selectedItems;\r\n            }\r\n            return this.selectedItems[0] || null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    NgSelectComponent.prototype.isValueSet = function (value) {\r\n        return !!value && value.length > 0;\r\n    };\r\n    NgSelectComponent.prototype.mergeConfig = function (config) {\r\n        if (!config) {\r\n            return;\r\n        }\r\n        this.notFoundText = config.notFoundText || this.notFoundText;\r\n        this.typeToSearchText = config.typeToSearchText || this.typeToSearchText;\r\n        this.addTagText = config.addTagText || this.addTagText;\r\n    };\r\n    __decorate([\r\n        core_1.ContentChild(ng_templates_directive_1.NgOptionTemplateDirective, { read: core_1.TemplateRef }),\r\n        __metadata(\"design:type\", core_1.TemplateRef)\r\n    ], NgSelectComponent.prototype, \"optionTemplate\", void 0);\r\n    __decorate([\r\n        core_1.ContentChild(ng_templates_directive_1.NgLabelTemplateDirective, { read: core_1.TemplateRef }),\r\n        __metadata(\"design:type\", core_1.TemplateRef)\r\n    ], NgSelectComponent.prototype, \"labelTemplate\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild(virtual_scroll_component_1.VirtualScrollComponent),\r\n        __metadata(\"design:type\", virtual_scroll_component_1.VirtualScrollComponent)\r\n    ], NgSelectComponent.prototype, \"dropdownList\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('filterInput'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"filterInput\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], NgSelectComponent.prototype, \"bindLabel\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], NgSelectComponent.prototype, \"bindValue\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"clearable\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], NgSelectComponent.prototype, \"placeholder\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"notFoundText\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"typeToSearchText\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"addTagText\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('class.typeahead'),\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Subject_1.Subject)\r\n    ], NgSelectComponent.prototype, \"typeahead\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        core_1.HostBinding('class.ng-multiple'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"multiple\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        core_1.HostBinding('class.taggable'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"addTag\", void 0);\r\n    __decorate([\r\n        core_1.Output('blur'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"blurEvent\", void 0);\r\n    __decorate([\r\n        core_1.Output('focus'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"focusEvent\", void 0);\r\n    __decorate([\r\n        core_1.Output('change'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"changeEvent\", void 0);\r\n    __decorate([\r\n        core_1.Output('open'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"openEvent\", void 0);\r\n    __decorate([\r\n        core_1.Output('close'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"closeEvent\", void 0);\r\n    __decorate([\r\n        core_1.Output('search'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"searchEvent\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('class.ng-single'),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], NgSelectComponent.prototype, \"single\", null);\r\n    __decorate([\r\n        core_1.HostBinding('class.opened'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"isOpen\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('class.focused'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"isFocused\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('class.disabled'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"isDisabled\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('class.filtered'),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], NgSelectComponent.prototype, \"filtered\", null);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array),\r\n        __metadata(\"design:paramtypes\", [Array])\r\n    ], NgSelectComponent.prototype, \"items\", null);\r\n    __decorate([\r\n        core_1.HostListener('keydown', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [KeyboardEvent]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], NgSelectComponent.prototype, \"handleKeyDown\", null);\r\n    NgSelectComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'ng-select',\r\n            template: __webpack_require__(187),\r\n            styles: [__webpack_require__(188)],\r\n            providers: [NGB_ANG_SELECT_VALUE_ACCESSOR],\r\n            encapsulation: core_1.ViewEncapsulation.None,\r\n            changeDetection: core_1.ChangeDetectionStrategy.OnPush,\r\n            host: {\r\n                'role': 'dropdown'\r\n            }\r\n        }),\r\n        __param(0, core_1.Optional()),\r\n        __metadata(\"design:paramtypes\", [ng_select_types_1.NgSelectConfig,\r\n            core_1.ChangeDetectorRef,\r\n            core_1.ElementRef,\r\n            core_1.Renderer2])\r\n    ], NgSelectComponent);\r\n    return NgSelectComponent;\r\n}());\r\nexports.NgSelectComponent = NgSelectComponent;\r\n\n\n/***/ }),\n\n/***/ 99:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar NgOptionTemplateDirective = /** @class */ (function () {\r\n    function NgOptionTemplateDirective(template) {\r\n        this.template = template;\r\n    }\r\n    NgOptionTemplateDirective = __decorate([\r\n        core_1.Directive({ selector: '[ng-option-tmp]' }),\r\n        __metadata(\"design:paramtypes\", [core_1.TemplateRef])\r\n    ], NgOptionTemplateDirective);\r\n    return NgOptionTemplateDirective;\r\n}());\r\nexports.NgOptionTemplateDirective = NgOptionTemplateDirective;\r\nvar NgLabelTemplateDirective = /** @class */ (function () {\r\n    function NgLabelTemplateDirective(template) {\r\n        this.template = template;\r\n    }\r\n    NgLabelTemplateDirective = __decorate([\r\n        core_1.Directive({ selector: '[ng-label-tmp]' }),\r\n        __metadata(\"design:paramtypes\", [core_1.TemplateRef])\r\n    ], NgLabelTemplateDirective);\r\n    return NgLabelTemplateDirective;\r\n}());\r\nexports.NgLabelTemplateDirective = NgLabelTemplateDirective;\r\n\n\n/***/ })\n\n},[175]);\n\n\n// WEBPACK FOOTER //\n// js/app.ae88d3d741ea3c82786d.js","/**\n * The MIT License (MIT)\n * Copyright (c) 2016 Rinto Jose (rintoj)\n * Source code https://github.com/rintoj/angular2-virtual-scroll\n */\n\nimport {\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgModule, NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output, Renderer2,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nexport interface ChangeEvent {\n    start?: number;\n    end?: number;\n}\n\n@Component({\n    selector: 'virtual-scroll,[virtualScroll]',\n    exportAs: 'virtualScroll',\n    template: `\n        <div *ngIf=\"enabled\" class=\"total-padding\" [style.height]=\"scrollHeight + 'px'\"></div>\n        <div #content\n             [class.scrollable-content]=\"enabled\"\n             [style.transform]=\"enabled ? 'translateY(' + topPadding + 'px)' : 'none'\"\n             [style.webkitTransform]=\"enabled ? 'translateY(' + topPadding + 'px)' : 'none'\">\n            <ng-content></ng-content>\n        </div>\n    `,\n    host: {\n        '[style.overflow-y]': 'parentScroll ? \\'hidden\\' : \\'auto\\''\n    },\n    styles: [`\n        :host {\n            overflow: hidden;\n            position: relative;\n            display: block;\n            -webkit-overflow-scrolling: touch;\n        }\n\n        .scrollable-content {\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            position: absolute;\n        }\n\n        .total-padding {\n            width: 1px;\n            opacity: 0;\n        }\n    `]\n})\nexport class VirtualScrollComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    items: any[] = [];\n\n    @Input()\n    scrollbarWidth: number;\n\n    @Input()\n    scrollbarHeight: number;\n\n    @Input()\n    childWidth: number;\n\n    @Input()\n    childHeight: number;\n\n    @Input()\n    bufferAmount = 0;\n\n    @Output()\n    update: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n    @ViewChild('content', {read: ElementRef})\n    contentElementRef: ElementRef;\n\n    @ContentChild('container')\n    containerElementRef: ElementRef;\n\n    topPadding: number;\n    scrollHeight: number;\n\n    private previousStart: number;\n    private previousEnd: number;\n    private startupLoop = true;\n    private disposeScrollListener = () => {};\n\n    constructor(private element: ElementRef, private zone: NgZone, private renderer: Renderer2) {\n    }\n\n    get enabled() {\n        return this.items && this.items.length > 20;\n    }\n\n    handleScroll() {\n        const handler = () => {\n            if (!this.enabled) {\n                this.update.emit(this.items);\n                return;\n            }\n            this.refresh();\n        };\n        this.disposeScrollListener = this.renderer.listen(this.element.nativeElement, 'scroll', handler);\n    }\n\n    ngOnInit() {\n        this.handleScroll();\n        this.scrollbarWidth = 0; // this.element.nativeElement.offsetWidth - this.element.nativeElement.clientWidth;\n        this.scrollbarHeight = 0; // this.element.nativeElement.offsetHeight - this.element.nativeElement.clientHeight;\n    }\n\n    ngOnDestroy() {\n        this.disposeScrollListener();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.previousStart = undefined;\n        this.previousEnd = undefined;\n        const items = (changes as any).items || {};\n        if ((changes as any).items !== undefined && items.previousValue === undefined ||\n            (items.previousValue !== undefined && items.previousValue.length === 0)) {\n            this.startupLoop = true;\n        }\n        this.items = items.currentValue;\n        this.refresh();\n    }\n\n    refresh() {\n        if (!this.enabled) {\n            this.update.emit(this.items);\n            return;\n        }\n        this.zone.runOutsideAngular(() => {\n            requestAnimationFrame(() => this.calculateItems());\n        });\n    }\n\n    scrollInto(item: any) {\n        let el: Element = this.element.nativeElement;\n        let index: number = (this.items || []).indexOf(item);\n        if (index < 0 || index >= (this.items || []).length) {\n            return;\n        }\n\n        const d = this.calculateDimensions();\n        const buffer = Math.floor(d.viewHeight / d.childHeight) - 1;\n        el.scrollTop = (Math.floor(index / d.itemsPerRow) * d.childHeight)\n            - (d.childHeight * Math.min(index, buffer));\n        this.refresh();\n    }\n\n    private countItemsPerRow() {\n        let offsetTop;\n        let itemsPerRow;\n        let children = this.contentElementRef.nativeElement.children;\n        for (itemsPerRow = 0; itemsPerRow < children.length; itemsPerRow++) {\n            if (offsetTop !== undefined && offsetTop !== children[itemsPerRow].offsetTop) {\n                break;\n            }\n            offsetTop = children[itemsPerRow].offsetTop;\n        }\n        return itemsPerRow;\n    }\n\n    private getElementsOffset(): number {\n        let offsetTop = 0;\n        if (this.containerElementRef && this.containerElementRef.nativeElement) {\n            offsetTop += this.containerElementRef.nativeElement.offsetTop;\n        }\n        return offsetTop;\n    }\n\n    private calculateDimensions() {\n        let el: Element = this.element.nativeElement;\n        let items = this.items || [];\n        let itemCount = items.length;\n        let viewWidth = el.clientWidth - this.scrollbarWidth;\n        let viewHeight = el.clientHeight - this.scrollbarHeight;\n\n        let contentDimensions;\n        if (this.childWidth === undefined || this.childHeight === undefined) {\n            let content = this.contentElementRef.nativeElement;\n            if (this.containerElementRef && this.containerElementRef.nativeElement) {\n                content = this.containerElementRef.nativeElement;\n            }\n            contentDimensions = content.children[0] ? content.children[0].getBoundingClientRect() : {\n                width: viewWidth,\n                height: viewHeight\n            };\n        }\n        let childWidth = this.childWidth || contentDimensions.width;\n        let childHeight = this.childHeight || contentDimensions.height;\n\n        let itemsPerRow = Math.max(1, this.countItemsPerRow());\n        let itemsPerRowByCalc = Math.max(1, Math.floor(viewWidth / childWidth));\n        let itemsPerCol = Math.max(1, Math.floor(viewHeight / childHeight));\n        let scrollTop = Math.max(0, el.scrollTop);\n        if (itemsPerCol === 1 && Math.floor(scrollTop / this.scrollHeight * itemCount) + itemsPerRowByCalc >= itemCount) {\n            itemsPerRow = itemsPerRowByCalc;\n        }\n\n        return {\n            itemCount: itemCount,\n            viewWidth: viewWidth,\n            viewHeight: viewHeight,\n            childWidth: childWidth,\n            childHeight: childHeight,\n            itemsPerRow: itemsPerRow,\n            itemsPerCol: itemsPerCol,\n            itemsPerRowByCalc: itemsPerRowByCalc\n        };\n    }\n\n    private calculateItems() {\n        NgZone.assertNotInAngularZone();\n        let el = this.element.nativeElement;\n\n        let d = this.calculateDimensions();\n        let items = this.items || [];\n        let offsetTop = this.getElementsOffset();\n        this.scrollHeight = d.childHeight * d.itemCount / d.itemsPerRow;\n        if (el.scrollTop > this.scrollHeight) {\n            el.scrollTop = this.scrollHeight + offsetTop;\n        }\n\n        let scrollTop = Math.max(0, el.scrollTop - offsetTop);\n        let indexByScrollTop = scrollTop / this.scrollHeight * d.itemCount / d.itemsPerRow;\n        let end = Math.min(d.itemCount, Math.ceil(indexByScrollTop) * d.itemsPerRow + d.itemsPerRow * (d.itemsPerCol + 1));\n\n        let maxStartEnd = end;\n        const modEnd = end % d.itemsPerRow;\n        if (modEnd) {\n            maxStartEnd = end + d.itemsPerRow - modEnd;\n        }\n        let maxStart = Math.max(0, maxStartEnd - d.itemsPerCol * d.itemsPerRow - d.itemsPerRow);\n        let start = Math.min(maxStart, Math.floor(indexByScrollTop) * d.itemsPerRow);\n\n        this.topPadding = d.childHeight * Math.ceil(start / d.itemsPerRow) - (d.childHeight * Math.min(start, this.bufferAmount));\n\n        start = !isNaN(start) ? start : -1;\n        end = !isNaN(end) ? end : -1;\n        start -= this.bufferAmount;\n        start = Math.max(0, start);\n        end += this.bufferAmount;\n        end = Math.min(items.length, end);\n        if (start !== this.previousStart || end !== this.previousEnd) {\n\n            // update the scroll list\n            this.zone.run(() => {\n                this.update.emit(items.slice(start, end));\n            });\n\n            this.previousStart = start;\n            this.previousEnd = end;\n\n            if (this.startupLoop === true) {\n                this.refresh();\n            }\n\n        } else if (this.startupLoop === true) {\n            this.startupLoop = false;\n            this.refresh();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [VirtualScrollComponent],\n    declarations: [VirtualScrollComponent]\n})\nexport class VirtualScrollModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./src/ng-select/virtual-scroll.component.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./demo/main.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { SelectWithTemplatesComponent } from './examples/custom-templates.component';\nimport { SelectBindingsComponent } from './examples/bindings.component';\nimport { SelectSearchComponent } from './examples/search.component';\nimport { ReactiveFormsComponent } from './examples/reactive-forms.component';\nimport { SelectEventsComponent } from './examples/events.component';\nimport { SelectMultiComponent } from './examples/multi.component';\nimport { SelectTagsComponent } from './examples/tags.component';\n\nimport { LayoutHeaderComponent } from './layout/header.component';\nimport { LayoutSidenavComponent } from './layout/sidenav-component';\n\nconst appRoutes: Routes = [\n    {\n        path: '',\n        redirectTo: '/forms',\n        pathMatch: 'full'\n    },\n    { path: 'forms', component: ReactiveFormsComponent, data: { title: 'Real life example' } },\n    { path: 'bindings', component: SelectBindingsComponent, data: { title: 'Data bindings' } },\n    { path: 'filter', component: SelectSearchComponent, data: { title: 'Filter and autocomplete'} },\n    { path: 'tags', component: SelectTagsComponent, data: { title: 'Tags'} },\n    { path: 'templates', component: SelectWithTemplatesComponent, data: { title: 'Templates'} },\n    { path: 'multiselect', component: SelectMultiComponent, data: { title: 'Multiselect'} },\n    { path: 'events', component: SelectEventsComponent, data: { title: 'Output events'} },\n];\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        NgSelectModule.forRoot({ notFoundText: 'No items found', typeToSearchText: 'Type to search', addTagText: 'Add item' }),\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        NgbModule.forRoot(),\n        RouterModule.forRoot(\n            appRoutes,\n            {\n                useHash: true\n            }\n        )\n    ],\n    declarations: [\n        AppComponent,\n        SelectWithTemplatesComponent,\n        SelectBindingsComponent,\n        SelectSearchComponent,\n        ReactiveFormsComponent,\n        SelectEventsComponent,\n        SelectMultiComponent,\n        SelectTagsComponent,\n        LayoutHeaderComponent,\n        LayoutSidenavComponent\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./demo/app/app.module.ts","export { NgSelectComponent } from './ng-select/ng-select.component';\nexport { NgSelectModule } from './ng-select/ng-select.module';\nexport { NgOption, NgSelectConfig } from './ng-select/ng-select.types';\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./src/index.ts","import { NgOption } from './ng-select.types';\nimport * as searchHelper from './search-helper';\n\nexport class ItemsList {\n\n    items: NgOption[] = [];\n    filteredItems: NgOption[] = [];\n\n    private _markedIndex = -1;\n    private _selected: NgOption[] = [];\n    private _multiple = false;\n\n    get value(): NgOption[] {\n        return this._selected;\n    }\n\n    get markedItem(): NgOption {\n        return this.filteredItems[this._markedIndex];\n    }\n\n    setItems(items: NgOption[]) {\n        this.items = this.mapItems(items);\n        this.filteredItems = [...this.items];\n    }\n\n    setMultiple(multiple: boolean) {\n        this._multiple = multiple;\n        this.clearSelected();\n    }\n\n    select(item: NgOption) {\n        if (!this._multiple) {\n            this.clearSelected();\n        }\n        this._selected.push(item);\n        item.selected = true;\n    }\n\n    findItem(value, bindLabel: string, bindValue: string): NgOption {\n        if (bindValue) {\n            return this.items.find(x => x[bindValue] === value);\n        }\n        const index = this.items.indexOf(value);\n        return index > -1 ? this.items[index] :\n            this.items.find(x => x[bindLabel] === value[bindLabel])\n    }\n\n    unselect(item: NgOption) {\n        this._selected = this._selected.filter(x => x !== item);\n        item.selected = false;\n    }\n\n    unselectLastItem() {\n        if (this._selected.length === 0) {\n            return;\n        }\n\n        this._selected[this._selected.length - 1].selected = false;\n        this._selected.splice(this._selected.length - 1, 1);\n    }\n\n    addTag(item: NgOption) {\n        item.index = this.items.length;\n        this.items.push(item);\n        this.filteredItems.push(item);\n    }\n\n    clearSelected() {\n        this._selected.forEach((item) => {\n            item.selected = false;\n            item.marked = false;\n        });\n        this._selected = [];\n    }\n\n    filter(term: string, bindLabel: string) {\n        const filterFuncVal = this.getDefaultFilterFunc(term, bindLabel);\n        this.filteredItems = term ? this.items.filter(val => filterFuncVal(val)) : this.items;\n        this._markedIndex = 0;\n    }\n\n    clearFilter() {\n        this.filteredItems = [...this.items];\n    }\n\n    markNextItem() {\n        this.stepToItem(+1);\n    }\n\n    markPreviousItem() {\n        this.stepToItem(-1);\n    }\n\n    markItem(item: NgOption = null) {\n        if (this.filteredItems.length === 0) {\n            return;\n        }\n\n        item = item || this.lastSelectedItem;\n        if (item) {\n            this._markedIndex = this.filteredItems.indexOf(item);\n        } else {\n            this._markedIndex = 0;\n        }\n    }\n\n    private getNextItemIndex(steps: number) {\n        if (steps > 0) {\n            return (this._markedIndex === this.filteredItems.length - 1) ? 0 : (this._markedIndex + 1);\n        } else {\n            return (this._markedIndex === 0) ? (this.filteredItems.length - 1) : (this._markedIndex - 1);\n        }\n    }\n\n    private stepToItem(steps: number) {\n        if (this.filteredItems.length === 0) {\n            return;\n        }\n\n        this._markedIndex = this.getNextItemIndex(steps);\n        while (this.markedItem.disabled) {\n            this.stepToItem(steps);\n        }\n    }\n\n    private getDefaultFilterFunc(term, bindLabel: string) {\n        return (val: NgOption) => {\n            return searchHelper.stripSpecialChars(val[bindLabel])\n                .toUpperCase()\n                .indexOf(searchHelper.stripSpecialChars(term).toUpperCase()) > -1;\n        };\n    }\n\n    private get lastSelectedItem() {\n        return this._selected[this._selected.length - 1];\n    }\n\n    private mapItems(items: NgOption[]) {\n        return items.map((item, index) => {\n            return {\n                index: index,\n                ...item\n            };\n        })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./src/ng-select/items-list.ts","const diacritics = {\n    '\\u24B6': 'A',\n    '\\uFF21': 'A',\n    '\\u00C0': 'A',\n    '\\u00C1': 'A',\n    '\\u00C2': 'A',\n    '\\u1EA6': 'A',\n    '\\u1EA4': 'A',\n    '\\u1EAA': 'A',\n    '\\u1EA8': 'A',\n    '\\u00C3': 'A',\n    '\\u0100': 'A',\n    '\\u0102': 'A',\n    '\\u1EB0': 'A',\n    '\\u1EAE': 'A',\n    '\\u1EB4': 'A',\n    '\\u1EB2': 'A',\n    '\\u0226': 'A',\n    '\\u01E0': 'A',\n    '\\u00C4': 'A',\n    '\\u01DE': 'A',\n    '\\u1EA2': 'A',\n    '\\u00C5': 'A',\n    '\\u01FA': 'A',\n    '\\u01CD': 'A',\n    '\\u0200': 'A',\n    '\\u0202': 'A',\n    '\\u1EA0': 'A',\n    '\\u1EAC': 'A',\n    '\\u1EB6': 'A',\n    '\\u1E00': 'A',\n    '\\u0104': 'A',\n    '\\u023A': 'A',\n    '\\u2C6F': 'A',\n    '\\uA732': 'AA',\n    '\\u00C6': 'AE',\n    '\\u01FC': 'AE',\n    '\\u01E2': 'AE',\n    '\\uA734': 'AO',\n    '\\uA736': 'AU',\n    '\\uA738': 'AV',\n    '\\uA73A': 'AV',\n    '\\uA73C': 'AY',\n    '\\u24B7': 'B',\n    '\\uFF22': 'B',\n    '\\u1E02': 'B',\n    '\\u1E04': 'B',\n    '\\u1E06': 'B',\n    '\\u0243': 'B',\n    '\\u0182': 'B',\n    '\\u0181': 'B',\n    '\\u24B8': 'C',\n    '\\uFF23': 'C',\n    '\\u0106': 'C',\n    '\\u0108': 'C',\n    '\\u010A': 'C',\n    '\\u010C': 'C',\n    '\\u00C7': 'C',\n    '\\u1E08': 'C',\n    '\\u0187': 'C',\n    '\\u023B': 'C',\n    '\\uA73E': 'C',\n    '\\u24B9': 'D',\n    '\\uFF24': 'D',\n    '\\u1E0A': 'D',\n    '\\u010E': 'D',\n    '\\u1E0C': 'D',\n    '\\u1E10': 'D',\n    '\\u1E12': 'D',\n    '\\u1E0E': 'D',\n    '\\u0110': 'D',\n    '\\u018B': 'D',\n    '\\u018A': 'D',\n    '\\u0189': 'D',\n    '\\uA779': 'D',\n    '\\u01F1': 'DZ',\n    '\\u01C4': 'DZ',\n    '\\u01F2': 'Dz',\n    '\\u01C5': 'Dz',\n    '\\u24BA': 'E',\n    '\\uFF25': 'E',\n    '\\u00C8': 'E',\n    '\\u00C9': 'E',\n    '\\u00CA': 'E',\n    '\\u1EC0': 'E',\n    '\\u1EBE': 'E',\n    '\\u1EC4': 'E',\n    '\\u1EC2': 'E',\n    '\\u1EBC': 'E',\n    '\\u0112': 'E',\n    '\\u1E14': 'E',\n    '\\u1E16': 'E',\n    '\\u0114': 'E',\n    '\\u0116': 'E',\n    '\\u00CB': 'E',\n    '\\u1EBA': 'E',\n    '\\u011A': 'E',\n    '\\u0204': 'E',\n    '\\u0206': 'E',\n    '\\u1EB8': 'E',\n    '\\u1EC6': 'E',\n    '\\u0228': 'E',\n    '\\u1E1C': 'E',\n    '\\u0118': 'E',\n    '\\u1E18': 'E',\n    '\\u1E1A': 'E',\n    '\\u0190': 'E',\n    '\\u018E': 'E',\n    '\\u24BB': 'F',\n    '\\uFF26': 'F',\n    '\\u1E1E': 'F',\n    '\\u0191': 'F',\n    '\\uA77B': 'F',\n    '\\u24BC': 'G',\n    '\\uFF27': 'G',\n    '\\u01F4': 'G',\n    '\\u011C': 'G',\n    '\\u1E20': 'G',\n    '\\u011E': 'G',\n    '\\u0120': 'G',\n    '\\u01E6': 'G',\n    '\\u0122': 'G',\n    '\\u01E4': 'G',\n    '\\u0193': 'G',\n    '\\uA7A0': 'G',\n    '\\uA77D': 'G',\n    '\\uA77E': 'G',\n    '\\u24BD': 'H',\n    '\\uFF28': 'H',\n    '\\u0124': 'H',\n    '\\u1E22': 'H',\n    '\\u1E26': 'H',\n    '\\u021E': 'H',\n    '\\u1E24': 'H',\n    '\\u1E28': 'H',\n    '\\u1E2A': 'H',\n    '\\u0126': 'H',\n    '\\u2C67': 'H',\n    '\\u2C75': 'H',\n    '\\uA78D': 'H',\n    '\\u24BE': 'I',\n    '\\uFF29': 'I',\n    '\\u00CC': 'I',\n    '\\u00CD': 'I',\n    '\\u00CE': 'I',\n    '\\u0128': 'I',\n    '\\u012A': 'I',\n    '\\u012C': 'I',\n    '\\u0130': 'I',\n    '\\u00CF': 'I',\n    '\\u1E2E': 'I',\n    '\\u1EC8': 'I',\n    '\\u01CF': 'I',\n    '\\u0208': 'I',\n    '\\u020A': 'I',\n    '\\u1ECA': 'I',\n    '\\u012E': 'I',\n    '\\u1E2C': 'I',\n    '\\u0197': 'I',\n    '\\u24BF': 'J',\n    '\\uFF2A': 'J',\n    '\\u0134': 'J',\n    '\\u0248': 'J',\n    '\\u24C0': 'K',\n    '\\uFF2B': 'K',\n    '\\u1E30': 'K',\n    '\\u01E8': 'K',\n    '\\u1E32': 'K',\n    '\\u0136': 'K',\n    '\\u1E34': 'K',\n    '\\u0198': 'K',\n    '\\u2C69': 'K',\n    '\\uA740': 'K',\n    '\\uA742': 'K',\n    '\\uA744': 'K',\n    '\\uA7A2': 'K',\n    '\\u24C1': 'L',\n    '\\uFF2C': 'L',\n    '\\u013F': 'L',\n    '\\u0139': 'L',\n    '\\u013D': 'L',\n    '\\u1E36': 'L',\n    '\\u1E38': 'L',\n    '\\u013B': 'L',\n    '\\u1E3C': 'L',\n    '\\u1E3A': 'L',\n    '\\u0141': 'L',\n    '\\u023D': 'L',\n    '\\u2C62': 'L',\n    '\\u2C60': 'L',\n    '\\uA748': 'L',\n    '\\uA746': 'L',\n    '\\uA780': 'L',\n    '\\u01C7': 'LJ',\n    '\\u01C8': 'Lj',\n    '\\u24C2': 'M',\n    '\\uFF2D': 'M',\n    '\\u1E3E': 'M',\n    '\\u1E40': 'M',\n    '\\u1E42': 'M',\n    '\\u2C6E': 'M',\n    '\\u019C': 'M',\n    '\\u24C3': 'N',\n    '\\uFF2E': 'N',\n    '\\u01F8': 'N',\n    '\\u0143': 'N',\n    '\\u00D1': 'N',\n    '\\u1E44': 'N',\n    '\\u0147': 'N',\n    '\\u1E46': 'N',\n    '\\u0145': 'N',\n    '\\u1E4A': 'N',\n    '\\u1E48': 'N',\n    '\\u0220': 'N',\n    '\\u019D': 'N',\n    '\\uA790': 'N',\n    '\\uA7A4': 'N',\n    '\\u01CA': 'NJ',\n    '\\u01CB': 'Nj',\n    '\\u24C4': 'O',\n    '\\uFF2F': 'O',\n    '\\u00D2': 'O',\n    '\\u00D3': 'O',\n    '\\u00D4': 'O',\n    '\\u1ED2': 'O',\n    '\\u1ED0': 'O',\n    '\\u1ED6': 'O',\n    '\\u1ED4': 'O',\n    '\\u00D5': 'O',\n    '\\u1E4C': 'O',\n    '\\u022C': 'O',\n    '\\u1E4E': 'O',\n    '\\u014C': 'O',\n    '\\u1E50': 'O',\n    '\\u1E52': 'O',\n    '\\u014E': 'O',\n    '\\u022E': 'O',\n    '\\u0230': 'O',\n    '\\u00D6': 'O',\n    '\\u022A': 'O',\n    '\\u1ECE': 'O',\n    '\\u0150': 'O',\n    '\\u01D1': 'O',\n    '\\u020C': 'O',\n    '\\u020E': 'O',\n    '\\u01A0': 'O',\n    '\\u1EDC': 'O',\n    '\\u1EDA': 'O',\n    '\\u1EE0': 'O',\n    '\\u1EDE': 'O',\n    '\\u1EE2': 'O',\n    '\\u1ECC': 'O',\n    '\\u1ED8': 'O',\n    '\\u01EA': 'O',\n    '\\u01EC': 'O',\n    '\\u00D8': 'O',\n    '\\u01FE': 'O',\n    '\\u0186': 'O',\n    '\\u019F': 'O',\n    '\\uA74A': 'O',\n    '\\uA74C': 'O',\n    '\\u01A2': 'OI',\n    '\\uA74E': 'OO',\n    '\\u0222': 'OU',\n    '\\u24C5': 'P',\n    '\\uFF30': 'P',\n    '\\u1E54': 'P',\n    '\\u1E56': 'P',\n    '\\u01A4': 'P',\n    '\\u2C63': 'P',\n    '\\uA750': 'P',\n    '\\uA752': 'P',\n    '\\uA754': 'P',\n    '\\u24C6': 'Q',\n    '\\uFF31': 'Q',\n    '\\uA756': 'Q',\n    '\\uA758': 'Q',\n    '\\u024A': 'Q',\n    '\\u24C7': 'R',\n    '\\uFF32': 'R',\n    '\\u0154': 'R',\n    '\\u1E58': 'R',\n    '\\u0158': 'R',\n    '\\u0210': 'R',\n    '\\u0212': 'R',\n    '\\u1E5A': 'R',\n    '\\u1E5C': 'R',\n    '\\u0156': 'R',\n    '\\u1E5E': 'R',\n    '\\u024C': 'R',\n    '\\u2C64': 'R',\n    '\\uA75A': 'R',\n    '\\uA7A6': 'R',\n    '\\uA782': 'R',\n    '\\u24C8': 'S',\n    '\\uFF33': 'S',\n    '\\u1E9E': 'S',\n    '\\u015A': 'S',\n    '\\u1E64': 'S',\n    '\\u015C': 'S',\n    '\\u1E60': 'S',\n    '\\u0160': 'S',\n    '\\u1E66': 'S',\n    '\\u1E62': 'S',\n    '\\u1E68': 'S',\n    '\\u0218': 'S',\n    '\\u015E': 'S',\n    '\\u2C7E': 'S',\n    '\\uA7A8': 'S',\n    '\\uA784': 'S',\n    '\\u24C9': 'T',\n    '\\uFF34': 'T',\n    '\\u1E6A': 'T',\n    '\\u0164': 'T',\n    '\\u1E6C': 'T',\n    '\\u021A': 'T',\n    '\\u0162': 'T',\n    '\\u1E70': 'T',\n    '\\u1E6E': 'T',\n    '\\u0166': 'T',\n    '\\u01AC': 'T',\n    '\\u01AE': 'T',\n    '\\u023E': 'T',\n    '\\uA786': 'T',\n    '\\uA728': 'TZ',\n    '\\u24CA': 'U',\n    '\\uFF35': 'U',\n    '\\u00D9': 'U',\n    '\\u00DA': 'U',\n    '\\u00DB': 'U',\n    '\\u0168': 'U',\n    '\\u1E78': 'U',\n    '\\u016A': 'U',\n    '\\u1E7A': 'U',\n    '\\u016C': 'U',\n    '\\u00DC': 'U',\n    '\\u01DB': 'U',\n    '\\u01D7': 'U',\n    '\\u01D5': 'U',\n    '\\u01D9': 'U',\n    '\\u1EE6': 'U',\n    '\\u016E': 'U',\n    '\\u0170': 'U',\n    '\\u01D3': 'U',\n    '\\u0214': 'U',\n    '\\u0216': 'U',\n    '\\u01AF': 'U',\n    '\\u1EEA': 'U',\n    '\\u1EE8': 'U',\n    '\\u1EEE': 'U',\n    '\\u1EEC': 'U',\n    '\\u1EF0': 'U',\n    '\\u1EE4': 'U',\n    '\\u1E72': 'U',\n    '\\u0172': 'U',\n    '\\u1E76': 'U',\n    '\\u1E74': 'U',\n    '\\u0244': 'U',\n    '\\u24CB': 'V',\n    '\\uFF36': 'V',\n    '\\u1E7C': 'V',\n    '\\u1E7E': 'V',\n    '\\u01B2': 'V',\n    '\\uA75E': 'V',\n    '\\u0245': 'V',\n    '\\uA760': 'VY',\n    '\\u24CC': 'W',\n    '\\uFF37': 'W',\n    '\\u1E80': 'W',\n    '\\u1E82': 'W',\n    '\\u0174': 'W',\n    '\\u1E86': 'W',\n    '\\u1E84': 'W',\n    '\\u1E88': 'W',\n    '\\u2C72': 'W',\n    '\\u24CD': 'X',\n    '\\uFF38': 'X',\n    '\\u1E8A': 'X',\n    '\\u1E8C': 'X',\n    '\\u24CE': 'Y',\n    '\\uFF39': 'Y',\n    '\\u1EF2': 'Y',\n    '\\u00DD': 'Y',\n    '\\u0176': 'Y',\n    '\\u1EF8': 'Y',\n    '\\u0232': 'Y',\n    '\\u1E8E': 'Y',\n    '\\u0178': 'Y',\n    '\\u1EF6': 'Y',\n    '\\u1EF4': 'Y',\n    '\\u01B3': 'Y',\n    '\\u024E': 'Y',\n    '\\u1EFE': 'Y',\n    '\\u24CF': 'Z',\n    '\\uFF3A': 'Z',\n    '\\u0179': 'Z',\n    '\\u1E90': 'Z',\n    '\\u017B': 'Z',\n    '\\u017D': 'Z',\n    '\\u1E92': 'Z',\n    '\\u1E94': 'Z',\n    '\\u01B5': 'Z',\n    '\\u0224': 'Z',\n    '\\u2C7F': 'Z',\n    '\\u2C6B': 'Z',\n    '\\uA762': 'Z',\n    '\\u24D0': 'a',\n    '\\uFF41': 'a',\n    '\\u1E9A': 'a',\n    '\\u00E0': 'a',\n    '\\u00E1': 'a',\n    '\\u00E2': 'a',\n    '\\u1EA7': 'a',\n    '\\u1EA5': 'a',\n    '\\u1EAB': 'a',\n    '\\u1EA9': 'a',\n    '\\u00E3': 'a',\n    '\\u0101': 'a',\n    '\\u0103': 'a',\n    '\\u1EB1': 'a',\n    '\\u1EAF': 'a',\n    '\\u1EB5': 'a',\n    '\\u1EB3': 'a',\n    '\\u0227': 'a',\n    '\\u01E1': 'a',\n    '\\u00E4': 'a',\n    '\\u01DF': 'a',\n    '\\u1EA3': 'a',\n    '\\u00E5': 'a',\n    '\\u01FB': 'a',\n    '\\u01CE': 'a',\n    '\\u0201': 'a',\n    '\\u0203': 'a',\n    '\\u1EA1': 'a',\n    '\\u1EAD': 'a',\n    '\\u1EB7': 'a',\n    '\\u1E01': 'a',\n    '\\u0105': 'a',\n    '\\u2C65': 'a',\n    '\\u0250': 'a',\n    '\\uA733': 'aa',\n    '\\u00E6': 'ae',\n    '\\u01FD': 'ae',\n    '\\u01E3': 'ae',\n    '\\uA735': 'ao',\n    '\\uA737': 'au',\n    '\\uA739': 'av',\n    '\\uA73B': 'av',\n    '\\uA73D': 'ay',\n    '\\u24D1': 'b',\n    '\\uFF42': 'b',\n    '\\u1E03': 'b',\n    '\\u1E05': 'b',\n    '\\u1E07': 'b',\n    '\\u0180': 'b',\n    '\\u0183': 'b',\n    '\\u0253': 'b',\n    '\\u24D2': 'c',\n    '\\uFF43': 'c',\n    '\\u0107': 'c',\n    '\\u0109': 'c',\n    '\\u010B': 'c',\n    '\\u010D': 'c',\n    '\\u00E7': 'c',\n    '\\u1E09': 'c',\n    '\\u0188': 'c',\n    '\\u023C': 'c',\n    '\\uA73F': 'c',\n    '\\u2184': 'c',\n    '\\u24D3': 'd',\n    '\\uFF44': 'd',\n    '\\u1E0B': 'd',\n    '\\u010F': 'd',\n    '\\u1E0D': 'd',\n    '\\u1E11': 'd',\n    '\\u1E13': 'd',\n    '\\u1E0F': 'd',\n    '\\u0111': 'd',\n    '\\u018C': 'd',\n    '\\u0256': 'd',\n    '\\u0257': 'd',\n    '\\uA77A': 'd',\n    '\\u01F3': 'dz',\n    '\\u01C6': 'dz',\n    '\\u24D4': 'e',\n    '\\uFF45': 'e',\n    '\\u00E8': 'e',\n    '\\u00E9': 'e',\n    '\\u00EA': 'e',\n    '\\u1EC1': 'e',\n    '\\u1EBF': 'e',\n    '\\u1EC5': 'e',\n    '\\u1EC3': 'e',\n    '\\u1EBD': 'e',\n    '\\u0113': 'e',\n    '\\u1E15': 'e',\n    '\\u1E17': 'e',\n    '\\u0115': 'e',\n    '\\u0117': 'e',\n    '\\u00EB': 'e',\n    '\\u1EBB': 'e',\n    '\\u011B': 'e',\n    '\\u0205': 'e',\n    '\\u0207': 'e',\n    '\\u1EB9': 'e',\n    '\\u1EC7': 'e',\n    '\\u0229': 'e',\n    '\\u1E1D': 'e',\n    '\\u0119': 'e',\n    '\\u1E19': 'e',\n    '\\u1E1B': 'e',\n    '\\u0247': 'e',\n    '\\u025B': 'e',\n    '\\u01DD': 'e',\n    '\\u24D5': 'f',\n    '\\uFF46': 'f',\n    '\\u1E1F': 'f',\n    '\\u0192': 'f',\n    '\\uA77C': 'f',\n    '\\u24D6': 'g',\n    '\\uFF47': 'g',\n    '\\u01F5': 'g',\n    '\\u011D': 'g',\n    '\\u1E21': 'g',\n    '\\u011F': 'g',\n    '\\u0121': 'g',\n    '\\u01E7': 'g',\n    '\\u0123': 'g',\n    '\\u01E5': 'g',\n    '\\u0260': 'g',\n    '\\uA7A1': 'g',\n    '\\u1D79': 'g',\n    '\\uA77F': 'g',\n    '\\u24D7': 'h',\n    '\\uFF48': 'h',\n    '\\u0125': 'h',\n    '\\u1E23': 'h',\n    '\\u1E27': 'h',\n    '\\u021F': 'h',\n    '\\u1E25': 'h',\n    '\\u1E29': 'h',\n    '\\u1E2B': 'h',\n    '\\u1E96': 'h',\n    '\\u0127': 'h',\n    '\\u2C68': 'h',\n    '\\u2C76': 'h',\n    '\\u0265': 'h',\n    '\\u0195': 'hv',\n    '\\u24D8': 'i',\n    '\\uFF49': 'i',\n    '\\u00EC': 'i',\n    '\\u00ED': 'i',\n    '\\u00EE': 'i',\n    '\\u0129': 'i',\n    '\\u012B': 'i',\n    '\\u012D': 'i',\n    '\\u00EF': 'i',\n    '\\u1E2F': 'i',\n    '\\u1EC9': 'i',\n    '\\u01D0': 'i',\n    '\\u0209': 'i',\n    '\\u020B': 'i',\n    '\\u1ECB': 'i',\n    '\\u012F': 'i',\n    '\\u1E2D': 'i',\n    '\\u0268': 'i',\n    '\\u0131': 'i',\n    '\\u24D9': 'j',\n    '\\uFF4A': 'j',\n    '\\u0135': 'j',\n    '\\u01F0': 'j',\n    '\\u0249': 'j',\n    '\\u24DA': 'k',\n    '\\uFF4B': 'k',\n    '\\u1E31': 'k',\n    '\\u01E9': 'k',\n    '\\u1E33': 'k',\n    '\\u0137': 'k',\n    '\\u1E35': 'k',\n    '\\u0199': 'k',\n    '\\u2C6A': 'k',\n    '\\uA741': 'k',\n    '\\uA743': 'k',\n    '\\uA745': 'k',\n    '\\uA7A3': 'k',\n    '\\u24DB': 'l',\n    '\\uFF4C': 'l',\n    '\\u0140': 'l',\n    '\\u013A': 'l',\n    '\\u013E': 'l',\n    '\\u1E37': 'l',\n    '\\u1E39': 'l',\n    '\\u013C': 'l',\n    '\\u1E3D': 'l',\n    '\\u1E3B': 'l',\n    '\\u017F': 'l',\n    '\\u0142': 'l',\n    '\\u019A': 'l',\n    '\\u026B': 'l',\n    '\\u2C61': 'l',\n    '\\uA749': 'l',\n    '\\uA781': 'l',\n    '\\uA747': 'l',\n    '\\u01C9': 'lj',\n    '\\u24DC': 'm',\n    '\\uFF4D': 'm',\n    '\\u1E3F': 'm',\n    '\\u1E41': 'm',\n    '\\u1E43': 'm',\n    '\\u0271': 'm',\n    '\\u026F': 'm',\n    '\\u24DD': 'n',\n    '\\uFF4E': 'n',\n    '\\u01F9': 'n',\n    '\\u0144': 'n',\n    '\\u00F1': 'n',\n    '\\u1E45': 'n',\n    '\\u0148': 'n',\n    '\\u1E47': 'n',\n    '\\u0146': 'n',\n    '\\u1E4B': 'n',\n    '\\u1E49': 'n',\n    '\\u019E': 'n',\n    '\\u0272': 'n',\n    '\\u0149': 'n',\n    '\\uA791': 'n',\n    '\\uA7A5': 'n',\n    '\\u01CC': 'nj',\n    '\\u24DE': 'o',\n    '\\uFF4F': 'o',\n    '\\u00F2': 'o',\n    '\\u00F3': 'o',\n    '\\u00F4': 'o',\n    '\\u1ED3': 'o',\n    '\\u1ED1': 'o',\n    '\\u1ED7': 'o',\n    '\\u1ED5': 'o',\n    '\\u00F5': 'o',\n    '\\u1E4D': 'o',\n    '\\u022D': 'o',\n    '\\u1E4F': 'o',\n    '\\u014D': 'o',\n    '\\u1E51': 'o',\n    '\\u1E53': 'o',\n    '\\u014F': 'o',\n    '\\u022F': 'o',\n    '\\u0231': 'o',\n    '\\u00F6': 'o',\n    '\\u022B': 'o',\n    '\\u1ECF': 'o',\n    '\\u0151': 'o',\n    '\\u01D2': 'o',\n    '\\u020D': 'o',\n    '\\u020F': 'o',\n    '\\u01A1': 'o',\n    '\\u1EDD': 'o',\n    '\\u1EDB': 'o',\n    '\\u1EE1': 'o',\n    '\\u1EDF': 'o',\n    '\\u1EE3': 'o',\n    '\\u1ECD': 'o',\n    '\\u1ED9': 'o',\n    '\\u01EB': 'o',\n    '\\u01ED': 'o',\n    '\\u00F8': 'o',\n    '\\u01FF': 'o',\n    '\\u0254': 'o',\n    '\\uA74B': 'o',\n    '\\uA74D': 'o',\n    '\\u0275': 'o',\n    '\\u01A3': 'oi',\n    '\\u0223': 'ou',\n    '\\uA74F': 'oo',\n    '\\u24DF': 'p',\n    '\\uFF50': 'p',\n    '\\u1E55': 'p',\n    '\\u1E57': 'p',\n    '\\u01A5': 'p',\n    '\\u1D7D': 'p',\n    '\\uA751': 'p',\n    '\\uA753': 'p',\n    '\\uA755': 'p',\n    '\\u24E0': 'q',\n    '\\uFF51': 'q',\n    '\\u024B': 'q',\n    '\\uA757': 'q',\n    '\\uA759': 'q',\n    '\\u24E1': 'r',\n    '\\uFF52': 'r',\n    '\\u0155': 'r',\n    '\\u1E59': 'r',\n    '\\u0159': 'r',\n    '\\u0211': 'r',\n    '\\u0213': 'r',\n    '\\u1E5B': 'r',\n    '\\u1E5D': 'r',\n    '\\u0157': 'r',\n    '\\u1E5F': 'r',\n    '\\u024D': 'r',\n    '\\u027D': 'r',\n    '\\uA75B': 'r',\n    '\\uA7A7': 'r',\n    '\\uA783': 'r',\n    '\\u24E2': 's',\n    '\\uFF53': 's',\n    '\\u00DF': 's',\n    '\\u015B': 's',\n    '\\u1E65': 's',\n    '\\u015D': 's',\n    '\\u1E61': 's',\n    '\\u0161': 's',\n    '\\u1E67': 's',\n    '\\u1E63': 's',\n    '\\u1E69': 's',\n    '\\u0219': 's',\n    '\\u015F': 's',\n    '\\u023F': 's',\n    '\\uA7A9': 's',\n    '\\uA785': 's',\n    '\\u1E9B': 's',\n    '\\u24E3': 't',\n    '\\uFF54': 't',\n    '\\u1E6B': 't',\n    '\\u1E97': 't',\n    '\\u0165': 't',\n    '\\u1E6D': 't',\n    '\\u021B': 't',\n    '\\u0163': 't',\n    '\\u1E71': 't',\n    '\\u1E6F': 't',\n    '\\u0167': 't',\n    '\\u01AD': 't',\n    '\\u0288': 't',\n    '\\u2C66': 't',\n    '\\uA787': 't',\n    '\\uA729': 'tz',\n    '\\u24E4': 'u',\n    '\\uFF55': 'u',\n    '\\u00F9': 'u',\n    '\\u00FA': 'u',\n    '\\u00FB': 'u',\n    '\\u0169': 'u',\n    '\\u1E79': 'u',\n    '\\u016B': 'u',\n    '\\u1E7B': 'u',\n    '\\u016D': 'u',\n    '\\u00FC': 'u',\n    '\\u01DC': 'u',\n    '\\u01D8': 'u',\n    '\\u01D6': 'u',\n    '\\u01DA': 'u',\n    '\\u1EE7': 'u',\n    '\\u016F': 'u',\n    '\\u0171': 'u',\n    '\\u01D4': 'u',\n    '\\u0215': 'u',\n    '\\u0217': 'u',\n    '\\u01B0': 'u',\n    '\\u1EEB': 'u',\n    '\\u1EE9': 'u',\n    '\\u1EEF': 'u',\n    '\\u1EED': 'u',\n    '\\u1EF1': 'u',\n    '\\u1EE5': 'u',\n    '\\u1E73': 'u',\n    '\\u0173': 'u',\n    '\\u1E77': 'u',\n    '\\u1E75': 'u',\n    '\\u0289': 'u',\n    '\\u24E5': 'v',\n    '\\uFF56': 'v',\n    '\\u1E7D': 'v',\n    '\\u1E7F': 'v',\n    '\\u028B': 'v',\n    '\\uA75F': 'v',\n    '\\u028C': 'v',\n    '\\uA761': 'vy',\n    '\\u24E6': 'w',\n    '\\uFF57': 'w',\n    '\\u1E81': 'w',\n    '\\u1E83': 'w',\n    '\\u0175': 'w',\n    '\\u1E87': 'w',\n    '\\u1E85': 'w',\n    '\\u1E98': 'w',\n    '\\u1E89': 'w',\n    '\\u2C73': 'w',\n    '\\u24E7': 'x',\n    '\\uFF58': 'x',\n    '\\u1E8B': 'x',\n    '\\u1E8D': 'x',\n    '\\u24E8': 'y',\n    '\\uFF59': 'y',\n    '\\u1EF3': 'y',\n    '\\u00FD': 'y',\n    '\\u0177': 'y',\n    '\\u1EF9': 'y',\n    '\\u0233': 'y',\n    '\\u1E8F': 'y',\n    '\\u00FF': 'y',\n    '\\u1EF7': 'y',\n    '\\u1E99': 'y',\n    '\\u1EF5': 'y',\n    '\\u01B4': 'y',\n    '\\u024F': 'y',\n    '\\u1EFF': 'y',\n    '\\u24E9': 'z',\n    '\\uFF5A': 'z',\n    '\\u017A': 'z',\n    '\\u1E91': 'z',\n    '\\u017C': 'z',\n    '\\u017E': 'z',\n    '\\u1E93': 'z',\n    '\\u1E95': 'z',\n    '\\u01B6': 'z',\n    '\\u0225': 'z',\n    '\\u0240': 'z',\n    '\\u2C6C': 'z',\n    '\\uA763': 'z',\n    '\\u0386': '\\u0391',\n    '\\u0388': '\\u0395',\n    '\\u0389': '\\u0397',\n    '\\u038A': '\\u0399',\n    '\\u03AA': '\\u0399',\n    '\\u038C': '\\u039F',\n    '\\u038E': '\\u03A5',\n    '\\u03AB': '\\u03A5',\n    '\\u038F': '\\u03A9',\n    '\\u03AC': '\\u03B1',\n    '\\u03AD': '\\u03B5',\n    '\\u03AE': '\\u03B7',\n    '\\u03AF': '\\u03B9',\n    '\\u03CA': '\\u03B9',\n    '\\u0390': '\\u03B9',\n    '\\u03CC': '\\u03BF',\n    '\\u03CD': '\\u03C5',\n    '\\u03CB': '\\u03C5',\n    '\\u03B0': '\\u03C5',\n    '\\u03C9': '\\u03C9',\n    '\\u03C2': '\\u03C3'\n};\n\nexport function stripSpecialChars(text: string): string {\n    const match = (a: string): string => {\n        return diacritics[a] || a;\n    };\n    return text.replace(/[^\\u0000-\\u007E]/g, match);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./src/ng-select/search-helper.ts","module.exports = \"<div (click)=\\\"handleSelectClick($event)\\\" class=\\\"ng-control\\\">\\n    <div class=\\\"ng-value-container\\\">\\n        <div class=\\\"ng-placeholder\\\" [hidden]=\\\"!showPlaceholder()\\\">{{placeholder}}</div>\\n        <ng-template #defaultLabelTemplate let-item=\\\"item\\\">\\n            <div class=\\\"ng-value-wrapper default\\\" [class.disabled]=\\\"item.disabled\\\">\\n                <span class=\\\"ng-value-icon left\\\" (click)=\\\"unselect(item); $event.stopPropagation()\\\" aria-hidden=\\\"true\\\">×</span>\\n                <span class=\\\"ng-value-label\\\">{{item[bindLabel]}}</span>\\n            </div>\\n        </ng-template>\\n\\n        <div class=\\\"ng-value\\\" *ngFor=\\\"let item of selectedItems\\\">\\n            <ng-template\\n                [ngTemplateOutlet]=\\\"labelTemplate || defaultLabelTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ item: item, clear: clearItem }\\\">\\n            </ng-template>\\n        </div>\\n\\n        <div *ngIf=\\\"showFilter()\\\" class=\\\"ng-input\\\">\\n            <input #filterInput\\n                   [value]=\\\"filterValue\\\"\\n                   (input)=\\\"onFilter($event)\\\"\\n                   (focus)=\\\"onInputFocus($event)\\\"\\n                   (blur)=\\\"onInputBlur($event)\\\"\\n                   role=\\\"combobox\\\"\\n                   aria-expanded=\\\"false\\\"\\n                   aria-owns=\\\"\\\"\\n                   aria-haspopup=\\\"false\\\">\\n        </div>\\n    </div>\\n\\n    <spinner class=\\\"ng-spinner-zone\\\" *ngIf=\\\"isLoading\\\"></spinner>\\n\\n    <span *ngIf=\\\"showClear()\\\" (click)=\\\"handleClearClick($event)\\\" class=\\\"ng-clear-zone\\\" title=\\\"Clear all\\\" aria-label=\\\"Clear all\\\">\\n        <span class=\\\"ng-clear\\\" aria-hidden=\\\"true\\\">×</span>\\n    </span>\\n\\n    <span (click)=\\\"handleArrowClick($event)\\\" class=\\\"ng-arrow-zone\\\">\\n        <span class=\\\"ng-arrow\\\"></span>\\n    </span>\\n</div>\\n\\n<div class=\\\"ng-menu-outer\\\">\\n    <virtual-scroll role=\\\"listbox\\\" class=\\\"ng-menu\\\" [bufferAmount]=\\\"4\\\" [items]=\\\"itemsList.filteredItems\\\" (update)=\\\"viewPortItems = $event\\\">\\n        <div class=\\\"ng-option\\\" role=\\\"option\\\" (click)=\\\"toggle(item)\\\" (mousedown)=\\\"$event.preventDefault()\\\" (mouseover)=\\\"onItemHover(item)\\\"\\n             *ngFor=\\\"let item of viewPortItems\\\"\\n             [class.disabled]=\\\"item.disabled\\\"\\n             [class.selected]=\\\"item.selected\\\"\\n             [class.marked]=\\\"item === itemsList.markedItem\\\">\\n\\n            <ng-template #defaultOptionTemplate>\\n                <span>{{item[bindLabel]}}</span>\\n            </ng-template>\\n\\n            <ng-template\\n                [ngTemplateOutlet]=\\\"optionTemplate || defaultOptionTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ item: item, index: item.index }\\\">\\n            </ng-template>\\n        </div>\\n        <div class=\\\"ng-option marked\\\" role=\\\"option\\\" (click)=\\\"selectTag()\\\" *ngIf=\\\"addTag && itemsList.filteredItems.length === 0\\\">\\n            <span><span class=\\\"ng-tag-label\\\">{{addTagText}}</span>{{filterValue}}</span>\\n        </div>\\n    </virtual-scroll>\\n\\n    <div class=\\\"ng-menu\\\" *ngIf=\\\"showNoItemsFound() && !addTag\\\">\\n        <div class=\\\"ng-option disabled\\\">\\n            {{notFoundText}}\\n        </div>\\n    </div>\\n\\n    <div class=\\\"ng-menu\\\" *ngIf=\\\"showTypeToSearch()\\\">\\n        <div class=\\\"ng-option disabled\\\">\\n            {{typeToSearchText}}\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ng-select/ng-select.component.html\n// module id = 187\n// module chunks = 1","module.exports = \"ng-select {\\n  position: relative;\\n  display: block;\\n  box-sizing: border-box; }\\n  ng-select div,\\n  ng-select input,\\n  ng-select span {\\n    box-sizing: border-box; }\\n  ng-select virtual-scroll {\\n    display: block;\\n    height: auto;\\n    box-sizing: border-box; }\\n  ng-select [hidden] {\\n    display: none; }\\n  ng-select.opened > .ng-control {\\n    border-bottom-right-radius: 0;\\n    border-bottom-left-radius: 0;\\n    background: #fff;\\n    border-color: #b3b3b3 #ccc #d9d9d9; }\\n  ng-select.opened > .ng-control .ng-arrow {\\n    top: -2px;\\n    border-color: transparent transparent #999;\\n    border-width: 0 5px 5px; }\\n    ng-select.opened > .ng-control .ng-arrow:hover {\\n      border-color: transparent transparent #666; }\\n  ng-select.opened .ng-menu-outer {\\n    visibility: visible; }\\n  ng-select:not(.opened) .ng-control .ng-value-container .ng-input {\\n    opacity: 0; }\\n  ng-select.focused:not(.opened) > .ng-control {\\n    border-color: #007eff;\\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 0 3px rgba(0, 126, 255, 0.1); }\\n  ng-select.disabled {\\n    pointer-events: none; }\\n    ng-select.disabled > .ng-control {\\n      background-color: #f9f9f9; }\\n  ng-select .ng-control {\\n    background-color: #fff;\\n    border-radius: 4px;\\n    border: 1px solid #ccc;\\n    color: #333;\\n    cursor: default;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-align: center;\\n        align-items: center;\\n    border-spacing: 0;\\n    border-collapse: separate;\\n    min-height: 36px;\\n    outline: none;\\n    overflow: hidden;\\n    position: relative;\\n    width: 100%; }\\n    ng-select .ng-control:hover {\\n      box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06); }\\n    ng-select .ng-control .ng-value-container {\\n      display: -ms-flexbox;\\n      display: flex;\\n      -ms-flex: 1;\\n          flex: 1;\\n      -ms-flex-align: center;\\n          align-items: center;\\n      padding-left: 10px; }\\n      ng-select .ng-control .ng-value-container .ng-placeholder {\\n        color: #aaa; }\\n      ng-select .ng-control .ng-value-container .ng-input > input {\\n        min-width: 5px;\\n        box-sizing: content-box;\\n        background: none transparent;\\n        border: 0 none;\\n        box-shadow: none;\\n        outline: none;\\n        cursor: default;\\n        width: 100%; }\\n  ng-select.ng-single.filtered .ng-control .ng-value-container .ng-value {\\n    visibility: hidden; }\\n  ng-select.ng-single .ng-control .ng-value-container {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n    ng-select.ng-single .ng-control .ng-value-container .ng-value {\\n      white-space: nowrap;\\n      overflow: hidden;\\n      text-overflow: ellipsis; }\\n      ng-select.ng-single .ng-control .ng-value-container .ng-value .ng-value-wrapper {\\n        white-space: nowrap;\\n        overflow: hidden;\\n        text-overflow: ellipsis; }\\n        ng-select.ng-single .ng-control .ng-value-container .ng-value .ng-value-wrapper .ng-value-icon {\\n          display: none; }\\n    ng-select.ng-single .ng-control .ng-value-container .ng-input {\\n      position: absolute;\\n      left: 0;\\n      padding-left: 10px;\\n      padding-right: 50px;\\n      width: 100%; }\\n  ng-select.ng-multiple.disabled > .ng-control .ng-value-container .ng-value .ng-value-wrapper.default {\\n    background-color: #f9f9f9;\\n    border: 1px solid #e3e3e3; }\\n    ng-select.ng-multiple.disabled > .ng-control .ng-value-container .ng-value .ng-value-wrapper.default .ng-value-icon {\\n      display: none; }\\n  ng-select.ng-multiple .ng-control .ng-value-container {\\n    padding-top: 5px;\\n    -ms-flex-wrap: wrap;\\n        flex-wrap: wrap;\\n    padding-left: 7px; }\\n    ng-select.ng-multiple .ng-control .ng-value-container .ng-placeholder {\\n      position: absolute; }\\n    ng-select.ng-multiple .ng-control .ng-value-container .ng-value {\\n      font-size: 0.9em;\\n      padding-right: 5px;\\n      padding-bottom: 5px;\\n      white-space: nowrap; }\\n      ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper {\\n        display: -ms-flexbox;\\n        display: flex; }\\n        ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper.default {\\n          background-color: #f5faff;\\n          border-radius: 2px;\\n          border: 1px solid #c2e0ff; }\\n          ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper.default.disabled {\\n            background-color: #f9f9f9;\\n            border: 1px solid #e3e3e3; }\\n          ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper.default .ng-value-icon:hover {\\n            background-color: #d8eafd; }\\n          ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper.default .ng-value-icon.left {\\n            border-right: 1px solid #c2e0ff; }\\n          ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper.default .ng-value-icon.right {\\n            border-left: 1px solid #c2e0ff; }\\n        ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper.disabled .ng-value-icon {\\n          display: none; }\\n        ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper .ng-value-label {\\n          padding: 0 5px; }\\n        ng-select.ng-multiple .ng-control .ng-value-container .ng-value .ng-value-wrapper .ng-value-icon {\\n          padding: 0 5px;\\n          cursor: pointer; }\\n    ng-select.ng-multiple .ng-control .ng-value-container .ng-input {\\n      -ms-flex: 1;\\n          flex: 1;\\n      padding-bottom: 5px;\\n      padding-left: 3px; }\\n    ng-select.ng-multiple .ng-control .ng-value-container .ng-placeholder {\\n      padding-bottom: 5px;\\n      padding-left: 3px; }\\n  ng-select .ng-menu-outer {\\n    visibility: hidden;\\n    border-bottom-right-radius: 4px;\\n    border-bottom-left-radius: 4px;\\n    background-color: #fff;\\n    border: 1px solid #ccc;\\n    border-top-color: #e6e6e6;\\n    box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);\\n    box-sizing: border-box;\\n    margin-top: -1px;\\n    max-height: 242px;\\n    position: absolute;\\n    top: 100%;\\n    width: 100%;\\n    z-index: 3;\\n    -webkit-overflow-scrolling: touch; }\\n  ng-select .ng-menu {\\n    max-height: 240px;\\n    overflow-y: auto; }\\n  ng-select .ng-option {\\n    box-sizing: border-box;\\n    background-color: #fff;\\n    color: #666666;\\n    cursor: pointer;\\n    display: block;\\n    padding: 8px 10px; }\\n    ng-select .ng-option:last-child {\\n      border-bottom-right-radius: 4px;\\n      border-bottom-left-radius: 4px; }\\n    ng-select .ng-option.selected {\\n      background-color: #f5faff;\\n      color: #333; }\\n    ng-select .ng-option.marked {\\n      background-color: #ebf5ff;\\n      color: #333; }\\n    ng-select .ng-option.disabled {\\n      color: #cccccc;\\n      cursor: default; }\\n    ng-select .ng-option .ng-tag-label {\\n      padding-right: 5px;\\n      font-size: 80%;\\n      font-weight: 400; }\\n  ng-select .ng-clear-zone {\\n    animation: Select-animation-fadeIn 200ms;\\n    color: #999;\\n    cursor: pointer;\\n    position: relative;\\n    width: 17px; }\\n    ng-select .ng-clear-zone .ng-clear {\\n      display: inline-block;\\n      font-size: 18px;\\n      line-height: 1; }\\n      ng-select .ng-clear-zone .ng-clear:hover {\\n        color: #D0021B; }\\n  ng-select .ng-spinner-zone {\\n    cursor: pointer;\\n    display: table-cell;\\n    position: relative;\\n    text-align: center;\\n    vertical-align: middle;\\n    width: 25px;\\n    padding-right: 5px;\\n    padding-top: 5px; }\\n  ng-select .ng-arrow-zone {\\n    cursor: pointer;\\n    display: table-cell;\\n    position: relative;\\n    text-align: center;\\n    vertical-align: middle;\\n    width: 25px;\\n    padding-right: 5px; }\\n    ng-select .ng-arrow-zone .ng-arrow {\\n      border-color: #999 transparent transparent;\\n      border-style: solid;\\n      border-width: 5px 5px 2.5px;\\n      display: inline-block;\\n      height: 0;\\n      width: 0;\\n      position: relative; }\\n      ng-select .ng-arrow-zone .ng-arrow:hover {\\n        border-top-color: #666; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ng-select/ng-select.component.scss\n// module id = 188\n// module chunks = 1","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { NgSelectComponent } from './ng-select.component';\nimport { NgOptionTemplateDirective, NgLabelTemplateDirective } from './ng-templates.directive';\nimport { VirtualScrollModule } from './virtual-scroll.component';\nimport { SpinnerComponent } from './spinner.component';\nimport { NgSelectConfig } from './ng-select.types';\n\n@NgModule({\n    declarations: [\n        NgSelectComponent,\n        NgOptionTemplateDirective,\n        NgLabelTemplateDirective,\n        SpinnerComponent\n    ],\n    imports: [\n        FormsModule,\n        CommonModule,\n        VirtualScrollModule\n    ],\n    exports: [\n        NgSelectComponent,\n        NgOptionTemplateDirective,\n        NgLabelTemplateDirective\n    ]\n})\nexport class NgSelectModule {\n    static forRoot(config: NgSelectConfig): ModuleWithProviders {\n        return provideModule(config);\n    }\n\n    static forChild(config: NgSelectConfig): ModuleWithProviders {\n        return provideModule(config);\n    }\n}\n\nfunction provideModule(config: NgSelectConfig) {\n    return {\n        ngModule: NgSelectModule,\n        providers: [\n            {provide: NgSelectConfig, useValue: config}\n        ]\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./src/ng-select/ng-select.module.ts","import { Component } from '@angular/core';\n\n\n/* tslint:disable:max-line-length */\n@Component({\n    selector: 'spinner',\n    template: `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n     width=\"20px\" height=\"20px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\n  <path fill=\"#777\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\n    <animateTransform attributeType=\"xml\"\n      attributeName=\"transform\"\n      type=\"rotate\"\n      from=\"0 25 25\"\n      to=\"360 25 25\"\n      dur=\"0.6s\"\n      repeatCount=\"indefinite\"/>\n    </path>\n  </svg>`\n})\nexport class SpinnerComponent {\n\n}\n/* tslint:enable:max-line-length */\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./src/ng-select/spinner.component.ts","import '../style/styles.scss';\n\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n    selector: 'demo-app',\n    template: require('./app.component.html')\n})\nexport class AppComponent {\n\n    title: string;\n    version: string = window['ngSelectVersion'];\n\n    constructor(private router: Router,\n                private activatedRoute: ActivatedRoute,\n                private titleService: Title) {\n    }\n\n    ngOnInit() {\n        this.setTitle();\n    }\n\n    private setTitle() {\n        this.router.events\n            .filter((event) => event instanceof NavigationEnd)\n            .map(() => this.activatedRoute)\n            .map((route) => {\n                while (route.firstChild) {\n                    route = route.firstChild;\n                }\n                return route;\n            })\n            .filter((route) => route.outlet === 'primary')\n            .mergeMap((route) => route.data)\n            .subscribe((event) => {\n                this.title = event['title'];\n                this.titleService.setTitle(this.title);\n            });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./demo/app/app.component.ts","module.exports = \"<layout-header [version]=\\\"version\\\"></layout-header>\\n<div class=\\\"container-fluid fill\\\">\\n    <div class=\\\"row flex-xl-nowrap fill\\\">\\n        <div class=\\\"col-12 col-md-3 col-xl-2 bd-sidebar fill\\\">\\n            <layout-sidenav></layout-sidenav>\\n        </div>\\n        <main class=\\\"col-12 col-md-9 col-xl-8 py-md-3 pl-md-5 bd-content\\\">\\n            <h1 class=\\\"bd-title\\\">\\n                {{title}}\\n            </h1>\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <router-outlet></router-outlet>\\n                </div>\\n            </div>\\n        </main>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/app/app.component.html\n// module id = 198\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'select-with-templates',\n    template: `\n        <label>Custom label</label>\n        <ng-select [items]=\"cities\" [(ngModel)]=\"selectedCity\" bindLabel=\"name\" bindValue=\"name\">\n            <ng-template ng-label-tmp let-item=\"item\">\n                <img height=\"15\" width=\"15\" [src]=\"item.avatar\"/>\n                {{item.name}}\n            </ng-template>\n        </ng-select>\n        <p>\n            Selected city name: {{selectedCity}}\n        </p>\n        <hr>\n\n        <label>Custom option</label>\n        <ng-select [items]=\"cities2\" [(ngModel)]=\"selectedCity2\" bindLabel=\"name\" bindValue=\"name\">\n            <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\">\n                <img height=\"15\" width=\"15\" [src]=\"item.avatar\"/>\n                <b>{{item.name}}</b>\n            </ng-template>\n        </ng-select>\n        <p>\n            Selected city name: {{selectedCity2}}\n        </p>\n        <hr>\n\n        <label>Custom label and option</label>\n        <ng-select [items]=\"cities3\" [(ngModel)]=\"selectedCity3\" bindLabel=\"name\" bindValue=\"name\">\n            <ng-template ng-label-tmp let-item=\"item\">\n                <img height=\"15\" width=\"15\" [src]=\"item.avatar\"/>\n                <b>{{item.name}}</b>\n            </ng-template>\n            <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\">\n                <img height=\"15\" width=\"15\" [src]=\"item.avatar\"/>\n                <b>{{item.name}}</b>\n            </ng-template>\n        </ng-select>\n        <p>\n            Selected city name: {{selectedCity3}}\n        </p>\n    `\n})\nexport class SelectWithTemplatesComponent {\n\n    cities = [\n        {id: 1, name: 'Vilnius', avatar: '//www.gravatar.com/avatar/b0d8c6e5ea589e6fc3d3e08afb1873bb?d=retro&r=g&s=30 2x'},\n        {id: 2, name: 'Kaunas', avatar: '//www.gravatar.com/avatar/ddac2aa63ce82315b513be9dc93336e5?d=retro&r=g&s=15'},\n        {id: 3, name: 'Pavilnys', avatar: '//www.gravatar.com/avatar/6acb7abf486516ab7fb0a6efa372042b?d=retro&r=g&s=15'}\n    ];\n\n    cities2 = JSON.parse(JSON.stringify(this.cities));\n    cities3 = JSON.parse(JSON.stringify(this.cities));\n\n    selectedCity = this.cities[0].name;\n    selectedCity2 = this.cities2[1].name;\n    selectedCity3 = this.cities3[2].name;\n\n    ngOnInit() {\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./demo/app/examples/custom-templates.component.ts","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'select-bindings',\n    template: `\n        <label>Bind to default <b>label</b>, <b>object</b> bindings</label>\n        <ng-select [items]=\"defaultBindingsList\"\n                   [(ngModel)]=\"selectedCity2\">\n        </ng-select>\n        <p>\n            Selected city object: {{selectedCity2 | json}}\n        </p>\n        <hr>\n        <label>Bind label to custom property</label>\n        <ng-select [items]=\"cities\"\n                   bindLabel=\"name\"\n                   placeholder=\"Select value\"\n                   [clearable]=\"false\"\n                   [(ngModel)]=\"selectedCity\">\n        </ng-select>\n        <p>\n            Selected city object: {{selectedCity | json}}\n        </p>\n        <hr>\n        <label>Bind label and model to custom properties</label>\n        <ng-select [items]=\"cities\"\n                   bindLabel=\"name\"\n                   bindValue=\"id\"\n                   [(ngModel)]=\"selectedCityId2\">\n        </ng-select>\n        <p>\n            Selected city ID: {{selectedCityId2 | json}}\n        </p>\n    `\n})\nexport class SelectBindingsComponent {\n\n    defaultBindingsList = [\n        {value: 1, label: 'Vilnius'},\n        {value: 2, label: 'Kaunas'},\n        {value: 3, label: 'Pavilnys', disabled: true}\n    ];\n\n    cities = [\n        {id: 1, name: 'Vilnius'},\n        {id: 2, name: 'Kaunas'},\n        {id: 3, name: 'Pavilnys', disabled: true}\n    ];\n\n    selectedCity: any;\n    selectedCity2: number = null;\n    selectedCityId2: number = null;\n\n    ngOnInit() {\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./demo/app/examples/bindings.component.ts","import { Component, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n    selector: 'select-search',\n    template: `\n        <h5>Client side</h5>\n        <hr>\n        <label>Search in label text (default)</label>\n        <ng-select [items]=\"companies\"\n                   bindLabel=\"name\"\n                   [(ngModel)]=\"selectedCompany\">\n        </ng-select>\n        <p>\n            Selected value: {{selectedCompany | json}}\n        </p>\n\n        <label>Search using custom filter handler (search for Rooforia)</label>\n        <ng-select [items]=\"filteredCompanies2\"\n                   bindLabel=\"name\"\n                   [typeahead]=\"customFilter\"\n                   [(ngModel)]=\"selectedCompany2\">\n        </ng-select>\n        <p>\n            Selected value: {{selectedCompany2 | json}}\n        </p>\n\n        <h5>Server side</h5>\n        <hr>\n        <label>Search with autocomplete in Github accounts</label>\n        <ng-select [items]=\"items\"\n                   notFoundText=\"No results found\"\n                   typeToSearchText=\"Search for github account\"\n                   bindLabel=\"login\"\n                   [placeholder]=\"placeholder\"\n                   [multiple]=\"multiple\"\n                   [typeahead]=\"typeahead\"\n                   [(ngModel)]=\"githubAccount\">\n\n            <ng-template ng-option-tmp let-item=\"item\">\n                <img [src]=\"item.avatar_url\" width=\"20px\" height=\"20px\"> {{item.login}}\n            </ng-template>\n\n        </ng-select>\n        <br>\n        <button class=\"btn btn-secondary btn-sm\" (click)=\"toggleMultiple()\">Toggle multiple</button>\n        <p>\n            Selected github account:\n            <span *ngIf=\"githubAccount\">\n                <img [src]=\"githubAccount.avatar_url\" width=\"20px\" height=\"20px\"> {{githubAccount.login}}\n            </span>\n        </p>\n    `\n})\nexport class SelectSearchComponent {\n\n    companies: any[] = [];\n    companies2: any[] = [];\n    filteredCompanies2 = [];\n    selectedCompany: any;\n    selectedCompany2?: any;\n    githubAccount: any;\n    items = [];\n    typeahead = new EventEmitter<string>();\n    placeholder = 'Type in me. I am single';\n    multiple = false;\n\n    customFilter = new EventEmitter<string>();\n\n    /* tslint:disable */\n    companiesNames = ['Miškas', 'Žalias', 'Flexigen', 'Rooforia', 'Rooblia', 'Tropoli', 'Eargo', 'Gadtron', 'Elentrix', 'Terragen', 'Medalert', 'Xelegyl', 'Bristo', 'Xylar', 'Imperium', 'Kangle', 'Earwax', 'Zanity', 'Portico', 'Tsunamia', 'Kage', 'Comstar', 'Radiantix', 'Bostonic', 'Geekko', 'Eventex', 'Stockpost', 'Silodyne', 'Enersave', 'Perkle', 'Pyramis', 'Accuprint', 'Papricut', 'Pathways', 'Circum', 'Gology', 'Buzzworks', 'Dancerity', 'Zounds', 'Diginetic', 'Snips', 'Chillium', 'Exotechno', 'Accufarm', 'Vidto', 'Signidyne', 'Escenta', 'Sureplex', 'Quarmony', 'Interfind', 'Exoswitch', 'Mondicil', 'Pyramia', 'Digitalus', 'Earthplex', 'Limozen', 'Twiist', 'Tubalum', 'Securia', 'Uni', 'Biospan', 'Zensus', 'Memora'];\n    /* tslint:enable */\n\n    constructor(private http: HttpClient) {\n        this.typeahead\n            .distinctUntilChanged()\n            .debounceTime(200)\n            .switchMap(term => this.loadGithubUsers(term))\n            .subscribe(items => {\n                this.items = items;\n            }, (err) => {\n                console.log(err);\n                this.items = [];\n            });\n    }\n\n    ngOnInit() {\n        this.companiesNames.forEach((c, i) => {\n            this.companies.push({ id: i, name: c });\n            this.companies2.push({ id: i, name: c });\n        });\n\n        this.filteredCompanies2 = [...this.companies2];\n\n        this.customFilter.subscribe(term => {\n            this.filteredCompanies2 = term ? this.companies2.filter(x => term === 'Rooforia' && x.name === term) : this.companies2;\n        });\n    }\n\n    loadGithubUsers(term: string): Observable<any[]> {\n        if (term) {\n            return this.http.get<any>(`https://api.github.com/search/users?q=${term}`).map(rsp => rsp.items);\n        } else {\n            return Observable.of([]);\n        }\n    }\n\n    toggleMultiple() {\n        this.multiple = !this.multiple;\n        this.placeholder = this.multiple ? 'Type in me. I am multiple.' : 'Type in me. I am single.';\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./demo/app/examples/search.component.ts","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {NgOption} from '@ng-select/ng-select';\nimport {HttpClient} from '@angular/common/http';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n    selector: 'reactive-forms',\n    template: `\n        <form [formGroup]=\"heroForm\" novalidate>\n            <div class=\"form-group\">\n                <label for=\"state\">Cities</label>\n                <ng-select *ngIf=\"isCitiesControlVisible\"\n                           [items]=\"cities\"\n                           bindLabel=\"name\"\n                           bindValue=\"id\"\n                           [multiple]=\"true\"\n                           placeholder=\"Select cities\"\n                           formControlName=\"selectedCitiesIds\">\n                </ng-select>\n                <br>\n                <button (click)=\"toggleCitiesControl()\" class=\"btn btn-sm btn-secondary\">Show/Hide</button>\n                <button (click)=\"clearCities()\" class=\"btn btn-sm btn-secondary\">Clear</button>\n            </div>\n            <hr>\n            <div class=\"form-group\">\n                <label for=\"state\">Age</label>\n                <ng-select [items]=\"ages\"\n                           bindValue=\"value\"\n                           placeholder=\"Select age\"\n                           formControlName=\"age\">\n                </ng-select>\n                <br>\n                <button class=\"btn btn-secondary btn-sm\" (click)=\"toggleAgeDisable()\">Toggle disabled</button>\n            </div>\n            <hr>\n            <div class=\"form-group\">\n                <label for=\"album\">Favorite album</label>\n                <ng-select [items]=\"albums\"\n                           bindLabel=\"title\"\n                           bindValue=\"id\"\n                           placeholder=\"Select album\"\n                           formControlName=\"album\">\n                    <ng-template ng-option-tmp let-item=\"item\">\n                        <div>Title: {{item.title}}</div>\n                        <small><b>Id:</b> {{item.id}} | <b>UserId:</b> {{item.userId}}</small>\n                    </ng-template>\n                </ng-select>\n                <small class=\"form-text text-muted\">Albums data from backend using HttpClient.</small>\n                <br>\n                <button class=\"btn btn-secondary btn-sm\" (click)=\"selectFirstAlbum()\">Select first album</button>\n                <button class=\"btn btn-secondary btn-sm\" (click)=\"selectAlbumsRange(0, 10)\">Set 0-10 albums</button>\n                <button class=\"btn btn-secondary btn-sm\" (click)=\"selectAlbumsRange(10, 20)\">Set 10-20 albums</button>\n            </div>\n            <hr>\n            \n            <div class=\"form-group\">\n                <label for=\"album\">Favorite photo</label>\n                <ng-select [items]=\"photos\"\n                           bindLabel=\"title\"\n                           bindValue=\"thumbnailUrl\"\n                           placeholder=\"Select photo\"\n                           formControlName=\"photo\">\n                    <ng-template ng-label-tmp let-item=\"item\">\n                        <img height=\"15\" width=\"15\" [src]=\"item.thumbnailUrl\"/>\n                        <span>{{item.title}}</span>\n                    </ng-template>\n                    <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\">\n                        <img height=\"15\" width=\"15\" [src]=\"item.thumbnailUrl\"/>\n                        <span>{{item.title}}</span>\n                    </ng-template>\n                </ng-select>\n                <small class=\"form-text text-muted\">5000 items with virtual scroll</small>\n                <br>\n                <button class=\"btn btn-secondary btn-sm\" (click)=\"selectFirstPhoto()\">Select first photo</button>\n                <button class=\"btn btn-secondary btn-sm\" (click)=\"openModel(content)\">Open in model</button>\n                <button class=\"btn btn-secondary btn-sm\" (click)=\"togglePhotoDisabled()\">Toggle disabled</button>\n            </div>\n            \n            <ng-template #content let-c=\"close\" let-d=\"dismiss\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Select in modal</h4>\n                    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"form-group\">\n                        <label for=\"album\">Favorite photo</label>\n                        <ng-select [items]=\"photos\"\n                                   (change)=\"changePhoto($event)\"\n                                   bindLabel=\"title\"\n                                   bindValue=\"thumbnailUrl\"\n                                   placeholder=\"Select photo\"\n                                   formControlName=\"photo\">\n                            <ng-template ng-label-tmp let-item=\"item\">\n                                <img height=\"15\" width=\"15\" [src]=\"item.thumbnailUrl\"/>\n                                <span>{{item.title}}</span>\n                            </ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\">\n                                <img height=\"15\" width=\"15\" [src]=\"item.thumbnailUrl\"/>\n                                <span>{{item.title}}</span>\n                            </ng-template>\n                        </ng-select>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c('Close click')\">Close</button>\n                </div>\n            </ng-template>\n\n        </form>\n\n        <p>Form value: {{ heroForm.value | json }}</p>\n    `\n})\nexport class ReactiveFormsComponent {\n\n    heroForm: FormGroup;\n\n    isCitiesControlVisible = true;\n    cities: NgOption[] = [\n        {id: 1, name: 'Vilnius'},\n        {id: 2, name: 'Kaunas'},\n        {id: 3, name: 'Pavilnys (Disabled)', disabled: true},\n        {id: 4, name: 'Pabradė'},\n    ];\n\n    ages: NgOption[] = [\n        {value: '<18', label: 'Under 18'},\n        {value: '18', label: '18'},\n        {value: '>18', label: 'More than 18'},\n    ];\n\n    albums = [];\n    allAlbums = [];\n    photos = [];\n\n    constructor(private fb: FormBuilder, private http: HttpClient, private modalService: NgbModal) {\n    }\n\n    ngOnInit() {\n\n        this.loadAlbums();\n        this.loadPhotos();\n\n        this.heroForm = this.fb.group({\n            selectedCitiesIds: [],\n            age: '',\n            album: '',\n            photo: ''\n        });\n    }\n\n    toggleAgeDisable() {\n        if (this.heroForm.controls.age.disabled) {\n            this.heroForm.controls.age.enable();\n        } else {\n            this.heroForm.controls.age.disable();\n        }\n    }\n\n    toggleCitiesControl() {\n        this.isCitiesControlVisible = !this.isCitiesControlVisible;\n    }\n\n    clearCities() {\n        this.heroForm.get('selectedCitiesIds').patchValue([]);\n    }\n\n    selectFirstPhoto() {\n        this.heroForm.get('photo').patchValue(this.photos[0].thumbnailUrl);\n    }\n\n    selectFirstAlbum() {\n        this.heroForm.get('album').patchValue(this.albums[0].id);\n    }\n\n    selectAlbumsRange(from, to) {\n        this.albums = this.allAlbums.slice(from, to);\n        this.selectFirstAlbum();\n    }\n\n    openModel(content) {\n        this.modalService.open(content);\n    }\n\n    changePhoto(photo) {\n        this.heroForm.get('photo').patchValue(photo ? photo.thumbnailUrl : null);\n    }\n\n    togglePhotoDisabled() {\n        const photo = this.heroForm.get('photo');\n        if (photo.disabled) {\n            photo.enable();\n        } else {\n            photo.disable();\n        }\n    }\n\n    private loadAlbums() {\n        this.http.get<any[]>('https://jsonplaceholder.typicode.com/albums').subscribe(albums => {\n            this.allAlbums = albums;\n            this.albums = [...this.allAlbums];\n            this.selectFirstAlbum();\n        });\n    }\n\n    private loadPhotos() {\n        this.http.get<any[]>('https://jsonplaceholder.typicode.com/photos').subscribe(photos => {\n             this.photos = photos;\n             this.selectFirstPhoto();\n        });\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./demo/app/examples/reactive-forms.component.ts","import { Component } from '@angular/core';\n\n\ninterface AngSelectEvent {\n    name: string;\n    value: any;\n}\n\n@Component({\n    selector: 'select-events',\n    template: `\n        <label>Open, close, focus, blur, change events</label>\n        <ng-select [items]=\"cities\"\n                   [(ngModel)]=\"selectedCity\"\n                   bindLabel=\"name\"\n                   bindValue=\"id\"\n                   (open)=\"onOpen()\"\n                   (close)=\"onClose()\"\n                   (focus)=\"onFocus($event)\"\n                   (blur)=\"onBlur($event)\"\n                   (change)=\"onChange($event)\">\n        </ng-select>\n\n        <div *ngIf=\"events.length > 0\">\n            <br>\n            <button (click)=\"events = []\" class=\"btn btn-secondary btn-sm\">Clear events</button>\n            <br>\n            <br>\n        </div>\n\n        <div *ngFor=\"let event of events\">\n            <small>{{event.name}} - {{event.value | json}}</small>\n            <hr>\n        </div>\n    `\n})\nexport class SelectEventsComponent {\n\n    selectedCity: any;\n    cities = [\n        {id: 1, name: 'Vilnius'},\n        {id: 2, name: 'Kaunas'},\n        {id: 3, name: 'Pavilnys', disabled: true}\n    ];\n\n    events: AngSelectEvent[] = [];\n\n    onChange($event) {\n        this.events.push({name: '(change)', value: $event});\n    }\n\n    onFocus($event: Event) {\n        this.events.push({name: '(focus)', value: $event});\n    }\n\n    onBlur($event: Event) {\n        this.events.push({name: '(blur)', value: $event});\n    }\n\n    onOpen() {\n        this.events.push({name: '(open)', value: null});\n    }\n\n    onClose() {\n        this.events.push({name: '(close)', value: null});\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./demo/app/examples/events.component.ts","import { Component } from '@angular/core';\nimport { NgOption } from '@ng-select/ng-select';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n    template: `\n        <label>Select multiple elements</label>\n        <ng-select\n                [items]=\"companies\"\n                bindLabel=\"name\"\n                [multiple]=\"true\"\n                [(ngModel)]=\"selectedCompanies\">\n        </ng-select>\n        <p>\n            Selected value: {{selectedCompanies | json}} <br>\n            <button (click)=\"clearModel()\" class=\"btn btn-secondary btn-sm\">Clear model</button>\n        </p>\n        <hr/>\n\n        <label>Disabled multiple elements</label>\n        <ng-select\n                [items]=\"companies2\"\n                bindLabel=\"name\"\n                [multiple]=\"true\"\n                [disabled]=\"disable\"\n                [(ngModel)]=\"selectedCompaniesDisabled\">\n        </ng-select>\n        <br>\n        <button class=\"btn btn-secondary btn-sm\" (click)=\"disable = !disable\">Toggle disabled</button>\n        <hr/>\n        <label>Custom label templates</label>\n        <ng-select\n            [items]=\"users\"\n            [multiple]=\"true\"\n            [(ngModel)]=\"selectedUsers\">\n\n            <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                <div class=\"ng-value-wrapper default\">\n                    <span class=\"ng-value-label\"><img [src]=\"item.avatar_url\" width=\"20px\" height=\"20px\"> {{item.login}}</span>\n                    <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                </div>\n            </ng-template>\n\n            <ng-template ng-option-tmp let-item=\"item\">\n                <img [src]=\"item.avatar_url\" width=\"20px\" height=\"20px\"> {{item.login}}\n            </ng-template>\n        </ng-select>\n    `\n})\nexport class SelectMultiComponent {\n\n    users: any[] = [];\n    companies: any[] = [];\n    companies2: any[] = [];\n    selectedCompanies: any;\n    selectedCompaniesDisabled: any;\n    disable = true;\n\n    /* tslint:disable */\n    companiesNames = ['Miškas', 'Žalias', 'Flexigen', 'Rooforia', 'Rooblia', 'Tropoli', 'Eargo', 'Gadtron', 'Elentrix', 'Terragen', 'Medalert', 'Xelegyl', 'Bristo', 'Xylar', 'Imperium', 'Kangle', 'Earwax', 'Zanity', 'Portico', 'Tsunamia', 'Kage', 'Comstar', 'Radiantix', 'Bostonic', 'Geekko', 'Eventex', 'Stockpost', 'Silodyne', 'Enersave', 'Perkle', 'Pyramis', 'Accuprint', 'Papricut', 'Pathways', 'Circum', 'Gology', 'Buzzworks', 'Dancerity', 'Zounds', 'Diginetic', 'Snips', 'Chillium', 'Exotechno', 'Accufarm', 'Vidto', 'Signidyne', 'Escenta', 'Sureplex', 'Quarmony', 'Interfind', 'Exoswitch', 'Mondicil', 'Pyramia', 'Digitalus', 'Earthplex', 'Limozen', 'Twiist', 'Tubalum', 'Securia', 'Uni', 'Biospan', 'Zensus', 'Memora'];\n    /* tslint:enable */\n\n    constructor(private http: HttpClient) { }\n\n    ngOnInit() {\n        this.companiesNames.forEach((c, i) => {\n            this.companies.push({ id: i, name: c });\n            this.companies2.push({ id: i, name: c });\n        });\n\n        this.selectedCompaniesDisabled = [{ id: 0, name: 'Miškas' }, { id: 1, name: 'Žalias' }];\n        this.loadGithubUsers('anjm').subscribe(users => {\n            this.users = users;\n        })\n    }\n\n    clearModel() {\n        this.selectedCompanies = [];\n    }\n\n    loadGithubUsers(term: string): Observable<any[]> {\n        return this.http.get<any>(`https://api.github.com/search/users?q=${term}`).map(rsp => rsp.items);\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./demo/app/examples/multi.component.ts","import { Component, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n    selector: 'select-tags',\n    template: `\n        <label>Default tags</label>\n        <ng-select [items]=\"companies\"\n                [addTag]=\"true\"\n                bindLabel=\"name\"\n                [(ngModel)]=\"selectedCompany\">\n        </ng-select>\n        <p>\n            Selected value: {{selectedCompany | json}}\n        </p>\n        <hr>\n\n        <label>Custom tags</label>\n        <ng-select [items]=\"companies\"\n                [addTag]=\"addTag\"\n                multiple=\"true\"\n                bindLabel=\"name\"\n                [(ngModel)]=\"selectedCompanyCustom\">\n        </ng-select>\n        <p>\n            Selected value: {{selectedCompanyCustom | json}}\n        </p>\n        <hr>\n    `\n})\nexport class SelectTagsComponent {\n\n    companies: any[] = [];\n\n    companiesNames = ['Miškas', 'Žalias', 'Flexigen'];\n\n    ngOnInit() {\n        this.companiesNames.forEach((c, i) => {\n            this.companies.push({ id: i, name: c });\n        });\n    }\n\n    addTag = (name) => {\n        return { name: name, tag: true };\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./demo/app/examples/tags.component.ts","import { Component, Input} from '@angular/core';\n\n@Component({\n    selector: 'layout-header',\n    template: `\n        <nav class=\"navbar navbar-expand navbar-dark flex-column flex-md-row bd-navbar bg-dark\">\n            <a class=\"navbar-brand\" href=\"#\">\n                <img src=\"https://angular.io/assets/images/logos/angular/angular.svg\" width=\"32px\" height=\"32px\"/>\n                @ng-select/ng-select@{{version}}\n            </a>\n            <button class=\"navbar-toggler\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#navbarsExampleDefault\"\n                    aria-controls=\"navbarsExampleDefault\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n                <ul class=\"navbar-nav mr-auto\">\n                    <!--<li class=\"nav-item active\">\n                    <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n                    </li>\n                    <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Link</a>\n                    </li>\n                    <li class=\"nav-item\">\n                    <a class=\"nav-link disabled\" href=\"#\">Disabled</a>\n                    </li>\n                    <li class=\"nav-item dropdown\">\n                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdown01\">\n                        <a class=\"dropdown-item\" href=\"#\">Action</a>\n                        <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                        <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n                    </div>\n                    </li>-->\n                </ul>\n                <form class=\"form-inline my-2 my-lg-0\">\n                    <!-- Place this tag where you want the button to render. -->\n                    <a class=\"github-button\"\n                       href=\"https://github.com/ng-select/ng-select\"\n                       data-icon=\"octicon-star\"\n                       data-size=\"large\"\n                       data-show-count=\"true\"\n                       aria-label=\"Star ng-select/ng-select on GitHub\">Star</a>\n                </form>\n            </div>\n        </nav>\n    `\n})\nexport class LayoutHeaderComponent {\n    @Input() version: string;\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./demo/app/layout/header.component.ts","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'layout-sidenav',\n    template: `\n        <ul class=\"nav flex-column\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/forms\" routerLinkActive=\"active\">Real life example</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/filter\" routerLinkActive=\"active\">Filter and autocomplete</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/tags\" routerLinkActive=\"active\">Tags</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/multiselect\" routerLinkActive=\"active\">Multiselect</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/bindings\" routerLinkActive=\"active\">Data bindings</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/templates\" routerLinkActive=\"active\">Templates</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/events\" routerLinkActive=\"active\">Output events</a>\n            </li>\n        </ul>\n    `\n})\nexport class LayoutSidenavComponent {\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./demo/app/layout/sidenav-component.ts","import * as tslib_1 from \"tslib\";\n/**\n * @license Angular v4.4.4\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Inject, Injectable, InjectionToken, NgModule, Optional, PLATFORM_ID } from '@angular/core';\nimport { of } from 'rxjs/observable/of';\nimport { concatMap } from 'rxjs/operator/concatMap';\nimport { filter } from 'rxjs/operator/filter';\nimport { map } from 'rxjs/operator/map';\nimport { DOCUMENT, ɵparseCookieValue } from '@angular/common';\nimport { Observable } from 'rxjs/Observable';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpHandler = (function () {\n    function HttpHandler() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpHandler.prototype.handle = function (req) { };\n    return HttpHandler;\n}());\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpBackend = (function () {\n    function HttpBackend() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpBackend.prototype.handle = function (req) { };\n    return HttpBackend;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\n * serialize and parse URL parameter keys and values.\n *\n * \\@experimental\n */\nvar HttpUrlEncodingCodec = (function () {\n    function HttpUrlEncodingCodec() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeKey = function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeValue = function (v) { return standardEncoding(v); };\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeKey = function (k) { return decodeURIComponent(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeValue = function (v) { return decodeURIComponent(v); };\n    return HttpUrlEncodingCodec;\n}());\n/**\n * @param {?} rawParams\n * @param {?} codec\n * @return {?}\n */\nfunction paramParser(rawParams, codec) {\n    var /** @type {?} */ map$$1 = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map$$1.get(key) || [];\n            list.push(val);\n            map$$1.set(key, list);\n        });\n    }\n    return map$$1;\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immuatable - all mutation operations return a new instance.\n *\n * \\@experimental\n */\nvar HttpParams = (function () {\n    /**\n     * @param {?=} options\n     */\n    function HttpParams(options) {\n        if (options === void 0) { options = {}; }\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        this.map = !!options.fromString ? paramParser(options.fromString, this.encoder) : null;\n    }\n    /**\n     * Check whether the body has one or more values for the given parameter name.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.has = function (param) {\n        this.init();\n        return ((this.map)).has(param);\n    };\n    /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.get = function (param) {\n        this.init();\n        var /** @type {?} */ res = ((this.map)).get(param);\n        return !!res ? res[0] : null;\n    };\n    /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.getAll = function (param) {\n        this.init();\n        return ((this.map)).get(param) || null;\n    };\n    /**\n     * Get all the parameter names for this body.\n     * @return {?}\n     */\n    HttpParams.prototype.keys = function () {\n        this.init();\n        return Array.from(/** @type {?} */ ((this.map)).keys());\n    };\n    /**\n     * Construct a new body with an appended value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.append = function (param, value) { return this.clone({ param: param, value: value, op: 'a' }); };\n    /**\n     * Construct a new body with a new value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.set = function (param, value) { return this.clone({ param: param, value: value, op: 's' }); };\n    /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     * @param {?} param\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpParams.prototype.delete = function (param, value) { return this.clone({ param: param, value: value, op: 'd' }); };\n    /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    HttpParams.prototype.toString = function () {\n        var _this = this;\n        this.init();\n        return this.keys()\n            .map(function (key) {\n            var /** @type {?} */ eKey = _this.encoder.encodeKey(key);\n            return ((((_this.map)).get(key))).map(function (value) { return eKey + '=' + _this.encoder.encodeValue(value); })\n                .join('&');\n        })\n            .join('&');\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpParams.prototype.clone = function (update) {\n        var /** @type {?} */ clone = new HttpParams({ encoder: this.encoder });\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @return {?}\n     */\n    HttpParams.prototype.init = function () {\n        var _this = this;\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(function (key) { return ((_this.map)).set(key, /** @type {?} */ ((((((_this.cloneFrom)).map)).get(key)))); }); /** @type {?} */\n            ((this.updates)).forEach(function (update) {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        var /** @type {?} */ base = (update.op === 'a' ? ((_this.map)).get(update.param) : undefined) || [];\n                        base.push(/** @type {?} */ ((update.value))); /** @type {?} */\n                        ((_this.map)).set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            var /** @type {?} */ base_1 = ((_this.map)).get(update.param) || [];\n                            var /** @type {?} */ idx = base_1.indexOf(update.value);\n                            if (idx !== -1) {\n                                base_1.splice(idx, 1);\n                            }\n                            if (base_1.length > 0) {\n                                ((_this.map)).set(update.param, base_1);\n                            }\n                            else {\n                                ((_this.map)).delete(update.param);\n                            }\n                        }\n                        else {\n                            ((_this.map)).delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = null;\n        }\n    };\n    return HttpParams;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Immutable set of Http headers, with lazy parsing.\n * \\@experimental\n */\nvar HttpHeaders = (function () {\n    /**\n     * @param {?=} headers\n     */\n    function HttpHeaders(headers) {\n        var _this = this;\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                headers.split('\\n').forEach(function (line) {\n                    var index = line.indexOf(':');\n                    if (index > 0) {\n                        var name = line.slice(0, index);\n                        var key = name.toLowerCase();\n                        var value = line.slice(index + 1).trim();\n                        _this.maybeSetNormalizedName(name, key);\n                        if (_this.headers.has(key)) {\n                            _this.headers.get(key).push(value);\n                        }\n                        else {\n                            _this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                Object.keys(headers).forEach(function (name) {\n                    var values = headers[name];\n                    var key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        _this.headers.set(key, values);\n                        _this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.has = function (name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    };\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.get = function (name) {\n        this.init();\n        var /** @type {?} */ values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    HttpHeaders.prototype.keys = function () {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    };\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.getAll = function (name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.append = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'a' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.set = function (name, value) {\n        return this.clone({ name: name, value: value, op: 's' });\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.delete = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'd' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    HttpHeaders.prototype.maybeSetNormalizedName = function (name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    HttpHeaders.prototype.init = function () {\n        var _this = this;\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(function (update) { return _this.applyUpdate(update); });\n                this.lazyUpdate = null;\n            }\n        }\n    };\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    HttpHeaders.prototype.copyFrom = function (other) {\n        var _this = this;\n        other.init();\n        Array.from(other.headers.keys()).forEach(function (key) {\n            _this.headers.set(key, /** @type {?} */ ((other.headers.get(key))));\n            _this.normalizedNames.set(key, /** @type {?} */ ((other.normalizedNames.get(key))));\n        });\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.clone = function (update) {\n        var /** @type {?} */ clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.applyUpdate = function (update) {\n        var /** @type {?} */ key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                var /** @type {?} */ value = ((update.value));\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                var /** @type {?} */ base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push.apply(base, value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                var /** @type {?} */ toDelete_1 = (update.value);\n                if (!toDelete_1) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    var /** @type {?} */ existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(function (value) { return toDelete_1.indexOf(value) === -1; });\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    HttpHeaders.prototype.forEach = function (fn) {\n        var _this = this;\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(function (key) { return fn(/** @type {?} */ ((_this.normalizedNames.get(key))), /** @type {?} */ ((_this.headers.get(key)))); });\n    };\n    return HttpHeaders;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine whether the given HTTP method may include a body.\n * @param {?} method\n * @return {?}\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * \\@experimental\n */\nvar HttpRequest = (function () {\n    /**\n     * @param {?} method\n     * @param {?} url\n     * @param {?=} third\n     * @param {?=} fourth\n     */\n    function HttpRequest(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        var options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = third || null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = third;\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            var params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                var qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                var sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    HttpRequest.prototype.serializeBody = function () {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return ((this.body)).toString();\n    };\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    HttpRequest.prototype.detectContentTypeHeader = function () {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    };\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpRequest.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        var /** @type {?} */ method = update.method || this.method;\n        var /** @type {?} */ url = update.url || this.url;\n        var /** @type {?} */ responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        var /** @type {?} */ body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        var /** @type {?} */ withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        var /** @type {?} */ reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        var /** @type {?} */ headers = update.headers || this.headers;\n        var /** @type {?} */ params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce(function (headers, name) { return headers.set(name, /** @type {?} */ ((update.setHeaders))[name]); }, headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce(function (params, param) { return params.set(param, /** @type {?} */ ((update.setParams))[param]); }, params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params: params, headers: headers, reportProgress: reportProgress, responseType: responseType, withCredentials: withCredentials,\n        });\n    };\n    return HttpRequest;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HttpEventType = {};\nHttpEventType.Sent = 0;\nHttpEventType.UploadProgress = 1;\nHttpEventType.ResponseHeader = 2;\nHttpEventType.DownloadProgress = 3;\nHttpEventType.Response = 4;\nHttpEventType.User = 5;\nHttpEventType[HttpEventType.Sent] = \"Sent\";\nHttpEventType[HttpEventType.UploadProgress] = \"UploadProgress\";\nHttpEventType[HttpEventType.ResponseHeader] = \"ResponseHeader\";\nHttpEventType[HttpEventType.DownloadProgress] = \"DownloadProgress\";\nHttpEventType[HttpEventType.Response] = \"Response\";\nHttpEventType[HttpEventType.User] = \"User\";\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpResponseBase = (function () {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     * @param {?} init\n     * @param {?=} defaultStatus\n     * @param {?=} defaultStatusText\n     */\n    function HttpResponseBase(init, defaultStatus, defaultStatusText) {\n        if (defaultStatus === void 0) { defaultStatus = 200; }\n        if (defaultStatusText === void 0) { defaultStatusText = 'OK'; }\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n    return HttpResponseBase;\n}());\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * \\@experimental\n */\nvar HttpHeaderResponse = (function (_super) {\n    tslib_1.__extends(HttpHeaderResponse, _super);\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     * @param {?=} init\n     */\n    function HttpHeaderResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.ResponseHeader;\n        return _this;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpHeaderResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpHeaderResponse;\n}(HttpResponseBase));\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * \\@experimental\n */\nvar HttpResponse = (function (_super) {\n    tslib_1.__extends(HttpResponse, _super);\n    /**\n     * Construct a new `HttpResponse`.\n     * @param {?=} init\n     */\n    function HttpResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.Response;\n        _this.body = init.body || null;\n        return _this;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpResponse;\n}(HttpResponseBase));\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * \\@experimental\n */\nvar HttpErrorResponse = (function (_super) {\n    tslib_1.__extends(HttpErrorResponse, _super);\n    /**\n     * @param {?} init\n     */\n    function HttpErrorResponse(init) {\n        var _this = \n        // Initialize with a default status of 0 / Unknown Error.\n        _super.call(this, init, 0, 'Unknown Error') || this;\n        _this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        _this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (_this.status >= 200 && _this.status < 300) {\n            _this.message = \"Http failure during parsing for \" + (init.url || '(unknown url)');\n        }\n        else {\n            _this.message =\n                \"Http failure response for \" + (init.url || '(unknown url)') + \": \" + init.status + \" \" + init.statusText;\n        }\n        _this.error = init.error || null;\n        return _this;\n    }\n    return HttpErrorResponse;\n}(HttpResponseBase));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. Basically, this clones the object and adds the body.\n * @template T\n * @param {?} options\n * @param {?} body\n * @return {?}\n */\nfunction addBody(options, body) {\n    return {\n        body: body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Perform HTTP requests.\n *\n * `HttpClient` is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies according to which\n * signature is called (mainly the values of `observe` and `responseType`).\n *\n * \\@experimental\n */\nvar HttpClient = (function () {\n    /**\n     * @param {?} handler\n     */\n    function HttpClient(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * This method can be called in one of two ways. Either an `HttpRequest`\n     * instance can be passed directly as the only parameter, or a method can be\n     * passed as the first parameter, a string URL as the second, and an\n     * options hash as the third.\n     *\n     * If a `HttpRequest` object is passed directly, an `Observable` of the\n     * raw `HttpEvent` stream will be returned.\n     *\n     * If a request is instead built by providing a URL, the options object\n     * determines the return type of `request()`. In addition to configuring\n     * request parameters such as the outgoing headers and/or the body, the options\n     * hash specifies two key pieces of information about the request: the\n     * `responseType` and what to `observe`.\n     *\n     * The `responseType` value determines how a successful response body will be\n     * parsed. If `responseType` is the default `json`, a type interface for the\n     * resulting object may be passed as a type parameter to `request()`.\n     *\n     * The `observe` value determines the return type of `request()`, based on what\n     * the consumer is interested in observing. A value of `events` will return an\n     * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n     * including progress events by default. A value of `response` will return an\n     * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n     * depends on the `responseType` and any optionally provided type parameter.\n     * A value of `body` will return an `Observable<T>` with the same `T` body type.\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.request = function (first, url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var /** @type {?} */ req;\n        // Firstly, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = (first);\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming GET unless a method is\n            // provided.\n            req = new HttpRequest(first, /** @type {?} */ ((url)), options.body || null, {\n                headers: options.headers,\n                params: options.params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        var /** @type {?} */ events$ = concatMap.call(of(req), function (req) { return _this.handler.handle(req); });\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        var /** @type {?} */ res$ = filter.call(events$, function (event) { return event instanceof HttpResponse; });\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return map.call(res$, function (res) {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        });\n                    case 'blob':\n                        return map.call(res$, function (res) {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        });\n                    case 'text':\n                        return map.call(res$, function (res) {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        });\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return map.call(res$, function (res) { return res.body; });\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(\"Unreachable: unhandled observe type \" + options.observe + \"}\");\n        }\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * DELETE request to be executed on the server. See the individual overloads for\n     * details of `delete()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('DELETE', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * GET request to be executed on the server. See the individual overloads for\n     * details of `get()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('GET', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * HEAD request to be executed on the server. See the individual overloads for\n     * details of `head()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.head = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('HEAD', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause a request\n     * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n     *\n     * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n     * If no such interceptor is reached, then the `JSONP` request will likely be\n     * rejected by the configured backend.\n     * @template T\n     * @param {?} url\n     * @param {?} callbackParam\n     * @return {?}\n     */\n    HttpClient.prototype.jsonp = function (url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * OPTIONS request to be executed on the server. See the individual overloads for\n     * details of `options()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.options = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('OPTIONS', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PATCH request to be executed on the server. See the individual overloads for\n     * details of `patch()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.patch = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PATCH', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.post = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('POST', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.put = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PUT', url, addBody(options, body));\n    };\n    return HttpClient;\n}());\nHttpClient.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttpClient.ctorParameters = function () { return [\n    { type: HttpHandler, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n * \\@experimental\n */\nvar HttpInterceptorHandler = (function () {\n    /**\n     * @param {?} next\n     * @param {?} interceptor\n     */\n    function HttpInterceptorHandler(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    HttpInterceptorHandler.prototype.handle = function (req) {\n        return this.interceptor.intercept(req, this.next);\n    };\n    return HttpInterceptorHandler;\n}());\n/**\n * A multi-provider token which represents the array of `HttpInterceptor`s that\n * are registered.\n *\n * \\@experimental\n */\nvar HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nvar NoopInterceptor = (function () {\n    function NoopInterceptor() {\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    NoopInterceptor.prototype.intercept = function (req, next) {\n        return next.handle(req);\n    };\n    return NoopInterceptor;\n}());\nNoopInterceptor.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nNoopInterceptor.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nvar nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nvar JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n * \\@experimental\n * @abstract\n */\nvar JsonpCallbackContext = (function () {\n    function JsonpCallbackContext() {\n    }\n    return JsonpCallbackContext;\n}());\n/**\n * `HttpBackend` that only processes `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n *\n * \\@experimental\n */\nvar JsonpClientBackend = (function () {\n    /**\n     * @param {?} callbackMap\n     * @param {?} document\n     */\n    function JsonpClientBackend(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.nextCallback = function () { return \"ng_jsonp_callback_\" + nextRequestId++; };\n    /**\n     * Process a JSONP request and return an event stream of the results.\n     * @param {?} req\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable(function (observer) {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            var /** @type {?} */ callback = _this.nextCallback();\n            var /** @type {?} */ url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, \"=\" + callback + \"$1\");\n            // Construct the <script> tag and point it at the URL.\n            var /** @type {?} */ node = _this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            var /** @type {?} */ body = null;\n            // Whether the response callback has been called.\n            var /** @type {?} */ finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            var /** @type {?} */ cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            _this.callbackMap[callback] = function (data) {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete _this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            var /** @type {?} */ cleanup = function () {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete _this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            var /** @type {?} */ onLoad = function (event) {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url: url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body: body,\n                    status: 200,\n                    statusText: 'OK', url: url,\n                }));\n                // Complete the stream, the resposne is over.\n                observer.complete();\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            var /** @type {?} */ onError = function (error) {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error: error,\n                    status: 0,\n                    statusText: 'JSONP Error', url: url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            _this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return function () {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    };\n    return JsonpClientBackend;\n}());\nJsonpClientBackend.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nJsonpClientBackend.ctorParameters = function () { return [\n    { type: JsonpCallbackContext, },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n]; };\n/**\n * An `HttpInterceptor` which identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * \\@experimental\n */\nvar JsonpInterceptor = (function () {\n    /**\n     * @param {?} jsonp\n     */\n    function JsonpInterceptor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    JsonpInterceptor.prototype.intercept = function (req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(/** @type {?} */ (req));\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    };\n    return JsonpInterceptor;\n}());\nJsonpInterceptor.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nJsonpInterceptor.ctorParameters = function () { return [\n    { type: JsonpClientBackend, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * \\@experimental\n * @abstract\n */\nvar XhrFactory = (function () {\n    function XhrFactory() {\n    }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    XhrFactory.prototype.build = function () { };\n    return XhrFactory;\n}());\n/**\n * A factory for \\@{link HttpXhrBackend} that uses the `XMLHttpRequest` browser API.\n *\n * \\@experimental\n */\nvar BrowserXhr = (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = function () { return ((new XMLHttpRequest())); };\n    return BrowserXhr;\n}());\nBrowserXhr.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBrowserXhr.ctorParameters = function () { return []; };\n/**\n * An `HttpBackend` which uses the XMLHttpRequest API to send\n * requests to a backend server.\n *\n * \\@experimental\n */\nvar HttpXhrBackend = (function () {\n    /**\n     * @param {?} xhrFactory\n     */\n    function HttpXhrBackend(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Process a request and return a stream of response events.\n     * @param {?} req\n     * @return {?}\n     */\n    HttpXhrBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(\"Attempted to construct Jsonp request without JsonpClientModule installed.\");\n        }\n        // Everything happens on Observable subscription.\n        return new Observable(function (observer) {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            var /** @type {?} */ xhr = _this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach(function (name, values) { return xhr.setRequestHeader(name, values.join(',')); });\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                var /** @type {?} */ detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                var /** @type {?} */ responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = (((responseType !== 'json') ? responseType : 'text'));\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            var /** @type {?} */ reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            var /** @type {?} */ headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            var /** @type {?} */ partialFromXhr = function () {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                var /** @type {?} */ status = xhr.status === 1223 ? 204 : xhr.status;\n                var /** @type {?} */ statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                var /** @type {?} */ headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                var /** @type {?} */ url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers: headers, status: status, statusText: statusText, url: url });\n                return headerResponse;\n            };\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            var /** @type {?} */ onLoad = function () {\n                // Read response state from the memoized partial data.\n                var _a = partialFromXhr(), headers = _a.headers, status = _a.status, statusText = _a.statusText, url = _a.url;\n                // The body will be read out if present.\n                var /** @type {?} */ body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                var /** @type {?} */ ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (ok && req.responseType === 'json' && typeof body === 'string') {\n                    // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        body = JSON.parse(body);\n                    }\n                    catch (error) {\n                        // Even though the response status was 2xx, this is still an error.\n                        ok = false;\n                        // The parse error contains the text of the body that failed to parse.\n                        body = ({ error: error, text: body });\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            var /** @type {?} */ onError = function (error) {\n                var /** @type {?} */ res = new HttpErrorResponse({\n                    error: error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                });\n                observer.error(res);\n            };\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            var /** @type {?} */ sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onDownProgress = function (event) {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                var /** @type {?} */ progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onUpProgress = function (event) {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                var /** @type {?} */ progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return function () {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            };\n        });\n    };\n    return HttpXhrBackend;\n}());\nHttpXhrBackend.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttpXhrBackend.ctorParameters = function () { return [\n    { type: XhrFactory, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\nvar XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpXsrfTokenExtractor = (function () {\n    function HttpXsrfTokenExtractor() {\n    }\n    /**\n     * Get the XSRF token to use with an outgoing request.\n     *\n     * Will be called for every request, so the token may change between requests.\n     * @abstract\n     * @return {?}\n     */\n    HttpXsrfTokenExtractor.prototype.getToken = function () { };\n    return HttpXsrfTokenExtractor;\n}());\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nvar HttpXsrfCookieExtractor = (function () {\n    /**\n     * @param {?} doc\n     * @param {?} platform\n     * @param {?} cookieName\n     */\n    function HttpXsrfCookieExtractor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * \\@internal for testing\n         */\n        this.parseCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    HttpXsrfCookieExtractor.prototype.getToken = function () {\n        if (this.platform === 'server') {\n            return null;\n        }\n        var /** @type {?} */ cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    };\n    return HttpXsrfCookieExtractor;\n}());\nHttpXsrfCookieExtractor.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttpXsrfCookieExtractor.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n    { type: undefined, decorators: [{ type: Inject, args: [XSRF_COOKIE_NAME,] },] },\n]; };\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nvar HttpXsrfInterceptor = (function () {\n    /**\n     * @param {?} tokenService\n     * @param {?} headerName\n     */\n    function HttpXsrfInterceptor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    HttpXsrfInterceptor.prototype.intercept = function (req, next) {\n        var /** @type {?} */ lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        var /** @type {?} */ token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    };\n    return HttpXsrfInterceptor;\n}());\nHttpXsrfInterceptor.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttpXsrfInterceptor.ctorParameters = function () { return [\n    { type: HttpXsrfTokenExtractor, },\n    { type: undefined, decorators: [{ type: Inject, args: [XSRF_HEADER_NAME,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Constructs an `HttpHandler` that applies a bunch of `HttpInterceptor`s\n * to a request before passing it to the given `HttpBackend`.\n *\n * Meant to be used as a factory function within `HttpClientModule`.\n *\n * \\@experimental\n * @param {?} backend\n * @param {?=} interceptors\n * @return {?}\n */\nfunction interceptingHandler(backend, interceptors) {\n    if (interceptors === void 0) { interceptors = []; }\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight(function (next, interceptor) { return new HttpInterceptorHandler(next, interceptor); }, backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n * \\@experimental\n * @return {?}\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * `NgModule` which adds XSRF protection support to outgoing requests.\n *\n * Provided the server supports a cookie-based XSRF protection system, this\n * module can be used directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no such names are provided, the default is to use `X-XSRF-TOKEN` for\n * the header name and `XSRF-TOKEN` for the cookie name.\n *\n * \\@experimental\n */\nvar HttpClientXsrfModule = (function () {\n    function HttpClientXsrfModule() {\n    }\n    /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    HttpClientXsrfModule.disable = function () {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    };\n    /**\n     * Configure XSRF protection to use the given cookie name or header name,\n     * or the default names (as described above) if not provided.\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClientXsrfModule.withOptions = function (options) {\n        if (options === void 0) { options = {}; }\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    };\n    return HttpClientXsrfModule;\n}());\nHttpClientXsrfModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientXsrfModule.ctorParameters = function () { return []; };\n/**\n * `NgModule` which provides the `HttpClient` and associated services.\n *\n * Interceptors can be added to the chain behind `HttpClient` by binding them\n * to the multiprovider for `HTTP_INTERCEPTORS`.\n *\n * \\@experimental\n */\nvar HttpClientModule = (function () {\n    function HttpClientModule() {\n    }\n    return HttpClientModule;\n}());\nHttpClientModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN',\n                    }),\n                ],\n                providers: [\n                    HttpClient,\n                    // HttpHandler is the backend + interceptors and is constructed\n                    // using the interceptingHandler factory function.\n                    {\n                        provide: HttpHandler,\n                        useFactory: interceptingHandler,\n                        deps: [HttpBackend, [new Optional(), new Inject(HTTP_INTERCEPTORS)]],\n                    },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientModule.ctorParameters = function () { return []; };\n/**\n * `NgModule` which enables JSONP support in `HttpClient`.\n *\n * Without this module, Jsonp requests will reach the backend\n * with method JSONP, where they'll be rejected.\n *\n * \\@experimental\n */\nvar HttpClientJsonpModule = (function () {\n    function HttpClientJsonpModule() {\n    }\n    return HttpClientJsonpModule;\n}());\nHttpClientJsonpModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientJsonpModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { HttpBackend, HttpHandler, HttpClient, HttpHeaders, HTTP_INTERCEPTORS, JsonpClientBackend, JsonpInterceptor, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, interceptingHandler as ɵinterceptingHandler, HttpParams, HttpUrlEncodingCodec, HttpRequest, HttpErrorResponse, HttpEventType, HttpHeaderResponse, HttpResponse, HttpResponseBase, HttpXhrBackend, XhrFactory, HttpXsrfTokenExtractor, NoopInterceptor as ɵa, JsonpCallbackContext as ɵb, jsonpCallbackContext as ɵc, BrowserXhr as ɵd, HttpXsrfCookieExtractor as ɵg, HttpXsrfInterceptor as ɵh, XSRF_COOKIE_NAME as ɵe, XSRF_HEADER_NAME as ɵf };\n//# sourceMappingURL=http.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/common/@angular/common/http.es5.js\n// module id = 39\n// module chunks = 1","export interface NgOption {\n    [name: string]: any;\n    index?: number;\n    selected?: boolean;\n    disabled?: boolean;\n    marked?: boolean;\n    label?: string;\n    value?: string;\n}\n\nexport enum KeyCode {\n    Tab = 9,\n    Enter = 13,\n    Esc = 27,\n    Space = 32,\n    ArrowUp = 38,\n    ArrowDown = 40,\n    Backspace = 8\n}\n\nexport class NgSelectConfig {\n    notFoundText = '';\n    typeToSearchText = '';\n    addTagText = '';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./src/ng-select/ng-select.types.ts","import * as tslib_1 from \"tslib\";\n/**\n * @license Angular v4.4.4\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { APP_BASE_HREF, HashLocationStrategy, LOCATION_INITIALIZED, Location, LocationStrategy, PathLocationStrategy, PlatformLocation } from '@angular/common';\nimport { ANALYZE_FOR_ENTRY_COMPONENTS, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationRef, Attribute, ChangeDetectorRef, Compiler, ComponentFactoryResolver, ContentChildren, Directive, ElementRef, EventEmitter, HostBinding, HostListener, Inject, Injectable, InjectionToken, Injector, Input, NgModule, NgModuleFactory, NgModuleFactoryLoader, NgModuleRef, NgProbeToken, Optional, Output, Renderer2, SkipSelf, SystemJsNgModuleLoader, Version, ViewContainerRef, isDevMode, ɵisObservable, ɵisPromise } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\nimport { from } from 'rxjs/observable/from';\nimport { of } from 'rxjs/observable/of';\nimport { concatMap } from 'rxjs/operator/concatMap';\nimport { every } from 'rxjs/operator/every';\nimport { first } from 'rxjs/operator/first';\nimport { last } from 'rxjs/operator/last';\nimport { map } from 'rxjs/operator/map';\nimport { mergeMap } from 'rxjs/operator/mergeMap';\nimport { reduce } from 'rxjs/operator/reduce';\nimport { Observable } from 'rxjs/Observable';\nimport { _catch } from 'rxjs/operator/catch';\nimport { concatAll } from 'rxjs/operator/concatAll';\nimport { EmptyError } from 'rxjs/util/EmptyError';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { mergeAll } from 'rxjs/operator/mergeAll';\nimport { ɵgetDOM } from '@angular/platform-browser';\nimport { filter } from 'rxjs/operator/filter';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents an event triggered when a navigation starts.\n *\n * \\@stable\n */\nvar NavigationStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     */\n    function NavigationStart(id, url) {\n        this.id = id;\n        this.url = url;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation ends successfully.\n *\n * \\@stable\n */\nvar NavigationEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     */\n    function NavigationEnd(id, url, urlAfterRedirects) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationEnd.prototype.toString = function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation is canceled.\n *\n * \\@stable\n */\nvar NavigationCancel = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} reason\n     */\n    function NavigationCancel(id, url, reason) {\n        this.id = id;\n        this.url = url;\n        this.reason = reason;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n *\n * \\@stable\n */\nvar NavigationError = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} error\n     */\n    function NavigationError(id, url, error) {\n        this.id = id;\n        this.url = url;\n        this.error = error;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationError.prototype.toString = function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when routes are recognized.\n *\n * \\@stable\n */\nvar RoutesRecognized = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function RoutesRecognized(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    RoutesRecognized.prototype.toString = function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}());\n/**\n * \\@whatItDoes Represents an event triggered before lazy loading a route config.\n *\n * \\@experimental\n */\nvar RouteConfigLoadStart = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadStart(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a route has been lazy loaded.\n *\n * \\@experimental\n */\nvar RouteConfigLoadEnd = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadEnd(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function GuardsCheckStart(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckStart.prototype.toString = function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}());\n/**\n * \\@whatItDoes Represents the end of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     * @param {?} shouldActivate\n     */\n    function GuardsCheckEnd(id, url, urlAfterRedirects, state, shouldActivate) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n        this.shouldActivate = shouldActivate;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckEnd.prototype.toString = function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * \\@experimental\n */\nvar ResolveStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveStart(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveStart.prototype.toString = function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}());\n/**\n * \\@whatItDoes Represents the end of the Resolve phase of routing. See note on\n * {\\@link ResolveStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ResolveEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveEnd(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveEnd.prototype.toString = function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Name of the primary outlet.\n *\n * \\@stable\n */\nvar PRIMARY_OUTLET = 'primary';\nvar ParamsAsMap = (function () {\n    /**\n     * @param {?} params\n     */\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.get = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.getAll = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a {\\@link Params} instance to a {\\@link ParamMap}.\n *\n * \\@stable\n * @param {?} params\n * @return {?}\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nfunction navigationCancelingError(message) {\n    var /** @type {?} */ error = Error('NavigationCancelingError: ' + message);\n    ((error))[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isNavigationCancelingError(error) {\n    return ((error))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var /** @type {?} */ parts = ((route.path)).split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var /** @type {?} */ posParams = {};\n    // Check each config part against the actual URL\n    for (var /** @type {?} */ index = 0; index < parts.length; index++) {\n        var /** @type {?} */ part = parts[index];\n        var /** @type {?} */ segment = segments[index];\n        var /** @type {?} */ isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LoadedRouterConfig = (function () {\n    /**\n     * @param {?} routes\n     * @param {?} module\n     */\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\n/**\n * @param {?} config\n * @param {?=} parentPath\n * @return {?}\n */\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var /** @type {?} */ i = 0; i < config.length; i++) {\n        var /** @type {?} */ route = config[i];\n        var /** @type {?} */ fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\n/**\n * @param {?} route\n * @param {?} fullPath\n * @return {?}\n */\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var /** @type {?} */ exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\n/**\n * @param {?} parentPath\n * @param {?} currentRoute\n * @return {?}\n */\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqual(a, b) {\n    var /** @type {?} */ k1 = Object.keys(a);\n    var /** @type {?} */ k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var /** @type {?} */ key;\n    for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * @template T\n * @param {?} a\n * @return {?}\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * @param {?} bools\n * @return {?}\n */\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nfunction forEach(map$$1, callback) {\n    for (var /** @type {?} */ prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return of({});\n    }\n    var /** @type {?} */ waitHead = [];\n    var /** @type {?} */ waitTail = [];\n    var /** @type {?} */ res = {};\n    forEach(obj, function (a, k) {\n        var /** @type {?} */ mapped = map.call(fn(k, a), function (r) { return res[k] = r; });\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    var /** @type {?} */ concat$ = concatAll.call(of.apply(void 0, waitHead.concat(waitTail)));\n    var /** @type {?} */ last$ = last.call(concat$);\n    return map.call(last$, function () { return res; });\n}\n/**\n * @param {?} observables\n * @return {?}\n */\nfunction andObservables(observables) {\n    var /** @type {?} */ merged$ = mergeAll.call(observables);\n    return every.call(merged$, function (result) { return result === true; });\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction wrapIntoObservable(value) {\n    if (ɵisObservable(value)) {\n        return value;\n    }\n    if (ɵisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return fromPromise(Promise.resolve(value));\n    }\n    return of(/** @type {?} */ (value));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} exact\n * @return {?}\n */\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalQueryParams(container, containee) {\n    return shallowEqual(container, containee);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var /** @type {?} */ c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} containeePaths\n * @return {?}\n */\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var /** @type {?} */ current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var /** @type {?} */ c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var /** @type {?} */ current = containeePaths.slice(0, container.segments.length);\n        var /** @type {?} */ next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * \\@whatItDoes Represents the parsed URL.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * \\@stable\n */\nvar UrlTree = (function () {\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} queryParams\n     * @param {?} fragment\n     */\n    function UrlTree(root, queryParams, fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * \\@whatItDoes Represents the parsed URL segment group.\n *\n * See {\\@link UrlTree} for more information.\n *\n * \\@stable\n */\nvar UrlSegmentGroup = (function () {\n    /**\n     * @param {?} segments\n     * @param {?} children\n     */\n    function UrlSegmentGroup(segments, children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /**\n         * The parent node in the url tree\n         */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /**\n         * Number of child segments\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * \\@whatItDoes Represents a single URL segment.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * \\@stable\n */\nvar UrlSegment = (function () {\n    /**\n     * @param {?} path\n     * @param {?} parameters\n     */\n    function UrlSegment(path, parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegment.prototype.toString = function () { return serializePath(this); };\n    return UrlSegment;\n}());\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\n/**\n * @template T\n * @param {?} segment\n * @param {?} fn\n * @return {?}\n */\nfunction mapChildrenIntoArray(segment, fn) {\n    var /** @type {?} */ res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * \\@whatItDoes Serializes and deserializes a URL string into a URL tree.\n *\n * \\@description The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See {\\@link DefaultUrlSerializer} for an example of a URL serializer.\n *\n * \\@stable\n * @abstract\n */\nvar UrlSerializer = (function () {\n    function UrlSerializer() {\n    }\n    /**\n     * Parse a url into a {\\@link UrlTree}\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlSerializer.prototype.parse = function (url) { };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @abstract\n     * @param {?} tree\n     * @return {?}\n     */\n    UrlSerializer.prototype.serialize = function (tree) { };\n    return UrlSerializer;\n}());\n/**\n * \\@whatItDoes A default implementation of the {\\@link UrlSerializer}.\n *\n * \\@description\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * \\@stable\n */\nvar DefaultUrlSerializer = (function () {\n    function DefaultUrlSerializer() {\n    }\n    /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.parse = function (url) {\n        var /** @type {?} */ p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.serialize = function (tree) {\n        var /** @type {?} */ segment = \"/\" + serializeSegment(tree.root, true);\n        var /** @type {?} */ query = serializeQueryParams(tree.queryParams);\n        var /** @type {?} */ fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeURI(/** @type {?} */ ((tree.fragment))) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n/**\n * @param {?} segment\n * @return {?}\n */\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\n/**\n * @param {?} segment\n * @param {?} root\n * @return {?}\n */\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var /** @type {?} */ primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var /** @type {?} */ children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var /** @type {?} */ children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query         = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"\\@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * @param {?} s\n * @return {?}\n */\nfunction encode(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';');\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction serializePath(path) {\n    return \"\" + encode(path.path) + serializeParams(path.parameters);\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeParams(params) {\n    return Object.keys(params).map(function (key) { return \";\" + encode(key) + \"=\" + encode(params[key]); }).join('');\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeQueryParams(params) {\n    var /** @type {?} */ strParams = Object.keys(params).map(function (name) {\n        var /** @type {?} */ value = params[name];\n        return Array.isArray(value) ? value.map(function (v) { return encode(name) + \"=\" + encode(v); }).join('&') :\n            encode(name) + \"=\" + encode(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchSegments(str) {\n    var /** @type {?} */ match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchQueryParams(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchUrlQueryParamValue(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = (function () {\n    /**\n     * @param {?} url\n     */\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseRootSegment = function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParams = function () {\n        var /** @type {?} */ params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseFragment = function () {\n        return this.consumeOptional('#') ? decodeURI(this.remaining) : null;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseChildren = function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var /** @type {?} */ segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var /** @type {?} */ children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var /** @type {?} */ res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseSegment = function () {\n        var /** @type {?} */ path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseMatrixParams = function () {\n        var /** @type {?} */ params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseParam = function (params) {\n        var /** @type {?} */ key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParam = function (params) {\n        var /** @type {?} */ key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var /** @type {?} */ decodedKey = decode(key);\n        var /** @type {?} */ decodedVal = decode(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var /** @type {?} */ currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    UrlParser.prototype.parseParens = function (allowPrimary) {\n        var /** @type {?} */ segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var /** @type {?} */ path = matchSegments(this.remaining);\n            var /** @type {?} */ next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var /** @type {?} */ outletName = ((undefined));\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var /** @type {?} */ children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.consumeOptional = function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.capture = function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = (function () {\n    /**\n     * @param {?=} segmentGroup\n     */\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = (function () {\n    /**\n     * @param {?} urlTree\n     */\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction noMatch(segmentGroup) {\n    return new Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\n/**\n * @param {?} newTree\n * @return {?}\n */\nfunction absoluteRedirect(newTree) {\n    return new Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\n/**\n * @param {?} redirectTo\n * @return {?}\n */\nfunction namedOutletsRedirect(redirectTo) {\n    return new Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction canLoadFails(route) {\n    return new Observable(function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n * @return {?}\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = (function () {\n    /**\n     * @param {?} moduleInjector\n     * @param {?} configLoader\n     * @param {?} urlSerializer\n     * @param {?} urlTree\n     * @param {?} config\n     */\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(NgModuleRef);\n    }\n    /**\n     * @return {?}\n     */\n    ApplyRedirects.prototype.apply = function () {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ urlTrees$ = map.call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, /** @type {?} */ ((_this.urlTree.fragment))); });\n        return _catch.call(urlTrees$, function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} tree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.match = function (tree) {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ mapped$ = map.call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, tree.queryParams, /** @type {?} */ ((tree.fragment))); });\n        return _catch.call(mapped$, function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noMatchError = function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n        var /** @type {?} */ root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return map.call(this.expandChildren(ngModule, routes, segmentGroup), function (children) { return new UrlSegmentGroup([], children); });\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        var /** @type {?} */ routes$ = of.apply(void 0, routes);\n        var /** @type {?} */ processedRoutes$ = map.call(routes$, function (r) {\n            var /** @type {?} */ expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return _catch.call(expanded$, function (e) {\n                if (e instanceof NoMatch) {\n                    return of(null);\n                }\n                throw e;\n            });\n        });\n        var /** @type {?} */ concattedProcessedRoutes$ = concatAll.call(processedRoutes$);\n        var /** @type {?} */ first$ = first.call(concattedProcessedRoutes$, function (s) { return !!s; });\n        return _catch.call(first$, function (e, _) {\n            if (e instanceof EmptyError) {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var /** @type {?} */ newTree = this.applyRedirectCommands([], /** @type {?} */ ((route.redirectTo)), {});\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            var /** @type {?} */ group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var /** @type {?} */ newTree = this.applyRedirectCommands(consumedSegments, /** @type {?} */ ((route.redirectTo)), /** @type {?} */ (positionalParamSegments));\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return map.call(this.configLoader.load(ngModule.injector, route), function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                });\n            }\n            return of(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig$ = this.getChildConfig(ngModule, route);\n        return mergeMap.call(childConfig$, function (routerConfig) {\n            var /** @type {?} */ childModule = routerConfig.module;\n            var /** @type {?} */ childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var /** @type {?} */ expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return map.call(expanded$_1, function (children) { return new UrlSegmentGroup(consumedSegments, children); });\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var /** @type {?} */ expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return map.call(expanded$, function (cs) { return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children); });\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return of(route._loadedConfig);\n            }\n            return mergeMap.call(runCanLoadGuard(ngModule.injector, route), function (shouldLoad) {\n                if (shouldLoad) {\n                    return map.call(_this.configLoader.load(ngModule.injector, route), function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    });\n                }\n                return canLoadFails(route);\n            });\n        }\n        return of(new LoadedRouterConfig([], ngModule));\n    };\n    /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n        var /** @type {?} */ res = [];\n        var /** @type {?} */ c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(/** @type {?} */ ((route.redirectTo)));\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n        var /** @type {?} */ newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n        var /** @type {?} */ res = {};\n        forEach(redirectToParams, function (v, k) {\n            var /** @type {?} */ copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var /** @type {?} */ sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var /** @type {?} */ updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var /** @type {?} */ children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n            _this.findOrReturn(s, actualSegments); });\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n        var /** @type {?} */ pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n        var /** @type {?} */ idx = 0;\n        for (var _i = 0, actualSegments_1 = actualSegments; _i < actualSegments_1.length; _i++) {\n            var s = actualSegments_1[_i];\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    };\n    return ApplyRedirects;\n}());\n/**\n * @param {?} moduleInjector\n * @param {?} route\n * @return {?}\n */\nfunction runCanLoadGuard(moduleInjector, route) {\n    var /** @type {?} */ canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return of(true);\n    var /** @type {?} */ obs = map.call(from(canLoad), function (injectionToken) {\n        var /** @type {?} */ guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    });\n    return andObservables(obs);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: /** @type {?} */ ([]),\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: /** @type {?} */ ((res.consumed)),\n        lastChild: /** @type {?} */ ((res.consumed.length)),\n        positionalParamSegments: /** @type {?} */ ((res.posParams)),\n    };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var /** @type {?} */ c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} routes\n * @param {?} primarySegmentGroup\n * @return {?}\n */\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} r\n * @return {?}\n */\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = (function () {\n    /**\n     * @param {?} root\n     */\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.parent = function (t) {\n        var /** @type {?} */ p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.children = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.firstChild = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.siblings = function (t) {\n        var /** @type {?} */ p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var /** @type {?} */ c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ node_1 = findNode(value, child);\n        if (node_1)\n            return node_1;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\nvar TreeNode = (function () {\n    /**\n     * @param {?} value\n     * @param {?} children\n     */\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @return {?}\n     */\n    TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the state of the router.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * See {\\@link ActivatedRoute} for more information.\n *\n * \\@stable\n */\nvar RouterState = (function (_super) {\n    tslib_1.__extends(RouterState, _super);\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} snapshot\n     */\n    function RouterState(root, snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyState(urlTree, rootComponent) {\n    var /** @type {?} */ snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var /** @type {?} */ emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n    var /** @type {?} */ emptyParams = new BehaviorSubject({});\n    var /** @type {?} */ emptyData = new BehaviorSubject({});\n    var /** @type {?} */ emptyQueryParams = new BehaviorSubject({});\n    var /** @type {?} */ fragment = new BehaviorSubject('');\n    var /** @type {?} */ activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var /** @type {?} */ emptyParams = {};\n    var /** @type {?} */ emptyData = {};\n    var /** @type {?} */ emptyQueryParams = {};\n    var /** @type {?} */ fragment = '';\n    var /** @type {?} */ activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet.\n * An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRoute = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} futureSnapshot\n     */\n    function ActivatedRoute(url, params, queryParams, fragment, data, outlet, component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = map.call(this.params, function (p) { return convertToParamMap(p); });\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    map.call(this.queryParams, function (p) { return convertToParamMap(p); });\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRoute.prototype.toString = function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * \\@internal\n * @param {?} route\n * @return {?}\n */\nfunction inheritedParamsDataResolve(route) {\n    var /** @type {?} */ pathToRoot = route.pathFromRoot;\n    var /** @type {?} */ inhertingStartingFrom = pathToRoot.length - 1;\n    while (inhertingStartingFrom >= 1) {\n        var /** @type {?} */ current = pathToRoot[inhertingStartingFrom];\n        var /** @type {?} */ parent = pathToRoot[inhertingStartingFrom - 1];\n        // current route is an empty path => inherits its parent's params and data\n        if (current.routeConfig && current.routeConfig.path === '') {\n            inhertingStartingFrom--;\n            // parent is componentless => current route should inherit its params and data\n        }\n        else if (!parent.component) {\n            inhertingStartingFrom--;\n        }\n        else {\n            break;\n        }\n    }\n    return pathToRoot.slice(inhertingStartingFrom).reduce(function (res, curr) {\n        var /** @type {?} */ params = Object.assign({}, res.params, curr.params);\n        var /** @type {?} */ data = Object.assign({}, res.data, curr.data);\n        var /** @type {?} */ resolve = Object.assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, /** @type {?} */ ({ params: {}, data: {}, resolve: {} }));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet\n * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router\n * state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRouteSnapshot = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} routeConfig\n     * @param {?} urlSegment\n     * @param {?} lastPathIndex\n     * @param {?} resolve\n     */\n    function ActivatedRouteSnapshot(url, params, queryParams, fragment, data, outlet, component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRouteSnapshot.prototype.toString = function () {\n        var /** @type {?} */ url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var /** @type {?} */ matched = this._routeConfig ? this._routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * \\@whatItDoes Represents the state of the router at a moment in time.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * \\@stable\n */\nvar RouterStateSnapshot = (function (_super) {\n    tslib_1.__extends(RouterStateSnapshot, _super);\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} root\n     */\n    function RouterStateSnapshot(url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\n/**\n * @template U, T\n * @param {?} state\n * @param {?} node\n * @return {?}\n */\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction serializeNode(node) {\n    var /** @type {?} */ c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(\", \") + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n * @param {?} route\n * @return {?}\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var /** @type {?} */ currentSnapshot = route.snapshot;\n        var /** @type {?} */ nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            ((route.queryParams)).next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            ((route.fragment)).next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            ((route.params)).next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            ((route.url)).next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            ((route.data)).next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        ((route.data)).next(route._futureSnapshot.data);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalParamsAndUrlSegments(a, b) {\n    var /** @type {?} */ equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var /** @type {?} */ parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, /** @type {?} */ ((b.parent))));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var /** @type {?} */ root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var /** @type {?} */ value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var /** @type {?} */ children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else if (routeReuseStrategy.retrieve(curr.value)) {\n        var /** @type {?} */ tree_1 = ((routeReuseStrategy.retrieve(curr.value))).route;\n        setFutureSnapshotsOfActivatedRoutes(curr, tree_1);\n        return tree_1;\n    }\n    else {\n        var /** @type {?} */ value = createActivatedRoute(curr.value);\n        var /** @type {?} */ children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n        return new TreeNode(value, children);\n    }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var /** @type {?} */ i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        for (var _i = 0, _a = prevState.children; _i < _a.length; _i++) {\n            var p = _a[_i];\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} route\n * @param {?} urlTree\n * @param {?} commands\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ startingPosition = findStartingPosition(nav, urlTree, route);\n    var /** @type {?} */ segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * @param {?} oldSegmentGroup\n * @param {?} newSegmentGroup\n * @param {?} urlTree\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var /** @type {?} */ qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n/**\n * @param {?} current\n * @param {?} oldSegment\n * @param {?} newSegment\n * @return {?}\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var /** @type {?} */ children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = (function () {\n    /**\n     * @param {?} isAbsolute\n     * @param {?} numberOfDoubleDots\n     * @param {?} commands\n     */\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Navigation.prototype.toRoot = function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/**\n * Transforms commands to a normalized `Navigation`\n * @param {?} commands\n * @return {?}\n */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var /** @type {?} */ numberOfDoubleDots = 0;\n    var /** @type {?} */ isAbsolute = false;\n    var /** @type {?} */ res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var /** @type {?} */ outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return res.concat([{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return res.concat([cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return res.concat([cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') {\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') {\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return res.concat([cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = (function () {\n    /**\n     * @param {?} segmentGroup\n     * @param {?} processChildren\n     * @param {?} index\n     */\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\n/**\n * @param {?} nav\n * @param {?} tree\n * @param {?} route\n * @return {?}\n */\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var /** @type {?} */ modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var /** @type {?} */ index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n/**\n * @param {?} group\n * @param {?} index\n * @param {?} numberOfDoubleDots\n * @return {?}\n */\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var /** @type {?} */ g = group;\n    var /** @type {?} */ ci = index;\n    var /** @type {?} */ dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = ((g.parent));\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var /** @type {?} */ m = prefixedWith(segmentGroup, startIndex, commands);\n    var /** @type {?} */ slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var /** @type {?} */ g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var /** @type {?} */ outlets_2 = getOutlets(commands);\n        var /** @type {?} */ children_2 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_2[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_2[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_2);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ currentCommandIndex = 0;\n    var /** @type {?} */ currentPathIndex = startIndex;\n    var /** @type {?} */ noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var /** @type {?} */ path = segmentGroup.segments[currentPathIndex];\n        var /** @type {?} */ curr = getPath(commands[currentCommandIndex]);\n        var /** @type {?} */ next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ paths = segmentGroup.segments.slice(0, startIndex);\n    var /** @type {?} */ i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var /** @type {?} */ children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var /** @type {?} */ p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var /** @type {?} */ curr = getPath(commands[i]);\n        var /** @type {?} */ next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\n/**\n * @param {?} outlets\n * @return {?}\n */\nfunction createNewSegmentChildren(outlets) {\n    var /** @type {?} */ children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction stringify(params) {\n    var /** @type {?} */ res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\n/**\n * @param {?} path\n * @param {?} params\n * @param {?} segment\n * @return {?}\n */\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch$1 = (function () {\n    function NoMatch$1() {\n    }\n    return NoMatch$1;\n}());\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n * @return {?}\n */\nfunction recognize(rootComponentType, config, urlTree, url) {\n    return new Recognizer(rootComponentType, config, urlTree, url).recognize();\n}\nvar Recognizer = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} config\n     * @param {?} urlTree\n     * @param {?} url\n     */\n    function Recognizer(rootComponentType, config, urlTree, url) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n    }\n    /**\n     * @return {?}\n     */\n    Recognizer.prototype.recognize = function () {\n        try {\n            var /** @type {?} */ rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var /** @type {?} */ children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var /** @type {?} */ root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var /** @type {?} */ rootNode = new TreeNode(root, children);\n            var /** @type {?} */ routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return of(routeState);\n        }\n        catch (e) {\n            return new Observable(function (obs) { return obs.error(e); });\n        }\n    };\n    /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n        var _this = this;\n        var /** @type {?} */ route = routeNode.value;\n        var /** @type {?} */ i = inheritedParamsDataResolve(route);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    Recognizer.prototype.processChildren = function (config, segmentGroup) {\n        var _this = this;\n        var /** @type {?} */ children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n        for (var _i = 0, config_1 = config; _i < config_1.length; _i++) {\n            var r = config_1[_i];\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        if (route.path === '**') {\n            var /** @type {?} */ params = segments.length > 0 ? ((last$1(segments))).parameters : {};\n            var /** @type {?} */ snapshot_1 = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            return [new TreeNode(snapshot_1, [])];\n        }\n        var _a = match$1(rawSegment, route, segments), consumedSegments = _a.consumedSegments, parameters = _a.parameters, lastChild = _a.lastChild;\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig = getChildConfig(route);\n        var _b = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _b.segmentGroup, slicedSegments = _b.slicedSegments;\n        var /** @type {?} */ snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var /** @type {?} */ children_3 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_3)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var /** @type {?} */ children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return ((route._loadedConfig)).routes;\n    }\n    return [];\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var /** @type {?} */ posParams = {};\n    forEach(/** @type {?} */ ((res.posParams)), function (v, k) { posParams[k] = v.path; });\n    var /** @type {?} */ parameters = res.consumed.length > 0 ? Object.assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction checkOutletNameUniqueness(nodes) {\n    var /** @type {?} */ names = {};\n    nodes.forEach(function (n) {\n        var /** @type {?} */ routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var /** @type {?} */ p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var /** @type {?} */ c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getSourceSegmentGroup(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getPathIndexShift(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    var /** @type {?} */ res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_3 = routes; _i < routes_3.length; _i++) {\n        var r = routes_3[_i];\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = segmentGroup.segments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} routes\n * @param {?} primarySegment\n * @return {?}\n */\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (var _i = 0, routes_4 = routes; _i < routes_4.length; _i++) {\n        var r = routes_4[_i];\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} r\n * @return {?}\n */\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getData(route) {\n    return route.data || {};\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to customize when activated routes get reused.\n *\n * \\@experimental\n * @abstract\n */\nvar RouteReuseStrategy = (function () {\n    function RouteReuseStrategy() {\n    }\n    /**\n     * Determines if this route (and its subtree) should be detached to be reused later\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldDetach = function (route) { };\n    /**\n     * Stores the detached route.\n     *\n     * Storing a `null` value should erase the previously stored value.\n     * @abstract\n     * @param {?} route\n     * @param {?} handle\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.store = function (route, handle) { };\n    /**\n     * Determines if this route (and its subtree) should be reattached\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldAttach = function (route) { };\n    /**\n     * Retrieves the previously stored route\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.retrieve = function (route) { };\n    /**\n     * Determines if a route should be reused\n     * @abstract\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) { };\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docsNotRequired\n * \\@experimental\n */\nvar ROUTES = new InjectionToken('ROUTES');\nvar RouterConfigLoader = (function () {\n    /**\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?=} onLoadStartListener\n     * @param {?=} onLoadEndListener\n     */\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.load = function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var /** @type {?} */ moduleFactory$ = this.loadModuleFactory(/** @type {?} */ ((route.loadChildren)));\n        return map.call(moduleFactory$, function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var /** @type {?} */ module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)), module);\n        });\n    };\n    /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return fromPromise(this.loader.load(loadChildren));\n        }\n        else {\n            return mergeMap.call(wrapIntoObservable(loadChildren()), function (t) {\n                if (t instanceof NgModuleFactory) {\n                    return of(t);\n                }\n                else {\n                    return fromPromise(_this.compiler.compileModuleAsync(t));\n                }\n            });\n        }\n    };\n    return RouterConfigLoader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to migrate AngularJS applications to Angular.\n *\n * \\@experimental\n * @abstract\n */\nvar UrlHandlingStrategy = (function () {\n    function UrlHandlingStrategy() {\n    }\n    /**\n     * Tells the router if this URL should be processed.\n     *\n     * When it returns true, the router will execute the regular navigation.\n     * When it returns false, the router will set the router state to an empty state.\n     * As a result, all the active components will be destroyed.\n     *\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { };\n    /**\n     * Extracts the part of the URL that should be handled by the router.\n     * The rest of the URL will remain untouched.\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.extract = function (url) { };\n    /**\n     * Merges the URL fragment with the rest of the URL.\n     * @abstract\n     * @param {?} newUrlPart\n     * @param {?} rawUrl\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.merge = function (newUrlPart, rawUrl) { };\n    return UrlHandlingStrategy;\n}());\n/**\n * \\@experimental\n */\nvar DefaultUrlHandlingStrategy = (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n    /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * \\@internal\n * @param {?} snapshot\n * @return {?}\n */\nfunction defaultRouterHook(snapshot) {\n    return (of(null));\n}\n/**\n * \\@whatItDoes Provides the navigation and url manipulation capabilities.\n *\n * See {\\@link Routes} for more details and examples.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar Router = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} urlSerializer\n     * @param {?} rootContexts\n     * @param {?} location\n     * @param {?} injector\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?} config\n     */\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new BehaviorSubject(/** @type {?} */ ((null)));\n        this.routerEvents = new Subject();\n        this.navigationId = 0;\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See {\\@link ErrorHandler} for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * \\@internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(NgModuleRef);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.currentRouterState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    Router.prototype.resetRootComponentType = function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.currentRouterState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    Router.prototype.initialNavigation = function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    Router.prototype.setUpLocationChangeListener = function () {\n        var _this = this;\n        // Zone.current.wrap is needed because of the issue with RxJS scheduler,\n        // which does not work properly with zone.js in IE and Safari\n        if (!this.locationSubscription) {\n            this.locationSubscription = (this.location.subscribe(Zone.current.wrap(function (change) {\n                var /** @type {?} */ rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var /** @type {?} */ source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, { replaceUrl: true }); }, 0);\n            })));\n        }\n    };\n    Object.defineProperty(Router.prototype, \"routerState\", {\n        /**\n         * The current route state\n         * @return {?}\n         */\n        get: function () { return this.currentRouterState; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"url\", {\n        /**\n         * The current url\n         * @return {?}\n         */\n        get: function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"events\", {\n        /**\n         * An observable of router events\n         * @return {?}\n         */\n        get: function () { return this.routerEvents; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    Router.prototype.triggerEvent = function (e) { this.routerEvents.next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    Router.prototype.resetConfig = function (config) {\n        validateConfig(config);\n        this.config = config;\n        this.navigated = false;\n    };\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    Router.prototype.ngOnDestroy = function () { this.dispose(); };\n    /**\n     * Disposes of the router\n     * @return {?}\n     */\n    Router.prototype.dispose = function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = ((null));\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    Router.prototype.createUrlTree = function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (isDevMode() && preserveQueryParams && (console) && (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var /** @type {?} */ a = relativeTo || this.routerState.root;\n        var /** @type {?} */ f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var /** @type {?} */ q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = Object.assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, /** @type {?} */ ((q)), /** @type {?} */ ((f)));\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigateByUrl = function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var /** @type {?} */ urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        var /** @type {?} */ mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigate = function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        if (typeof extras.queryParams === 'object' && extras.queryParams !== null) {\n            extras.queryParams = this.removeEmptyProps(extras.queryParams);\n        }\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n    /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.parseUrl = function (url) { return this.urlSerializer.parse(url); };\n    /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    Router.prototype.isActive = function (url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var /** @type {?} */ urlTree = this.urlSerializer.parse(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    Router.prototype.removeEmptyProps = function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var /** @type {?} */ value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.processNavigations = function () {\n        var _this = this;\n        concatMap\n            .call(this.navigations, function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return (of(null));\n            }\n        })\n            .subscribe(function () { });\n    };\n    /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    Router.prototype.scheduleNavigation = function (rawUrl, source, extras) {\n        var /** @type {?} */ lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var /** @type {?} */ resolve = null;\n        var /** @type {?} */ reject = null;\n        var /** @type {?} */ promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var /** @type {?} */ id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    Router.prototype.executeScheduledNavigation = function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject;\n        var /** @type {?} */ url = this.urlHandlingStrategy.extract(rawUrl);\n        var /** @type {?} */ urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null); })\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} shouldPreventPushState\n     * @param {?} shouldReplaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    Router.prototype.runNavigate = function (url, rawUrl, shouldPreventPushState, shouldReplaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            this.location.go(this.urlSerializer.serialize(this.currentUrlTree));\n            this.routerEvents.next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var /** @type {?} */ urlAndSnapshot$;\n            if (!precreatedState) {\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                var /** @type {?} */ redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = mergeMap.call(redirectsApplied$, function (appliedUrl) {\n                    return map.call(recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl)), function (snapshot) {\n                        _this.routerEvents.next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    });\n                });\n            }\n            else {\n                urlAndSnapshot$ = of({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var /** @type {?} */ beforePreactivationDone$ = mergeMap.call(urlAndSnapshot$, function (p) {\n                return map.call(_this.hooks.beforePreactivation(p.snapshot), function () { return p; });\n            });\n            // run preactivation: guards and data resolvers\n            var /** @type {?} */ preActivation;\n            var /** @type {?} */ preactivationTraverse$ = map.call(beforePreactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                preActivation =\n                    new PreActivation(snapshot, _this.currentRouterState.snapshot, moduleInjector);\n                preActivation.traverse(_this.rootContexts);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            });\n            var /** @type {?} */ preactivationCheckGuards$ = mergeMap.call(preactivationTraverse$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                if (_this.navigationId !== id)\n                    return of(false);\n                _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), appliedUrl, snapshot));\n                return map.call(preActivation.checkGuards(), function (shouldActivate) {\n                    _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), appliedUrl, snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                });\n            });\n            var /** @type {?} */ preactivationResolveData$ = mergeMap.call(preactivationCheckGuards$, function (p) {\n                if (_this.navigationId !== id)\n                    return of(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                    return map.call(preActivation.resolveData(), function () {\n                        _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                        return p;\n                    });\n                }\n                else {\n                    return of(p);\n                }\n            });\n            var /** @type {?} */ preactivationDone$ = mergeMap.call(preactivationResolveData$, function (p) {\n                return map.call(_this.hooks.afterPreactivation(p.snapshot), function () { return p; });\n            });\n            // create router state\n            // this operation has side effects => route state is being affected\n            var /** @type {?} */ routerState$ = map.call(preactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot, shouldActivate = _a.shouldActivate;\n                if (shouldActivate) {\n                    var /** @type {?} */ state = createRouterState(_this.routeReuseStrategy, snapshot, _this.currentRouterState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            });\n            // applied the new router state\n            // this operation has side effects\n            var /** @type {?} */ navigationIsSuccessful;\n            var /** @type {?} */ storedState = _this.currentRouterState;\n            var /** @type {?} */ storedUrl = _this.currentUrlTree;\n            routerState$\n                .forEach(function (_a) {\n                var appliedUrl = _a.appliedUrl, state = _a.state, shouldActivate = _a.shouldActivate;\n                if (!shouldActivate || id !== _this.navigationId) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.currentRouterState = state;\n                if (!shouldPreventPushState) {\n                    var /** @type {?} */ path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                    if (_this.location.isCurrentPathEqualTo(path) || shouldReplaceUrl) {\n                        _this.location.replaceState(path);\n                    }\n                    else {\n                        _this.location.go(path);\n                    }\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState)\n                    .activate(_this.rootContexts);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    _this.routerEvents.next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        rejectPromise(ee);\n                    }\n                }\n                _this.currentRouterState = storedState;\n                _this.currentUrlTree = storedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.location.replaceState(_this.serializeUrl(_this.rawUrlTree));\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.resetUrlToCurrentUrlTree = function () {\n        var /** @type {?} */ path = this.urlSerializer.serialize(this.rawUrlTree);\n        this.location.replaceState(path);\n    };\n    return Router;\n}());\nvar CanActivate = (function () {\n    /**\n     * @param {?} path\n     */\n    function CanActivate(path) {\n        this.path = path;\n    }\n    Object.defineProperty(CanActivate.prototype, \"route\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    return CanActivate;\n}());\nvar CanDeactivate = (function () {\n    /**\n     * @param {?} component\n     * @param {?} route\n     */\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\nvar PreActivation = (function () {\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @param {?} moduleInjector\n     */\n    function PreActivation(future, curr, moduleInjector) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    PreActivation.prototype.traverse = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.future._root;\n        var /** @type {?} */ currRoot = this.curr ? this.curr._root : null;\n        this.traverseChildRoutes(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.checkGuards = function () {\n        var _this = this;\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return of(true);\n        }\n        var /** @type {?} */ canDeactivate$ = this.runCanDeactivateChecks();\n        return mergeMap.call(canDeactivate$, function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : of(false); });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.resolveData = function () {\n        var _this = this;\n        if (!this.isActivating())\n            return of(null);\n        var /** @type {?} */ checks$ = from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = concatMap.call(checks$, function (check) { return _this.runResolve(check.route); });\n        return reduce.call(runningChecks$, function (_, __) { return _; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseChildRoutes = function (futureNode, currNode, contexts, futurePath) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            _this.traverseRoutes(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) { return _this.deactivateRouteAndItsChildren(v, /** @type {?} */ ((contexts)).getContext(k)); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseRoutes = function (futureNode, currNode, parentContexts, futurePath) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        var /** @type {?} */ context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future._routeConfig === curr._routeConfig) {\n            var /** @type {?} */ shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, /** @type {?} */ ((future._routeConfig)).runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.traverseChildRoutes(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                var /** @type {?} */ outlet = ((((context)).outlet));\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.traverseChildRoutes(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    };\n    /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(route);\n        var /** @type {?} */ r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                _this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                _this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = from(this.canDeactivateChecks);\n        var /** @type {?} */ runningChecks$ = mergeMap.call(checks$, function (check) { return _this.runCanDeactivate(check.component, check.route); });\n        return every.call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = concatMap.call(checks$, function (check) { return andObservables(from([_this.runCanActivateChild(check.path), _this.runCanActivate(check.route)])); });\n        return every.call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivate = function (future) {\n        var _this = this;\n        var /** @type {?} */ canActivate = future._routeConfig ? future._routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return of(true);\n        var /** @type {?} */ obs = map.call(from(canActivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, future);\n            var /** @type {?} */ observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return first.call(observable);\n        });\n        return andObservables(obs);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChild = function (path) {\n        var _this = this;\n        var /** @type {?} */ future = path[path.length - 1];\n        var /** @type {?} */ canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(map.call(from(canActivateChildGuards), function (d) {\n            var /** @type {?} */ obs = map.call(from(d.guards), function (c) {\n                var /** @type {?} */ guard = _this.getToken(c, d.node);\n                var /** @type {?} */ observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return first.call(observable);\n            });\n            return andObservables(obs);\n        }));\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    PreActivation.prototype.extractCanActivateChild = function (p) {\n        var /** @type {?} */ canActivateChild = p._routeConfig ? p._routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivate = function (component, curr) {\n        var _this = this;\n        var /** @type {?} */ canDeactivate = curr && curr._routeConfig ? curr._routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return of(true);\n        var /** @type {?} */ canDeactivate$ = mergeMap.call(from(canDeactivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, curr);\n            var /** @type {?} */ observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return first.call(observable);\n        });\n        return every.call(canDeactivate$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runResolve = function (future) {\n        var /** @type {?} */ resolve = future._resolve;\n        return map.call(this.resolveNode(resolve, future), function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = Object.assign({}, future.data, inheritedParamsDataResolve(future).resolve);\n            return null;\n        });\n    };\n    /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.resolveNode = function (resolve, future) {\n        var _this = this;\n        var /** @type {?} */ keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return of({});\n        }\n        if (keys.length === 1) {\n            var /** @type {?} */ key_1 = keys[0];\n            return map.call(this.getResolver(resolve[key_1], future), function (value) {\n                return _a = {}, _a[key_1] = value, _a;\n                var _a;\n            });\n        }\n        var /** @type {?} */ data = {};\n        var /** @type {?} */ runningResolvers$ = mergeMap.call(from(keys), function (key) {\n            return map.call(_this.getResolver(resolve[key], future), function (value) {\n                data[key] = value;\n                return value;\n            });\n        });\n        return map.call(last.call(runningResolvers$), function () { return data; });\n    };\n    /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.getResolver = function (injectionToken, future) {\n        var /** @type {?} */ resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    };\n    /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.getToken = function (token, snapshot) {\n        var /** @type {?} */ config = closestLoadedConfig(snapshot);\n        var /** @type {?} */ injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\nvar ActivateRoutes = (function () {\n    /**\n     * @param {?} routeReuseStrategy\n     * @param {?} futureState\n     * @param {?} currState\n     */\n    function ActivateRoutes(routeReuseStrategy, futureState, currState) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activate = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.futureState._root;\n        var /** @type {?} */ currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var /** @type {?} */ childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var /** @type {?} */ componentRef = context.outlet.detach();\n            var /** @type {?} */ contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n        var _this = this;\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var /** @type {?} */ children = nodeChildrenAsMap(route);\n            var /** @type {?} */ contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) { _this.activateRoutes(c, children[c.value.outlet], contexts); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var /** @type {?} */ stored = ((this.routeReuseStrategy.retrieve(future.snapshot)));\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var /** @type {?} */ config = parentLoadedConfig(future.snapshot);\n                    var /** @type {?} */ cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot) {\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap(node) {\n    var /** @type {?} */ map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands) {\n    for (var /** @type {?} */ i = 0; i < commands.length; i++) {\n        var /** @type {?} */ cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * \\@howToUse\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`\n *\n * When linking to this `user/:name` route, you can write:\n * `<a routerLink='/user/bob'>link to user component</a>`\n *\n * \\@description\n *\n * The RouterLink directives let you link to specific parts of your app.\n *\n * When the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - 'merge' merge the queryParams into the current queryParams\n *  - 'preserve' preserve the current queryParams\n *  - default / '' use the queryParams only\n *  same options for {\\@link NavigationExtras#queryParamsHandling}\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * \\@ngModule RouterModule\n *\n * See {\\@link Router#createUrlTree} for more information.\n *\n * \\@stable\n */\nvar RouterLink = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} tabIndex\n     * @param {?} renderer\n     * @param {?} el\n     */\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (isDevMode() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLink.prototype.onClick = function () {\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLink;\n}());\nRouterLink.decorators = [\n    { type: Directive, args: [{ selector: ':not(a)[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLink.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: undefined, decorators: [{ type: Attribute, args: ['tabindex',] },] },\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\nRouterLink.propDecorators = {\n    'queryParams': [{ type: Input },],\n    'fragment': [{ type: Input },],\n    'queryParamsHandling': [{ type: Input },],\n    'preserveFragment': [{ type: Input },],\n    'skipLocationChange': [{ type: Input },],\n    'replaceUrl': [{ type: Input },],\n    'routerLink': [{ type: Input },],\n    'preserveQueryParams': [{ type: Input },],\n    'onClick': [{ type: HostListener, args: ['click',] },],\n};\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * See {\\@link RouterLink} for more information.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkWithHref = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} locationStrategy\n     */\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (isDevMode() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLinkWithHref;\n}());\nRouterLinkWithHref.decorators = [\n    { type: Directive, args: [{ selector: 'a[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkWithHref.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: LocationStrategy, },\n]; };\nRouterLinkWithHref.propDecorators = {\n    'target': [{ type: HostBinding, args: ['attr.target',] }, { type: Input },],\n    'queryParams': [{ type: Input },],\n    'fragment': [{ type: Input },],\n    'queryParamsHandling': [{ type: Input },],\n    'preserveFragment': [{ type: Input },],\n    'skipLocationChange': [{ type: Input },],\n    'replaceUrl': [{ type: Input },],\n    'href': [{ type: HostBinding },],\n    'routerLink': [{ type: Input },],\n    'preserveQueryParams': [{ type: Input },],\n    'onClick': [{ type: HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] },],\n};\n/**\n * @param {?} s\n * @return {?}\n */\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n *\n * \\@howToUse\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * \\@description\n *\n * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkActive = (function () {\n    /**\n     * @param {?} router\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} cdr\n     */\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.active = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkActive.prototype, \"isActive\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.active; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        set: function (data) {\n            var /** @type {?} */ classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.update = function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        var /** @type {?} */ hasActiveLinks = this.hasActiveLinks();\n        // react only when status has changed to prevent unnecessary dom updates\n        if (this.active !== hasActiveLinks) {\n            this.classes.forEach(function (c) {\n                if (hasActiveLinks) {\n                    _this.renderer.addClass(_this.element.nativeElement, c);\n                }\n                else {\n                    _this.renderer.removeClass(_this.element.nativeElement, c);\n                }\n            });\n            Promise.resolve(hasActiveLinks).then(function (active) { return _this.active = active; });\n        }\n    };\n    /**\n     * @param {?} router\n     * @return {?}\n     */\n    RouterLinkActive.prototype.isLinkActive = function (router) {\n        var _this = this;\n        return function (link) { return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact); };\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.hasActiveLinks = function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    return RouterLinkActive;\n}());\nRouterLinkActive.decorators = [\n    { type: Directive, args: [{\n                selector: '[routerLinkActive]',\n                exportAs: 'routerLinkActive',\n            },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkActive.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ElementRef, },\n    { type: Renderer2, },\n    { type: ChangeDetectorRef, },\n]; };\nRouterLinkActive.propDecorators = {\n    'links': [{ type: ContentChildren, args: [RouterLink, { descendants: true },] },],\n    'linksWithHrefs': [{ type: ContentChildren, args: [RouterLinkWithHref, { descendants: true },] },],\n    'routerLinkActiveOptions': [{ type: Input },],\n    'routerLinkActive': [{ type: Input },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar OutletContext = (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar ChildrenOutletContexts = (function () {\n    function ChildrenOutletContexts() {\n        this.contexts = new Map();\n    }\n    /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n        var /** @type {?} */ context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n        var /** @type {?} */ contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n * state.\n *\n * \\@howToUse\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterOutlet = (function () {\n    /**\n     * @param {?} parentContexts\n     * @param {?} location\n     * @param {?} resolver\n     * @param {?} name\n     * @param {?} changeDetector\n     */\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new EventEmitter();\n        this.deactivateEvents = new EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnInit = function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var /** @type {?} */ context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"locationInjector\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.location.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"locationFactoryResolver\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return (this._activatedRoute);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    RouterOutlet.prototype.detach = function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var /** @type {?} */ cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.deactivate = function () {\n        if (this.activated) {\n            var /** @type {?} */ c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n        var /** @type {?} */ component = (((snapshot._routeConfig)).component);\n        resolver = resolver || this.resolver;\n        var /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n        var /** @type {?} */ childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var /** @type {?} */ injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    return RouterOutlet;\n}());\nRouterOutlet.decorators = [\n    { type: Directive, args: [{ selector: 'router-outlet', exportAs: 'outlet' },] },\n];\n/**\n * @nocollapse\n */\nRouterOutlet.ctorParameters = function () { return [\n    { type: ChildrenOutletContexts, },\n    { type: ViewContainerRef, },\n    { type: ComponentFactoryResolver, },\n    { type: undefined, decorators: [{ type: Attribute, args: ['name',] },] },\n    { type: ChangeDetectorRef, },\n]; };\nRouterOutlet.propDecorators = {\n    'activateEvents': [{ type: Output, args: ['activate',] },],\n    'deactivateEvents': [{ type: Output, args: ['deactivate',] },],\n};\nvar OutletInjector = (function () {\n    /**\n     * @param {?} route\n     * @param {?} childContexts\n     * @param {?} parent\n     */\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    OutletInjector.prototype.get = function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * \\@whatItDoes Provides a preloading strategy.\n *\n * \\@experimental\n * @abstract\n */\nvar PreloadingStrategy = (function () {\n    function PreloadingStrategy() {\n    }\n    /**\n     * @abstract\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadingStrategy.prototype.preload = function (route, fn) { };\n    return PreloadingStrategy;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * \\@howToUse\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * \\@experimental\n */\nvar PreloadAllModules = (function () {\n    function PreloadAllModules() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadAllModules.prototype.preload = function (route, fn) {\n        return _catch.call(fn(), function () { return of(null); });\n    };\n    return PreloadAllModules;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that does not preload any modules.\n *\n * \\@description\n *\n * This strategy is enabled by default.\n *\n * \\@experimental\n */\nvar NoPreloading = (function () {\n    function NoPreloading() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    NoPreloading.prototype.preload = function (route, fn) { return of(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * \\@stable\n */\nvar RouterPreloader = (function () {\n    /**\n     * @param {?} router\n     * @param {?} moduleLoader\n     * @param {?} compiler\n     * @param {?} injector\n     * @param {?} preloadingStrategy\n     */\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    ;\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.setUpPreloading = function () {\n        var _this = this;\n        var /** @type {?} */ navigations$ = filter.call(this.router.events, function (e) { return e instanceof NavigationEnd; });\n        this.subscription = concatMap.call(navigations$, function () { return _this.preload(); }).subscribe(function () { });\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.preload = function () {\n        var /** @type {?} */ ngModule = this.injector.get(NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n        var /** @type {?} */ res = [];\n        for (var _i = 0, routes_5 = routes; _i < routes_5.length; _i++) {\n            var route = routes_5[_i];\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                var /** @type {?} */ childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                // no config loaded, fetch the config\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n                // recurse into children\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return mergeAll.call(from(res));\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var /** @type {?} */ loaded$ = _this.loader.load(ngModule.injector, route);\n            return mergeMap.call(loaded$, function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            });\n        });\n    };\n    return RouterPreloader;\n}());\nRouterPreloader.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nRouterPreloader.ctorParameters = function () { return [\n    { type: Router, },\n    { type: NgModuleFactoryLoader, },\n    { type: Compiler, },\n    { type: Injector, },\n    { type: PreloadingStrategy, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Contains a list of directives\n * \\@stable\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * \\@whatItDoes Is used in DI to configure the router.\n * \\@stable\n */\nvar ROUTER_CONFIGURATION = new InjectionToken('ROUTER_CONFIGURATION');\n/**\n * \\@docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new InjectionToken('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            ApplicationRef, UrlSerializer, ChildrenOutletContexts, Location, Injector,\n            NgModuleFactoryLoader, Compiler, ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new Optional()], [RouteReuseStrategy, new Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\n/**\n * @return {?}\n */\nfunction routerNgProbeToken() {\n    return new NgProbeToken('Router', Router);\n}\n/**\n * \\@whatItDoes Adds router directives and providers.\n *\n * \\@howToUse\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@description\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n * \\@stable\n */\nvar RouterModule = (function () {\n    /**\n     * @param {?} guard\n     * @param {?} router\n     */\n    function RouterModule(guard, router) {\n    }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options:\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    RouterModule.forRoot = function (routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new Optional(), new SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterModule.forChild = function (routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    };\n    return RouterModule;\n}());\nRouterModule.decorators = [\n    { type: NgModule, args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] },\n];\n/**\n * @nocollapse\n */\nRouterModule.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ROUTER_FORROOT_GUARD,] },] },\n    { type: Router, decorators: [{ type: Optional },] },\n]; };\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * \\@whatItDoes Registers routes.\n *\n * \\@howToUse\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@stable\n * @param {?} routes\n * @return {?}\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var /** @type {?} */ router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var /** @type {?} */ dom_1 = ɵgetDOM();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + ((e.constructor)).name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = (function () {\n    /**\n     * @param {?} injector\n     */\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    RouterInitializer.prototype.appInitializer = function () {\n        var _this = this;\n        var /** @type {?} */ p = this.injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(function () {\n            var /** @type {?} */ resolve = ((null));\n            var /** @type {?} */ res = new Promise(function (r) { return resolve = r; });\n            var /** @type {?} */ router = _this.injector.get(Router);\n            var /** @type {?} */ opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return (of(null));\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n        var /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n        var /** @type {?} */ preloader = this.injector.get(RouterPreloader);\n        var /** @type {?} */ router = this.injector.get(Router);\n        var /** @type {?} */ ref = this.injector.get(ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(/** @type {?} */ ((null)));\n        this.resultOfPreactivationDone.complete();\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    return RouterInitializer;\n}());\nRouterInitializer.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nRouterInitializer.ctorParameters = function () { return [\n    { type: Injector, },\n]; };\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * \\@experimental\n */\nvar ROUTER_INITIALIZER = new InjectionToken('Router Initializer');\n/**\n * @return {?}\n */\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('4.4.4');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\nexport { RouterLink, RouterLinkWithHref, RouterLinkActive, RouterOutlet, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RoutesRecognized, RouteReuseStrategy, Router, ROUTES, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, RouterModule, provideRoutes, ChildrenOutletContexts, OutletContext, NoPreloading, PreloadAllModules, PreloadingStrategy, RouterPreloader, ActivatedRoute, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot, PRIMARY_OUTLET, convertToParamMap, UrlHandlingStrategy, DefaultUrlSerializer, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VERSION, ROUTER_PROVIDERS as ɵROUTER_PROVIDERS, flatten as ɵflatten, ROUTER_FORROOT_GUARD as ɵa, RouterInitializer as ɵg, getAppInitializer as ɵh, getBootstrapListener as ɵi, provideForRootGuard as ɵd, provideLocationStrategy as ɵc, provideRouterInitializer as ɵj, rootRoute as ɵf, routerNgProbeToken as ɵb, setupRouter as ɵe, Tree as ɵk, TreeNode as ɵl };\n//# sourceMappingURL=router.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/router/@angular/router.es5.js\n// module id = 90\n// module chunks = 1","import {\n    Component,\n    OnInit,\n    OnDestroy,\n    OnChanges,\n    forwardRef,\n    ChangeDetectorRef,\n    Input,\n    Output,\n    EventEmitter,\n    ContentChild,\n    TemplateRef,\n    ViewEncapsulation,\n    HostListener,\n    HostBinding,\n    ViewChild,\n    ElementRef,\n    ChangeDetectionStrategy,\n    Optional,\n    Renderer2\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NgOptionTemplateDirective, NgLabelTemplateDirective } from './ng-templates.directive';\nimport { VirtualScrollComponent } from './virtual-scroll.component';\nimport { NgOption, KeyCode, NgSelectConfig } from './ng-select.types';\nimport { ItemsList } from './items-list';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/combineLatest';\nimport 'rxjs/operator/withLatestFrom';\n\nconst NGB_ANG_SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgSelectComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'ng-select',\n    template: require('./ng-select.component.html'),\n    styles: [require('./ng-select.component.scss')],\n    providers: [NGB_ANG_SELECT_VALUE_ACCESSOR],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        'role': 'dropdown'\n    }\n})\nexport class NgSelectComponent implements OnInit, OnDestroy, OnChanges, ControlValueAccessor {\n\n    @ContentChild(NgOptionTemplateDirective, { read: TemplateRef }) optionTemplate: TemplateRef<any>;\n    @ContentChild(NgLabelTemplateDirective, { read: TemplateRef }) labelTemplate: TemplateRef<any>;\n\n    @ViewChild(VirtualScrollComponent) dropdownList: VirtualScrollComponent;\n    @ViewChild('filterInput') filterInput;\n\n    // inputs\n    @Input() bindLabel: string;\n    @Input() bindValue: string;\n    @Input() clearable = true;\n    @Input() placeholder: string;\n    @Input() notFoundText = 'No items found';\n    @Input() typeToSearchText = 'Type to search';\n    @Input() addTagText = 'Add item';\n    @HostBinding('class.typeahead')\n    @Input() typeahead: Subject<string>;\n\n    @Input()\n    @HostBinding('class.ng-multiple') multiple = false;\n\n    @Input()\n    @HostBinding('class.taggable') addTag: boolean | ((term) => NgOption) = false;\n\n    // output events\n    @Output('blur') blurEvent = new EventEmitter();\n    @Output('focus') focusEvent = new EventEmitter();\n    @Output('change') changeEvent = new EventEmitter();\n    @Output('open') openEvent = new EventEmitter();\n    @Output('close') closeEvent = new EventEmitter();\n    @Output('search') searchEvent = new EventEmitter();\n\n    @HostBinding('class.ng-single')\n    get single() {\n        return !this.multiple;\n    }\n\n    @HostBinding('class.opened') isOpen = false;\n    @HostBinding('class.focused') isFocused = false;\n    @HostBinding('class.disabled') isDisabled = false;\n    @HostBinding('class.filtered') get filtered() { return !!this.filterValue };\n\n    itemsList = new ItemsList();\n    viewPortItems: NgOption[] = [];\n    isLoading = false;\n    filterValue: string = null;\n\n    private _items$ = new Subject<boolean>();\n    private _writeValue$ = new Subject<NgOption | NgOption[]>();\n    private _checkWriteValue = false;\n    private _writeValueHandler$ = null;\n\n    private onChange = (_: NgOption) => { };\n    private onTouched = () => { };\n    private disposeDocumentClickListener = () => { };\n\n    clearItem = (item) => this.unselect(item);\n\n    constructor( @Optional() config: NgSelectConfig,\n        private changeDetectorRef: ChangeDetectorRef,\n        private elementRef: ElementRef,\n        private renderer: Renderer2\n    ) {\n        this.mergeConfig(config);\n        this.handleWriteValue();\n    }\n\n    @Input()\n    get items(): NgOption[] {\n        return this.itemsList.items;\n    }\n\n    set items(items: NgOption[]) {\n        this.setItems(items || []);\n        this._items$.next(true);\n    }\n\n    get selectedItems(): NgOption[] {\n        return this.itemsList.value;\n    }\n\n    ngOnInit() {\n        this.handleDocumentClick();\n        this.bindLabel = this.bindLabel || 'label';\n    }\n\n    ngOnChanges(changes) {\n        if (changes.multiple) {\n            this.itemsList.setMultiple(changes.multiple.currentValue);\n        }\n    }\n\n    ngOnDestroy() {\n        this.changeDetectorRef.detach();\n        this.disposeDocumentClickListener();\n        this._writeValueHandler$.unsubscribe();\n    }\n\n    @HostListener('keydown', ['$event'])\n    handleKeyDown($event: KeyboardEvent) {\n        if (KeyCode[$event.which]) {\n            switch ($event.which) {\n                case KeyCode.ArrowDown:\n                    this.handleArrowDown($event);\n                    break;\n                case KeyCode.ArrowUp:\n                    this.handleArrowUp($event);\n                    break;\n                case KeyCode.Space:\n                    this.handleSpace($event);\n                    break;\n                case KeyCode.Enter:\n                    this.handleEnter($event);\n                    break;\n                case KeyCode.Tab:\n                    this.handleTab($event);\n                    break;\n                case KeyCode.Esc:\n                    this.close();\n                    break;\n                case KeyCode.Backspace:\n                    this.handleBackspace();\n                    break;\n            }\n        }\n    }\n\n    handleArrowClick($event: Event) {\n        $event.stopPropagation();\n        if (this.isOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    handleSelectClick($event: Event) {\n        $event.stopPropagation();\n        this.open();\n    }\n\n    handleClearClick($event: Event) {\n        $event.stopPropagation();\n        this.clear();\n    }\n\n    clear() {\n        if (!this.clearable) {\n            return;\n        }\n        this.itemsList.clearSelected();\n        this.clearSearch();\n        this.notifyModelChanged();\n        if (this.isTypeahead()) {\n            this.typeahead.next(this.filterValue);\n        }\n    }\n\n    writeValue(value: any): void {\n        this._checkWriteValue = true;\n        this._writeValue$.next(value);\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.isDisabled = isDisabled;\n    }\n\n    open() {\n        if (this.isDisabled || this.isOpen) {\n            return;\n        }\n        this.isOpen = true;\n        this.itemsList.markItem();\n        this.scrollToMarked();\n        this.focusSearchInput();\n        this.openEvent.emit();\n    }\n\n    close() {\n        if (!this.isOpen) {\n            return;\n        }\n        this.isOpen = false;\n        this.clearSearch();\n        this.closeEvent.emit();\n    }\n\n    toggle(item: NgOption) {\n        if (!item || item.disabled || this.isDisabled) {\n            return;\n        }\n\n        if (this.multiple && item.selected) {\n            this.unselect(item);\n        } else {\n            this.select(item);\n        }\n    }\n\n    select(item: NgOption) {\n        this._checkWriteValue = false;\n        if (!item.selected) {\n            this.itemsList.select(item);\n            this.clearSearch();\n            this.updateModel();\n        }\n\n        if (this.single) {\n            this.close();\n        }\n    }\n\n    unselect(item: NgOption) {\n        this.itemsList.unselect(item);\n        this.updateModel();\n    }\n\n    selectTag() {\n        let tag = {}\n        \n        if (this.addTag instanceof Function) {\n            tag = this.addTag(this.filterValue);\n        } else {\n            tag[this.bindLabel] = this.filterValue;\n        }\n\n        this.itemsList.addTag(tag);\n        this.select(tag);\n    }\n\n    showPlaceholder() {\n        return this.placeholder && !this.isValueSet(this.selectedItems) && !this.filterValue;\n    }\n\n    showClear() {\n        return this.clearable && (this.isValueSet(this.selectedItems) || this.filterValue) && !this.isDisabled;\n    }\n\n    showFilter() {\n        return !this.isDisabled;\n    }\n\n    showNoItemsFound() {\n        const empty = this.itemsList.filteredItems.length === 0;\n        return (empty && !this.isTypeahead()) ||\n            (empty && this.isTypeahead() && this.filterValue && !this.isLoading);\n    }\n\n    showTypeToSearch() {\n        const empty = this.itemsList.filteredItems.length === 0;\n        return empty && this.isTypeahead() && !this.filterValue && !this.isLoading;\n    }\n\n    onFilter($event) {\n        if (!this.isOpen) {\n            this.open();\n        }\n\n        this.filterValue = $event.target.value;\n\n        if (this.isTypeahead()) {\n            this.isLoading = true;\n            this.typeahead.next(this.filterValue);\n        } else {\n            this.itemsList.filter(this.filterValue, this.bindLabel);\n        }\n    }\n\n    onInputFocus() {\n        this.isFocused = true;\n        this.focusEvent.emit(null);\n    }\n\n    onInputBlur() {\n        this.isFocused = false;\n        this.blurEvent.emit(null);\n        if (!this.isOpen && !this.isDisabled) {\n            this.onTouched();\n        }\n    }\n\n    onItemHover(item: NgOption) {\n        if (item.disabled) {\n            return;\n        }\n        this.itemsList.markItem(item);\n    }\n\n    private handleWriteValue() {\n        // combineLatest ensures that write value is always set after latest items are loaded\n        this._writeValueHandler$ = Observable.combineLatest(this._items$, this._writeValue$).subscribe((result) => {\n            if (!this._checkWriteValue) {\n                return;\n            }\n            const value = result[1];\n            this.validateWriteValue(value);\n            this.itemsList.clearSelected();\n            if (value) {\n                if (this.multiple) {\n                    (<NgOption[]>value).forEach(item => {\n                        this.selectWriteValue(item);\n                    });\n                } else {\n                    this.selectWriteValue(value);\n                }\n            }\n            this.detectChanges();\n        });\n    }\n\n    private setItems(items: NgOption[]) {\n        this.itemsList.setItems(items);\n        if (this.isTypeahead()) {\n            this.isLoading = false;\n            this.itemsList.markItem();\n        }\n    }\n\n    private handleDocumentClick() {\n        const handler = ($event) => {\n            // prevent close if clicked on select\n            if (this.elementRef.nativeElement.contains($event.target)) {\n                return;\n            }\n\n            // prevent close if clicked on dropdown menu\n            const dropdown = this.getDropdownMenu();\n            if (dropdown && dropdown.contains($event.target)\n            ) {\n                return;\n            }\n\n            if (this.isFocused) {\n                this.onInputBlur();\n            }\n\n            if (this.isOpen) {\n                this.close();\n            }\n        };\n\n        this.disposeDocumentClickListener = this.renderer.listen('document', 'click', handler);\n    }\n\n    private validateWriteValue(value: any) {\n        if (!value) {\n            return;\n        }\n\n        const validateBinding = (item) => {\n            if (item instanceof Object && this.bindValue) {\n                throw new Error('Binding object with bindValue is not allowed.');\n            }\n        };\n\n        if (this.multiple) {\n            if (!Array.isArray(value)) {\n                throw new Error('Multiple select model should be array.');\n            }\n            value.forEach(item => validateBinding(item));\n        } else {\n            validateBinding(value);\n        }\n    }\n\n    private selectWriteValue(value: any) {\n        let item = this.itemsList.findItem(value, this.bindLabel, this.bindValue);\n        if (item) {\n            this.itemsList.select(item);\n        }\n    }\n\n    private updateModel() {\n        this.notifyModelChanged();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    private clearSearch() {\n        this.filterValue = null;\n        this.itemsList.clearFilter();\n    }\n\n    private focusSearchInput() {\n        setTimeout(() => {\n            this.filterInput.nativeElement.focus(); // TODO: this won't work on mobile\n        });\n    }\n\n    private scrollToMarked() {\n        this.dropdownList.scrollInto(this.itemsList.markedItem);\n    }\n\n    private handleTab($event: KeyboardEvent) {\n        if (this.isOpen) {\n            this.close();\n        }\n    }\n\n    private handleEnter($event: KeyboardEvent) {\n        if (this.isOpen) {\n            if (this.itemsList.markedItem) {\n                this.toggle(this.itemsList.markedItem);\n            } else if (this.addTag) {\n                this.selectTag();\n            }\n        }\n        $event.preventDefault();\n    }\n\n    private handleSpace($event: KeyboardEvent) {\n        if (this.isOpen) {\n            return;\n        }\n        this.open();\n        $event.preventDefault();\n    }\n\n    private handleArrowDown($event: KeyboardEvent) {\n        if (!this.isOpen) {\n            this.open();\n        } else {\n            this.itemsList.markNextItem();\n            this.scrollToMarked();\n        }\n        $event.preventDefault();\n    }\n\n    private handleArrowUp($event: KeyboardEvent) {\n        this.itemsList.markPreviousItem();\n        this.scrollToMarked();\n        $event.preventDefault();\n    }\n\n    private handleBackspace() {\n        if (this.filterValue) {\n            return;\n        }\n\n        if (this.multiple) {\n            this.itemsList.unselectLastItem();\n            this.updateModel();\n        } else {\n            this.clear();\n        }\n    }\n\n    private notifyModelChanged() {\n        const value = this.value;\n        if (!value) {\n            this.onChange(null);\n        } else if (this.bindValue) {\n            const bindValue = Array.isArray(value) ?\n                value.map(x => x[this.bindValue]) :\n                value[this.bindValue];\n            this.onChange(bindValue);\n        } else {\n            this.onChange(value);\n        }\n        this.changeEvent.emit(value);\n    }\n\n    private getDropdownMenu() {\n        if (!this.isOpen || !this.dropdownList) {\n            return null;\n        }\n        return <HTMLElement>this.elementRef.nativeElement.querySelector('.ng-menu-outer');\n    }\n\n    private isTypeahead() {\n        return this.typeahead && this.typeahead.observers.length > 0;\n    }\n\n    private detectChanges() {\n        if (!(<any>this.changeDetectorRef).destroyed) {\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    private get value() {\n        if (this.multiple) {\n            return this.selectedItems;\n        }\n        return this.selectedItems[0] || null;\n    }\n\n    private isValueSet(value: any): boolean {\n        return !!value && value.length > 0;\n    }\n\n    private mergeConfig(config: NgSelectConfig) {\n        if (!config) {\n            return;\n        }\n        this.notFoundText = config.notFoundText || this.notFoundText;\n        this.typeToSearchText = config.typeToSearchText || this.typeToSearchText;\n        this.addTagText = config.addTagText || this.addTagText;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./src/ng-select/ng-select.component.ts","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ng-option-tmp]' })\nexport class NgOptionTemplateDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n\n@Directive({ selector: '[ng-label-tmp]' })\nexport class NgLabelTemplateDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader!./src/ng-select/ng-templates.directive.ts"],"sourceRoot":""}