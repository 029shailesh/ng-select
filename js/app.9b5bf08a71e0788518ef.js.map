{"version":3,"sources":["webpack:///js/app.9b5bf08a71e0788518ef.js","webpack:///./src/demo/app/app.component.ts","webpack:///./src/demo/app/reactive-forms.component.ts","webpack:///./src/demo/app/select-autocomplete.component.ts","webpack:///./src/demo/app/select-bindings.component.ts","webpack:///./src/demo/app/select-events.component.ts","webpack:///./src/demo/app/select-multi.component.ts","webpack:///./src/demo/app/select-search.component.ts","webpack:///./src/demo/app/select-with-templates.component.ts","webpack:///./src/lib/index.ts","webpack:///./src/lib/src/items-list.ts","webpack:///./src/lib/src/ng-search-focus.directive.ts","webpack:///./src/lib/src/ng-select.module.ts","webpack:///./src/lib/src/search-helper.ts","webpack:///./src/lib/src/spinner.component.ts","webpack:///./src/lib/src/ng-select.component.scss","webpack:///./src/demo/app/app.component.html","webpack:///./src/lib/src/ng-select.component.html","webpack:///./~/@angular/forms/@angular/forms.es5.js","webpack:///./src/demo/main.ts","webpack:///./~/@angular/common/@angular/common/http.es5.js","webpack:///./src/lib/src/ng-select.types.ts","webpack:///./~/@angular/router/@angular/router.es5.js","webpack:///./src/lib/src/ng-select.component.ts","webpack:///./src/lib/src/ng-templates.directive.ts","webpack:///./src/lib/src/virtual-scroll.component.ts","webpack:///./src/demo/app/app.module.ts"],"names":["webpackJsonp","103","module","exports","__webpack_require__","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","value","core_1","router_1","AppComponent","route","_this","data","subscribe","title","Component","selector","template","ActivatedRoute","104","forms_1","http_1","ReactiveFormsComponent","fb","http","isCitiesControlVisible","cities","id","name","disabled","ages","label","albums","photos","prototype","ngOnInit","loadAlbums","loadPhotos","heroForm","group","selectedCitiesIds","age","album","photo","toggleAgeDisable","controls","enable","disable","toggleCitiesControl","clearCities","get","patchValue","selectFirstPhoto","thumbnailUrl","rsp","console","log","FormBuilder","HttpClient","105","SelectAutocompleteComponent","items","typeahead","EventEmitter","distinctUntilChanged","debounceTime","switchMap","term","loadGithubUsers","err","map","106","SelectBindingsComponent","defaultBindingsList","selectedCity2","selectedCityId2","107","SelectEventsComponent","events","onChange","$event","push","onFocus","onBlur","onOpen","onClose","108","SelectMultiComponent","companies","companies2","companiesNames","forEach","selectedCompaniesDisabled","clearModel","selectedCompanies","109","SelectSearchComponent","filteredCompanies2","customFilter","slice","filter","x","110","SelectWithTemplatesComponent","avatar","cities2","JSON","parse","stringify","cities3","selectedCity","selectedCity3","111","ng_select_component_1","NgSelectComponent","ng_select_module_1","NgSelectModule","ng_select_types_1","NgSelectConfig","112","__assign","assign","t","s","n","p","hasOwnProperty","call","searchHelper","ItemsList","multiple","filteredItems","_markedIndex","_selected","mapItems","_multiple","enumerable","configurable","select","item","clearSelected","selected","unselect","unselectLastItem","splice","marked","bindLabel","filterFuncVal","getDefaultFilterFunc","val","clearFilter","markNextItem","stepToItem","markPreviousItem","markItem","lastSelectedItem","indexOf","getNextItemIndex","steps","markedItem","stripSpecialChars","toUpperCase","index","113","AngSearchFocusDirective","elementRef","nativeElement","Directive","ElementRef","114","__param","paramIndex","decorator","common_1","ng_templates_directive_1","ng_search_focus_directive_1","virtual_scroll_component_1","spinner_component_1","parentModule","Error","NgSelectModule_1","forRoot","config","ngModule","providers","provide","useValue","NgModule","declarations","NgOptionTemplateDirective","NgLabelTemplateDirective","SpinnerComponent","imports","FormsModule","CommonModule","VirtualScrollModule","Optional","SkipSelf","115","text","match","a","diacritics","replace","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","116","117","118","119","120","28","__webpack_exports__","isEmptyInputValue","isPresent","o","toObservable","obs","__WEBPACK_IMPORTED_MODULE_1__angular_core__","__WEBPACK_IMPORTED_MODULE_3_rxjs_observable_fromPromise__","_executeValidators","control","validators","_executeAsyncValidators","_mergeErrors","arrayOfErrors","res","reduce","errors","keys","_isAndroid","test","__WEBPACK_IMPORTED_MODULE_5__angular_platform_browser__","getUserAgent","toLowerCase","normalizeValidator","validator","validate","normalizeAsyncValidator","unimplemented","_buildValueString","_extractId","valueString","split","_buildValueString$1","_extractId$1","controlPath","parent","concat","setUpControl","dir","_throwError","valueAccessor","Validators","compose","asyncValidator","composeAsync","writeValue","registerOnChange","newValue","viewToModelUpdate","markAsDirty","setValue","emitModelToViewChange","registerOnTouched","markAsTouched","emitModelEvent","setDisabledState","registerOnDisabledChange","isDisabled","_rawValidators","registerOnValidatorChange","updateValueAndValidity","_rawAsyncValidators","cleanUpControl","_noControlError","_clearChangeFns","setUpFormContainer","message","messageEnd","join","path","composeValidators","composeAsyncValidators","isPropertyUpdated","changes","viewModel","change","isFirstChange","currentValue","isBuiltInAccessor","BUILTIN_ACCESSORS","some","constructor","selectValueAccessor","valueAccessors","defaultAccessor","undefined","builtinAccessor","customAccessor","DefaultValueAccessor","_find","delimiter","Array","FormGroup","FormArray","at","coerceToValidator","isArray","coerceToAsyncValidator","remove","list","el","_hasInvalidParent","FormGroupName","FormGroupDirective","FormArrayName","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_forkJoin__","__WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__","AbstractControlDirective","AbstractFormGroupDirective","CheckboxControlValueAccessor","ControlContainer","NG_VALUE_ACCESSOR","COMPOSITION_BUFFER_MODE","NgControl","NgControlStatus","NgControlStatusGroup","NgForm","NgModel","NgModelGroup","RadioControlValueAccessor","FormControlDirective","FormControlName","NgSelectOption","SelectControlValueAccessor","SelectMultipleControlValueAccessor","CheckboxRequiredValidator","EmailValidator","MaxLengthValidator","MinLengthValidator","PatternValidator","RequiredValidator","AbstractControl","FormControl","NG_ASYNC_VALIDATORS","NG_VALIDATORS","VERSION","ReactiveFormsModule","InternalFormsSharedModule","REACTIVE_DRIVEN_DIRECTIVES","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","CHECKBOX_VALUE_ACCESSOR","DEFAULT_VALUE_ACCESSOR","AbstractControlStatus","ngControlStatusHost","formDirectiveProvider","formControlBinding","modelGroupProvider","NgNoValidate","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","RADIO_VALUE_ACCESSOR","RadioControlRegistry","RANGE_VALUE_ACCESSOR","RangeValueAccessor","formControlBinding$1","controlNameBinding","formDirectiveProvider$1","formArrayNameProvider","formGroupNameProvider","SELECT_VALUE_ACCESSOR","NgSelectMultipleOption","SELECT_MULTIPLE_VALUE_ACCESSOR","CHECKBOX_REQUIRED_VALIDATOR","EMAIL_VALIDATOR","MAX_LENGTH_VALIDATOR","MIN_LENGTH_VALIDATOR","PATTERN_VALIDATOR","REQUIRED_VALIDATOR","valid","invalid","pending","enabled","pristine","dirty","touched","untouched","statusChanges","valueChanges","reset","hasError","errorCode","getError","_super","apply","EMAIL_REGEXP","min","parseFloat","isNaN","actual","max","required","requiredTrue","email","minLength","minlength","requiredLength","actualLength","maxLength","maxlength","pattern","nullValidator","regex","regexStr","RegExp","toString","requiredPattern","actualValue","presentValidators","observables","useExisting","multi","_renderer","_elementRef","_","onTouched","setProperty","fn","type","args","host","(change)","(blur)","ctorParameters","_compositionMode","_composing","normalizedValue","_handleInput","_compositionStart","_compositionEnd","(input)","(compositionstart)","(compositionend)","_parent","_accessors","add","accessor","_isSameGroup","fireUncheck","controlPair","_control","_registry","_injector","_checkName","ngOnDestroy","_state","_fn","formControlName","_throwNameError","propDecorators","_optionMap","Map","_idCounter","_compareWith","set","_getOptionId","_getOptionValue","_registerOption","_i","_a","from","has","compareWith","_element","_select","_setElementValue","delete","ngValue","optionSelectedStateSetter","ids_1","opt","_setSelected","options","selectedOptions","_value","_checkParentType","addFormGroup","formDirective","removeFormGroup","getFormGroup","_validators","_asyncValidators","cd","_cd","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","VALID","INVALID","PENDING","DISABLED","_onCollectionChange","_pristine","_touched","_onDisabledChange","_status","_errors","_valueChanges","_statusChanges","setValidators","newValidator","setAsyncValidators","clearValidators","clearAsyncValidators","opts","onlySelf","markAsUntouched","_forEachChild","_updateTouched","markAsPristine","_updatePristine","markAsPending","_updateValue","emitEvent","emit","_updateAncestors","changeFn","setParent","_setInitialStatus","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","_updateTreeValidity","ctrl","_allControlsDisabled","_asyncValidationSubscription","setErrors","unsubscribe","_updateControlsErrors","_initObservables","_anyControlsHaveStatus","cb","_anyControls","condition","status","_anyControlsDirty","_anyControlsTouched","_isBoxedValue","formState","_registerOnCollectionChange","_onChange","_applyFormState","emitViewToModelChange","_setUpControls","registerControl","addControl","removeControl","setControl","contains","controlName","_checkAllValuesPresent","_throwIfControlMissing","getRawValue","_reduceChildren","acc","_reduceValue","initValue","_registerControl","insert","removeAt","resolvedPromise","Promise","resolve","asyncValidators","_submitted","ngSubmit","form","then","container","_findContainer","getControl","updateModel","onSubmit","onReset","resetForm","pop","(submit)","(reset)","outputs","exportAs","FormErrorExamples","formGroupName","formArrayName","ngModelGroup","ngModelWithFormGroup","TemplateDrivenErrors","modelParentException","formGroupNameException","missingNameException","modelGroupParentException","resolvedPromise$1","_registered","update","ngOnChanges","_checkForErrors","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","standalone","disabledValue","ReactiveErrors","controlParentException","ngModelGroupException","missingFormException","groupParentException","arrayParentException","disabledAttrWarning","warn","_isControlChanged","directives","_checkFormPresent","_updateValidators","_updateDomValue","_updateRegistrations","addFormArray","removeFormArray","getFormArray","newCtrl","_oldForm","sync","async","_added","_required","[attr.required]","_enabled","_createValidator","_validator","parseInt","[attr.minlength]","[attr.maxlength]","[attr.pattern]","controlsConfig","extra","_reduceControls","array","_createControl","controlConfig","novalidate","390","platform_browser_dynamic_1","app_module_1","platformBrowserDynamic","bootstrapModule","AppModule","MODULE_REF","40","paramParser","rawParams","codec","map$$1","param","eqIdx","decodeKey","decodeValue","standardEncoding","encodeURIComponent","mightHaveBody","method","isArrayBuffer","ArrayBuffer","isBlob","Blob","isFormData","FormData","addBody","body","headers","observe","params","reportProgress","responseType","withCredentials","getResponseUrl","xhr","responseURL","getAllResponseHeaders","getResponseHeader","interceptingHandler","backend","interceptors","reduceRight","next","interceptor","HttpInterceptorHandler","jsonpCallbackContext","window","__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_of__","__WEBPACK_IMPORTED_MODULE_3_rxjs_operator_concatMap__","__WEBPACK_IMPORTED_MODULE_4_rxjs_operator_filter__","__WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__","__WEBPACK_IMPORTED_MODULE_6__angular_common__","__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__","HttpBackend","HttpHandler","HttpHeaders","HTTP_INTERCEPTORS","JsonpClientBackend","JsonpInterceptor","HttpClientJsonpModule","HttpClientModule","HttpClientXsrfModule","HttpParams","HttpUrlEncodingCodec","HttpRequest","HttpErrorResponse","HttpEventType","HttpHeaderResponse","HttpResponse","HttpResponseBase","HttpXhrBackend","XhrFactory","HttpXsrfTokenExtractor","NoopInterceptor","JsonpCallbackContext","BrowserXhr","HttpXsrfCookieExtractor","HttpXsrfInterceptor","XSRF_COOKIE_NAME","XSRF_HEADER_NAME","handle","req","encodeKey","encodeValue","decodeURIComponent","updates","cloneFrom","encoder","fromString","init","getAll","append","clone","op","eKey","base","base_1","idx","normalizedNames","lazyUpdate","lazyInit","line","trim","maybeSetNormalizedName","values","lcName","copyFrom","applyUpdate","other","toDelete_1","existing","url","third","fourth","urlWithParams","qIdx","sep","serializeBody","detectContentTypeHeader","setHeaders","setParams","Sent","UploadProgress","ResponseHeader","DownloadProgress","Response","User","defaultStatus","defaultStatusText","statusText","ok","error","handler","request","first","events$","res$","event","head","jsonp","callbackParam","patch","post","put","intercept","nextRequestId","JSONP_ERR_NO_CALLBACK","JSONP_ERR_WRONG_METHOD","JSONP_ERR_WRONG_RESPONSE_TYPE","callbackMap","document","nextCallback","observer","callback","node","createElement","src","finished","cancelled","cleanup","parentNode","removeChild","onLoad","complete","onError","addEventListener","appendChild","removeEventListener","XSSI_PREFIX","build","XMLHttpRequest","xhrFactory","open","setRequestHeader","detectedType","reqBody","headerResponse","partialFromXhr","response","responseText","sentHeaders","onDownProgress","progressEvent","loaded","lengthComputable","total","partialText","onUpProgress","progress","upload","send","abort","getToken","doc","platform","cookieName","lastCookieString","lastToken","parseCount","cookieString","cookie","tokenService","headerName","lcUrl","startsWith","token","useClass","withOptions","useFactory","deps","41","KeyCode","notFoundText","typeToSearchText","52","convertToParamMap","ParamsAsMap","navigationCancelingError","NAVIGATION_CANCELING_ERROR","isNavigationCancelingError","defaultUrlMatcher","segments","segmentGroup","parts","pathMatch","hasChildren","posParams","part","segment","substring","consumed","validateConfig","parentPath","validateNode","getFullPath","fullPath","component","outlet","PRIMARY_OUTLET","redirectTo","children","loadChildren","matcher","charAt","currentRoute","shallowEqualArrays","b","shallowEqual","k1","k2","flatten","arr","last$1","prop","waitForMap","obj","__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__","waitHead","waitTail","mapped","__WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__","concat$","__WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__","last$","__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__","andObservables","merged$","__WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__","__WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__","result","wrapIntoObservable","__WEBPACK_IMPORTED_MODULE_2__angular_core__","__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__","createEmptyUrlTree","UrlTree","UrlSegmentGroup","containsTree","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","root","containsQueryParams","containsSegmentGroup","equalPath","numberOfChildren","every","containsSegmentGroupHelper","containeePaths","current","equalSegments","as","bs","parameters","mapChildrenIntoArray","child","childOutlet","serializePaths","serializePath","serializeSegment","primary","children_1","encode","decode","serializeParams","serializeQueryParams","strParams","matchSegments","str","SEGMENT_RE","matchQueryParams","QUERY_PARAM_RE","matchUrlQueryParamValue","QUERY_PARAM_VALUE_RE","noMatch","__WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__","NoMatch","absoluteRedirect","newTree","AbsoluteRedirect","namedOutletsRedirect","canLoadFails","applyRedirects","moduleInjector","configLoader","urlSerializer","urlTree","ApplyRedirects","runCanLoadGuard","canLoad","__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__","injectionToken","guard","matched","consumedSegments","lastChild","positionalParamSegments","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","createChildrenForEmptySegments","mergeTrivialChildren","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","routes","routes_1","isEmptyPathRedirect","getOutlet","primarySegmentGroup","routes_2","findNode","node_1","findPath","unshift","createEmptyState","rootComponent","snapshot","createEmptyStateSnapshot","emptyUrl","__WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__","UrlSegment","emptyParams","emptyData","emptyQueryParams","fragment","activated","RouterState","TreeNode","ActivatedRouteSnapshot","RouterStateSnapshot","inheritedParamsDataResolve","pathToRoot","pathFromRoot","inhertingStartingFrom","routeConfig","curr","_resolvedData","setRouterState","state","_routerState","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","_futureSnapshot","equalParamsAndUrlSegments","equalUrlParams","parentsMismatch","createRouterState","routeReuseStrategy","prevState","createNode","_root","shouldReuseRoute","createOrReuseChildren","retrieve","tree_1","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","createUrlTree","commands","tree","nav","computeNavigation","toRoot","startingPosition","findStartingPosition","processChildren","updateSegmentGroupChildren","updateSegmentGroup","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","outletName","Navigation","numberOfDoubleDots","isAbsolute","cmd","cmdIdx","outlets_1","urlPart","partIndex","Position","_lastPathIndex","_urlSegment","modifier","createPositionApplyingDoubleDots","g","ci","dd","getPath","getOutlets","_b","startIndex","m","prefixedWith","slicedCommands","commandIndex","pathIndex","createNewSegmentGroup","outlets_2","children_2","currentCommandIndex","currentPathIndex","compare","paths","createNewSegmentChildren","recognize","rootComponentType","Recognizer","sortActivatedRouteSnapshots","nodes","sort","localeCompare","getChildConfig","match$1","NoMatch$1","checkOutletNameUniqueness","names","routeWithSameOutletName","getSourceSegmentGroup","_sourceSegment","getPathIndexShift","_segmentIndexShift","split$1","containsEmptyPathMatchesWithNamedOutlets","s_1","createChildrenForEmptyPaths","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","routes_3","emptyPathMatch","getOutlet$1","primarySegment","routes_4","getData","getResolve","defaultErrorHandler","defaultRouterHook","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","_routeConfig","_loadedConfig","closestLoadedConfig","nodeChildrenAsMap","validateCommands","attrBoolValue","routerNgProbeToken","Router","provideLocationStrategy","platformLocationStrategy","baseHref","useHash","__WEBPACK_IMPORTED_MODULE_1__angular_common__","provideForRootGuard","router","provideRoutes","ROUTES","setupRouter","ref","contexts","location","injector","loader","compiler","urlHandlingStrategy","errorHandler","enableTracing","dom_1","__WEBPACK_IMPORTED_MODULE_20__angular_platform_browser__","e","logGroup","logGroupEnd","rootRoute","routerState","getAppInitializer","appInitializer","bind","getBootstrapListener","bootstrapListener","provideRouterInitializer","RouterInitializer","ROUTER_INITIALIZER","__WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__","__WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__","__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__","__WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__","__WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce__","__WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__","__WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError__","__WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter__","RouterLink","RouterLinkWithHref","RouterLinkActive","RouterOutlet","GuardsCheckEnd","GuardsCheckStart","NavigationCancel","NavigationEnd","NavigationError","NavigationStart","ResolveEnd","ResolveStart","RouteConfigLoadEnd","RouteConfigLoadStart","RoutesRecognized","RouteReuseStrategy","ROUTER_CONFIGURATION","RouterModule","ChildrenOutletContexts","OutletContext","NoPreloading","PreloadAllModules","PreloadingStrategy","RouterPreloader","UrlHandlingStrategy","DefaultUrlSerializer","UrlSerializer","ROUTER_PROVIDERS","ROUTER_FORROOT_GUARD","Tree","urlAfterRedirects","reason","shouldActivate","LoadedRouterConfig","_queryParamMap","DEFAULT_SERIALIZER","serialize","_parameterMap","UrlParser","parseRootSegment","parseQueryParams","parseFragment","encodeURI","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","decodeURI","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","decodedKey","decodedVal","currentVal","allowPrimary","substr","allowRedirects","expanded$","expandSegmentGroup","urlTrees$","rootSegmentGroup","noMatchError","mapped$","rootCandidate","expandChildren","expandSegment","routes$","processedRoutes$","expandSegmentAgainstRoute","concattedProcessedRoutes$","first$","noLeftoversInUrl","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","newSegments","rawSegmentGroup","load","cfg","rawSlicedSegments","childConfig$","routerConfig","childModule","childConfig","expanded$_1","cs","shouldLoad","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","actualSegments_1","firstChild","siblings","cc","futureSnapshot","_paramMap","urlSegment","lastPathIndex","_resolve","cmdWithOutlet","find","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","config_1","processSegmentAgainstRoute","rawSegment","snapshot_1","children_3","shouldDetach","store","shouldAttach","future","DefaultRouteReuseStrategy","detachedTree","RouterConfigLoader","onLoadStartListener","onLoadEndListener","parentInjector","moduleFactory$","loadModuleFactory","factory","create","compileModuleAsync","shouldProcessUrl","extract","merge","newUrlPart","rawUrl","DefaultUrlHandlingStrategy","wholeUrl","rootContexts","navigations","routerEvents","navigationId","navigated","hooks","beforePreactivation","afterPreactivation","onLoadStart","triggerEvent","onLoadEnd","resetConfig","currentUrlTree","rawUrlTree","currentRouterState","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","Zone","wrap","source","setTimeout","scheduleNavigation","serializeUrl","dispose","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","f","q","extras","skipLocationChange","parseUrl","mergedTree","navigate","removeEmptyProps","isActive","executeScheduledNavigation","promise","catch","lastNavigation","reject","rej","urlTransition","runNavigate","shouldPreventPushState","shouldReplaceUrl","precreatedState","go","resolvePromise","rejectPromise","urlAndSnapshot$","appliedUrl","redirectsApplied$","preActivation","navigationIsSuccessful","beforePreactivationDone$","preactivationTraverse$","PreActivation","traverse","preactivationCheckGuards$","checkGuards","preactivationResolveData$","isActivating","resolveData","preactivationDone$","routerState$","storedState","storedUrl","isCurrentPathEqualTo","replaceState","ActivateRoutes","activate","resetUrlToCurrentUrlTree","ee","CanActivate","CanDeactivate","canActivateChecks","canDeactivateChecks","parentContexts","futureRoot","currRoot","traverseChildRoutes","isDeactivating","canDeactivate$","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","checks$","runningChecks$","check","runResolve","__","futureNode","currNode","futurePath","prevChildren","traverseRoutes","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","runCanActivateChild","runCanActivate","canActivate","observable","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","runningResolvers$","resolver","futureState","currState","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","activateRoutes","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","cmpFactoryResolver","componentFactoryResolver","activateWith","tabIndex","renderer","setAttribute","preserve","onClick","routerLink","locationStrategy","subscription","updateTargetUrlAndHref","button","ctrlKey","metaKey","shiftKey","href","prepareExternalUrl","element","cdr","classes","active","routerLinkActiveOptions","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","descendants","routerLinkActive","onChildOutletCreated","onChildOutletDestroyed","changeDetector","_activatedRoute","activateEvents","deactivateEvents","instance","cmp","activatedRoute","hostView","destroy","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","notFoundValue","preload","moduleLoader","preloadingStrategy","onStartLoad","onEndLoad","setUpPreloading","navigations$","processRoutes","routes_5","preloadConfig","loaded$","ROUTER_DIRECTIVES","forChild","initNavigation","resultOfPreactivationDone","isLegacyDisabled","isLegacyEnabled","bootstrappedComponentRef","preloader","components","componentTypes","53","items_list_1","Subject_1","NGB_ANG_SELECT_VALUE_ACCESSOR","forwardRef","changeDetectorRef","clearable","onSearch","isOpen","isFocused","itemsList","viewPortItems","isLoading","filterValue","propagateChange","disposeDocumentClickListener","mergeConfig","isTypeahead","handleItemsChange","handleDocumentClick","handleKeyDown","which","ArrowDown","handleArrowDown","ArrowUp","handleArrowUp","Space","handleSpace","Enter","handleEnter","Tab","handleTab","Esc","close","Backspace","handleBackspace","handleArrowClick","stopPropagation","handleSelectClick","handleClearClick","clear","clearSearch","notifyModelChanged","selectWriteValue","detectChanges","scrollToMarked","focusSearchInput","getLabelValue","getDisplayTemplateContext","toggle","single","showPlaceholder","placeholder","isValueSet","showValue","showClear","showFilter","showNoItemsFound","empty","showTypeToSearch","onFilter","onInputFocus","onInputBlur","onItemHover","dropdown","getDropdownMenu","listen","validateWriteValue","bindValue","findIndex","filterInput","focus","dropdownList","scrollInto","preventDefault","querySelector","observers","destroyed","ContentChild","read","TemplateRef","ViewChild","VirtualScrollComponent","Input","String","Subject","HostBinding","Output","HostListener","Function","KeyboardEvent","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","role","ChangeDetectorRef","Renderer2","54","55","zone","bufferAmount","startupLoop","disposeScrollListener","handleScroll","refresh","scrollbarWidth","scrollbarHeight","previousStart","previousEnd","previousValue","runOutsideAngular","requestAnimationFrame","calculateItems","calculateDimensions","buffer","Math","floor","viewHeight","childHeight","scrollTop","itemsPerRow","countItemsPerRow","offsetTop","contentElementRef","getElementsOffset","containerElementRef","contentDimensions","itemCount","viewWidth","clientWidth","clientHeight","childWidth","content","getBoundingClientRect","width","height","itemsPerRowByCalc","itemsPerCol","scrollHeight","NgZone","assertNotInAngularZone","indexByScrollTop","end","ceil","maxStartEnd","modEnd","maxStart","start","topPadding","run","Number","[style.overflow-y]","95","platform_browser_1","ng_select_1","app_component_1","select_with_templates_component_1","select_bindings_component_1","select_search_component_1","reactive_forms_component_1","select_events_component_1","select_multi_component_1","select_autocomplete_component_1","appRoutes","BrowserModule","bootstrap"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,GAE5DO,EAAchB,MAAQA,KAAKgB,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZN,UAAoD,kBAArBA,SAAQO,SAAyB,MAAOP,SAAQO,SAASF,EAAGC,GAE1GR,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,IChBtDtB,EAAA,IAEA,IAAAuB,GAAAvB,EAAA,GACAwB,EAAAxB,EAAA,IAMAyB,EAAA,WAII,QAAAA,cAAoBC,GAApB,GAAAC,GAAAzB,IAAoBA,MAAAwB,QAChBxB,KAAKwB,MAAME,KAAKC,UAAU,SAAAtB,GACtBoB,EAAKG,MAAQvB,EAAEuB,QAI3B,MAVaL,cAAYxB,GAJxBsB,EAAAQ,WACGC,SAAU,WACVC,SAAUjC,EAAQ,OD0BdkB,EAAW,qBCpBYM,EAAAU,kBAJlBT,gBAAA1B,GAAA0B,gBDiCPU,IACA,SAAUrC,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,GAE5DO,EAAchB,MAAQA,KAAKgB,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZN,UAAoD,kBAArBA,SAAQO,SAAyB,MAAOP,SAAQO,SAASF,EAAGC,GAE1GR,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,GExDtD,IAAAC,GAAAvB,EAAA,GACAoC,EAAApC,EAAA,IAEAqC,EAAArC,EAAA,IAwEAsC,EAAA,WAqBI,QAAAA,wBAAoBC,EAAyBC,GAAzBtC,KAAAqC,KAAyBrC,KAAAsC,OAjB7CtC,KAAAuC,wBAAyB,EACzBvC,KAAAwC,SACKC,GAAI,EAAGC,KAAM,YACbD,GAAI,EAAGC,KAAM,WACbD,GAAI,EAAGC,KAAM,sBAAuBC,UAAU,IAC9CF,GAAI,EAAGC,KAAM,YAGlB1C,KAAA4C,OACKxB,MAAO,MAAOyB,MAAO,aACrBzB,MAAO,KAAMyB,MAAO,OACpBzB,MAAO,MAAOyB,MAAO,iBAG1B7C,KAAA8C,UACA9C,KAAA+C,UAkDJ,MA7CIX,wBAAAY,UAAAC,SAAA,WAEIjD,KAAKkD,aACLlD,KAAKmD,aAELnD,KAAKoD,SAAWpD,KAAKqC,GAAGgB,OACpBC,qBACAC,IAAK,GACLC,MAAO,GACPC,MAAO,MAIfrB,uBAAAY,UAAAU,iBAAA,WACQ1D,KAAKoD,SAASO,SAASJ,IAAIZ,SAC3B3C,KAAKoD,SAASO,SAASJ,IAAIK,SAE3B5D,KAAKoD,SAASO,SAASJ,IAAIM,WAInCzB,uBAAAY,UAAAc,oBAAA,WACI9D,KAAKuC,wBAA0BvC,KAAKuC,wBAGxCH,uBAAAY,UAAAe,YAAA,WACI/D,KAAKoD,SAASY,IAAI,qBAAqBC,gBAG3C7B,uBAAAY,UAAAkB,iBAAA,WACIlE,KAAKoD,SAASY,IAAI,SAASC,WAAWjE,KAAK+C,OAAO,GAAGoB,eAGjD/B,uBAAAY,UAAAE,WAAR,cAAAzB,GAAAzB,IACIA,MAAKsC,KAAK0B,IAAW,+CAA+CrC,UAAU,SAAAyC,GAC1E3C,EAAKqB,OAASsB,KAIdhC,uBAAAY,UAAAG,WAAR,cAAA1B,GAAAzB,IACIA,MAAKsC,KAAK0B,IAAW,+CAA+CrC,UAAU,SAAAyC,GACzE3C,EAAKsB,OAASqB,EACfC,QAAQC,IAAI,iBAAkB7C,EAAKsB,OAAOvC,WAlEzC4B,uBAAsBrC,GAtElCsB,EAAAQ,WACGC,SAAU,iBACVC,SAAU,0qGFqHNf,EAAW,qBE5BSkB,EAAAqC,YAA2BpC,EAAAqC,cArB1CpC,0BAAAvC,GAAAuC,0BF0DPqC,IACA,SAAU7E,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,GAE5DO,EAAchB,MAAQA,KAAKgB,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZN,UAAoD,kBAArBA,SAAQO,SAAyB,MAAOP,SAAQO,SAASF,EAAGC,GAE1GR,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,GGnJtD,IAAAC,GAAAvB,EAAA,GACAqC,EAAArC,EAAA,IA2BA4E,EAAA,WAMI,QAAAA,6BAAoBpC,GAApB,GAAAb,GAAAzB,IAAoBA,MAAAsC,OAHpBtC,KAAA2E,SACA3E,KAAA4E,UAAY,GAAIvD,GAAAwD,aAGZ7E,KAAK4E,UACAE,uBACAC,aAAa,KACbC,UAAU,SAAAC,GAAQ,MAAAxD,GAAKyD,gBAAgBD,KACvCtD,UAAU,SAAAgD,GACPlD,EAAKkD,MAAQA,GACd,SAACQ,GACAd,QAAQC,IAAIa,GACZ1D,EAAKkD,WAOrB,MAHID,6BAAA1B,UAAAkC,gBAAA,SAAgBD,GACZ,MAAOjF,MAAKsC,KAAK0B,IAAS,yCAAyCiB,GAAQG,IAAI,SAAAhB,GAAO,MAAAA,GAAIO,SApBrFD,4BAA2B3E,GAxBvCsB,EAAAQ,WACGC,SAAU,sBACVC,SAAU,8xBHyKNf,EAAW,qBG7IWmB,EAAAqC,cANjBE,+BAAA7E,GAAA6E,+BH4JPW,IACA,SAAUzF,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,EAEhEC,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,GInMtD,IAAAC,GAAAvB,EAAA,GAmCAwF,EAAA,WAjCA,QAAAA,2BAmCItF,KAAAuF,sBACKnE,MAAO,EAAGyB,MAAO,YACjBzB,MAAO,EAAGyB,MAAO,WACjBzB,MAAO,EAAGyB,MAAO,WAAYF,UAAU,IAG5C3C,KAAAwC,SACKC,GAAI,EAAGC,KAAM,YACbD,GAAI,EAAGC,KAAM,WACbD,GAAI,EAAGC,KAAM,WAAYC,UAAU,IAIxC3C,KAAAwF,cAAwB,KACxBxF,KAAAyF,gBAA0B,KAI9B,MAFIH,yBAAAtC,UAAAC,SAAA,aAlBSqC,wBAAuBvF,GAjCnCsB,EAAAQ,WACGC,SAAU,kBACVC,SAAU,qgCA+BDuD,2BAAAzF,GAAAyF,2BJgMPI,IACA,SAAU9F,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,EAEhEC,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,GK9OtD,IAAAC,GAAAvB,EAAA,GAoCA6F,EAAA,WA5BA,QAAAA,yBA+BI3F,KAAAwC,SACKC,GAAI,EAAGC,KAAM,YACbD,GAAI,EAAGC,KAAM,WACbD,GAAI,EAAGC,KAAM,WAAYC,UAAU,IAGxC3C,KAAA4F,UAqBJ,MAnBID,uBAAA3C,UAAA6C,SAAA,SAASC,GACL9F,KAAK4F,OAAOG,MAAMrD,KAAM,WAAYtB,MAAO0E,KAG/CH,sBAAA3C,UAAAgD,QAAA,SAAQF,GACJ9F,KAAK4F,OAAOG,MAAMrD,KAAM,UAAWtB,MAAO0E,KAG9CH,sBAAA3C,UAAAiD,OAAA,SAAOH,GACH9F,KAAK4F,OAAOG,MAAMrD,KAAM,SAAUtB,MAAO0E,KAG7CH,sBAAA3C,UAAAkD,OAAA,WACIlG,KAAK4F,OAAOG,MAAMrD,KAAM,SAAUtB,MAAO,QAG7CuE,sBAAA3C,UAAAmD,QAAA,WACInG,KAAK4F,OAAOG,MAAMrD,KAAM,UAAWtB,MAAO,QA5BrCuE,sBAAqB5F,GA5BjCsB,EAAAQ,WACGC,SAAU,gBACVC,SAAU,8zBA0BD4D,yBAAA9F,GAAA8F,yBLiPPS,IACA,SAAUxG,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,EAEhEC,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,GMhStD,IAAAC,GAAAvB,EAAA,GA6BAuG,EAAA,WA1BA,QAAAA,wBA4BIrG,KAAAsG,aACAtG,KAAAuG,cAGAvG,KAAA6D,SAAU,EAGV7D,KAAAwG,gBAAkB,SAAU,SAAU,WAAY,WAAY,UAAW,UAAW,QAAS,UAAW,WAAY,WAAY,WAAY,UAAW,SAAU,QAAS,WAAY,SAAU,SAAU,SAAU,UAAW,WAAY,OAAQ,UAAW,YAAa,WAAY,SAAU,UAAW,YAAa,WAAY,WAAY,SAAU,UAAW,YAAa,WAAY,WAAY,SAAU,SAAU,YAAa,YAAa,SAAU,YAAa,QAAS,WAAY,YAAa,WAAY,QAAS,YAAa,UAAW,WAAY,WAAY,YAAa,YAAa,WAAY,UAAW,YAAa,YAAa,UAAW,SAAU,UAAW,UAAW,MAAO,UAAW,SAAU,UAe7sB,MAZIH,sBAAArD,UAAAC,SAAA,cAAAxB,GAAAzB,IACIA,MAAKwG,eAAeC,QAAQ,SAACnG,EAAGQ,GAC5BW,EAAK6E,UAAUP,MAAOtD,GAAI3B,EAAG4B,KAAMpC,IACnCmB,EAAK8E,WAAWR,MAAOtD,GAAI3B,EAAG4B,KAAMpC,MAGxCN,KAAK0G,4BAA+BjE,GAAI,EAAGC,KAAM,WAAcD,GAAI,EAAGC,KAAM,YAGhF2D,qBAAArD,UAAA2D,WAAA,WACI3G,KAAK4G,sBAtBAP,qBAAoBtG,GA1BhCsB,EAAAQ,WACGE,SAAU,+1BAyBDsE,wBAAAxG,GAAAwG,wBNqSPQ,IACA,SAAUjH,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,EAEhEC,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,GO7UtD,IAAAC,GAAAvB,EAAA,GAyBAgH,EAAA,WAvBA,QAAAA,yBAyBI9G,KAAAsG,aACAtG,KAAAuG,cACAvG,KAAA+G,sBAIA/G,KAAAgH,aAAe,GAAI3F,GAAAwD,aAGnB7E,KAAAwG,gBAAkB,SAAU,SAAU,WAAY,WAAY,UAAW,UAAW,QAAS,UAAW,WAAY,WAAY,WAAY,UAAW,SAAU,QAAS,WAAY,SAAU,SAAU,SAAU,UAAW,WAAY,OAAQ,UAAW,YAAa,WAAY,SAAU,UAAW,YAAa,WAAY,WAAY,SAAU,UAAW,YAAa,WAAY,WAAY,SAAU,SAAU,YAAa,YAAa,SAAU,YAAa,QAAS,WAAY,YAAa,WAAY,QAAS,YAAa,UAAW,WAAY,WAAY,YAAa,YAAa,WAAY,UAAW,YAAa,YAAa,UAAW,SAAU,UAAW,UAAW,MAAO,UAAW,SAAU,UAe7sB,MAZIM,uBAAA9D,UAAAC,SAAA,cAAAxB,GAAAzB,IACIA,MAAKwG,eAAeC,QAAQ,SAACnG,EAAGQ,GAC5BW,EAAK6E,UAAUP,MAAMtD,GAAI3B,EAAG4B,KAAMpC,IAClCmB,EAAK8E,WAAWR,MAAMtD,GAAI3B,EAAG4B,KAAMpC,MAGvCN,KAAK+G,mBAAyB/G,KAAKuG,WAAUU,QAE7CjH,KAAKgH,aAAarF,UAAU,SAAAsD,GACxBxD,EAAKsF,mBAAqB9B,EAAOxD,EAAK8E,WAAWW,OAAO,SAAAC,GAAK,MAAS,aAATlC,GAAuBkC,EAAEzE,OAASuC,IAAQxD,EAAK8E,cAvB3GO,sBAAqB/G,GAvBjCsB,EAAAQ,WACGC,SAAU,gBACVC,SAAU,kqBAqBD+E,yBAAAjH,GAAAiH,yBPwVPM,IACA,SAAUxH,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,EAEhEC,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,GQ5XtD,IAAAC,GAAAvB,EAAA,GA6CAuH,EAAA,WA3CA,QAAAA,gCA6CIrH,KAAAwC,SACKC,GAAI,EAAGC,KAAM,UAAW4E,OAAQ,mFAChC7E,GAAI,EAAGC,KAAM,SAAU4E,OAAQ,gFAC/B7E,GAAI,EAAGC,KAAM,WAAY4E,OAAQ,gFAGtCtH,KAAAuH,QAAUC,KAAKC,MAAMD,KAAKE,UAAU1H,KAAKwC,SACzCxC,KAAA2H,QAAUH,KAAKC,MAAMD,KAAKE,UAAU1H,KAAKwC,SAEzCxC,KAAA4H,aAAe5H,KAAKwC,OAAO,GAAGE,KAC9B1C,KAAAwF,cAAgBxF,KAAKuH,QAAQ,GAAG7E,KAChC1C,KAAA6H,cAAgB7H,KAAK2H,QAAQ,GAAGjF,KAIpC,MAFI2E,8BAAArE,UAAAC,SAAA,aAfSoE,6BAA4BtH,GA3CxCsB,EAAAQ,WACGC,SAAU,wBACVC,SAAU,khDAyCDsF,gCAAAxH,GAAAwH,gCR6WPS,IACA,SAAUlI,EAAQC,EAASC,GAEjC,YAEAY,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,GS/ZtD,IAAA2G,GAAAjI,EAAA,GAASD,GAAAmI,kBAAAD,EAAAC,iBACT,IAAAC,GAAAnI,EAAA,IAASD,GAAAqI,eAAAD,EAAAC,cACT,IAAAC,GAAArI,EAAA,GAAmBD,GAAAuI,eAAAD,EAAAC,gBTwabC,IACA,SAAUzI,EAAQC,EAASC,GAEjC,YAEA,IAAIwI,GAAYtI,MAAQA,KAAKsI,UAAa5H,OAAO6H,QAAU,SAASC,GAChE,IAAK,GAAIC,GAAG3H,EAAI,EAAG4H,EAAInI,UAAUC,OAAQM,EAAI4H,EAAG5H,IAAK,CACjD2H,EAAIlI,UAAUO,EACd,KAAK,GAAI6H,KAAKF,GAAO/H,OAAOsC,UAAU4F,eAAeC,KAAKJ,EAAGE,KACzDH,EAAEG,GAAKF,EAAEE,IAEjB,MAAOH,GAEX9H,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,GUtbtD,IAAA0H,GAAAhJ,EAAA,KAEAiJ,EAAA,WASI,QAAAA,WAAYpE,EAAmBqE,GAP/BhJ,KAAA2E,SACA3E,KAAAiJ,iBAEQjJ,KAAAkJ,cAAgB,EAChBlJ,KAAAmJ,aAIJnJ,KAAK2E,MAAQ3E,KAAKoJ,SAASzE,GAC3B3E,KAAKiJ,cAAoBjJ,KAAK2E,MAAKsC,QACnCjH,KAAKqJ,UAAYL,EAkHzB,MA/GItI,QAAAK,eAAIgI,UAAA/F,UAAA,SVkbAgB,IUlbJ,WACI,MAAIhE,MAAKqJ,UACErJ,KAAKmJ,UAETnJ,KAAKmJ,UAAU,IAAM,MVob5BG,YAAY,EACZC,cAAc,IUlblB7I,OAAAK,eAAIgI,UAAA/F,UAAA,cVqbAgB,IUrbJ,WACI,MAAOhE,MAAKiJ,cAAcjJ,KAAKkJ,eVub/BI,YAAY,EACZC,cAAc,IUrblBR,UAAA/F,UAAAwG,OAAA,SAAOC,GACEzJ,KAAKqJ,WACNrJ,KAAK0J,gBAET1J,KAAKmJ,UAAUpD,KAAK0D,GACpBA,EAAKE,UAAW,GAGpBZ,UAAA/F,UAAA4G,SAAA,SAASH,GACLzJ,KAAKmJ,UAAYnJ,KAAKmJ,UAAUjC,OAAO,SAAAC,GAAK,MAAAA,KAAMsC,IAClDA,EAAKE,UAAW,GAGpBZ,UAAA/F,UAAA6G,iBAAA,WACkC,IAA1B7J,KAAKmJ,UAAU3I,SAInBR,KAAKmJ,UAAUnJ,KAAKmJ,UAAU3I,OAAS,GAAGmJ,UAAW,EACrD3J,KAAKmJ,UAAUW,OAAO9J,KAAKmJ,UAAU3I,OAAS,EAAG,KAGrDuI,UAAA/F,UAAA0G,cAAA,WACI1J,KAAKmJ,UAAU1C,QAAQ,SAACgD,GACpBA,EAAKE,UAAW,EAChBF,EAAKM,QAAS,IAElB/J,KAAKmJ,cAGTJ,UAAA/F,UAAAkE,OAAA,SAAOjC,EAAc+E,GACjB,GAAMC,GAAgBjK,KAAKkK,qBAAqBjF,EAAM+E,EACtDhK,MAAKiJ,cAAgBhE,EAAOjF,KAAK2E,MAAMuC,OAAO,SAAAiD,GAAO,MAAAF,GAAcE,KAAQnK,KAAK2E,MAChF3E,KAAKkJ,aAAe,GAGxBH,UAAA/F,UAAAoH,YAAA,WACIpK,KAAKiJ,cAAoBjJ,KAAK2E,MAAKsC,SAGvC8B,UAAA/F,UAAAqH,aAAA,WACIrK,KAAKsK,WAAW,IAGpBvB,UAAA/F,UAAAuH,iBAAA,WACIvK,KAAKsK,YAAY,IAGrBvB,UAAA/F,UAAAwH,SAAA,SAASf,OAAA,KAAAA,MAAA,MAC6B,IAA9BzJ,KAAKiJ,cAAczI,SAIvBiJ,EAAOA,GAAQzJ,KAAKyK,iBAEhBzK,KAAKkJ,aADLO,EACoBzJ,KAAKiJ,cAAcyB,QAAQjB,GAE3B,IAIpBV,UAAA/F,UAAA2H,iBAAR,SAAyBC,GACrB,MAAIA,GAAQ,EACA5K,KAAKkJ,eAAiBlJ,KAAKiJ,cAAczI,OAAS,EAAK,EAAKR,KAAKkJ,aAAe,EAE1D,IAAtBlJ,KAAKkJ,aAAuBlJ,KAAKiJ,cAAczI,OAAS,EAAMR,KAAKkJ,aAAe,GAI1FH,UAAA/F,UAAAsH,WAAR,SAAmBM,GACf,GAAkC,IAA9B5K,KAAKiJ,cAAczI,OAKvB,IADAR,KAAKkJ,aAAelJ,KAAK2K,iBAAiBC,GACnC5K,KAAK6K,WAAWlI,UACnB3C,KAAKsK,WAAWM,IAIhB7B,UAAA/F,UAAAkH,qBAAR,SAA6BjF,EAAM+E,GAC/B,MAAO,UAACG,GACJ,MAAOrB,GAAagC,kBAAkBX,EAAIH,IACrCe,cACAL,QAAQ5B,EAAagC,kBAAkB7F,GAAM8F,gBAAkB,IAI5ErK,OAAAK,eAAYgI,UAAA/F,UAAA,oBV4aRgB,IU5aJ,WACI,MAAOhE,MAAKmJ,UAAUnJ,KAAKmJ,UAAU3I,OAAS,IV8a9C8I,YAAY,EACZC,cAAc,IU5aVR,UAAA/F,UAAAoG,SAAR,SAAiBzE,GACb,MAAOA,GAAMS,IAAI,SAACqE,EAAMuB,GACpB,MAAM1C,IACF0C,MAAOA,GACJvB,MAInBV,YA9HalJ,GAAAkJ,aVgjBPkC,IACA,SAAUrL,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,GAE5DO,EAAchB,MAAQA,KAAKgB,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZN,UAAoD,kBAArBA,SAAQO,SAAyB,MAAOP,SAAQO,SAASF,EAAGC,GAE1GR,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,GWjkBtD,IAAAC,GAAAvB,EAAA,GAKAoL,EAAA,WAEE,QAAAA,yBAAoBC,GAAAnL,KAAAmL,aAKtB,MAHED,yBAAAlI,UAAAC,SAAA,WACEjD,KAAKmL,WAAWC,cAAcpF,WALrBkF,wBAAuBnL,GAHnCsB,EAAAgK,WACCvJ,SAAU,qBX4kBJd,EAAW,qBWxkBeK,EAAAiK,cAFrBJ,2BAAArL,GAAAqL,2BXmlBPK,IACA,SAAU3L,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,GAE5DO,EAAchB,MAAQA,KAAKgB,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZN,UAAoD,kBAArBA,SAAQO,SAAyB,MAAOP,SAAQO,SAASF,EAAGC,IAEtGsK,EAAWxL,MAAQA,KAAKwL,SAAY,SAAUC,EAAYC,GAC1D,MAAO,UAAUxL,EAAQC,GAAOuL,EAAUxL,EAAQC,EAAKsL,IAE3D/K,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,GYzmBtD,IAAAC,GAAAvB,EAAA,GACAoC,EAAApC,EAAA,IACA6L,EAAA7L,EAAA,IAEAiI,EAAAjI,EAAA,IACA8L,EAAA9L,EAAA,IACA+L,EAAA/L,EAAA,KACAgM,EAAAhM,EAAA,IACAiM,EAAAjM,EAAA,KACAqI,EAAArI,EAAA,IAqBAoI,EAAA,WAUI,QAAAA,gBAAoC8D,GAChC,GAAIA,EACA,KAAM,IAAIC,OACN,qEAGhB,MZ2kBIC,GY3lBShE,eACFA,eAAAiE,QAAP,SAAeC,GACX,OACIC,SAAUH,EACVI,YACKC,QAASpE,EAAAC,eAAgBoE,SAAUJ,MALvClE,eAAcgE,EAAAnM,GAnB1BsB,EAAAoL,UACGC,cACI3E,EAAAC,kBACA4D,EAAAe,0BACAf,EAAAgB,yBACAf,EAAAX,wBACAa,EAAAc,kBAEJC,SACI5K,EAAA6K,YACApB,EAAAqB,aACAlB,EAAAmB,qBAEJpN,SACIkI,EAAAC,kBACA4D,EAAAe,0BACAf,EAAAgB,4BAaSpB,EAAA,EAAAnK,EAAA6L,YAAY1B,EAAA,EAAAnK,EAAA8L,YZ+mBrBnM,EAAW,qBY/mBmCkH,kBAVzCA,eZ4nBT,IAAIgE,KY5nBKrM,GAAAqI,kBZmoBPkF,IACA,SAAUxN,EAAQC,EAASC,GAEjC,YasKA,SAAAgL,mBAAkCuC,GAC9B,GAAMC,GAAQ,SAACC,GACX,MAAOC,GAAWD,IAAMA,EAE5B,OAAOF,GAAKI,QAAQ,oBAAqBH,GbxK7C5M,OAAOK,eAAelB,EAAS,cAAgBuB,OAAO,GatqBtD,IAAModniC,GAAAiL,qCbirBMm3B,IACA,SAAUriC,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,EAEhEC,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,GctgDtD,IAAAC,GAAAvB,EAAA,GAoBA+M,EAAA,mBAAAA,qBAEA,MAFaA,kBAAgB9M,GAhB5BsB,EAAAQ,WACGC,SAAU,UACVC,SAAU,kpBAcD8K,oBAAAhN,GAAAgN,oBdsgDPq1B,IACA,SAAUtiC,EAAQC,KAMlBsiC,IACA,SAAUviC,EAAQC,GeliDxBD,EAAAC,QAAA,wwLfwiDMuiC,IACA,SAAUxiC,EAAQC,GgBziDxBD,EAAAC,QAAA,knEhB+iDMwiC,IACA,SAAUziC,EAAQC,GiBhjDxBD,EAAAC,QAAA,ipGjBsjDMyiC,GACA,SAAU1iC,EAAQ2iC,EAAqBziC,GAE7C;;;;;;;AkBtxCA,QAAA0iC,mBAAAphC,GAEA,aAAAA,GAAA,IAAAA,EAAAZ,OAgMA,QAAAiiC,WAAAC,GACA,aAAAA,EAMA,QAAAC,cAAAliC,GACA,GAAqBmiC,GAAA9iC,EAAAgB,EAAA+hC,EAAA,eAAApiC,GAAAX,EAAAgB,EAAAgiC,EAAA,aAAAriC,IACrB,KAAAX,EAAAgB,EAAA+hC,EAAA,kBAAAD,GACA,SAAA32B,OAAA,sDAEA,OAAA22B,GAOA,QAAAG,oBAAAC,EAAAC,GACA,MAAAA,GAAA79B,IAAA,SAAAlE,GAAwC,MAAAA,GAAA8hC,KAOxC,QAAAE,yBAAAF,EAAAC,GACA,MAAAA,GAAA79B,IAAA,SAAAlE,GAAwC,MAAAA,GAAA8hC,KAMxC,QAAAG,cAAAC,GACA,GAAqBC,GAAAD,EAAAE,OAAA,SAAAD,EAAAE,GACrB,aAAAA,EAAA7iC,OAAA6H,UAA+D,EAAAg7B,GAAA,MAE/D,YAAA7iC,OAAA8iC,KAAAH,GAAA7iC,OAAA,KAAA6iC,EA0GA,QAAAI,cAEA,sBAAAC,MADqB5jC,EAAAgB,EAAA6iC,EAAA,cAAA7jC,EAAAgB,EAAA6iC,EAAA,cAAAC,eAAA,IACrBC;;;;;;;AA2HA,QAAAC,oBAAAC,GACA,SAAAC,SACA,SAAA1jC,GAA6B,SAAA0jC,SAAA1jC,IAG7B,EAOA,QAAA2jC,yBAAAF,GACA,SAAAC,SACA,SAAA1jC,GAA6B,SAAA0jC,SAAA1jC,IAG7B;;;;;;;AA6FA,QAAA4jC,iBACA,SAAAj4B,OAAA,iBAiWA,QAAAk4B,mBAAA1hC,EAAArB,GACA,aAAAqB,EACA,GAAArB,GACAA,GAAA,gBAAAA,KACAA,EAAA,WACAqB,EAAA,KAAArB,GAAA6F,MAAA,OAMA,QAAAm9B,YAAAC,GACA,MAAAA,GAAAC,MAAA,QA0RA,QAAAC,qBAAA9hC,EAAArB,GACA,aAAAqB,EACA,GAAArB,GACA,gBAAAA,KACAA,EAAA,IAAAA,EAAA,KACAA,GAAA,gBAAAA,KACAA,EAAA,WACAqB,EAAA,KAAArB,GAAA6F,MAAA,OAMA,QAAAu9B,cAAAH,GACA,MAAAA,GAAAC,MAAA;;;;;;;AAiSA,QAAAG,aAAA/hC,EAAAgiC,GACA,MAAAA,GAAA,KAAAC,QAAAjiC,IAOA,QAAAkiC,cAAA5B,EAAA6B,GACA7B,GACA8B,YAAAD,EAAA,4BACAA,EAAAE,eACAD,YAAAD,EAAA,2CACA7B,EAAAe,UAAAiB,EAAAC,SAAyDjC,EAAA,UAAA6B,EAAAd,YACzDf,EAAAkC,eAAAF,EAAAG,cAAmEnC,EAAA,eAAA6B,EAAAK,iBACnEL,EAAA,cAAAO,WAAApC,EAAA5hC,OAGAyjC,EAAA,cAAAQ,iBAAA,SAAAC,GACAT,EAAAU,kBAAAD,GACAtC,EAAAwC,cACAxC,EAAAyC,SAAAH,GAAoCI,uBAAA,MAIpCb,EAAA,cAAAc,kBAAA,WAAuD,MAAA3C,GAAA4C,kBACvD5C,EAAAqC,iBAAA,SAAAC,EAAAO,GAGAhB,EAAA,cAAAO,WAAAE,GAEAO,GACAhB,EAAAU,kBAAAD,KAEAT,EAAA,cAAAiB,kBACA9C,EAAA+C,yBAAA,SAAAC,GAA8EnB,EAAA,+BAAAmB,KAG9EnB,EAAAoB,eAAAx/B,QAAA,SAAAs9B,GACA,EAAAmC,2BACA,uCAAqE,MAAAlD,GAAAmD,6BAErEtB,EAAAuB,oBAAA3/B,QAAA,SAAAs9B,GACA,EAAAmC,2BACA,uCAAqE,MAAAlD,GAAAmD,6BAQrE,QAAAE,gBAAArD,EAAA6B,GACAA,EAAA,cAAAQ,iBAAA,WAAwD,MAAAiB,iBAAAzB,KACxDA,EAAA,cAAAc,kBAAA,WAAyD,MAAAW,iBAAAzB,KACzDA,EAAAoB,eAAAx/B,QAAA,SAAAs9B,GACAA,EAAAmC,2BACAnC,EAAAmC,0BAAA,QAGArB,EAAAuB,oBAAA3/B,QAAA,SAAAs9B,GACAA,EAAAmC,2BACAnC,EAAAmC,0BAAA,QAGAlD,GACAA,EAAAuD,kBAOA,QAAAC,oBAAAxD,EAAA6B,GACA,MAAA7B,GACA8B,YAAAD,EAAA,4BACA7B,EAAAe,UAAAiB,EAAAC,SAAAjC,EAAAe,UAAAc,EAAAd,YACAf,EAAAkC,eAAAF,EAAAG,cAAAnC,EAAAkC,eAAAL,EAAAK,iBAMA,QAAAoB,iBAAAzB,GACA,MAAAC,aAAAD,EAAA,0EAOA,QAAAC,aAAAD,EAAA4B,GACA,GAAqBC,EAUrB,MARAA,GADA7B,EAAA,KAAArkC,OAAA,EACA,UAAAqkC,EAAA,KAAA8B,KAAA,YAEA9B,EAAA,QACA,UAAAA,EAAA+B,KAAA,IAGA,6BAEA,GAAA36B,OAAAw6B,EAAA,IAAAC,GAMA,QAAAG,mBAAA5D,GACA,aAAAA,EAAA+B,EAAAC,QAAAhC,EAAA79B,IAAA0+B,qBAAA,KAMA,QAAAgD,wBAAA7D,GACA,aAAAA,EAAA+B,EAAAG,aAAAlC,EAAA79B,IAAA6+B,0BACA,KAOA,QAAA8C,mBAAAC,EAAAC,GACA,IAAAD,EAAAp+B,eAAA,SACA,QACA,IAAqBs+B,GAAAF,EAAA,KACrB,SAAAE,EAAAC,kBAEArnC,EAAAgB,EAAA+hC,EAAA,oBAAAoE,EAAAC,EAAAE,cAcA,QAAAC,mBAAAtC,GACA,MAAAuC,GAAAC,KAAA,SAAAh6B,GAAgD,MAAAw3B,GAAAyC,cAAAj6B,IAOhD,QAAAk6B,qBAAA5C,EAAA6C,GACA,IAAAA,EACA,WACA,IAAqBC,OAAAC,GACAC,MAAAD,GACAE,MAAAF,EAgBrB,OAfAF,GAAAjhC,QAAA,SAAAvF,GACAA,EAAAsmC,cAAAO,EACAJ,EAAAzmC,EAEAmmC,kBAAAnmC,IACA2mC,GACA/C,YAAAD,EAAA,mEACAgD,EAAA3mC,IAGA4mC,GACAhD,YAAAD,EAAA,iEACAiD,EAAA5mC,KAGA4mC,IAEAD,IAEAF,IAEA7C,YAAAD,EAAA,iDACA,QAoQA,QAAAmD,OAAAhF,EAAA4D,EAAAqB,GACA,aAAArB,EACA,MACAA,YAAAsB,SACAtB,EAAA,EAAAtC,MAAA2D,IAEArB,YAAAsB,QAAA,IAAAtB,EAAApmC,OACA,KACA,EAAA8iC,OAAA,SAAApiC,EAAAwB,GACA,MAAAxB,aAAAinC,GACAjnC,EAAAyC,SAAAjB,IAAA,KAEAxB,YAAAknC,GACAlnC,EAAAmnC,GAAqC,SAErC,MACKrF,IAML,QAAAsF,mBAAAvE,GACA,MAAAmE,OAAAK,QAAAxE,GAAA8C,kBAAA9C,MAAA,KAMA,QAAAyE,wBAAAtD,GACA,MAAAgD,OAAAK,QAAArD,GAAA4B,uBAAA5B,GACAA,GAAA,KAonFA,QAAAuD,QAAAC,EAAAC,GACA,GAAqB39B,GAAA09B,EAAAh+B,QAAAi+B,EACrB39B,IAAA,GACA09B,EAAA5+B,OAAAkB,EAAA,GAyPA,QAAA49B,mBAAAlE,GACA,QAAAA,YAAAmE,KAAAnE,YAAAoE,KACApE,YAAAqE,KlBtiHAroC,OAAOK,eAAewhC,EAAqB,cAAgBnhC,OAAO,GAC7C,IAAI4nC,GAAsClpC,EAAoB,IAC1D+iC,EAA8C/iC,EAAoB,GAClEmpC,EAAyDnpC,EAAoB,IAE7EgjC,GADiEhjC,EAAoB4I,EAAEugC,GAC3BnpC,EAAoB,KAEhFopC,GADoEppC,EAAoB4I,EAAEo6B,GACxChjC,EAAoB,KAEtE6jC,GAD0D7jC,EAAoB4I,EAAEwgC,GACtBppC,EAAoB,IACxEA,GAAoBO,EAAEkiC,EAAqB,2BAA4B,WAAa,MAAO4G,KAC3FrpC,EAAoBO,EAAEkiC,EAAqB,6BAA8B,WAAa,MAAO6G,KAC7FtpC,EAAoBO,EAAEkiC,EAAqB,+BAAgC,WAAa,MAAO8G,KAC/FvpC,EAAoBO,EAAEkiC,EAAqB,mBAAoB,WAAa,MAAO+G,KACnFxpC,EAAoBO,EAAEkiC,EAAqB,oBAAqB,WAAa,MAAOgH,KACpFzpC,EAAoBO,EAAEkiC,EAAqB,0BAA2B,WAAa,MAAOiH,KAC1F1pC,EAAoBO,EAAEkiC,EAAqB,uBAAwB,WAAa,MAAOwF,KACvFjoC,EAAoBO,EAAEkiC,EAAqB,YAAa,WAAa,MAAOkH,KAC5E3pC,EAAoBO,EAAEkiC,EAAqB,kBAAmB,WAAa,MAAOmH,KAClF5pC,EAAoBO,EAAEkiC,EAAqB,uBAAwB,WAAa,MAAOoH,KACvF7pC,EAAoBO,EAAEkiC,EAAqB,SAAU,WAAa,MAAOqH,KACzE9pC,EAAoBO,EAAEkiC,EAAqB,UAAW,WAAa,MAAOsH,MAC1E/pC,EAAoBO,EAAEkiC,EAAqB,eAAgB,WAAa,MAAOuH,MAC/EhqC,EAAoBO,EAAEkiC,EAAqB,4BAA6B,WAAa,MAAOwH,KAC5FjqC,EAAoBO,EAAEkiC,EAAqB,uBAAwB,WAAa,MAAOyH,MACvFlqC,EAAoBO,EAAEkiC,EAAqB,kBAAmB,WAAa,MAAO0H,MAClFnqC,EAAoBO,EAAEkiC,EAAqB,qBAAsB,WAAa,MAAOuG,MACrFhpC,EAAoBO,EAAEkiC,EAAqB,gBAAiB,WAAa,MAAOwG,MAChFjpC,EAAoBO,EAAEkiC,EAAqB,gBAAiB,WAAa,MAAOsG,MAChF/oC,EAAoBO,EAAEkiC,EAAqB,iBAAkB,WAAa,MAAO2H,KACjFpqC,EAAoBO,EAAEkiC,EAAqB,6BAA8B,WAAa,MAAO4H,KAC7FrqC,EAAoBO,EAAEkiC,EAAqB,qCAAsC,WAAa,MAAO6H,KACrGtqC,EAAoBO,EAAEkiC,EAAqB,4BAA6B,WAAa,MAAO8H,MAC5FvqC,EAAoBO,EAAEkiC,EAAqB,iBAAkB,WAAa,MAAO+H,MACjFxqC,EAAoBO,EAAEkiC,EAAqB,qBAAsB,WAAa,MAAOgI,MACrFzqC,EAAoBO,EAAEkiC,EAAqB,qBAAsB,WAAa,MAAOiI,MACrF1qC,EAAoBO,EAAEkiC,EAAqB,mBAAoB,WAAa,MAAOkI,MACnF3qC,EAAoBO,EAAEkiC,EAAqB,oBAAqB,WAAa,MAAOmI,MACpF5qC,EAAoBO,EAAEkiC,EAAqB,cAAe,WAAa,MAAOh+B,MAC9EzE,EAAoBO,EAAEkiC,EAAqB,kBAAmB,WAAa,MAAOoI,KAClF7qC,EAAoBO,EAAEkiC,EAAqB,YAAa,WAAa,MAAO6F,KAC5EtoC,EAAoBO,EAAEkiC,EAAqB,cAAe,WAAa,MAAOqI,KAC9E9qC,EAAoBO,EAAEkiC,EAAqB,YAAa,WAAa,MAAO4F,KAC5EroC,EAAoBO,EAAEkiC,EAAqB,sBAAuB,WAAa,MAAOsI,KACtF/qC,EAAoBO,EAAEkiC,EAAqB,gBAAiB,WAAa,MAAOuI,KAChFhrC,EAAoBO,EAAEkiC,EAAqB,aAAc,WAAa,MAAOyC,KAC7EllC,EAAoBO,EAAEkiC,EAAqB,UAAW,WAAa,MAAOwI,MAC1EjrC,EAAoBO,EAAEkiC,EAAqB,cAAe,WAAa,MAAOx1B,MAC9EjN,EAAoBO,EAAEkiC,EAAqB,sBAAuB,WAAa,MAAOyI,MACtFlrC,EAAoBO,EAAEkiC,EAAqB,MAAO,WAAa,MAAO0I,MACtEnrC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO2I,MACrEprC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO4I,MACrErrC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO6I,MACrEtrC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO8I,KACrEvrC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO+I,KACrExrC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOgJ,KACrEzrC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOiJ,KACrE1rC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOkJ,KACrE3rC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOmJ,MACrE5rC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOoJ,MACrE7rC,EAAoBO,EAAEkiC,EAAqB,MAAO,WAAa,MAAOqJ,MACtE9rC,EAAoBO,EAAEkiC,EAAqB,MAAO,WAAa,MAAOsJ,KACtE/rC,EAAoBO,EAAEkiC,EAAqB,MAAO,WAAa,MAAOuJ,KACtEhsC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOwJ,KACrEjsC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOyJ,KACrElsC,EAAoBO,EAAEkiC,EAAqB,MAAO,WAAa,MAAO0J,KACtEnsC,EAAoBO,EAAEkiC,EAAqB,MAAO,WAAa,MAAO2J,KACtEpsC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO4J,MACrErsC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO6J,MACrEtsC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO8J,MACrEvsC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO+J,MACrExsC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOgK,MACrEzsC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOiK,KACrE1sC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOkK,KACrE3sC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOmK,KACrE5sC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOoK,MACrE7sC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOqK,MACrE9sC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOsK,MACrE/sC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOuK,MACrEhtC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOwK,MACrEjtC,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOyK;;;;;;;;;;;;AkBhnDpG,GAAA7D,GAAA,WACA,QAAAA,6BAmNA,MA1MAA,0BAAAnmC,UAAAggC,QAAA,aACAtiC,OAAAK,eAAAooC,yBAAAnmC,UAAA,SAKAgB,IAAA,WAA0B,MAAAhE,MAAAgjC,QAAAhjC,KAAAgjC,QAAA5hC,MAAA,MAC1BkI,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAooC,yBAAAnmC,UAAA,SAQAgB,IAAA,WAA0B,MAAAhE,MAAAgjC,QAAAhjC,KAAAgjC,QAAAiK,MAAA,MAC1B3jC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAooC,yBAAAnmC,UAAA,WAQAgB,IAAA,WAA0B,MAAAhE,MAAAgjC,QAAAhjC,KAAAgjC,QAAAkK,QAAA,MAC1B5jC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAooC,yBAAAnmC,UAAA,WAQAgB,IAAA,WAA0B,MAAAhE,MAAAgjC,QAAAhjC,KAAAgjC,QAAAmK,QAAA,MAC1B7jC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAooC,yBAAAnmC,UAAA,YASAgB,IAAA,WAA0B,MAAAhE,MAAAgjC,QAAAhjC,KAAAgjC,QAAArgC,SAAA,MAC1B2G,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAooC,yBAAAnmC,UAAA,WAQAgB,IAAA,WAA0B,MAAAhE,MAAAgjC,QAAAhjC,KAAAgjC,QAAAoK,QAAA,MAC1B9jC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAooC,yBAAAnmC,UAAA,UAMAgB,IAAA,WAA0B,MAAAhE,MAAAgjC,QAAAhjC,KAAAgjC,QAAAO,OAAA,MAC1Bj6B,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAooC,yBAAAnmC,UAAA,YASAgB,IAAA,WAA0B,MAAAhE,MAAAgjC,QAAAhjC,KAAAgjC,QAAAqK,SAAA,MAC1B/jC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAooC,yBAAAnmC,UAAA,SASAgB,IAAA,WAA0B,MAAAhE,MAAAgjC,QAAAhjC,KAAAgjC,QAAAsK,MAAA,MAC1BhkC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAooC,yBAAAnmC,UAAA,WAMAgB,IAAA,WAA0B,MAAAhE,MAAAgjC,QAAAhjC,KAAAgjC,QAAAuK,QAAA,MAC1BjkC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAooC,yBAAAnmC,UAAA,aAMAgB,IAAA,WAA0B,MAAAhE,MAAAgjC,QAAAhjC,KAAAgjC,QAAAwK,UAAA,MAC1BlkC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAooC,yBAAAnmC,UAAA,iBAMAgB,IAAA,WACA,MAAAhE,MAAAgjC,QAAAhjC,KAAAgjC,QAAAyK,cAAA,MAEAnkC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAooC,yBAAAnmC,UAAA,gBAMAgB,IAAA,WACA,MAAAhE,MAAAgjC,QAAAhjC,KAAAgjC,QAAA0K,aAAA,MAEApkC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAooC,yBAAAnmC,UAAA,QAOAgB,IAAA,WAA0B,aAC1BsF,YAAA,EACAC,cAAA,IAaA4/B,yBAAAnmC,UAAA2qC,MAAA,SAAAvsC,OACA,KAAAA,IAA+BA,MAAAwmC,IAC/B5nC,KAAAgjC,SACAhjC,KAAAgjC,QAAA2K,MAAAvsC,IAWA+nC,yBAAAnmC,UAAA4qC,SAAA,SAAAC,EAAAjH,GACA,QAAA5mC,KAAAgjC,SAAAhjC,KAAAgjC,QAAA4K,SAAAC,EAAAjH,IAWAuC,yBAAAnmC,UAAA8qC,SAAA,SAAAD,EAAAjH,GACA,MAAA5mC,MAAAgjC,QAAAhjC,KAAAgjC,QAAA8K,SAAAD,EAAAjH,GAAA,MAEAuC,4BAiBAG,EAAA,SAAAyE,GAEA,QAAAzE,oBACA,cAAAyE,KAAAC,MAAAhuC,KAAAO,YAAAP,KAoBA,MAtBAgpC,GAAA,EAAAM,iBAAAyE,GAIArtC,OAAAK,eAAAuoC,iBAAAtmC,UAAA,iBAKAgB,IAAA,WAA0B,aAC1BsF,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAuoC,iBAAAtmC,UAAA,QAKAgB,IAAA,WAA0B,aAC1BsF,YAAA,EACAC,cAAA,IAEA+/B,kBACCH,GAuBD2B,EAAA,GAAAjI,GAAA,+BAWAgI,EAAA,GAAAhI,GAAA,oCACAoL,EAAA,+LAeAjJ,EAAA,WACA,QAAAA,eAqJA,MA9IAA,YAAAkJ,IAAA,SAAAA,GACA,gBAAAlL,GACA,GAAAR,kBAAAQ,EAAA5hC,QAAAohC,kBAAA0L,GACA,WAEA,IAA6B9sC,GAAA+sC,WAAAnL,EAAA5hC,MAG7B,QAAAgtC,MAAAhtC,MAAA8sC,GAAmDA,KAASA,MAAAG,OAAArL,EAAA5hC,QAAwC,OAQpG4jC,WAAAsJ,IAAA,SAAAA,GACA,gBAAAtL,GACA,GAAAR,kBAAAQ,EAAA5hC,QAAAohC,kBAAA8L,GACA,WAEA,IAA6BltC,GAAA+sC,WAAAnL,EAAA5hC,MAG7B,QAAAgtC,MAAAhtC,MAAAktC,GAAmDA,KAASA,MAAAD,OAAArL,EAAA5hC,QAAwC,OAQpG4jC,WAAAuJ,SAAA,SAAAvL,GACA,MAAAR,mBAAAQ,EAAA5hC,QAAmDmtC,UAAA,GAAmB,MAOtEvJ,WAAAwJ,aAAA,SAAAxL,GACA,WAAAA,EAAA5hC,MAAA,MAAgDmtC,UAAA,IAOhDvJ,WAAAyJ,MAAA,SAAAzL,GACA,MAAAiL,GAAAvK,KAAAV,EAAA5hC,OAAA,MAA0DqtC,OAAA,IAO1DzJ,WAAA0J,UAAA,SAAAA,GACA,gBAAA1L,GACA,GAAAR,kBAAAQ,EAAA5hC,OACA,WAEA,IAA6BZ,GAAAwiC,EAAA5hC,MAAA4hC,EAAA5hC,MAAAZ,OAAA,CAC7B,OAAAA,GAAAkuC,GACiBC,WAAeC,eAAAF,EAAAG,aAAAruC,IAChC,OAQAwkC,WAAA8J,UAAA,SAAAA,GACA,gBAAA9L,GACA,GAA6BxiC,GAAAwiC,EAAA5hC,MAAA4hC,EAAA5hC,MAAAZ,OAAA,CAC7B,OAAAA,GAAAsuC,GACiBC,WAAeH,eAAAE,EAAAD,aAAAruC,IAChC,OAQAwkC,WAAAgK,QAAA,SAAAA,GACA,IAAAA,EACA,MAAAhK,YAAAiK,aACA,IAAyBC,GACAC,CASzB,OARA,gBAAAH,IACAG,EAAA,IAAAH,EAAA,IACAE,EAAA,GAAAE,QAAAD,KAGAA,EAAAH,EAAAK,WACAH,EAAAF,GAEA,SAAAhM,GACA,GAAAR,kBAAAQ,EAAA5hC,OACA,WAEA,IAA6BA,GAAA4hC,EAAA5hC,KAC7B,OAAA8tC,GAAAxL,KAAAtiC,GAAA,MACiB4tC,SAAaM,gBAAAH,EAAAI,YAAAnuC,MAQ9B4jC,WAAAiK,cAAA,SAAA3uC,GAA6C,aAK7C0kC,WAAAC,QAAA,SAAAhC,GACA,IAAAA,EACA,WACA,IAAyBuM,GAAAvM,EAAA/7B,OAAAu7B,UACzB,WAAA+M,EAAAhvC,OACA,KACA,SAAAwiC,GACA,MAAAG,cAAAJ,mBAAAC,EAAAwM,MAOAxK,WAAAG,aAAA,SAAAlC,GACA,IAAAA,EACA,WACA,IAAyBuM,GAAAvM,EAAA/7B,OAAAu7B,UACzB,WAAA+M,EAAAhvC,OACA,KACA,SAAAwiC,GACA,GAA6ByM,GAAAvM,wBAAAF,EAAAwM,GAAApqC,IAAAu9B,aAC7B,OAAAuG,GAAA,IAAArgC,KAAA/I,EAAAgB,EAAAmoC,EAAA,UAAAwG,GAAAtM,gBAGA6B,cA2DAuE,EAAA,GAAA1G,GAAA,kCAQAwI,GACA9+B,QAAAg9B,EACAmG,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAAwG,KACzCsG,OAAA,GAYAtG,EAAA,WAKA,QAAAA,8BAAAuG,EAAAC,GACA7vC,KAAA4vC,YACA5vC,KAAA6vC,cACA7vC,KAAA6F,SAAA,SAAAiqC,KACA9vC,KAAA+vC,UAAA,aA0BA,MApBA1G,8BAAArmC,UAAAoiC,WAAA,SAAAhkC,GACApB,KAAA4vC,UAAAI,YAAAhwC,KAAA6vC,YAAAzkC,cAAA,UAAAhK,IAMAioC,6BAAArmC,UAAAqiC,iBAAA,SAAA4K,GAA6EjwC,KAAA6F,SAAAoqC,GAK7E5G,6BAAArmC,UAAA2iC,kBAAA,SAAAsK,GAA8EjwC,KAAA+vC,UAAAE,GAK9E5G,6BAAArmC,UAAA8iC,iBAAA,SAAAE,GACAhmC,KAAA4vC,UAAAI,YAAAhwC,KAAA6vC,YAAAzkC,cAAA,WAAA46B,IAEAqD,+BAEAA,GAAAppC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,wGACAsuC,MAAuBC,WAAA,kCAAAC,SAAA,eACvBhkC,WAAA++B,OAMAhC,EAAAkH,eAAA,WAA2D,QACtDL,KAAArN,EAAA,YACAqN,KAAArN,EAAA;;;;;;;AASL,GAAAyI,IACA/+B,QAAAg9B,EACAmG,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAAkF,KACzC4H,OAAA,GAeAnG,EAAA,GAAA3G,GAAA,uCAYAkF,EAAA,WAMA,QAAAA,sBAAA6H,EAAAC,EAAAW,GACAxwC,KAAA4vC,YACA5vC,KAAA6vC,cACA7vC,KAAAwwC,mBACAxwC,KAAA6F,SAAA,SAAAiqC,KACA9vC,KAAA+vC,UAAA,aAIA/vC,KAAAywC,YAAA,EACA,MAAAzwC,KAAAwwC,mBACAxwC,KAAAwwC,kBAAA/M,cAoDA,MA7CAsE,sBAAA/kC,UAAAoiC,WAAA,SAAAhkC,GACA,GAAyBsvC,GAAA,MAAAtvC,EAAA,GAAAA,CACzBpB,MAAA4vC,UAAAI,YAAAhwC,KAAA6vC,YAAAzkC,cAAA,QAAAslC,IAMA3I,qBAAA/kC,UAAAqiC,iBAAA,SAAA4K,GAAqEjwC,KAAA6F,SAAAoqC,GAKrElI,qBAAA/kC,UAAA2iC,kBAAA,SAAAsK,GAAsEjwC,KAAA+vC,UAAAE,GAKtElI,qBAAA/kC,UAAA8iC,iBAAA,SAAAE,GACAhmC,KAAA4vC,UAAAI,YAAAhwC,KAAA6vC,YAAAzkC,cAAA,WAAA46B,IAOA+B,qBAAA/kC,UAAA2tC,aAAA,SAAAvvC,KACApB,KAAAwwC,kBAAAxwC,KAAAwwC,mBAAAxwC,KAAAywC,aACAzwC,KAAA6F,SAAAzE,IAOA2mC,qBAAA/kC,UAAA4tC,kBAAA,WAAoE5wC,KAAAywC,YAAA,GAMpE1I,qBAAA/kC,UAAA6tC,gBAAA,SAAAzvC,GACApB,KAAAywC,YAAA,EACAzwC,KAAAwwC,kBAAAxwC,KAAA6F,SAAAzE,IAEA2mC,uBAEAA,GAAA9nC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,+MAIAsuC,MACAU,UAAA,oCACAR,SAAA,cACAS,qBAAA,sBACAC,mBAAA,wCAEA1kC,WAAAg/B,OAMAvD,EAAAwI,eAAA,WAAmD,QAC9CL,KAAArN,EAAA,YACAqN,KAAArN,EAAA,aACAqN,SAAAtI,GAAA3nC,aAAgCiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAAsN,MAAA3G;;;;;;;AAwCzD,GAAAqC,IACAt/B,QAAAg9B,EACAmG,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAAiJ,KACzC6D,OAAA,GAWA7D,EAAA,WAKA,QAAAA,qBAAA8D,EAAAC,GACA7vC,KAAA4vC,YACA5vC,KAAA6vC,cACA7vC,KAAA6F,SAAA,SAAAiqC,KACA9vC,KAAA+vC,UAAA,aA8BA,MAxBAjE,qBAAA9oC,UAAAoiC,WAAA,SAAAhkC,GAEA,GAAyBsvC,GAAA,MAAAtvC,EAAA,GAAAA,CACzBpB,MAAA4vC,UAAAI,YAAAhwC,KAAA6vC,YAAAzkC,cAAA,QAAAslC,IAMA5E,oBAAA9oC,UAAAqiC,iBAAA,SAAA4K,GACAjwC,KAAA6F,SAAA,SAAAzE,GAA0C6uC,EAAA,IAAA7uC,EAAA,KAAA+sC,WAAA/sC,MAM1C0qC,oBAAA9oC,UAAA2iC,kBAAA,SAAAsK,GAAqEjwC,KAAA+vC,UAAAE,GAKrEnE,oBAAA9oC,UAAA8iC,iBAAA,SAAAE,GACAhmC,KAAA4vC,UAAAI,YAAAhwC,KAAA6vC,YAAAzkC,cAAA,WAAA46B,IAEA8F,sBAEAA,GAAA7rC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,kGACAsuC,MACAC,WAAA,gCACAS,UAAA,gCACAR,SAAA,eAEAhkC,WAAAu/B,OAMAC,EAAAyE,eAAA,WAAkD,QAC7CL,KAAArN,EAAA,YACAqN,KAAArN,EAAA,aAwBL,IAAA4G,GAAA,SAAAsE,GAEA,QAAAtE,aACA,GAAAhoC,GAAAssC,EAAAC,MAAAhuC,KAAAO,YAAAP,IAeA,OAXAyB,GAAAwvC,QAAA,KACAxvC,EAAAiB,KAAA,KACAjB,EAAAsjC,cAAA,KAIAtjC,EAAAwkC,kBAIAxkC,EAAA2kC,uBACA3kC,EAwBA,MAzCAunC,GAAA,EAAAS,UAAAsE,GAmBArtC,OAAAK,eAAA0oC,UAAAzmC,UAAA,aAIAgB,IAAA,WAA0B,MAAAkgC,kBAC1B56B,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA0oC,UAAAzmC,UAAA,kBAIAgB,IAAA,WAA0B,MAAAkgC,kBAC1B56B,YAAA,EACAC,cAAA,IAOAkgC,UAAAzmC,UAAAuiC,kBAAA,SAAAD,KACAmE,WACCN,GAQD4C,GACAx/B,QAAAg9B,EACAmG,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAAkH,KACzC4F,OAAA,GAKA3D,EAAA,WACA,QAAAA,wBACAhsC,KAAAkxC,cA6CA,MAtCAlF,sBAAAhpC,UAAAmuC,IAAA,SAAAnO,EAAAoO,GACApxC,KAAAkxC,WAAAnrC,MAAAi9B,EAAAoO,KAMApF,qBAAAhpC,UAAAylC,OAAA,SAAA2I,GACA,OAA8BtwC,GAAAd,KAAAkxC,WAAA1wC,OAAA,EAAmCM,GAAA,IAAQA,EACzE,GAAAd,KAAAkxC,WAAApwC,GAAA,KAAAswC,EAEA,WADApxC,MAAAkxC,WAAApnC,OAAAhJ,EAAA,IASAkrC,qBAAAhpC,UAAAwG,OAAA,SAAA4nC,GACA,GAAA3vC,GAAAzB,IACAA,MAAAkxC,WAAAzqC,QAAA,SAAAnG,GACAmB,EAAA4vC,aAAA/wC,EAAA8wC,IAAA9wC,EAAA,KAAA8wC,GACA9wC,EAAA,GAAAgxC,YAAAF,EAAAhwC,UASA4qC,qBAAAhpC,UAAAquC,aAAA,SAAAE,EAAAH,GACA,QAAAG,EAAA,GAAAvO,UAEAuO,EAAA,GAAAN,UAAAG,EAAAI,SAAAP,SACAM,EAAA,GAAA7uC,OAAA0uC,EAAA1uC,OAEAspC,uBAEAA,GAAA/rC,aACKiwC,KAAArN,EAAA,aAKLmJ,EAAAuE,eAAA,WAAmD,SA8BnD,IAAAxG,GAAA,WAOA,QAAAA,2BAAA6F,EAAAC,EAAA4B,EAAAC,GACA1xC,KAAA4vC,YACA5vC,KAAA6vC,cACA7vC,KAAAyxC,YACAzxC,KAAA0xC,YACA1xC,KAAA6F,SAAA,aACA7F,KAAA+vC,UAAA,aAmEA,MA9DAhG,2BAAA/mC,UAAAC,SAAA,WACAjD,KAAAwxC,SAAAxxC,KAAA0xC,UAAA1tC,IAAAylC,GACAzpC,KAAA2xC,aACA3xC,KAAAyxC,UAAAN,IAAAnxC,KAAAwxC,SAAAxxC,OAKA+pC,0BAAA/mC,UAAA4uC,YAAA,WAAmE5xC,KAAAyxC,UAAAhJ,OAAAzoC,OAKnE+pC,0BAAA/mC,UAAAoiC,WAAA,SAAAhkC,GACApB,KAAA6xC,OAAAzwC,IAAApB,KAAAoB,MACApB,KAAA4vC,UAAAI,YAAAhwC,KAAA6vC,YAAAzkC,cAAA,UAAApL,KAAA6xC,SAMA9H,0BAAA/mC,UAAAqiC,iBAAA,SAAA4K,GACA,GAAAxuC,GAAAzB,IACAA,MAAA8xC,IAAA7B,EACAjwC,KAAA6F,SAAA,WACAoqC,EAAAxuC,EAAAL,OACAK,EAAAgwC,UAAAjoC,OAAA/H,KAOAsoC,0BAAA/mC,UAAAsuC,YAAA,SAAAlwC,GAAwEpB,KAAAolC,WAAAhkC,IAKxE2oC,0BAAA/mC,UAAA2iC,kBAAA,SAAAsK,GAA2EjwC,KAAA+vC,UAAAE,GAK3ElG,0BAAA/mC,UAAA8iC,iBAAA,SAAAE,GACAhmC,KAAA4vC,UAAAI,YAAAhwC,KAAA6vC,YAAAzkC,cAAA,WAAA46B,IAKA+D,0BAAA/mC,UAAA2uC,WAAA,WACA3xC,KAAA0C,MAAA1C,KAAA+xC,iBAAA/xC,KAAA0C,OAAA1C,KAAA+xC,iBACA/xC,KAAAgyC,mBAEAhyC,KAAA0C,MAAA1C,KAAA+xC,kBACA/xC,KAAA0C,KAAA1C,KAAA+xC,kBAKAhI,0BAAA/mC,UAAAgvC,gBAAA,WACA,SAAA/lC,OAAA,8LAEA89B,4BAEAA,GAAA9pC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,+FACAsuC,MAAuBC,WAAA,aAAAC,SAAA,eACvBhkC,WAAAy/B,OAMAhC,EAAAwG,eAAA,WAAwD,QACnDL,KAAArN,EAAA,YACAqN,KAAArN,EAAA,aACAqN,KAAAlE,IACAkE,KAAArN,EAAA,YAELkH,EAAAkI,gBACAvvC,OAAcwtC,KAAArN,EAAA,QACdkP,kBAAyB7B,KAAArN,EAAA,QACzBzhC,QAAe8uC,KAAArN,EAAA;;;;;;;AASf,GAAAoJ,IACA1/B,QAAAg9B,EACAmG,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAAqJ,KACzCyD,OAAA,GAWAzD,EAAA,WAKA,QAAAA,oBAAA0D,EAAAC,GACA7vC,KAAA4vC,YACA5vC,KAAA6vC,cACA7vC,KAAA6F,SAAA,SAAAiqC,KACA9vC,KAAA+vC,UAAA,aA4BA,MAtBA7D,oBAAAlpC,UAAAoiC,WAAA,SAAAhkC,GACApB,KAAA4vC,UAAAI,YAAAhwC,KAAA6vC,YAAAzkC,cAAA,QAAA+iC,WAAA/sC,KAMA8qC,mBAAAlpC,UAAAqiC,iBAAA,SAAA4K,GACAjwC,KAAA6F,SAAA,SAAAzE,GAA0C6uC,EAAA,IAAA7uC,EAAA,KAAA+sC,WAAA/sC,MAM1C8qC,mBAAAlpC,UAAA2iC,kBAAA,SAAAsK,GAAoEjwC,KAAA+vC,UAAAE,GAKpE/D,mBAAAlpC,UAAA8iC,iBAAA,SAAAE,GACAhmC,KAAA4vC,UAAAI,YAAAhwC,KAAA6vC,YAAAzkC,cAAA,WAAA46B,IAEAkG,qBAEAA,GAAAjsC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,+FACAsuC,MACAC,WAAA,gCACAS,UAAA,gCACAR,SAAA,eAEAhkC,WAAA2/B,OAMAC,EAAAqE,eAAA,WAAiD,QAC5CL,KAAArN,EAAA,YACAqN,KAAArN,EAAA;;;;;;;AASL,GAAA2J,IACAjgC,QAAAg9B,EACAmG,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAAsH,KACzCwF,OAAA,GAoFAxF,EAAA,WAKA,QAAAA,4BAAAyF,EAAAC,GACA7vC,KAAA4vC,YACA5vC,KAAA6vC,cAIA7vC,KAAAkyC,WAAA,GAAAC,KAIAnyC,KAAAoyC,WAAA,EACApyC,KAAA6F,SAAA,SAAAiqC,KACA9vC,KAAA+vC,UAAA,aACA/vC,KAAAqyC,aAAAxP,EAAA,mBA+EA,MA7EAniC,QAAAK,eAAAopC,2BAAAnnC,UAAA,eAKAsvC,IAAA,SAAArC,GACA,qBAAAA,GACA,SAAAhkC,OAAA,gDAAAzE,KAAAE,UAAAuoC,GAEAjwC,MAAAqyC,aAAApC,GAEA3mC,YAAA,EACAC,cAAA,IAMA4gC,2BAAAnnC,UAAAoiC,WAAA,SAAAhkC,GACApB,KAAAoB,OACA,IAAyBqB,GAAAzC,KAAAuyC,aAAAnxC,EACzB,OAAAqB,GACAzC,KAAA4vC,UAAAI,YAAAhwC,KAAA6vC,YAAAzkC,cAAA,mBAEA,IAAyBi5B,GAAAF,kBAAA1hC,EAAArB,EACzBpB,MAAA4vC,UAAAI,YAAAhwC,KAAA6vC,YAAAzkC,cAAA,QAAAi5B,IAMA8F,2BAAAnnC,UAAAqiC,iBAAA,SAAA4K,GACA,GAAAxuC,GAAAzB,IACAA,MAAA6F,SAAA,SAAAw+B,GACA5iC,EAAAL,MAAAK,EAAA+wC,gBAAAnO,GACA4L,EAAAxuC,EAAAL,SAOA+oC,2BAAAnnC,UAAA2iC,kBAAA,SAAAsK,GAA4EjwC,KAAA+vC,UAAAE,GAK5E9F,2BAAAnnC,UAAA8iC,iBAAA,SAAAE,GACAhmC,KAAA4vC,UAAAI,YAAAhwC,KAAA6vC,YAAAzkC,cAAA,WAAA46B,IAMAmE,2BAAAnnC,UAAAyvC,gBAAA,WAAwE,OAAAzyC,KAAAoyC,cAAA/C,YAMxElF,2BAAAnnC,UAAAuvC,aAAA,SAAAnxC,GACA,OAAAsxC,GAAA,EAAAC,EAAAzK,MAAA0K,KAAA5yC,KAAAkyC,WAAA1O,QAAiEkP,EAAAC,EAAAnyC,OAAgBkyC,IAAA,CACjF,GAAAjwC,GAAAkwC,EAAAD,EACA,IAAA1yC,KAAAqyC,aAAAryC,KAAAkyC,WAAAluC,IAAAvB,GAAArB,GACA,MAAAqB,GAEA,aAOA0nC,2BAAAnnC,UAAAwvC,gBAAA,SAAAnO,GACA,GAAyB5hC,GAAA2hC,WAAAC,EACzB,OAAArkC,MAAAkyC,WAAAW,IAAApwC,GAAAzC,KAAAkyC,WAAAluC,IAAAvB,GAAA4hC,GAEA8F,6BAEAA,GAAAlqC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,8GACAsuC,MAAuBC,WAAA,gCAAAC,SAAA,eACvBhkC,WAAAkgC,OAMArC,EAAAoG,eAAA,WAAyD,QACpDL,KAAArN,EAAA,YACAqN,KAAArN,EAAA,cAELsH,EAAA8H,gBACAa,cAAqB5C,KAAArN,EAAA,QAWrB,IAAAqH,GAAA,WAMA,QAAAA,gBAAA6I,EAAAnD,EAAAoD,GACAhzC,KAAA+yC,WACA/yC,KAAA4vC,YACA5vC,KAAAgzC,UACAhzC,KAAAgzC,UACAhzC,KAAAyC,GAAAzC,KAAAgzC,QAAAP,mBA+CA,MA7CA/xC,QAAAK,eAAAmpC,eAAAlnC,UAAA,WAKAsvC,IAAA,SAAAlxC,GACA,MAAApB,KAAAgzC,UAEAhzC,KAAAgzC,QAAAd,WAAAI,IAAAtyC,KAAAyC,GAAArB,GACApB,KAAAizC,iBAAA9O,kBAAAnkC,KAAAyC,GAAArB,IACApB,KAAAgzC,QAAA5N,WAAAplC,KAAAgzC,QAAA5xC,SAEAkI,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAmpC,eAAAlnC,UAAA,SAKAsvC,IAAA,SAAAlxC,GACApB,KAAAizC,iBAAA7xC,GACApB,KAAAgzC,SACAhzC,KAAAgzC,QAAA5N,WAAAplC,KAAAgzC,QAAA5xC,QAEAkI,YAAA,EACAC,cAAA,IAOA2gC,eAAAlnC,UAAAiwC,iBAAA,SAAA7xC,GACApB,KAAA4vC,UAAAI,YAAAhwC,KAAA+yC,SAAA3nC,cAAA,QAAAhK,IAKA8oC,eAAAlnC,UAAA4uC,YAAA,WACA5xC,KAAAgzC,UACAhzC,KAAAgzC,QAAAd,WAAAgB,OAAAlzC,KAAAyC,IACAzC,KAAAgzC,QAAA5N,WAAAplC,KAAAgzC,QAAA5xC,SAGA8oC,iBAEAA,GAAAjqC,aACKiwC,KAAArN,EAAA,UAAAsN,OAA0BruC,SAAA,aAK/BooC,EAAAqG,eAAA,WAA6C,QACxCL,KAAArN,EAAA,aACAqN,KAAArN,EAAA,YACAqN,KAAA/F,EAAAlqC,aAAiDiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,UAE1EqH,EAAA+H,gBACAkB,UAAiBjD,KAAArN,EAAA,MAAAsN,MAAA,aACjB/uC,QAAe8uC,KAAArN,EAAA,MAAAsN,MAAA;;;;;;;AASf,GAAAzD,IACAngC,QAAAg9B,EACAmG,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAAuH,KACzCuF,OAAA,GAqDAvF,EAAA,WAKA,QAAAA,oCAAAwF,EAAAC,GACA7vC,KAAA4vC,YACA5vC,KAAA6vC,cAIA7vC,KAAAkyC,WAAA,GAAAC,KAIAnyC,KAAAoyC,WAAA,EACApyC,KAAA6F,SAAA,SAAAiqC,KACA9vC,KAAA+vC,UAAA,aACA/vC,KAAAqyC,aAAAxP,EAAA,mBA4GA,MA1GAniC,QAAAK,eAAAqpC,mCAAApnC,UAAA,eAKAsvC,IAAA,SAAArC,GACA,qBAAAA,GACA,SAAAhkC,OAAA,gDAAAzE,KAAAE,UAAAuoC,GAEAjwC,MAAAqyC,aAAApC,GAEA3mC,YAAA,EACAC,cAAA,IAMA6gC,mCAAApnC,UAAAoiC,WAAA,SAAAhkC,GACA,GAAAK,GAAAzB,IACAA,MAAAoB,OACA,IAAyBgyC,EACzB,IAAAlL,MAAAK,QAAAnnC,GAAA,CAEA,GAA6BiyC,GAAAjyC,EAAAgE,IAAA,SAAAlE,GAAoC,MAAAO,GAAA8wC,aAAArxC,IACjEkyC,GAAA,SAAAE,EAAA5Q,GAA2D4Q,EAAAC,aAAAF,EAAA3oC,QAAAg4B,EAAA2M,aAAA,QAG3D+D,GAAA,SAAAE,EAAA5Q,GAA2D4Q,EAAAC,cAAA,GAE3DvzC,MAAAkyC,WAAAzrC,QAAA2sC,IAMAhJ,mCAAApnC,UAAAqiC,iBAAA,SAAA4K,GACA,GAAAxuC,GAAAzB,IACAA,MAAA6F,SAAA,SAAAiqC,GACA,GAA6BnmC,KAC7B,IAAAmmC,EAAAlnC,eAAA,mBAEA,OADiC4qC,GAAA1D,EAAA2D,gBACK3yC,EAAA,EAAUA,EAAA0yC,EAAAhzC,OAAoBM,IAAA,CACpE,GAAqCwyC,GAAAE,EAAA/pC,KAAA3I,GACAqJ,EAAA1I,EAAA+wC,gBAAAc,EAAAlyC,MACrCuI,GAAA5D,KAAAoE,OAKA,QADiCqpC,GAAA1D,EAAA,QACKhvC,EAAA,EAAUA,EAAA0yC,EAAAhzC,OAAoBM,IAAA,CACpE,GAAqCwyC,GAAAE,EAAA/pC,KAAA3I,EACrC,IAAAwyC,EAAA3pC,SAAA,CACA,GAAyCQ,GAAA1I,EAAA+wC,gBAAAc,EAAAlyC,MACzCuI,GAAA5D,KAAAoE,IAIA1I,EAAAL,MAAAuI,EACAsmC,EAAAtmC,KAOAygC,mCAAApnC,UAAA2iC,kBAAA,SAAAsK,GAAoFjwC,KAAA+vC,UAAAE,GAKpF7F,mCAAApnC,UAAA8iC,iBAAA,SAAAE,GACAhmC,KAAA4vC,UAAAI,YAAAhwC,KAAA6vC,YAAAzkC,cAAA,WAAA46B,IAOAoE,mCAAApnC,UAAAyvC,gBAAA,SAAArxC,GACA,GAAyBqB,IAAAzC,KAAAoyC,cAAA/C,UAEzB,OADArvC,MAAAkyC,WAAAI,IAAA7vC,EAAArB,GACAqB,GAOA2nC,mCAAApnC,UAAAuvC,aAAA,SAAAnxC,GACA,OAAAsxC,GAAA,EAAAC,EAAAzK,MAAA0K,KAAA5yC,KAAAkyC,WAAA1O,QAAiEkP,EAAAC,EAAAnyC,OAAgBkyC,IAAA,CACjF,GAAAjwC,GAAAkwC,EAAAD,EACA,IAAA1yC,KAAAqyC,aAA+CryC,KAAAkyC,WAAAluC,IAAAvB,GAAAixC,OAAAtyC,GAC/C,MAAAqB,GAEA,aAOA2nC,mCAAApnC,UAAAwvC,gBAAA,SAAAnO,GACA,GAAyB5hC,GAAA+hC,aAAAH,EACzB,OAAArkC,MAAAkyC,WAAAW,IAAApwC,GAAAzC,KAAAkyC,WAAAluC,IAAAvB,GAAAixC,OAAArP,GAEA+F,qCAEAA,GAAAnqC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,4FACAsuC,MAAuBC,WAAA,0BAAAC,SAAA,eACvBhkC,WAAAogC,OAMAtC,EAAAmG,eAAA,WAAiE,QAC5DL,KAAArN,EAAA,YACAqN,KAAArN,EAAA,cAELuH,EAAA6H,gBACAa,cAAqB5C,KAAArN,EAAA,QAarB,IAAA4J,GAAA,WAMA,QAAAA,wBAAAsG,EAAAnD,EAAAoD,GACAhzC,KAAA+yC,WACA/yC,KAAA4vC,YACA5vC,KAAAgzC,UACAhzC,KAAAgzC,UACAhzC,KAAAyC,GAAAzC,KAAAgzC,QAAAP,gBAAAzyC,OA6DA,MA1DAU,QAAAK,eAAA0rC,uBAAAzpC,UAAA,WAKAsvC,IAAA,SAAAlxC,GACA,MAAApB,KAAAgzC,UAEAhzC,KAAA0zC,OAAAtyC,EACApB,KAAAizC,iBAAA1O,oBAAAvkC,KAAAyC,GAAArB,IACApB,KAAAgzC,QAAA5N,WAAAplC,KAAAgzC,QAAA5xC,SAEAkI,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA0rC,uBAAAzpC,UAAA,SAKAsvC,IAAA,SAAAlxC,GACApB,KAAAgzC,SACAhzC,KAAA0zC,OAAAtyC,EACApB,KAAAizC,iBAAA1O,oBAAAvkC,KAAAyC,GAAArB,IACApB,KAAAgzC,QAAA5N,WAAAplC,KAAAgzC,QAAA5xC,QAGApB,KAAAizC,iBAAA7xC,IAGAkI,YAAA,EACAC,cAAA,IAOAkjC,uBAAAzpC,UAAAiwC,iBAAA,SAAA7xC,GACApB,KAAA4vC,UAAAI,YAAAhwC,KAAA+yC,SAAA3nC,cAAA,QAAAhK,IAOAqrC,uBAAAzpC,UAAAuwC,aAAA,SAAA5pC,GACA3J,KAAA4vC,UAAAI,YAAAhwC,KAAA+yC,SAAA3nC,cAAA,WAAAzB,IAKA8iC,uBAAAzpC,UAAA4uC,YAAA,WACA5xC,KAAAgzC,UACAhzC,KAAAgzC,QAAAd,WAAAgB,OAAAlzC,KAAAyC,IACAzC,KAAAgzC,QAAA5N,WAAAplC,KAAAgzC,QAAA5xC,SAGAqrC,yBAEAA,GAAAxsC,aACKiwC,KAAArN,EAAA,UAAAsN,OAA0BruC,SAAA,aAK/B2qC,EAAA8D,eAAA,WAAqD,QAChDL,KAAArN,EAAA,aACAqN,KAAArN,EAAA,YACAqN,KAAA9F,EAAAnqC,aAAyDiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,UAElF4J,EAAAwF,gBACAkB,UAAiBjD,KAAArN,EAAA,MAAAsN,MAAA,aACjB/uC,QAAe8uC,KAAArN,EAAA,MAAAsN,MAAA,WAkJf,IAAA7I,IACA+B,EACA6C,EACAJ,EACA3B,EACAC,EACAL,GAwDAX,EAAA,SAAA2E,GAEA,QAAA3E,8BACA,cAAA2E,KAAAC,MAAAhuC,KAAAO,YAAAP,KAmEA,MArEAgpC,GAAA,EAAAI,2BAAA2E,GAOA3E,2BAAApmC,UAAAC,SAAA,WACAjD,KAAA2zC,mBACA3zC,KAAA,cAAA4zC,aAAA5zC,OAKAopC,2BAAApmC,UAAA4uC,YAAA,WACA5xC,KAAA6zC,eACA7zC,KAAA6zC,cAAAC,gBAAA9zC,OAGAU,OAAAK,eAAAqoC,2BAAApmC,UAAA,WAKAgB,IAAA,WAA0B,MAAAhE,MAAA,cAAA+zC,aAAA/zC,OAC1BsJ,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAqoC,2BAAApmC,UAAA,QAKAgB,IAAA,WAA0B,MAAAygC,aAAAzkC,KAAA0C,KAAA1C,KAAAixC,UAC1B3nC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAqoC,2BAAApmC,UAAA,iBAKAgB,IAAA,WAA0B,MAAAhE,MAAAixC,QAAAjxC,KAAAixC,QAAA4C,cAAA,MAC1BvqC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAqoC,2BAAApmC,UAAA,aAIAgB,IAAA,WAA0B,MAAA6iC,mBAAA7mC,KAAAg0C,cAC1B1qC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAqoC,2BAAApmC,UAAA,kBAIAgB,IAAA,WACA,MAAA8iC,wBAAA9mC,KAAAi0C,mBAEA3qC,YAAA,EACAC,cAAA,IAMA6/B,2BAAApmC,UAAA2wC,iBAAA,aACAvK,4BACCE,GAQDiC,EAAA,WAIA,QAAAA,uBAAA2I,GACAl0C,KAAAm0C,IAAAD,EA0DA,MAxDAxzC,QAAAK,eAAAwqC,sBAAAvoC,UAAA,oBAIAgB,IAAA,WAA0B,QAAAhE,KAAAm0C,IAAAnR,SAAAhjC,KAAAm0C,IAAAnR,QAAAwK,WAC1BlkC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAwqC,sBAAAvoC,UAAA,kBAIAgB,IAAA,WAA0B,QAAAhE,KAAAm0C,IAAAnR,SAAAhjC,KAAAm0C,IAAAnR,QAAAuK,SAC1BjkC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAwqC,sBAAAvoC,UAAA,mBAIAgB,IAAA,WAA0B,QAAAhE,KAAAm0C,IAAAnR,SAAAhjC,KAAAm0C,IAAAnR,QAAAqK,UAC1B/jC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAwqC,sBAAAvoC,UAAA,gBAIAgB,IAAA,WAA0B,QAAAhE,KAAAm0C,IAAAnR,SAAAhjC,KAAAm0C,IAAAnR,QAAAsK,OAC1BhkC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAwqC,sBAAAvoC,UAAA,gBAIAgB,IAAA,WAA0B,QAAAhE,KAAAm0C,IAAAnR,SAAAhjC,KAAAm0C,IAAAnR,QAAAiK,OAC1B3jC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAwqC,sBAAAvoC,UAAA,kBAIAgB,IAAA,WAA0B,QAAAhE,KAAAm0C,IAAAnR,SAAAhjC,KAAAm0C,IAAAnR,QAAAkK,SAC1B5jC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAwqC,sBAAAvoC,UAAA,kBAIAgB,IAAA,WAA0B,QAAAhE,KAAAm0C,IAAAnR,SAAAhjC,KAAAm0C,IAAAnR,QAAAmK,SAC1B7jC,YAAA,EACAC,cAAA,IAEAgiC,yBAEAC,GACA4I,uBAAA,mBACAC,qBAAA,iBACAC,sBAAA,kBACAC,mBAAA,eACAC,mBAAA,eACAC,qBAAA,iBACAC,qBAAA,kBAiBAhL,EAAA,SAAAqE,GAKA,QAAArE,iBAAAwK,GACA,MAAAnG,GAAAllC,KAAA7I,KAAAk0C,IAAAl0C,KAEA,MAPAgpC,GAAA,EAAAU,gBAAAqE,GAOArE,iBACC6B,EACD7B,GAAAzpC,aACKiwC,KAAArN,EAAA,UAAAsN,OAA0BruC,SAAA,4CAAAsuC,KAAA5E,MAK/B9B,EAAA6G,eAAA,WAA8C,QACzCL,KAAAzG,EAAAxpC,aAAgCiwC,KAAArN,EAAA,SAQrC,IAAA8G,GAAA,SAAAoE,GAKA,QAAApE,sBAAAuK,GACA,MAAAnG,GAAAllC,KAAA7I,KAAAk0C,IAAAl0C,KAEA,MAPAgpC,GAAA,EAAAW,qBAAAoE,GAOApE,sBACC4B,EACD5B,GAAA1pC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,2FACAsuC,KAAA5E,MAMA7B,EAAA4G,eAAA,WAAmD,QAC9CL,KAAA5G,EAAArpC,aAAuCiwC,KAAArN,EAAA;;;;;;;AAY5C,GAAA8R,GAAA,QAIAC,EAAA,UAKAC,EAAA,UAKAC,EAAA,WAoDAnK,EAAA,WAKA,QAAAA,iBAAA5G,EAAAmB,GACAllC,KAAA+jC,YACA/jC,KAAAklC,iBAIAllC,KAAA+0C,oBAAA,aACA/0C,KAAAg1C,WAAA,EACAh1C,KAAAi1C,UAAA,EAIAj1C,KAAAk1C,qBAynBA,MAvnBAx0C,QAAAK,eAAA4pC,gBAAA3nC,UAAA,SAKAgB,IAAA,WAA0B,MAAAhE,MAAA0zC,QAC1BpqC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA4pC,gBAAA3nC,UAAA,UAKAgB,IAAA,WAA0B,MAAAhE,MAAAixC,SAC1B3nC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA4pC,gBAAA3nC,UAAA,UAcAgB,IAAA,WAA0B,MAAAhE,MAAAm1C,SAC1B7rC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA4pC,gBAAA3nC,UAAA,SAQAgB,IAAA,WAA0B,MAAAhE,MAAAm1C,UAAAR,GAC1BrrC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA4pC,gBAAA3nC,UAAA,WAQAgB,IAAA,WAA0B,MAAAhE,MAAAm1C,UAAAP,GAC1BtrC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA4pC,gBAAA3nC,UAAA,WAQAgB,IAAA,WAA0B,MAAAhE,MAAAm1C,SAAAN,GAC1BvrC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA4pC,gBAAA3nC,UAAA,YASAgB,IAAA,WAA0B,MAAAhE,MAAAm1C,UAAAL,GAC1BxrC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA4pC,gBAAA3nC,UAAA,WAQAgB,IAAA,WAA0B,MAAAhE,MAAAm1C,UAAAL,GAC1BxrC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA4pC,gBAAA3nC,UAAA,UAMAgB,IAAA,WAA0B,MAAAhE,MAAAo1C,SAC1B9rC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA4pC,gBAAA3nC,UAAA,YASAgB,IAAA,WAA0B,MAAAhE,MAAAg1C,WAC1B1rC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA4pC,gBAAA3nC,UAAA,SASAgB,IAAA,WAA0B,OAAAhE,KAAAqtC,UAC1B/jC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA4pC,gBAAA3nC,UAAA,WAMAgB,IAAA,WAA0B,MAAAhE,MAAAi1C,UAC1B3rC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA4pC,gBAAA3nC,UAAA,aAMAgB,IAAA,WAA0B,OAAAhE,KAAAi1C,UAC1B3rC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA4pC,gBAAA3nC,UAAA,gBAMAgB,IAAA,WAA0B,MAAAhE,MAAAq1C,eAC1B/rC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA4pC,gBAAA3nC,UAAA,iBAMAgB,IAAA,WAA0B,MAAAhE,MAAAs1C,gBAC1BhsC,YAAA,EACAC,cAAA,IAQAohC,gBAAA3nC,UAAAuyC,cAAA,SAAAC,GACAx1C,KAAA+jC,UAAAuE,kBAAAkN,IAQA7K,gBAAA3nC,UAAAyyC,mBAAA,SAAAD,GACAx1C,KAAAklC,eAAAsD,uBAAAgN,IAMA7K,gBAAA3nC,UAAA0yC,gBAAA,WAA6D11C,KAAA+jC,UAAA,MAK7D4G,gBAAA3nC,UAAA2yC,qBAAA,WAAkE31C,KAAAklC,eAAA,MASlEyF,gBAAA3nC,UAAA4iC,cAAA,SAAAgQ,OACA,KAAAA,IAA8BA,MAC9B51C,KAAAi1C,UAAA,EACAj1C,KAAAixC,UAAA2E,EAAAC,UACA71C,KAAAixC,QAAArL,cAAAgQ,IAYAjL,gBAAA3nC,UAAA8yC,gBAAA,SAAAF,OACA,KAAAA,IAA8BA,MAC9B51C,KAAAi1C,UAAA,EACAj1C,KAAA+1C,cAAA,SAAA/S,GAA+CA,EAAA8S,iBAA0BD,UAAA,MACzE71C,KAAAixC,UAAA2E,EAAAC,UACA71C,KAAAixC,QAAA+E,eAAAJ,IAWAjL,gBAAA3nC,UAAAwiC,YAAA,SAAAoQ,OACA,KAAAA,IAA8BA,MAC9B51C,KAAAg1C,WAAA,EACAh1C,KAAAixC,UAAA2E,EAAAC,UACA71C,KAAAixC,QAAAzL,YAAAoQ,IAYAjL,gBAAA3nC,UAAAizC,eAAA,SAAAL,OACA,KAAAA,IAA8BA,MAC9B51C,KAAAg1C,WAAA,EACAh1C,KAAA+1C,cAAA,SAAA/S,GAA+CA,EAAAiT,gBAAyBJ,UAAA,MACxE71C,KAAAixC,UAAA2E,EAAAC,UACA71C,KAAAixC,QAAAiF,gBAAAN,IAQAjL,gBAAA3nC,UAAAmzC,cAAA,SAAAP,OACA,KAAAA,IAA8BA,MAC9B51C,KAAAm1C,QAAAN,EACA70C,KAAAixC,UAAA2E,EAAAC,UACA71C,KAAAixC,QAAAkF,cAAAP,IAWAjL,gBAAA3nC,UAAAa,QAAA,SAAA+xC,OACA,KAAAA,IAA8BA,MAC9B51C,KAAAm1C,QAAAL,EACA90C,KAAAo1C,QAAA,KACAp1C,KAAA+1C,cAAA,SAAA/S,GAA+CA,EAAAn/B,SAAkBgyC,UAAA,MACjE71C,KAAAo2C,gBACA,IAAAR,EAAAS,YACAr2C,KAAAq1C,cAAAiB,KAAAt2C,KAAA0zC,QACA1zC,KAAAs1C,eAAAgB,KAAAt2C,KAAAm1C,UAEAn1C,KAAAu2C,mBAAAX,EAAAC,UACA71C,KAAAk1C,kBAAAzuC,QAAA,SAAA+vC,GAA4D,MAAAA,IAAA,MAW5D7L,gBAAA3nC,UAAAY,OAAA,SAAAgyC,OACA,KAAAA,IAA8BA,MAC9B51C,KAAAm1C,QAAAR,EACA30C,KAAA+1C,cAAA,SAAA/S,GAA+CA,EAAAp/B,QAAiBiyC,UAAA,MAChE71C,KAAAmmC,wBAAqC0P,UAAA,EAAAQ,UAAAT,EAAAS,YACrCr2C,KAAAu2C,mBAAAX,EAAAC,UACA71C,KAAAk1C,kBAAAzuC,QAAA,SAAA+vC,GAA4D,MAAAA,IAAA,MAM5D7L,gBAAA3nC,UAAAuzC,iBAAA,SAAAV,GACA71C,KAAAixC,UAAA4E,IACA71C,KAAAixC,QAAA9K,yBACAnmC,KAAAixC,QAAAiF,kBACAl2C,KAAAixC,QAAA+E,mBAOArL,gBAAA3nC,UAAAyzC,UAAA,SAAA/R,GAA6D1kC,KAAAixC,QAAAvM,GAQ7DiG,gBAAA3nC,UAAAyiC,SAAA,SAAArkC,EAAAoyC,KAQA7I,gBAAA3nC,UAAAiB,WAAA,SAAA7C,EAAAoyC,KAQA7I,gBAAA3nC,UAAA2qC,MAAA,SAAAvsC,EAAAoyC,KAQA7I,gBAAA3nC,UAAAmjC,uBAAA,SAAAyP,OACA,KAAAA,IAA8BA,MAC9B51C,KAAA02C,oBACA12C,KAAAo2C,eACAp2C,KAAAotC,UACAptC,KAAA22C,8BACA32C,KAAAo1C,QAAAp1C,KAAA42C,gBACA52C,KAAAm1C,QAAAn1C,KAAA62C,mBACA72C,KAAAm1C,UAAAR,GAAA30C,KAAAm1C,UAAAN,GACA70C,KAAA82C,mBAAAlB,EAAAS,aAGA,IAAAT,EAAAS,YACAr2C,KAAAq1C,cAAAiB,KAAAt2C,KAAA0zC,QACA1zC,KAAAs1C,eAAAgB,KAAAt2C,KAAAm1C,UAEAn1C,KAAAixC,UAAA2E,EAAAC,UACA71C,KAAAixC,QAAA9K,uBAAAyP,IAQAjL,gBAAA3nC,UAAA+zC,oBAAA,SAAAnB,OACA,KAAAA,IAA8BA,GAASS,WAAA,IACvCr2C,KAAA+1C,cAAA,SAAAiB,GAA4C,MAAAA,GAAAD,oBAAAnB,KAC5C51C,KAAAmmC,wBAAqC0P,UAAA,EAAAQ,UAAAT,EAAAS,aAKrC1L,gBAAA3nC,UAAA0zC,kBAAA,WAA+D12C,KAAAm1C,QAAAn1C,KAAAi3C,uBAAAnC,EAAAH,GAI/DhK,gBAAA3nC,UAAA4zC,cAAA,WACA,MAAA52C,MAAA+jC,UAAA/jC,KAAA+jC,UAAA/jC,MAAA,MAMA2qC,gBAAA3nC,UAAA8zC,mBAAA,SAAAT,GACA,GAAA50C,GAAAzB,IACA,IAAAA,KAAAklC,eAAA,CACAllC,KAAAm1C,QAAAN,CACA,IAA6BjS,GAAAD,aAAA3iC,KAAAklC,eAAAllC,MAC7BA,MAAAk3C,6BACAtU,EAAAjhC,UAAA,SAAA4hC,GAAiD,MAAA9hC,GAAA01C,UAAA5T,GAAiC8S,kBAMlF1L,gBAAA3nC,UAAA2zC,4BAAA,WACA32C,KAAAk3C,8BACAl3C,KAAAk3C,6BAAAE,eA6BAzM,gBAAA3nC,UAAAm0C,UAAA,SAAA5T,EAAAqS,OACA,KAAAA,IAA8BA,MAC9B51C,KAAAo1C,QAAA7R,EACAvjC,KAAAq3C,uBAAA,IAAAzB,EAAAS,YAiBA1L,gBAAA3nC,UAAAgB,IAAA,SAAA4iC,GAAqD,MAAAoB,OAAAhoC,KAAA4mC,EAAA,MAUrD+D,gBAAA3nC,UAAA8qC,SAAA,SAAAD,EAAAjH,GACA,GAAyB5D,GAAA4D,EAAA5mC,KAAAgE,IAAA4iC,GAAA5mC,IACzB,OAAAgjC,MAAAoS,QAAApS,EAAAoS,QAAAvH,GAAA,MAWAlD,gBAAA3nC,UAAA4qC,SAAA,SAAAC,EAAAjH,GAAqE,QAAA5mC,KAAA8tC,SAAAD,EAAAjH,IACrElmC,OAAAK,eAAA4pC,gBAAA3nC,UAAA,QAKAgB,IAAA,WAEA,IADA,GAA6BmD,GAAAnH,KAC7BmH,EAAA8pC,SACA9pC,IAAA8pC,OAEA,OAAA9pC,IAEAmC,YAAA,EACAC,cAAA,IAOAohC,gBAAA3nC,UAAAq0C,sBAAA,SAAAhB,GACAr2C,KAAAm1C,QAAAn1C,KAAA62C,mBACAR,GACAr2C,KAAAs1C,eAAAgB,KAAAt2C,KAAAm1C,SAEAn1C,KAAAixC,SACAjxC,KAAAixC,QAAAoG,sBAAAhB,IAOA1L,gBAAA3nC,UAAAs0C,iBAAA,WACAt3C,KAAAq1C,cAAA,GAAAxS,GAAA,aACA7iC,KAAAs1C,eAAA,GAAAzS,GAAA,cAKA8H,gBAAA3nC,UAAA6zC,iBAAA,WACA,MAAA72C,MAAAi3C,uBACAnC,EACA90C,KAAAo1C,QACAR,EACA50C,KAAAu3C,uBAAA1C,GACAA,EACA70C,KAAAu3C,uBAAA3C,GACAA,EACAD,GAOAhK,gBAAA3nC,UAAAozC,aAAA,aAOAzL,gBAAA3nC,UAAA+yC,cAAA,SAAAyB,KAOA7M,gBAAA3nC,UAAAy0C,aAAA,SAAAC,KAMA/M,gBAAA3nC,UAAAi0C,qBAAA,aAMAtM,gBAAA3nC,UAAAu0C,uBAAA,SAAAI,GACA,MAAA33C,MAAAy3C,aAAA,SAAAzU,GAAqD,MAAAA,GAAA2U,cAMrDhN,gBAAA3nC,UAAA40C,kBAAA,WACA,MAAA53C,MAAAy3C,aAAA,SAAAzU,GAAqD,MAAAA,GAAAsK,SAMrD3C,gBAAA3nC,UAAA60C,oBAAA,WACA,MAAA73C,MAAAy3C,aAAA,SAAAzU,GAAqD,MAAAA,GAAAuK,WAOrD5C,gBAAA3nC,UAAAkzC,gBAAA,SAAAN,OACA,KAAAA,IAA8BA,MAC9B51C,KAAAg1C,WAAAh1C,KAAA43C,oBACA53C,KAAAixC,UAAA2E,EAAAC,UACA71C,KAAAixC,QAAAiF,gBAAAN,IAQAjL,gBAAA3nC,UAAAgzC,eAAA,SAAAJ,OACA,KAAAA,IAA8BA,MAC9B51C,KAAAi1C,SAAAj1C,KAAA63C,sBACA73C,KAAAixC,UAAA2E,EAAAC,UACA71C,KAAAixC,QAAA+E,eAAAJ,IAQAjL,gBAAA3nC,UAAA80C,cAAA,SAAAC,GACA,sBAAAA,IAAA,OAAAA,GACA,IAAAr3C,OAAA8iC,KAAAuU,GAAAv3C,QAAA,SAAAu3C,IAAA,YAAAA,IAOApN,gBAAA3nC,UAAAg1C,4BAAA,SAAA/H,GAA2EjwC,KAAA+0C,oBAAA9E,GAC3EtF,mBA6CAC,EAAA,SAAAmD,GAOA,QAAAnD,aAAAmN,EAAAhU,EAAAmB,OACA,KAAA6S,IAAmCA,EAAA,KACnC,IAAAt2C,GAAAssC,EAAAllC,KAAA7I,KAAAsoC,kBAAAvE,GAAAyE,uBAAAtD,KAAAllC,IAQA,OAJAyB,GAAAw2C,aACAx2C,EAAAy2C,gBAAAH,GACAt2C,EAAA0kC,wBAAsC0P,UAAA,EAAAQ,WAAA,IACtC50C,EAAA61C,mBACA71C,EA+IA,MA/JAunC,GAAA,EAAA4B,YAAAmD,GAsCAnD,YAAA5nC,UAAAyiC,SAAA,SAAArkC,EAAAoyC,GACA,GAAA/xC,GAAAzB,SACA,KAAAwzC,IAAiCA,MACjCxzC,KAAA0zC,OAAAtyC,EACApB,KAAAi4C,UAAAz3C,SAAA,IAAAgzC,EAAA9N,uBACA1lC,KAAAi4C,UAAAxxC,QAAA,SAAA+vC,GAAwD,MAAAA,GAAA/0C,EAAAiyC,QAAA,IAAAF,EAAA2E,yBAExDn4C,KAAAmmC,uBAAAqN,IAYA5I,YAAA5nC,UAAAiB,WAAA,SAAA7C,EAAAoyC,OACA,KAAAA,IAAiCA,MACjCxzC,KAAAylC,SAAArkC,EAAAoyC,IAiCA5I,YAAA5nC,UAAA2qC,MAAA,SAAAoK,EAAAvE,OACA,KAAAuE,IAAmCA,EAAA,UACnC,KAAAvE,IAAiCA,MACjCxzC,KAAAk4C,gBAAAH,GACA/3C,KAAAi2C,eAAAzC,GACAxzC,KAAA81C,gBAAAtC,GACAxzC,KAAAylC,SAAAzlC,KAAA0zC,OAAAF,IAMA5I,YAAA5nC,UAAAozC,aAAA,aAMAxL,YAAA5nC,UAAAy0C,aAAA,SAAAC,GAA+D,UAK/D9M,YAAA5nC,UAAAi0C,qBAAA,WAA8D,MAAAj3C,MAAA2C,UAM9DioC,YAAA5nC,UAAAqiC,iBAAA,SAAA4K,GAA4DjwC,KAAAi4C,UAAAlyC,KAAAkqC,IAK5DrF,YAAA5nC,UAAAujC,gBAAA,WACAvmC,KAAAi4C,aACAj4C,KAAAk1C,qBACAl1C,KAAA+0C,oBAAA,cAOAnK,YAAA5nC,UAAA+iC,yBAAA,SAAAkK,GACAjwC,KAAAk1C,kBAAAnvC,KAAAkqC,IAOArF,YAAA5nC,UAAA+yC,cAAA,SAAAyB,KAKA5M,YAAA5nC,UAAAk1C,gBAAA,SAAAH,GACA/3C,KAAA83C,cAAAC,IACA/3C,KAAA0zC,OAAAqE,EAAA32C,MACA22C,EAAAp1C,SAAA3C,KAAA6D,SAA+CgyC,UAAA,EAAAQ,WAAA,IAC/Cr2C,KAAA4D,QAA6BiyC,UAAA,EAAAQ,WAAA,KAG7Br2C,KAAA0zC,OAAAqE,GAGAnN,aACCD,GAqDDxC,EAAA,SAAA4F,GAOA,QAAA5F,WAAAxkC,EAAAogC,EAAAmB,GACA,GAAAzjC,GAAAssC,EAAAllC,KAAA7I,KAAA+jC,GAAA,KAAAmB,GAAA,OAAAllC,IAKA,OAJAyB,GAAAkC,WACAlC,EAAA61C,mBACA71C,EAAA22C,iBACA32C,EAAA0kC,wBAAsC0P,UAAA,EAAAQ,WAAA,IACtC50C,EAuSA,MAnTAunC,GAAA,EAAAb,UAAA4F,GAuBA5F,UAAAnlC,UAAAq1C,gBAAA,SAAA31C,EAAAsgC,GACA,MAAAhjC,MAAA2D,SAAAjB,GACA1C,KAAA2D,SAAAjB,IACA1C,KAAA2D,SAAAjB,GAAAsgC,EACAA,EAAAyT,UAAAz2C,MACAgjC,EAAAgV,4BAAAh4C,KAAA+0C,qBACA/R,IAQAmF,UAAAnlC,UAAAs1C,WAAA,SAAA51C,EAAAsgC,GACAhjC,KAAAq4C,gBAAA31C,EAAAsgC,GACAhjC,KAAAmmC,yBACAnmC,KAAA+0C,uBAOA5M,UAAAnlC,UAAAu1C,cAAA,SAAA71C,GACA1C,KAAA2D,SAAAjB,IACA1C,KAAA2D,SAAAjB,GAAAs1C,4BAAA,oBACAh4C,MAAA2D,SAAAjB,GACA1C,KAAAmmC,yBACAnmC,KAAA+0C,uBAQA5M,UAAAnlC,UAAAw1C,WAAA,SAAA91C,EAAAsgC,GACAhjC,KAAA2D,SAAAjB,IACA1C,KAAA2D,SAAAjB,GAAAs1C,4BAAA,oBACAh4C,MAAA2D,SAAAjB,GACAsgC,GACAhjC,KAAAq4C,gBAAA31C,EAAAsgC,GACAhjC,KAAAmmC,yBACAnmC,KAAA+0C,uBAUA5M,UAAAnlC,UAAAy1C,SAAA,SAAAC,GACA,MAAA14C,MAAA2D,SAAAiF,eAAA8vC,IAAA14C,KAAA2D,SAAA+0C,GAAAtL,SA2BAjF,UAAAnlC,UAAAyiC,SAAA,SAAArkC,EAAAoyC,GACA,GAAA/xC,GAAAzB,SACA,KAAAwzC,IAAiCA,MACjCxzC,KAAA24C,uBAAAv3C,GACAV,OAAA8iC,KAAApiC,GAAAqF,QAAA,SAAA/D,GACAjB,EAAAm3C,uBAAAl2C,GACAjB,EAAAkC,SAAAjB,GAAA+iC,SAAArkC,EAAAsB,IAAwDmzC,UAAA,EAAAQ,UAAA7C,EAAA6C,cAExDr2C,KAAAmmC,uBAAAqN,IA0BArL,UAAAnlC,UAAAiB,WAAA,SAAA7C,EAAAoyC,GACA,GAAA/xC,GAAAzB,SACA,KAAAwzC,IAAiCA,MACjC9yC,OAAA8iC,KAAApiC,GAAAqF,QAAA,SAAA/D,GACAjB,EAAAkC,SAAAjB,IACAjB,EAAAkC,SAAAjB,GAAAuB,WAAA7C,EAAAsB,IAA8DmzC,UAAA,EAAAQ,UAAA7C,EAAA6C,cAG9Dr2C,KAAAmmC,uBAAAqN,IAqCArL,UAAAnlC,UAAA2qC,MAAA,SAAAvsC,EAAAoyC,OACA,KAAApyC,IAA+BA,UAC/B,KAAAoyC,IAAiCA,MACjCxzC,KAAA+1C,cAAA,SAAA/S,EAAAtgC,GACAsgC,EAAA2K,MAAAvsC,EAAAsB,IAAwCmzC,UAAA,EAAAQ,UAAA7C,EAAA6C,cAExCr2C,KAAAmmC,uBAAAqN,GACAxzC,KAAAk2C,gBAAA1C,GACAxzC,KAAAg2C,eAAAxC,IASArL,UAAAnlC,UAAA61C,YAAA,WACA,MAAA74C,MAAA84C,mBAAsC,SAAAC,EAAA/V,EAAAtgC,GAEtC,MADAq2C,GAAAr2C,GAAAsgC,YAAA4H,GAAA5H,EAAA5hC,MAAA,EAAAy3C,cACAE,KAQA5Q,UAAAnlC,UAAA41C,uBAAA,SAAAl2C,GACA,IAAAhC,OAAA8iC,KAAAxjC,KAAA2D,UAAAnD,OACA,SAAAyL,OAAA,yKAEA,KAAAjM,KAAA2D,SAAAjB,GACA,SAAAuJ,OAAA,uCAAAvJ,EAAA,MAQAylC,UAAAnlC,UAAA+yC,cAAA,SAAAyB,GACA,GAAA/1C,GAAAzB,IACAU,QAAA8iC,KAAAxjC,KAAA2D,UAAA8C,QAAA,SAAAxF,GAAyD,MAAAu2C,GAAA/1C,EAAAkC,SAAA1C,SAMzDknC,UAAAnlC,UAAAo1C,eAAA,WACA,GAAA32C,GAAAzB,IACAA,MAAA+1C,cAAA,SAAA/S,GACAA,EAAAyT,UAAAh1C,GACAuhC,EAAAgV,4BAAAv2C,EAAAszC,wBAOA5M,UAAAnlC,UAAAozC,aAAA,WAAoDp2C,KAAA0zC,OAAA1zC,KAAAg5C,gBAMpD7Q,UAAAnlC,UAAAy0C,aAAA,SAAAC,GACA,GAAAj2C,GAAAzB,KACyBqjC,GAAA,CAIzB,OAHArjC,MAAA+1C,cAAA,SAAA/S,EAAAtgC,GACA2gC,KAAA5hC,EAAAg3C,SAAA/1C,IAAAg1C,EAAA1U,KAEAK,GAMA8E,UAAAnlC,UAAAg2C,aAAA,WACA,GAAAv3C,GAAAzB,IACA,OAAAA,MAAA84C,mBAAsC,SAAAC,EAAA/V,EAAAtgC,GAItC,OAHAsgC,EAAAoK,SAAA3rC,EAAAkB,YACAo2C,EAAAr2C,GAAAsgC,EAAA5hC,OAEA23C,KASA5Q,UAAAnlC,UAAA81C,gBAAA,SAAAG,EAAAhJ,GACA,GAAyB5M,GAAA4V,CAEzB,OADAj5C,MAAA+1C,cAAA,SAAA/S,EAAAtgC,GAAqD2gC,EAAA4M,EAAA5M,EAAAL,EAAAtgC,KACrD2gC,GAMA8E,UAAAnlC,UAAAi0C,qBAAA,WACA,OAAAvE,GAAA,EAAAC,EAAAjyC,OAAA8iC,KAAAxjC,KAAA2D,UAAyD+uC,EAAAC,EAAAnyC,OAAgBkyC,IAAA,CACzE,GAAAgG,GAAA/F,EAAAD,EACA,IAAA1yC,KAAA2D,SAAA+0C,GAAAtL,QACA,SAGA,MAAA1sC,QAAA8iC,KAAAxjC,KAAA2D,UAAAnD,OAAA,GAAAR,KAAA2C,UAOAwlC,UAAAnlC,UAAA21C,uBAAA,SAAAv3C,GACApB,KAAA+1C,cAAA,SAAA/S,EAAAtgC,GACA,OAAAklC,KAAAxmC,EAAAsB,GACA,SAAAuJ,OAAA,oDAAAvJ,EAAA,SAIAylC,WACCwC,GA6CDvC,EAAA,SAAA2F,GAOA,QAAA3F,WAAAzkC,EAAAogC,EAAAmB,GACA,GAAAzjC,GAAAssC,EAAAllC,KAAA7I,KAAA+jC,GAAA,KAAAmB,GAAA,OAAAllC,IAKA,OAJAyB,GAAAkC,WACAlC,EAAA61C,mBACA71C,EAAA22C,iBACA32C,EAAA0kC,wBAAsC0P,UAAA,EAAAQ,WAAA,IACtC50C,EA8QA,MA1RAunC,GAAA,EAAAZ,UAAA2F,GAmBA3F,UAAAplC,UAAAqlC,GAAA,SAAAr9B,GAA+C,MAAAhL,MAAA2D,SAAAqH,IAM/Co9B,UAAAplC,UAAA+C,KAAA,SAAAi9B,GACAhjC,KAAA2D,SAAAoC,KAAAi9B,GACAhjC,KAAAk5C,iBAAAlW,GACAhjC,KAAAmmC,yBACAnmC,KAAA+0C,uBAQA3M,UAAAplC,UAAAm2C,OAAA,SAAAnuC,EAAAg4B,GACAhjC,KAAA2D,SAAAmG,OAAAkB,EAAA,EAAAg4B,GACAhjC,KAAAk5C,iBAAAlW,GACAhjC,KAAAmmC,yBACAnmC,KAAA+0C,uBAOA3M,UAAAplC,UAAAo2C,SAAA,SAAApuC,GACAhL,KAAA2D,SAAAqH,IACAhL,KAAA2D,SAAAqH,GAAAgtC,4BAAA,cACAh4C,KAAA2D,SAAAmG,OAAAkB,EAAA,GACAhL,KAAAmmC,yBACAnmC,KAAA+0C,uBAQA3M,UAAAplC,UAAAw1C,WAAA,SAAAxtC,EAAAg4B,GACAhjC,KAAA2D,SAAAqH,IACAhL,KAAA2D,SAAAqH,GAAAgtC,4BAAA,cACAh4C,KAAA2D,SAAAmG,OAAAkB,EAAA,GACAg4B,IACAhjC,KAAA2D,SAAAmG,OAAAkB,EAAA,EAAAg4B,GACAhjC,KAAAk5C,iBAAAlW,IAEAhjC,KAAAmmC,yBACAnmC,KAAA+0C,uBAEAr0C,OAAAK,eAAAqnC,UAAAplC,UAAA,UAKAgB,IAAA,WAA0B,MAAAhE,MAAA2D,SAAAnD,QAC1B8I,YAAA,EACAC,cAAA,IA0BA6+B,UAAAplC,UAAAyiC,SAAA,SAAArkC,EAAAoyC,GACA,GAAA/xC,GAAAzB,SACA,KAAAwzC,IAAiCA,MACjCxzC,KAAA24C,uBAAAv3C,GACAA,EAAAqF,QAAA,SAAA6+B,EAAAt6B,GACAvJ,EAAAm3C,uBAAA5tC,GACAvJ,EAAA4mC,GAAAr9B,GAAAy6B,SAAAH,GAAgDuQ,UAAA,EAAAQ,UAAA7C,EAAA6C,cAEhDr2C,KAAAmmC,uBAAAqN,IAyBApL,UAAAplC,UAAAiB,WAAA,SAAA7C,EAAAoyC,GACA,GAAA/xC,GAAAzB,SACA,KAAAwzC,IAAiCA,MACjCpyC,EAAAqF,QAAA,SAAA6+B,EAAAt6B,GACAvJ,EAAA4mC,GAAAr9B,IACAvJ,EAAA4mC,GAAAr9B,GAAA/G,WAAAqhC,GAAsDuQ,UAAA,EAAAQ,UAAA7C,EAAA6C,cAGtDr2C,KAAAmmC,uBAAAqN,IAoCApL,UAAAplC,UAAA2qC,MAAA,SAAAvsC,EAAAoyC,OACA,KAAApyC,IAA+BA,UAC/B,KAAAoyC,IAAiCA,MACjCxzC,KAAA+1C,cAAA,SAAA/S,EAAAh4B,GACAg4B,EAAA2K,MAAAvsC,EAAA4J,IAAyC6qC,UAAA,EAAAQ,UAAA7C,EAAA6C,cAEzCr2C,KAAAmmC,uBAAAqN,GACAxzC,KAAAk2C,gBAAA1C,GACAxzC,KAAAg2C,eAAAxC,IASApL,UAAAplC,UAAA61C,YAAA,WACA,MAAA74C,MAAA2D,SAAAyB,IAAA,SAAA49B,GACA,MAAAA,aAAA4H,GAAA5H,EAAA5hC,MAAA,EAAAy3C,iBAQAzQ,UAAAplC,UAAA41C,uBAAA,SAAA5tC,GACA,IAAAhL,KAAA2D,SAAAnD,OACA,SAAAyL,OAAA,yKAEA,KAAAjM,KAAAqoC,GAAAr9B,GACA,SAAAiB,OAAA,qCAAAjB,IAQAo9B,UAAAplC,UAAA+yC,cAAA,SAAAyB,GACAx3C,KAAA2D,SAAA8C,QAAA,SAAAu8B,EAAAh4B,GAAyDwsC,EAAAxU,EAAAh4B,MAMzDo9B,UAAAplC,UAAAozC,aAAA,WACA,GAAA30C,GAAAzB,IACAA,MAAA0zC,OAAA1zC,KAAA2D,SAAAuD,OAAA,SAAA87B,GAA+D,MAAAA,GAAAoK,SAAA3rC,EAAAkB,WAC/DyC,IAAA,SAAA49B,GAAqC,MAAAA,GAAA5hC,SAOrCgnC,UAAAplC,UAAAy0C,aAAA,SAAAC,GACA,MAAA13C,MAAA2D,SAAA4jC,KAAA,SAAAvE,GAAsD,MAAAA,GAAAoK,SAAAsK,EAAA1U,MAMtDoF,UAAAplC,UAAAo1C,eAAA,WACA,GAAA32C,GAAAzB,IACAA,MAAA+1C,cAAA,SAAA/S,GAA+C,MAAAvhC,GAAAy3C,iBAAAlW,MAO/CoF,UAAAplC,UAAA21C,uBAAA,SAAAv3C,GACApB,KAAA+1C,cAAA,SAAA/S,EAAAliC,GACA,OAAA8mC,KAAAxmC,EAAAN,GACA,SAAAmL,OAAA,kDAAAnL,EAAA,QAQAsnC,UAAAplC,UAAAi0C,qBAAA,WACA,OAAAvE,GAAA,EAAAC,EAAA3yC,KAAA2D,SAA4C+uC,EAAAC,EAAAnyC,OAAgBkyC,IAAA,CAE5D,GADAC,EAAAD,GACAtF,QACA,SAEA,MAAAptC,MAAA2D,SAAAnD,OAAA,GAAAR,KAAA2C,UAMAylC,UAAAplC,UAAAk2C,iBAAA,SAAAlW,GACAA,EAAAyT,UAAAz2C,MACAgjC,EAAAgV,4BAAAh4C,KAAA+0C,sBAEA3M,WACCuC,GAQDc,GACAl/B,QAAA+8B,EACAoG,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAA+G,MAEzCyP,EAAAC,QAAAC,QAAA,MAgCA3P,EAAA,SAAAmE,GAMA,QAAAnE,QAAA3G,EAAAuW,GACA,GAAA/3C,GAAAssC,EAAAllC,KAAA7I,WAKA,OAJAyB,GAAAg4C,YAAA,EACAh4C,EAAAi4C,SAAA,GAAA7W,GAAA,aACAphC,EAAAk4C,KACA,GAAAxR,MAA4BtB,kBAAA5D,GAAA6D,uBAAA0S,IAC5B/3C,EAyJA,MApKAunC,GAAA,EAAAY,OAAAmE,GAaArtC,OAAAK,eAAA6oC,OAAA5mC,UAAA,aAIAgB,IAAA,WAA0B,MAAAhE,MAAAy5C,YAC1BnwC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA6oC,OAAA5mC,UAAA,iBAIAgB,IAAA,WAA0B,MAAAhE,OAC1BsJ,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA6oC,OAAA5mC,UAAA,WAIAgB,IAAA,WAA0B,MAAAhE,MAAA25C,MAC1BrwC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA6oC,OAAA5mC,UAAA,QAIAgB,IAAA,WAA0B,UAC1BsF,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA6oC,OAAA5mC,UAAA,YAIAgB,IAAA,WAA0B,MAAAhE,MAAA25C,KAAAh2C,UAC1B2F,YAAA,EACAC,cAAA,IAMAqgC,OAAA5mC,UAAAs1C,WAAA,SAAAzT,GACA,GAAApjC,GAAAzB,IACAq5C,GAAAO,KAAA,WACA,GAA6BC,GAAAp4C,EAAAq4C,eAAAjV,EAAA+B,KAC7B/B,GAAA2M,SAAAqI,EAAAxB,gBAAAxT,EAAAniC,KAAAmiC,EAAA7B,SACA4B,aAAAC,EAAA7B,QAAA6B,GACAA,EAAA7B,QAAAmD,wBAAgDkQ,WAAA,OAOhDzM,OAAA5mC,UAAA+2C,WAAA,SAAAlV,GAAkD,MAAA7kC,MAAA25C,KAAA31C,IAAA6gC,EAAA+B,OAKlDgD,OAAA5mC,UAAAu1C,cAAA,SAAA1T,GACA,GAAApjC,GAAAzB,IACAq5C,GAAAO,KAAA,WACA,GAA6BC,GAAAp4C,EAAAq4C,eAAAjV,EAAA+B,KAC7BiT,IACAA,EAAAtB,cAAA1T,EAAAniC,SAQAknC,OAAA5mC,UAAA4wC,aAAA,SAAA/O,GACA,GAAApjC,GAAAzB,IACAq5C,GAAAO,KAAA,WACA,GAA6BC,GAAAp4C,EAAAq4C,eAAAjV,EAAA+B,MACAvjC,EAAA,GAAA8kC,MAC7B3B,oBAAAnjC,EAAAwhC,GACAgV,EAAAxB,gBAAAxT,EAAAniC,KAAAW,GACAA,EAAA8iC,wBAA0CkQ,WAAA,OAO1CzM,OAAA5mC,UAAA8wC,gBAAA,SAAAjP,GACA,GAAApjC,GAAAzB,IACAq5C,GAAAO,KAAA,WACA,GAA6BC,GAAAp4C,EAAAq4C,eAAAjV,EAAA+B,KAC7BiT,IACAA,EAAAtB,cAAA1T,EAAAniC,SAQAknC,OAAA5mC,UAAA+wC,aAAA,SAAAlP,GAAoD,MAAA7kC,MAAA25C,KAAA31C,IAAA6gC,EAAA+B,OAMpDgD,OAAA5mC,UAAAg3C,YAAA,SAAAnV,EAAAzjC,GACA,GAAAK,GAAAzB,IACAq5C,GAAAO,KAAA,WAC6Bn4C,EAAAk4C,KAAA31C,IAAwC6gC,EAAA,MACrEY,SAAArkC,MAOAwoC,OAAA5mC,UAAAyiC,SAAA,SAAArkC,GAAkDpB,KAAAgjC,QAAAyC,SAAArkC,IAKlDwoC,OAAA5mC,UAAAi3C,SAAA,SAAAn0C,GAGA,MAFA9F,MAAAy5C,YAAA,EACAz5C,KAAA05C,SAAApD,KAAAxwC,IACA,GAKA8jC,OAAA5mC,UAAAk3C,QAAA,WAA4Cl6C,KAAAm6C,aAK5CvQ,OAAA5mC,UAAAm3C,UAAA,SAAA/4C,OACA,KAAAA,IAA+BA,MAAAwmC,IAC/B5nC,KAAA25C,KAAAhM,MAAAvsC,GACApB,KAAAy5C,YAAA,GAOA7P,OAAA5mC,UAAA82C,eAAA,SAAAlT,GAEA,MADAA,GAAAwT,MACAxT,EAAApmC,OAAAR,KAAA25C,KAAA31C,IAAA4iC,GAAA5mC,KAAA25C,MAEA/P,QACCN,EACDM,GAAA3pC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,wDACAwK,WAAAm/B,GACA2E,MAAuBiK,WAAA,mBAAAC,UAAA,aACvBC,SAAA,YACAC,SAAA,aAMA5Q,EAAA2G,eAAA,WAAqC,QAChCL,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAArF,OAChEoF,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAAtF;;;;;;;AASrE,GAAA4P,IACA1I,gBAAA,qMACA2I,cAAA,wRACAC,cAAA,iYACAC,aAAA,6IACAC,qBAAA,sLASAC,EAAA,WACA,QAAAA,yBA0BA,MArBAA,sBAAAC,qBAAA,WACA,SAAA9uC,OAAA,8LAAAwuC,EAAA1I,gBAAA,mJAAA0I,EAAAI,uBAKAC,qBAAAE,uBAAA,WACA,SAAA/uC,OAAA,4MAAAwuC,EAAAC,cAAA,qGAAAD,EAAAG,eAKAE,qBAAAG,qBAAA,WACA,SAAAhvC,OAAA,uUAKA6uC,qBAAAI,0BAAA,WACA,SAAAjvC,OAAA,qKAAAwuC,EAAAC,cAAA,uHAAAD,EAAAG,eAEAE,wBASAnP,IACAp/B,QAAA+8B,EACAoG,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAAiH,OA2BzCA,GAAA,SAAAiE,GAOA,QAAAjE,cAAApF,EAAAzB,EAAAuW,GACA,GAAA/3C,GAAAssC,EAAAllC,KAAA7I,WAIA,OAHAyB,GAAAwvC,QAAAvM,EACAjjC,EAAAuyC,YAAA/Q,EACAxhC,EAAAwyC,iBAAAuF,EACA/3C,EAWA,MAtBAunC,GAAA,EAAAc,aAAAiE,GAiBAjE,aAAA9mC,UAAA2wC,iBAAA,WACA3zC,KAAAixC,kBAAAnH,eAAA9pC,KAAAixC,kBAAArH,IACAkR,EAAAI,6BAGApR,cACCV,EACDU,IAAA7pC,aACKiwC,KAAArN,EAAA,UAAAsN,OAA0BruC,SAAA,iBAAAwK,WAAAq/B,IAAA6O,SAAA,mBAK/B1Q,GAAAyG,eAAA,WAA2C,QACtCL,KAAA5G,EAAArpC,aAAuCiwC,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,aACvDqN,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAArF,OAChEoF,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAAtF,QAErEf,GAAAmI,gBACAvvC,OAAcwtC,KAAArN,EAAA,MAAAsN,MAAA;;;;;;;AASd,GAAAzE,KACAn/B,QAAAk9B,EACAiG,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAAgH,OAmBzCsR,GAAA7B,QAAAC,QAAA,MA2DA1P,GAAA,SAAAkE,GAQA,QAAAlE,SAAAnF,EAAAzB,EAAAuW,EAAA9R,GACA,GAAAjmC,GAAAssC,EAAAllC,KAAA7I,WAcA,OAVAyB,GAAA+vC,SAAA,GAAA5G,GAIAnpC,EAAA25C,aAAA,EACA35C,EAAA45C,OAAA,GAAAxY,GAAA,aACAphC,EAAAwvC,QAAAvM,EACAjjC,EAAAwkC,eAAAhD,MACAxhC,EAAA2kC,oBAAAoT,MACA/3C,EAAAsjC,cAAA0C,oBAAAhmC,EAAAimC,GACAjmC,EAuJA,MA7KAunC,GAAA,EAAAa,QAAAkE,GA4BAlE,QAAA7mC,UAAAs4C,YAAA,SAAAtU,GACAhnC,KAAAu7C,kBACAv7C,KAAAo7C,aACAp7C,KAAAw7C,gBACA,cAAAxU,IACAhnC,KAAAy7C,gBAAAzU,GAEAD,kBAAAC,EAAAhnC,KAAAinC,aACAjnC,KAAAo2C,aAAAp2C,KAAA07C,OACA17C,KAAAinC,UAAAjnC,KAAA07C,QAMA7R,QAAA7mC,UAAA4uC,YAAA,WAAiD5xC,KAAA6zC,eAAA7zC,KAAA6zC,cAAA0E,cAAAv4C,OACjDU,OAAAK,eAAA8oC,QAAA7mC,UAAA,WAIAgB,IAAA,WAA0B,MAAAhE,MAAAwxC,UAC1BloC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA8oC,QAAA7mC,UAAA,QAIAgB,IAAA,WACA,MAAAhE,MAAAixC,QAAAxM,YAAAzkC,KAAA0C,KAAA1C,KAAAixC,UAAAjxC,KAAA0C,OAEA4G,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA8oC,QAAA7mC,UAAA,iBAIAgB,IAAA,WAA0B,MAAAhE,MAAAixC,QAAAjxC,KAAAixC,QAAA4C,cAAA,MAC1BvqC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA8oC,QAAA7mC,UAAA,aAIAgB,IAAA,WAA0B,MAAA6iC,mBAAA7mC,KAAAimC,iBAC1B38B,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA8oC,QAAA7mC,UAAA,kBAIAgB,IAAA,WACA,MAAA8iC,wBAAA9mC,KAAAomC,sBAEA98B,YAAA,EACAC,cAAA,IAMAsgC,QAAA7mC,UAAAuiC,kBAAA,SAAAD,GACAtlC,KAAAinC,UAAA3B,EACAtlC,KAAAq7C,OAAA/E,KAAAhR,IAKAuE,QAAA7mC,UAAAw4C,cAAA,WACAx7C,KAAA27C,gBAAA37C,KAAA47C,mBACA57C,KAAA6zC,cAAAyE,WAAAt4C,MACAA,KAAAo7C,aAAA,GAKAvR,QAAA7mC,UAAA24C,cAAA,WACA,OAAA37C,KAAAixC,YAAAjxC,KAAAwzC,UAAAxzC,KAAAwzC,QAAAqI,aAKAhS,QAAA7mC,UAAA44C,iBAAA,WACAhX,aAAA5kC,KAAAwxC,SAAAxxC,MACAA,KAAAwxC,SAAArL,wBAA8CkQ,WAAA,KAK9CxM,QAAA7mC,UAAAu4C,gBAAA,WACAv7C,KAAA27C,iBACA37C,KAAA2zC,mBAEA3zC,KAAA2xC,cAKA9H,QAAA7mC,UAAA2wC,iBAAA,aACA3zC,KAAAixC,kBAAAnH,MACA9pC,KAAAixC,kBAAA7H,GACA0R,EAAAE,yBAEAh7C,KAAAixC,kBAAAnH,KAAA9pC,KAAAixC,kBAAArH,IACAkR,EAAAC,wBAMAlR,QAAA7mC,UAAA2uC,WAAA,WACA3xC,KAAAwzC,SAAAxzC,KAAAwzC,QAAA9wC,OACA1C,KAAA0C,KAAA1C,KAAAwzC,QAAA9wC,MACA1C,KAAA27C,iBAAA37C,KAAA0C,MACAo4C,EAAAG,wBAOApR,QAAA7mC,UAAAozC,aAAA,SAAAh1C,GACA,GAAAK,GAAAzB,IACAm7C,IAAAvB,KAAA,WAA4Cn4C,EAAAuhC,QAAAyC,SAAArkC,GAAgC+2C,uBAAA,OAM5EtO,QAAA7mC,UAAAy4C,gBAAA,SAAAzU,GACA,GAAAvlC,GAAAzB,KACyB87C,EAAA9U,EAAA,WAAAI,aACApB,EAAA,KAAA8V,MAAA,UAAAA,CACzBX,IAAAvB,KAAA,WACA5T,IAAAvkC,EAAAuhC,QAAArgC,SACAlB,EAAAuhC,QAAAn/B,WAEAmiC,GAAAvkC,EAAAuhC,QAAArgC,UACAlB,EAAAuhC,QAAAp/B,YAIAimC,SACCJ,EACDI,IAAA5pC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,sDACAwK,WAAAo/B,IACA8O,SAAA,cAMA3Q,GAAA0G,eAAA,WAAsC,QACjCL,KAAA5G,EAAArpC,aAAuCiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,SAC3DqN,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAArF,OAChEoF,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAAtF,OAChEqF,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAA5G,QAErEM,GAAAoI,gBACAvvC,OAAcwtC,KAAArN,EAAA,QACdmD,aAAoBkK,KAAArN,EAAA,MAAAsN,MAAA,cACpBuL,QAAexL,KAAArN,EAAA,MAAAsN,MAAA,aACfqD,UAAiBtD,KAAArN,EAAA,MAAAsN,MAAA,oBACjBkL,SAAgBnL,KAAArN,EAAA,OAAAsN,MAAA;;;;;;;AAShB,GAAA4L,IAAA,WACA,QAAAA,mBAsCA,MAjCAA,gBAAAC,uBAAA,WACA,SAAA/vC,OAAA,+NAAAwuC,EAAA1I,kBAKAgK,eAAAE,sBAAA,WACA,SAAAhwC,OAAA,qRAAAwuC,EAAAC,cAAA,sGAAAD,EAAAG,eAKAmB,eAAAG,qBAAA,WACA,SAAAjwC,OAAA,4FAAAwuC,EAAA1I,kBAKAgK,eAAAI,qBAAA,WACA,SAAAlwC,OAAA,4NAAAwuC,EAAAC,gBAKAqB,eAAAK,qBAAA,WACA,SAAAnwC,OAAA,iOAAAwuC,EAAAE,gBAKAoB,eAAAM,oBAAA,WACAh4C,QAAAi4C,KAAA,qiBAEAP,kBASA5P,IACA5/B,QAAAk9B,EACAiG,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAAmH,OA4CzCA,GAAA,SAAA+D,GAOA,QAAA/D,sBAAA/G,EAAAuW,EAAA9R,GACA,GAAAjmC,GAAAssC,EAAAllC,KAAA7I,WAKA,OAJAyB,GAAA45C,OAAA,GAAAxY,GAAA,aACAphC,EAAAwkC,eAAAhD,MACAxhC,EAAA2kC,oBAAAoT,MACA/3C,EAAAsjC,cAAA0C,oBAAAhmC,EAAAimC,GACAjmC,EA6EA,MAzFAunC,GAAA,EAAAgB,qBAAA+D,GAcArtC,OAAAK,eAAAipC,qBAAAhnC,UAAA,cAKAsvC,IAAA,SAAAtM,GAAoC+V,GAAAM,uBACpC/yC,YAAA,EACAC,cAAA,IAMAygC,qBAAAhnC,UAAAs4C,YAAA,SAAAtU,GACAhnC,KAAAu8C,kBAAAvV,KACApC,aAAA5kC,KAAA25C,KAAA35C,MACAA,KAAAgjC,QAAArgC,UAAA3C,KAAA,cAAA8lC,kBACA9lC,KAAA,mCAEAA,KAAA25C,KAAAxT,wBAA8CkQ,WAAA,KAE9CtP,kBAAAC,EAAAhnC,KAAAinC,aACAjnC,KAAA25C,KAAAlU,SAAAzlC,KAAA07C,OACA17C,KAAAinC,UAAAjnC,KAAA07C,QAGAh7C,OAAAK,eAAAipC,qBAAAhnC,UAAA,QAIAgB,IAAA,WAA0B,UAC1BsF,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAipC,qBAAAhnC,UAAA,aAIAgB,IAAA,WAA0B,MAAA6iC,mBAAA7mC,KAAAimC,iBAC1B38B,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAipC,qBAAAhnC,UAAA,kBAIAgB,IAAA,WACA,MAAA8iC,wBAAA9mC,KAAAomC,sBAEA98B,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAipC,qBAAAhnC,UAAA,WAIAgB,IAAA,WAA0B,MAAAhE,MAAA25C,MAC1BrwC,YAAA,EACAC,cAAA,IAMAygC,qBAAAhnC,UAAAuiC,kBAAA,SAAAD,GACAtlC,KAAAinC,UAAA3B,EACAtlC,KAAAq7C,OAAA/E,KAAAhR,IAMA0E,qBAAAhnC,UAAAu5C,kBAAA,SAAAvV,GACA,MAAAA,GAAAp+B,eAAA,SAEAohC,sBACCP,EACDO,IAAA/pC,aACKiwC,KAAArN,EAAA,UAAAsN,OAA0BruC,SAAA,gBAAAwK,WAAA6/B,IAAAqO,SAAA,aAK/BxQ,GAAAuG,eAAA,WAAmD,QAC9CL,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAArF,OAChEoF,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAAtF,OAChEqF,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAA5G,QAErES,GAAAiI,gBACA0H,OAAczJ,KAAArN,EAAA,MAAAsN,MAAA,iBACduL,QAAexL,KAAArN,EAAA,MAAAsN,MAAA,aACfkL,SAAgBnL,KAAArN,EAAA,OAAAsN,MAAA,mBAChBnK,aAAoBkK,KAAArN,EAAA,MAAAsN,MAAA;;;;;;;AASpB,GAAA9D,KACA9/B,QAAA+8B,EACAoG,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAAiG,OAqCzCA,GAAA,SAAAiF,GAMA,QAAAjF,oBAAAkL,EAAAC,GACA,GAAAxyC,GAAAssC,EAAAllC,KAAA7I,WAOA,OANAyB,GAAAuyC,cACAvyC,EAAAwyC,mBACAxyC,EAAAg4C,YAAA,EACAh4C,EAAA+6C,cACA/6C,EAAAk4C,KAAA,KACAl4C,EAAAi4C,SAAA,GAAA7W,GAAA,aACAphC,EAoLA,MAjMAunC,GAAA,EAAAF,mBAAAiF,GAmBAjF,mBAAA9lC,UAAAs4C,YAAA,SAAAtU,GACAhnC,KAAAy8C,oBACAzV,EAAAp+B,eAAA,UACA5I,KAAA08C,oBACA18C,KAAA28C,kBACA38C,KAAA48C,yBAGAl8C,OAAAK,eAAA+nC,mBAAA9lC,UAAA,aAIAgB,IAAA,WAA0B,MAAAhE,MAAAy5C,YAC1BnwC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA+nC,mBAAA9lC,UAAA,iBAIAgB,IAAA,WAA0B,MAAAhE,OAC1BsJ,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA+nC,mBAAA9lC,UAAA,WAIAgB,IAAA,WAA0B,MAAAhE,MAAA25C,MAC1BrwC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAA+nC,mBAAA9lC,UAAA,QAIAgB,IAAA,WAA0B,UAC1BsF,YAAA,EACAC,cAAA,IAMAu/B,mBAAA9lC,UAAAs1C,WAAA,SAAAzT,GACA,GAAyBmS,GAAAh3C,KAAA25C,KAAA31C,IAAA6gC,EAAA+B,KAIzB,OAHAhC,cAAAoS,EAAAnS,GACAmS,EAAA7Q,wBAAqCkQ,WAAA,IACrCr2C,KAAAw8C,WAAAz2C,KAAA8+B,GACAmS,GAMAlO,mBAAA9lC,UAAA+2C,WAAA,SAAAlV,GAA8D,MAAA7kC,MAAA25C,KAAA31C,IAAA6gC,EAAA+B,OAK9DkC,mBAAA9lC,UAAAu1C,cAAA,SAAA1T,GAAiE4D,OAAAzoC,KAAAw8C,WAAA3X,IAKjEiE,mBAAA9lC,UAAA4wC,aAAA,SAAA/O,GACA,GAAyBmS,GAAAh3C,KAAA25C,KAAA31C,IAAA6gC,EAAA+B,KACzBJ,oBAAAwQ,EAAAnS,GACAmS,EAAA7Q,wBAAqCkQ,WAAA,KAMrCvN,mBAAA9lC,UAAA8wC,gBAAA,SAAAjP,KAKAiE,mBAAA9lC,UAAA+wC,aAAA,SAAAlP,GAAgE,MAAA7kC,MAAA25C,KAAA31C,IAAA6gC,EAAA+B,OAKhEkC,mBAAA9lC,UAAA65C,aAAA,SAAAhY,GACA,GAAyBmS,GAAAh3C,KAAA25C,KAAA31C,IAAA6gC,EAAA+B,KACzBJ,oBAAAwQ,EAAAnS,GACAmS,EAAA7Q,wBAAqCkQ,WAAA,KAMrCvN,mBAAA9lC,UAAA85C,gBAAA,SAAAjY,KAKAiE,mBAAA9lC,UAAA+5C,aAAA,SAAAlY,GAAgE,MAAA7kC,MAAA25C,KAAA31C,IAAA6gC,EAAA+B,OAMhEkC,mBAAA9lC,UAAAg3C,YAAA,SAAAnV,EAAAzjC,GACyBpB,KAAA25C,KAAA31C,IAAA6gC,EAAA+B,MACzBnB,SAAArkC,IAMA0nC,mBAAA9lC,UAAAi3C,SAAA,SAAAn0C,GAGA,MAFA9F,MAAAy5C,YAAA,EACAz5C,KAAA05C,SAAApD,KAAAxwC,IACA,GAKAgjC,mBAAA9lC,UAAAk3C,QAAA,WAAwDl6C,KAAAm6C,aAKxDrR,mBAAA9lC,UAAAm3C,UAAA,SAAA/4C,OACA,KAAAA,IAA+BA,MAAAwmC,IAC/B5nC,KAAA25C,KAAAhM,MAAAvsC,GACApB,KAAAy5C,YAAA,GAMA3Q,mBAAA9lC,UAAA25C,gBAAA,WACA,GAAAl7C,GAAAzB,IACAA,MAAAw8C,WAAA/1C,QAAA,SAAAo+B,GACA,GAA6BmY,GAAAv7C,EAAAk4C,KAAA31C,IAAA6gC,EAAA+B,KAC7B/B,GAAA2M,WAAAwL,IACA3W,eAAAxB,EAAA2M,SAAA3M,GACAmY,GACApY,aAAAoY,EAAAnY,GACAA,EAAA2M,SAAAwL,KAGAh9C,KAAA25C,KAAA5C,qBAAuCV,WAAA,KAKvCvN,mBAAA9lC,UAAA45C,qBAAA,WACA,GAAAn7C,GAAAzB,IACAA,MAAA25C,KAAA3B,4BAAA,WAA2D,MAAAv2C,GAAAk7C,oBAC3D38C,KAAAi9C,UACAj9C,KAAAi9C,SAAAjF,4BAAA,cACAh4C,KAAAi9C,SAAAj9C,KAAA25C,MAKA7Q,mBAAA9lC,UAAA05C,kBAAA,WACA,GAAyBQ,GAAArW,kBAAA7mC,KAAAg0C,YACzBh0C,MAAA25C,KAAA5V,UAAAiB,EAAAC,SAA+DjlC,KAAA25C,KAAA,UAA0C,GACzG,IAAyBwD,GAAArW,uBAAA9mC,KAAAi0C,iBACzBj0C,MAAA25C,KAAAzU,eAAAF,EAAAG,cAAyEnlC,KAAA25C,KAAA,eAA+C,KAKxH7Q,mBAAA9lC,UAAAy5C,kBAAA,WACAz8C,KAAA25C,MACAoC,GAAAG,wBAGApT,oBACCQ,EACDR,IAAA7oC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,cACAwK,WAAA+/B,IACA+D,MAAuBiK,WAAA,mBAAAC,UAAA,aACvBE,SAAA,aAMA1R,GAAAyH,eAAA,WAAiD,QAC5CL,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAArF,OAChEoF,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAAtF,QAErE/B,GAAAmJ,gBACA0H,OAAczJ,KAAArN,EAAA,MAAAsN,MAAA,eACduJ,WAAkBxJ,KAAArN,EAAA;;;;;;;AAqBlB,GAAA0J,KACAhgC,QAAA+8B,EACAoG,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAAgG,OA8CzCA,GAAA,SAAAkF,GAOA,QAAAlF,eAAAnE,EAAAzB,EAAAuW,GACA,GAAA/3C,GAAAssC,EAAAllC,KAAA7I,WAIA,OAHAyB,GAAAwvC,QAAAvM,EACAjjC,EAAAuyC,YAAA/Q,EACAxhC,EAAAwyC,iBAAAuF,EACA/3C,EAWA,MAtBAunC,GAAA,EAAAH,cAAAkF,GAiBAlF,cAAA7lC,UAAA2wC,iBAAA,WACA/K,kBAAA5oC,KAAAixC,UACA8K,GAAAI,wBAGAtT,eACCO,EACDP,IAAA5oC,aACKiwC,KAAArN,EAAA,UAAAsN,OAA0BruC,SAAA,kBAAAwK,WAAAigC,QAK/B1D,GAAA0H,eAAA,WAA4C,QACvCL,KAAA5G,EAAArpC,aAAuCiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,aAC3EqN,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAArF,OAChEoF,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAAtF,QAErEhC,GAAAoJ,gBACAvvC,OAAcwtC,KAAArN,EAAA,MAAAsN,MAAA,mBAEd,IAAA7D,KACA//B,QAAA+8B,EACAoG,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAAkG,OAiDzCA,GAAA,SAAAgF,GAOA,QAAAhF,eAAArE,EAAAzB,EAAAuW,GACA,GAAA/3C,GAAAssC,EAAAllC,KAAA7I,WAIA,OAHAyB,GAAAwvC,QAAAvM,EACAjjC,EAAAuyC,YAAA/Q,EACAxhC,EAAAwyC,iBAAAuF,EACA/3C,EAqEA,MAhFAunC,GAAA,EAAAD,cAAAgF,GAgBAhF,cAAA/lC,UAAAC,SAAA,WACAjD,KAAA2zC,mBACA3zC,KAAA,cAAA68C,aAAA78C,OAKA+oC,cAAA/lC,UAAA4uC,YAAA,WACA5xC,KAAA6zC,eACA7zC,KAAA6zC,cAAAiJ,gBAAA98C,OAGAU,OAAAK,eAAAgoC,cAAA/lC,UAAA,WAIAgB,IAAA,WAA0B,MAAAhE,MAAA,cAAA+8C,aAAA/8C,OAC1BsJ,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAgoC,cAAA/lC,UAAA,iBAIAgB,IAAA,WACA,MAAAhE,MAAAixC,QAAAjxC,KAAAixC,QAAA,oBAEA3nC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAgoC,cAAA/lC,UAAA,QAIAgB,IAAA,WAA0B,MAAAygC,aAAAzkC,KAAA0C,KAAA1C,KAAAixC,UAC1B3nC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAgoC,cAAA/lC,UAAA,aAIAgB,IAAA,WAA0B,MAAA6iC,mBAAA7mC,KAAAg0C,cAC1B1qC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAgoC,cAAA/lC,UAAA,kBAIAgB,IAAA,WACA,MAAA8iC,wBAAA9mC,KAAAi0C,mBAEA3qC,YAAA,EACAC,cAAA,IAKAw/B,cAAA/lC,UAAA2wC,iBAAA,WACA/K,kBAAA5oC,KAAAixC,UACA8K,GAAAK,wBAGArT,eACCO,EACDP,IAAA9oC,aACKiwC,KAAArN,EAAA,UAAAsN,OAA0BruC,SAAA,kBAAAwK,WAAAggC,QAK/BvD,GAAAwH,eAAA,WAA4C,QACvCL,KAAA5G,EAAArpC,aAAuCiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,aAC3EqN,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAArF,OAChEoF,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAAtF,QAErE9B,GAAAkJ,gBACAvvC,OAAcwtC,KAAArN,EAAA,MAAAsN,MAAA;;;;;;;AAiBd,GAAA/D,KACA7/B,QAAAk9B,EACAiG,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAAoH,OAqDzCA,GAAA,SAAA8D,GAQA,QAAA9D,iBAAAvF,EAAAzB,EAAAuW,EAAA9R,GACA,GAAAjmC,GAAAssC,EAAAllC,KAAA7I,WAOA,OANAyB,GAAA27C,QAAA,EACA37C,EAAA45C,OAAA,GAAAxY,GAAA,aACAphC,EAAAwvC,QAAAvM,EACAjjC,EAAAwkC,eAAAhD,MACAxhC,EAAA2kC,oBAAAoT,MACA/3C,EAAAsjC,cAAA0C,oBAAAhmC,EAAAimC,GACAjmC,EAyGA,MAxHAunC,GAAA,EAAAiB,gBAAA8D,GAiBArtC,OAAAK,eAAAkpC,gBAAAjnC,UAAA,cAKAsvC,IAAA,SAAAtM,GAAoC+V,GAAAM,uBACpC/yC,YAAA,EACAC,cAAA,IAMA0gC,gBAAAjnC,UAAAs4C,YAAA,SAAAtU,GACAhnC,KAAAo9C,QACAp9C,KAAAw7C,gBACAzU,kBAAAC,EAAAhnC,KAAAinC,aACAjnC,KAAAinC,UAAAjnC,KAAA07C,MACA17C,KAAA6zC,cAAAmG,YAAAh6C,UAAA07C,SAMAzR,gBAAAjnC,UAAA4uC,YAAA,WACA5xC,KAAA6zC,eACA7zC,KAAA6zC,cAAA0E,cAAAv4C,OAOAiqC,gBAAAjnC,UAAAuiC,kBAAA,SAAAD,GACAtlC,KAAAinC,UAAA3B,EACAtlC,KAAAq7C,OAAA/E,KAAAhR,IAEA5kC,OAAAK,eAAAkpC,gBAAAjnC,UAAA,QAIAgB,IAAA,WAA0B,MAAAygC,aAAAzkC,KAAA0C,KAA4C1C,KAAA,UACtEsJ,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAkpC,gBAAAjnC,UAAA,iBAIAgB,IAAA,WAA0B,MAAAhE,MAAAixC,QAAAjxC,KAAAixC,QAAA4C,cAAA,MAC1BvqC,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAkpC,gBAAAjnC,UAAA,aAIAgB,IAAA,WAA0B,MAAA6iC,mBAAA7mC,KAAAimC,iBAC1B38B,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAkpC,gBAAAjnC,UAAA,kBAIAgB,IAAA,WACA,MAAA8iC,wBAAA9mC,KAAAomC,sBAEA98B,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAkpC,gBAAAjnC,UAAA,WAIAgB,IAAA,WAA0B,MAAAhE,MAAAwxC,UAC1BloC,YAAA,EACAC,cAAA,IAKA0gC,gBAAAjnC,UAAA2wC,iBAAA,aACA3zC,KAAAixC,kBAAApI,MACA7oC,KAAAixC,kBAAA7H,GACA2S,GAAAE,wBAEAj8C,KAAAixC,kBAAApI,KAAA7oC,KAAAixC,kBAAAnI,KACA9oC,KAAAixC,kBAAAlI,KACAgT,GAAAC,0BAMA/R,gBAAAjnC,UAAAw4C,cAAA,WACAx7C,KAAA2zC,mBACA3zC,KAAAwxC,SAAAxxC,KAAA6zC,cAAAyE,WAAAt4C,MACAA,KAAAgjC,QAAArgC,UAAA3C,KAAA,cAAA8lC,kBACA9lC,KAAA,mCAEAA,KAAAo9C,QAAA,GAEAnT,iBACCR,EACDQ,IAAAhqC,aACKiwC,KAAArN,EAAA,UAAAsN,OAA0BruC,SAAA,oBAAAwK,WAAA8/B,QAK/BnC,GAAAsG,eAAA,WAA8C,QACzCL,KAAA5G,EAAArpC,aAAuCiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,aAC3EqN,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAArF,OAChEoF,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAAtF,OAChEqF,KAAAhI,MAAAjoC,aAA4BiwC,KAAArN,EAAA,WAAoBqN,KAAArN,EAAA,OAAgBqN,KAAArN,EAAA,OAAAsN,MAAA5G,QAErEU,GAAAgI,gBACAvvC,OAAcwtC,KAAArN,EAAA,MAAAsN,MAAA,qBACduL,QAAexL,KAAArN,EAAA,MAAAsN,MAAA,aACfkL,SAAgBnL,KAAArN,EAAA,OAAAsN,MAAA,mBAChBnK,aAAoBkK,KAAArN,EAAA,MAAAsN,MAAA;;;;;;;AASpB,GAAAnD,KACAzgC,QAAAu+B,EACA4E,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAA6H,MACzCiF,OAAA,GAEAhD,IACApgC,QAAAu+B,EACA4E,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAAwH,MACzCsF,OAAA,GAcAjF,GAAA,WACA,QAAAA,sBA+BA,MA7BAhqC,QAAAK,eAAA2pC,kBAAA1nC,UAAA,YAIAgB,IAAA,WAA0B,MAAAhE,MAAAq9C,WAK1B/K,IAAA,SAAAlxC,GACApB,KAAAq9C,UAAA,MAAAj8C,IAAA,IAAAA,GAAA,GAAAA,GAAA,QACApB,KAAAi4C,WACAj4C,KAAAi4C,aAEA3uC,YAAA,EACAC,cAAA,IAMAmhC,kBAAA1nC,UAAAghC,SAAA,SAAA1jC,GACA,MAAAN,MAAAuuC,SAAAvJ,EAAAuJ,SAAAjuC,GAAA,MAMAoqC,kBAAA1nC,UAAAkjC,0BAAA,SAAA+J,GAA2EjwC,KAAAi4C,UAAAhI,GAC3EvF,oBAEAA,IAAAzqC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,yIACAwK,WAAA0gC,IACAoD,MAAuBkN,kBAAA,4BAMvB5S,GAAA6F,eAAA,WAAgD,UAChD7F,GAAAuH,gBACA1D,WAAkB2B,KAAArN,EAAA,QAclB,IAAAwH,IAAA,SAAA0D,GAEA,QAAA1D,6BACA,cAAA0D,KAAAC,MAAAhuC,KAAAO,YAAAP,KASA,MAXAgpC,GAAA,EAAAqB,0BAAA0D,GAQA1D,0BAAArnC,UAAAghC,SAAA,SAAA1jC,GACA,MAAAN,MAAAuuC,SAAAvJ,EAAAwJ,aAAAluC,GAAA,MAEA+pC,2BACCK,GACDL,IAAApqC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,sIACAwK,WAAAqgC,IACAyD,MAAuBkN,kBAAA,4BAMvBjT,GAAAkG,eAAA,WAAwD,SAIxD,IAAA3D,KACArgC,QAAAu+B,EACA4E,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAAyH,MACzCqF,OAAA,GAgBArF,GAAA,WACA,QAAAA,mBA2BA,MAzBA5pC,QAAAK,eAAAupC,eAAAtnC,UAAA,SAKAsvC,IAAA,SAAAlxC,GACApB,KAAAu9C,SAAA,KAAAn8C,IAAA,IAAAA,GAAA,SAAAA,EACApB,KAAAi4C,WACAj4C,KAAAi4C,aAEA3uC,YAAA,EACAC,cAAA,IAMA+gC,eAAAtnC,UAAAghC,SAAA,SAAA1jC,GACA,MAAAN,MAAAu9C,SAAAvY,EAAAyJ,MAAAnuC,GAAA,MAMAgqC,eAAAtnC,UAAAkjC,0BAAA,SAAA+J,GAAwEjwC,KAAAi4C,UAAAhI,GACxE3F,iBAEAA,IAAArqC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,iEACAwK,WAAAsgC,QAMAtC,GAAAiG,eAAA,WAA6C,UAC7CjG,GAAA2H,gBACAxD,QAAeyB,KAAArN,EAAA,QASf,IAAAiK,KACAvgC,QAAAu+B,EACA4E,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAA2H,MACzCmF,OAAA,GAQAnF,GAAA,WACA,QAAAA,uBA+BA,MAzBAA,oBAAAxnC,UAAAs4C,YAAA,SAAAtU,GACA,aAAAA,KACAhnC,KAAAw9C,mBACAx9C,KAAAi4C,WACAj4C,KAAAi4C,cAOAzN,mBAAAxnC,UAAAghC,SAAA,SAAA1jC,GACA,aAAAN,KAAA2uC,UAAA,KAAA3uC,KAAAy9C,WAAAn9C,IAMAkqC,mBAAAxnC,UAAAkjC,0BAAA,SAAA+J,GAA4EjwC,KAAAi4C,UAAAhI,GAI5EzF,mBAAAxnC,UAAAw6C,iBAAA,WACAx9C,KAAAy9C,WAAAzY,EAAA0J,UAAAgP,SAAA19C,KAAA2uC,UAAA,MAEAnE,qBAEAA,IAAAvqC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,6EACAwK,WAAAwgC,IACAsD,MAAuBuN,mBAAA,oCAMvBnT,GAAA+F,eAAA,WAAiD,UACjD/F,GAAAyH,gBACAtD,YAAmBuB,KAAArN,EAAA,QASnB,IAAAgK,KACAtgC,QAAAu+B,EACA4E,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAA0H,MACzCoF,OAAA,GASApF,GAAA,WACA,QAAAA,uBA+BA,MAzBAA,oBAAAvnC,UAAAs4C,YAAA,SAAAtU,GACA,aAAAA,KACAhnC,KAAAw9C,mBACAx9C,KAAAi4C,WACAj4C,KAAAi4C,cAOA1N,mBAAAvnC,UAAAghC,SAAA,SAAA1jC,GACA,aAAAN,KAAA+uC,UAAA/uC,KAAAy9C,WAAAn9C,GAAA,MAMAiqC,mBAAAvnC,UAAAkjC,0BAAA,SAAA+J,GAA4EjwC,KAAAi4C,UAAAhI,GAI5E1F,mBAAAvnC,UAAAw6C,iBAAA,WACAx9C,KAAAy9C,WAAAzY,EAAA8J,UAAA4O,SAAA19C,KAAA+uC,UAAA,MAEAxE,qBAEAA,IAAAtqC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,6EACAwK,WAAAugC,IACAuD,MAAuBwN,mBAAA,oCAMvBrT,GAAAgG,eAAA,WAAiD,UACjDhG,GAAA0H,gBACAlD,YAAmBmB,KAAArN,EAAA,QAEnB,IAAAkK,KACAxgC,QAAAu+B,EACA4E,YAAA5vC,EAAAgB,EAAA+hC,EAAA,uBAAyC,MAAA4H,MACzCkF,OAAA,GAeAlF,GAAA,WACA,QAAAA,qBA2BA,MArBAA,kBAAAznC,UAAAs4C,YAAA,SAAAtU,GACA,WAAAA,KACAhnC,KAAAw9C,mBACAx9C,KAAAi4C,WACAj4C,KAAAi4C,cAOAxN,iBAAAznC,UAAAghC,SAAA,SAAA1jC,GAAwD,MAAAN,MAAAy9C,WAAAn9C,IAKxDmqC,iBAAAznC,UAAAkjC,0BAAA,SAAA+J,GAA0EjwC,KAAAi4C,UAAAhI,GAI1ExF,iBAAAznC,UAAAw6C,iBAAA,WAA+Dx9C,KAAAy9C,WAAAzY,EAAAgK,QAAAhvC,KAAAgvC,UAC/DvE,mBAEAA,IAAAxqC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,uEACAwK,WAAAygC,IACAqD,MAAuByN,iBAAA,gCAMvBpT,GAAA8F,eAAA,WAA+C,UAC/C9F,GAAAwH,gBACAjD,UAAiBkB,KAAArN,EAAA;;;;;;;AA6BjB,GAAAt+B,IAAA,WACA,QAAAA,gBA+EA,MApEAA,aAAAvB,UAAAK,MAAA,SAAAy6C,EAAAC,OACA,KAAAA,IAA+BA,EAAA,KAC/B,IAAyBp6C,GAAA3D,KAAAg+C,gBAAAF,GACA/Z,EAAA,MAAAga,IAAA,eACA7Y,EAAA,MAAA6Y,IAAA,mBACzB,WAAA5V,GAAAxkC,EAAAogC,EAAAmB,IAcA3gC,YAAAvB,UAAAggC,QAAA,SAAA+U,EAAAhU,EAAAmB,GACA,UAAA0F,GAAAmN,EAAAhU,EAAAmB,IAUA3gC,YAAAvB,UAAAi7C,MAAA,SAAAH,EAAA/Z,EAAAmB,GACA,GAAAzjC,GAAAzB,KACyB2D,EAAAm6C,EAAA14C,IAAA,SAAA9E,GAAgD,MAAAmB,GAAAy8C,eAAA59C,IACzE,WAAA8nC,GAAAzkC,EAAAogC,EAAAmB,IAOA3gC,YAAAvB,UAAAg7C,gBAAA,SAAAF,GACA,GAAAr8C,GAAAzB,KACyB2D,IAIzB,OAHAjD,QAAA8iC,KAAAsa,GAAAr3C,QAAA,SAAAiyC,GACA/0C,EAAA+0C,GAAAj3C,EAAAy8C,eAAAJ,EAAApF,MAEA/0C,GAOAY,YAAAvB,UAAAk7C,eAAA,SAAAC,GACA,GAAAA,YAAAvT,IAAAuT,YAAAhW,IACAgW,YAAA/V,GACA,MAAA+V,EAEA,IAAAjW,MAAAK,QAAA4V,GAAA,CACA,GAA6B/8C,GAAA+8C,EAAA,GACApa,EAAAoa,EAAA39C,OAAA,EAAA29C,EAAA,QACAjZ,EAAAiZ,EAAA39C,OAAA,EAAA29C,EAAA,OAC7B,OAAAn+C,MAAAgjC,QAAA5hC,EAAA2iC,EAAAmB,GAGA,MAAAllC,MAAAgjC,QAAAmb,IAGA55C,cAEAA,IAAAtE,aACKiwC,KAAArN,EAAA,aAKLt+B,GAAAgsC,eAAA,WAA0C;;;;;;;AAgB1C,GAAAxF,IAAA,GAAAlI,GAAA,iBAqBA+I,GAAA,WACA,QAAAA,iBAEA,MAAAA,gBAEAA,IAAA3rC,aACKiwC,KAAArN,EAAA,UAAAsN,OACLruC,SAAA,+CACAsuC,MAAuBgO,WAAA,QAMvBxS,GAAA2E,eAAA,WAA2C;;;;;;;AAQ3C,GAAApF,KACAS,GACA1B,EACAuC,EACA1E,EACA+D,EACAI,EACA7C,EACAc,EACAC,EACAL,EACAL,EACAC,EACAe,GACAF,GACAD,GACAE,GACAJ,GACAC,IAEAc,IAAAvB,GAAAC,GAAAF,GACAsB,IAAAlB,GAAAlB,GAAAmB,GAAApB,GAAAE,IAIAkC,GAAA,WACA,QAAAA,8BAEA,MAAAA,6BAEAA,IAAAhrC,aACKiwC,KAAArN,EAAA,SAAAsN,OACLzjC,aAAAy+B,GACAtrC,QAAAsrC,OAMAF,GAAAsF,eAAA,WAAwD;;;;;;;AAYxD,GAAAxjC,IAAA,WACA,QAAAA,gBAEA,MAAAA,eAEAA,IAAA9M,aACKiwC,KAAArN,EAAA,SAAAsN,OACLzjC,aAAA0+B,GACA9+B,WAAA0/B,GACAnsC,SAAAorC,GAAAG,QAMAr+B,GAAAwjC,eAAA,WAA0C,SAK1C,IAAAvF,IAAA,WACA,QAAAA,wBAEA,MAAAA,uBAEAA,IAAA/qC,aACKiwC,KAAArN,EAAA,SAAAsN,OACLzjC,cAAAw+B,IACA5+B,WAAA/H,GAAAynC,GACAnsC,SAAAorC,GAAAC,QAMAF,GAAAuF,eAAA,WAAkD,WlBmrD5C8N,IACA,SAAUz+C,EAAQC,EAASC,GAEjC,YAEAY,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,GmB/lPtD,IAAAk9C,GAAAx+C,EAAA,IAEAy+C,EAAAz+C,EAAA,GAEAw+C,GAAAE,yBAAyBC,gBAAgBF,EAAAG,WAAW9E,KAAK,SAAS+E,GAAo/B,MAAOA,MnBknPvjCC,GACA,SAAUh/C,EAAQ2iC,EAAqBziC,GAE7C,YoB5gPA,SAAA++C,aAAAC,EAAAC,GACA,GAAqBC,GAAA,GAAA7M,IACrB,IAAA2M,EAAAt+C,OAAA,GACyBs+C,EAAAxa,MAAA,KACzB79B,QAAA,SAAAw4C,GACA,GAA6BC,GAAAD,EAAAv0C,QAAA,KAC7BioC,GAAA,GAAAuM,GACAH,EAAAI,UAAAF,GAAA,KACAF,EAAAI,UAAAF,EAAAh4C,MAAA,EAAAi4C,IAAAH,EAAAK,YAAAH,EAAAh4C,MAAAi4C,EAAA,KAAA/+C,EAAAwyC,EAAA,GAAAxoC,EAAAwoC,EAAA,GAC6BjK,EAAAsW,EAAAh7C,IAAA7D,MAC7BuoC,GAAA3iC,KAAAoE,GACA60C,EAAA1M,IAAAnyC,EAAAuoC,KAGA,MAAAsW,GAMA,QAAAK,kBAAAn+C,GACA,MAAAo+C,oBAAAp+C,GACAuM,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA;;;;;;;AA6YA,QAAA8xC,eAAAC,GACA,OAAAA,GACA,aACA,UACA,WACA,cACA,YACA,QACA,SACA,UAUA,QAAAC,eAAAr+C,GACA,yBAAAs+C,cAAAt+C,YAAAs+C,aASA,QAAAC,QAAAv+C,GACA,yBAAAw+C,OAAAx+C,YAAAw+C,MASA,QAAAC,YAAAz+C,GACA,yBAAA0+C,WAAA1+C,YAAA0+C;;;;;;;AAyZA,QAAAC,SAAAvM,EAAAwM,GACA,OACAA,OACAC,QAAAzM,EAAAyM,QACAC,QAAA1M,EAAA0M,QACAC,OAAA3M,EAAA2M,OACAC,eAAA5M,EAAA4M,eACAC,aAAA7M,EAAA6M,aACAC,gBAAA9M,EAAA8M,iBA0iBA,QAAAC,gBAAAC,GACA,qBAAAA,MAAAC,YACAD,EAAAC,YAEA,mBAAA/c,KAAA8c,EAAAE,yBACAF,EAAAG,kBAAA,iBAEA;;;;;;;AAyaA,QAAAC,qBAAAC,EAAAC,GAEA,WADA,KAAAA,IAAkCA,MAClCA,EAGAA,EAAAC,YAAA,SAAAC,EAAAC,GAAkE,UAAAC,GAAAF,EAAAC,IAAwDJ,GAF1HA,EAaA,QAAAM,wBACA,sBAAAC,QACAA,UpB6qLA1gD,OAAOK,eAAewhC,EAAqB,cAAgBnhC,OAAO,GAC7C,IAAI4nC,GAAsClpC,EAAoB,IAC1D+iC,EAA8C/iC,EAAoB,GAClEuhD,EAAmDvhD,EAAoB,IAEvEwhD,GAD2DxhD,EAAoB4I,EAAE24C,GACzBvhD,EAAoB,KAE5EyhD,GADgEzhD,EAAoB4I,EAAE44C,GACjCxhD,EAAoB,KAEzE0hD,GAD6D1hD,EAAoB4I,EAAE64C,GACjCzhD,EAAoB,KAEtE2hD,GAD0D3hD,EAAoB4I,EAAE84C,GAChC1hD,EAAoB,KACpE4hD,EAAgD5hD,EAAoB,EACZA,GAAoB4I,EAAEg5C,EACxE5hD,GAAoBO,EAAEkiC,EAAqB,cAAe,WAAa,MAAOof,KAC9E7hD,EAAoBO,EAAEkiC,EAAqB,cAAe,WAAa,MAAOqf,KAC9E9hD,EAAoBO,EAAEkiC,EAAqB,aAAc,WAAa,MAAO/9B,KAC7E1E,EAAoBO,EAAEkiC,EAAqB,cAAe,WAAa,MAAOsf,KAC9E/hD,EAAoBO,EAAEkiC,EAAqB,oBAAqB,WAAa,MAAOuf,KACpFhiD,EAAoBO,EAAEkiC,EAAqB,qBAAsB,WAAa,MAAOwf,KACrFjiD,EAAoBO,EAAEkiC,EAAqB,mBAAoB,WAAa,MAAOyf,KACnFliD,EAAoBO,EAAEkiC,EAAqB,wBAAyB,WAAa,MAAO0f,KACxFniD,EAAoBO,EAAEkiC,EAAqB,mBAAoB,WAAa,MAAO2f,KACnFpiD,EAAoBO,EAAEkiC,EAAqB,uBAAwB,WAAa,MAAO4f,KACvFriD,EAAoBO,EAAEkiC,EAAqB,uBAAwB,WAAa,MAAOqe,uBACvF9gD,EAAoBO,EAAEkiC,EAAqB,aAAc,WAAa,MAAO6f,KAC7EtiD,EAAoBO,EAAEkiC,EAAqB,uBAAwB,WAAa,MAAO8f,KACvFviD,EAAoBO,EAAEkiC,EAAqB,cAAe,WAAa,MAAO+f,KAC9ExiD,EAAoBO,EAAEkiC,EAAqB,oBAAqB,WAAa,MAAOggB,KACpFziD,EAAoBO,EAAEkiC,EAAqB,gBAAiB,WAAa,MAAOigB,KAChF1iD,EAAoBO,EAAEkiC,EAAqB,qBAAsB,WAAa,MAAOkgB,KACrF3iD,EAAoBO,EAAEkiC,EAAqB,eAAgB,WAAa,MAAOmgB,KAC/E5iD,EAAoBO,EAAEkiC,EAAqB,mBAAoB,WAAa,MAAOogB,KACnF7iD,EAAoBO,EAAEkiC,EAAqB,iBAAkB,WAAa,MAAOqgB,KACjF9iD,EAAoBO,EAAEkiC,EAAqB,aAAc,WAAa,MAAOsgB,KAC7E/iD,EAAoBO,EAAEkiC,EAAqB,yBAA0B,WAAa,MAAOugB,KACzFhjD,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOwgB,KACrEjjD,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOygB,KACrEljD,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO4e,wBACrErhD,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO0gB,KACrEnjD,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO2gB,KACrEpjD,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO4gB,KACrErjD,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO6gB,KACrEtjD,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO8gB;;;;;;;;;;;;AoBpoPpG,GAAAzB,GAAA,WACA,QAAAA,gBAQA,MADAA,aAAA5+C,UAAAsgD,OAAA,SAAAC,KACA3B,eAaAD,EAAA,WACA,QAAAA,gBAQA,MADAA,aAAA3+C,UAAAsgD,OAAA,SAAAC,KACA5B,eAeAU,EAAA,WACA,QAAAA,yBAsBA,MAhBAA,sBAAAr/C,UAAAwgD,UAAA,SAAAviD,GAA6D,MAAAo+C,kBAAAp+C,IAK7DohD,qBAAAr/C,UAAAygD,YAAA,SAAAviD,GAA+D,MAAAm+C,kBAAAn+C,IAK/DmhD,qBAAAr/C,UAAAm8C,UAAA,SAAAl+C,GAA6D,MAAAyiD,oBAAAziD,IAK7DohD,qBAAAr/C,UAAAo8C,YAAA,SAAAl+C,GAA+D,MAAAwiD,oBAAAxiD,IAC/DmhD,wBA+CAD,EAAA,WAIA,QAAAA,YAAA5O,OACA,KAAAA,IAAiCA,MACjCxzC,KAAA2jD,QAAA,KACA3jD,KAAA4jD,UAAA,KACA5jD,KAAA6jD,QAAArQ,EAAAqQ,SAAA,GAAAxB,GACAriD,KAAAoF,IAAAouC,EAAAsQ,WAAAjF,YAAArL,EAAAsQ,WAAA9jD,KAAA6jD,SAAA,KAiIA,MA1HAzB,YAAAp/C,UAAA6vC,IAAA,SAAAoM,GAEA,MADAj/C,MAAA+jD,OACA/jD,KAAA,IAAA6yC,IAAAoM,IAOAmD,WAAAp/C,UAAAgB,IAAA,SAAAi7C,GACAj/C,KAAA+jD,MACA,IAAyB1gB,GAAArjC,KAAA,IAAAgE,IAAAi7C,EACzB,OAAA5b,KAAA,SAOA+e,WAAAp/C,UAAAghD,OAAA,SAAA/E,GAEA,MADAj/C,MAAA+jD,OACA/jD,KAAA,IAAAgE,IAAAi7C,IAAA,MAMAmD,WAAAp/C,UAAAwgC,KAAA,WAEA,MADAxjC,MAAA+jD,OACA7b,MAAA0K,KAAuC5yC,KAAA,IAAAwjC,SAQvC4e,WAAAp/C,UAAAihD,OAAA,SAAAhF,EAAA79C,GAA2D,MAAApB,MAAAkkD,OAAoBjF,QAAA79C,QAAA+iD,GAAA,OAO/E/B,WAAAp/C,UAAAsvC,IAAA,SAAA2M,EAAA79C,GAAwD,MAAApB,MAAAkkD,OAAoBjF,QAAA79C,QAAA+iD,GAAA,OAS5E/B,WAAAp/C,UAAAkwC,OAAA,SAAA+L,EAAA79C,GAA2D,MAAApB,MAAAkkD,OAAoBjF,QAAA79C,QAAA+iD,GAAA,OAM/E/B,WAAAp/C,UAAAqsC,SAAA,WACA,GAAA5tC,GAAAzB,IAEA,OADAA,MAAA+jD,OACA/jD,KAAAwjC,OACAp+B,IAAA,SAAAjF,GACA,GAA6BikD,GAAA3iD,EAAAoiD,QAAAL,UAAArjD,EAC7B,OAAAsB,GAAA,IAAAuC,IAAA7D,GAAAiF,IAAA,SAAAhE,GAAoE,MAAAgjD,GAAA,IAAA3iD,EAAAoiD,QAAAJ,YAAAriD,KACpEulC,KAAA,OAEAA,KAAA,MAMAyb,WAAAp/C,UAAAkhD,MAAA,SAAA7I,GACA,GAAyB6I,GAAA,GAAA9B,aAA4ByB,QAAA7jD,KAAA6jD,SAGrD,OAFAK,GAAAN,UAAA5jD,KAAA4jD,WAAA5jD,KACAkkD,EAAAP,SAAA3jD,KAAA2jD,aAAAhf,QAAA0W,IACA6I,GAKA9B,WAAAp/C,UAAA+gD,KAAA,WACA,GAAAtiD,GAAAzB,IACA,QAAAA,KAAAoF,MACApF,KAAAoF,IAAA,GAAA+sC,MAEA,OAAAnyC,KAAA4jD,YACA5jD,KAAA4jD,UAAAG,OACA/jD,KAAA4jD,UAAApgB,OAAA/8B,QAAA,SAAAtG,GAA0D,MAAAsB,GAAA,IAAA6wC,IAAAnyC,EAA4CsB,EAAA,cAAAuC,IAAA7D,MACtGH,KAAA,QAAAyG,QAAA,SAAA40C,GACA,OAAAA,EAAA8I,IACA,QACA,QACA,GAAyCE,IAAA,MAAAhJ,EAAA8I,GAAA1iD,EAAA,IAAAuC,IAAAq3C,EAAA4D,WAAArX,OACzCyc,GAAAt+C,KAA+Cs1C,EAAA,OAC/C55C,EAAA,IAAA6wC,IAAA+I,EAAA4D,MAAAoF,EACA,MACA,SACA,OAAAzc,KAAAyT,EAAAj6C,MAaA,CACAK,EAAA,IAAAyxC,OAAAmI,EAAA4D,MACA,OAdA,GAA6CqF,GAAA7iD,EAAA,IAAAuC,IAAAq3C,EAAA4D,WACAsF,EAAAD,EAAA55C,QAAA2wC,EAAAj6C,QAC7C,IAAAmjD,GACAD,EAAAx6C,OAAAy6C,EAAA,GAEAD,EAAA9jD,OAAA,EACAiB,EAAA,IAAA6wC,IAAA+I,EAAA4D,MAAAqF,GAGA7iD,EAAA,IAAAyxC,OAAAmI,EAAA4D,UASAj/C,KAAA4jD,UAAA,OAGAxB,cAaAP,EAAA,WAIA,QAAAA,aAAA5B,GACA,GAAAx+C,GAAAzB,IAKAA,MAAAwkD,gBAAA,GAAArS,KAIAnyC,KAAAykD,WAAA,KACAxE,EAIAjgD,KAAA0kD,SADA,gBAAAzE,GACA,WACAx+C,EAAAw+C,QAAA,GAAA9N,KACA8N,EAAA3b,MAAA,MAAA79B,QAAA,SAAAk+C,GACA,GAAA35C,GAAA25C,EAAAj6C,QAAA,IACA,IAAAM,EAAA,GACA,GAAAtI,GAAAiiD,EAAA19C,MAAA,EAAA+D,GACA7K,EAAAuC,EAAAmhC,cACAziC,EAAAujD,EAAA19C,MAAA+D,EAAA,GAAA45C,MACAnjD,GAAAojD,uBAAAniD,EAAAvC,GACAsB,EAAAw+C,QAAApN,IAAA1yC,GACAsB,EAAAw+C,QAAAj8C,IAAA7D,GAAA4F,KAAA3E,GAGAK,EAAAw+C,QAAA3N,IAAAnyC,GAAAiB,QAOA,WACAK,EAAAw+C,QAAA,GAAA9N,KACAzxC,OAAA8iC,KAAAyc,GAAAx5C,QAAA,SAAA/D,GACA,GAAAoiD,GAAA7E,EAAAv9C,GACAvC,EAAAuC,EAAAmhC,aACA,iBAAAihB,KACAA,OAEAA,EAAAtkD,OAAA,IACAiB,EAAAw+C,QAAA3N,IAAAnyC,EAAA2kD,GACArjD,EAAAojD,uBAAAniD,EAAAvC,OAjCAH,KAAAigD,QAAA,GAAA9N,KA8MA,MAlKA0P,aAAA7+C,UAAA6vC,IAAA,SAAAnwC,GAEA,MADA1C,MAAA+jD,OACA/jD,KAAAigD,QAAApN,IAAAnwC,EAAAmhC,gBAOAge,YAAA7+C,UAAAgB,IAAA,SAAAtB,GACA1C,KAAA+jD,MACA,IAAyBe,GAAA9kD,KAAAigD,QAAAj8C,IAAAtB,EAAAmhC,cACzB,OAAAihB,MAAAtkD,OAAA,EAAAskD,EAAA,SAMAjD,YAAA7+C,UAAAwgC,KAAA,WAEA,MADAxjC,MAAA+jD,OACA7b,MAAA0K,KAAA5yC,KAAAwkD,gBAAAM,WAOAjD,YAAA7+C,UAAAghD,OAAA,SAAAthD,GAEA,MADA1C,MAAA+jD,OACA/jD,KAAAigD,QAAAj8C,IAAAtB,EAAAmhC,gBAAA,MAOAge,YAAA7+C,UAAAihD,OAAA,SAAAvhD,EAAAtB,GACA,MAAApB,MAAAkkD,OAA2BxhD,OAAAtB,QAAA+iD,GAAA,OAO3BtC,YAAA7+C,UAAAsvC,IAAA,SAAA5vC,EAAAtB,GACA,MAAApB,MAAAkkD,OAA2BxhD,OAAAtB,QAAA+iD,GAAA,OAO3BtC,YAAA7+C,UAAAkwC,OAAA,SAAAxwC,EAAAtB,GACA,MAAApB,MAAAkkD,OAA2BxhD,OAAAtB,QAAA+iD,GAAA,OAO3BtC,YAAA7+C,UAAA6hD,uBAAA,SAAAniD,EAAAqiD,GACA/kD,KAAAwkD,gBAAA3R,IAAAkS,IACA/kD,KAAAwkD,gBAAAlS,IAAAyS,EAAAriD,IAMAm/C,YAAA7+C,UAAA+gD,KAAA,WACA,GAAAtiD,GAAAzB,IACAA,MAAA0kD,WACA1kD,KAAA0kD,mBAAA7C,aACA7hD,KAAAglD,SAAAhlD,KAAA0kD,UAGA1kD,KAAA0kD,WAEA1kD,KAAA0kD,SAAA,KACA1kD,KAAAykD,aACAzkD,KAAAykD,WAAAh+C,QAAA,SAAA40C,GAA2D,MAAA55C,GAAAwjD,YAAA5J,KAC3Dr7C,KAAAykD,WAAA,QAQA5C,YAAA7+C,UAAAgiD,SAAA,SAAAE,GACA,GAAAzjD,GAAAzB,IACAklD,GAAAnB,OACA7b,MAAA0K,KAAAsS,EAAAjF,QAAAzc,QAAA/8B,QAAA,SAAAtG,GACAsB,EAAAw+C,QAAA3N,IAAAnyC,EAAgD+kD,EAAAjF,QAAAj8C,IAAA7D,IAChDsB,EAAA+iD,gBAAAlS,IAAAnyC,EAAwD+kD,EAAAV,gBAAAxgD,IAAA7D,OAOxD0hD,YAAA7+C,UAAAkhD,MAAA,SAAA7I,GACA,GAAyB6I,GAAA,GAAArC,YAIzB,OAHAqC,GAAAQ,SACA1kD,KAAA0kD,UAAA1kD,KAAA0kD,mBAAA7C,aAAA7hD,KAAA0kD,SAAA1kD,KACAkkD,EAAAO,YAAAzkD,KAAAykD,gBAAA9f,QAAA0W,IACA6I,GAMArC,YAAA7+C,UAAAiiD,YAAA,SAAA5J,GACA,GAAyBl7C,GAAAk7C,EAAA34C,KAAAmhC,aACzB,QAAAwX,EAAA8I,IACA,QACA,QACA,GAAiC/iD,GAAAi6C,EAAA,KAIjC,IAHA,gBAAAj6C,KACAA,OAEA,IAAAA,EAAAZ,OACA,MAEAR,MAAA6kD,uBAAAxJ,EAAA34C,KAAAvC,EACA,IAAiCkkD,IAAA,MAAAhJ,EAAA8I,GAAAnkD,KAAAigD,QAAAj8C,IAAA7D,OAAAynC,OACjCyc,GAAAt+C,KAAAioC,MAAAqW,EAAAjjD,GACApB,KAAAigD,QAAA3N,IAAAnyC,EAAAkkD,EACA,MACA,SACA,GAAiCc,GAAA9J,EAAA,KACjC,IAAA8J,EAIA,CACA,GAAqCC,GAAAplD,KAAAigD,QAAAj8C,IAAA7D,EACrC,KAAAilD,EACA,MAEAA,KAAAl+C,OAAA,SAAA9F,GAAiE,WAAA+jD,EAAAz6C,QAAAtJ,KACjE,IAAAgkD,EAAA5kD,QACAR,KAAAigD,QAAA/M,OAAA/yC,GACAH,KAAAwkD,gBAAAtR,OAAA/yC,IAGAH,KAAAigD,QAAA3N,IAAAnyC,EAAAilD,OAdAplD,MAAAigD,QAAA/M,OAAA/yC,GACAH,KAAAwkD,gBAAAtR,OAAA/yC,KAwBA0hD,YAAA7+C,UAAAyD,QAAA,SAAAwpC,GACA,GAAAxuC,GAAAzB,IACAA,MAAA+jD,OACA7b,MAAA0K,KAAA5yC,KAAAwkD,gBAAAhhB,QACA/8B,QAAA,SAAAtG,GAAqC,MAAA8vC,GAAwBxuC,EAAA+iD,gBAAAxgD,IAAA7D,GAAqDsB,EAAAw+C,QAAAj8C,IAAA7D,OAElH0hD,eAkEAS,EAAA,WAOA,QAAAA,aAAA9C,EAAA6F,EAAAC,EAAAC,GACAvlD,KAAAqlD,MAQArlD,KAAAggD,KAAA,KAOAhgD,KAAAogD,gBAAA,EAIApgD,KAAAsgD,iBAAA,EAOAtgD,KAAAqgD,aAAA,OACArgD,KAAAw/C,SAAAz0C,aAGA,IAAAyoC,EAkCA,IA/BA+L,cAAAv/C,KAAAw/C,SAAA+F,GAEAvlD,KAAAggD,KAAAsF,GAAA,KACA9R,EAAA+R,GAIA/R,EAAA8R,EAGA9R,IAEAxzC,KAAAogD,iBAAA5M,EAAA4M,eACApgD,KAAAsgD,kBAAA9M,EAAA8M,gBAEA9M,EAAA6M,eACArgD,KAAAqgD,aAAA7M,EAAA6M,cAGA7M,EAAAyM,UACAjgD,KAAAigD,QAAAzM,EAAAyM,SAEAzM,EAAA2M,SACAngD,KAAAmgD,OAAA3M,EAAA2M,SAIAngD,KAAAigD,UACAjgD,KAAAigD,QAAA,GAAA4B,IAGA7hD,KAAAmgD,OAIA,CAEA,GAAAA,GAAAngD,KAAAmgD,OAAA9Q,UACA,QAAA8Q,EAAA3/C,OAEAR,KAAAwlD,cAAAH,MAEA,CAEA,GAAAI,GAAAJ,EAAA36C,QAAA,KAQAg7C,GAAA,IAAAD,EAAA,IAAAA,EAAAJ,EAAA7kD,OAAA,QACAR,MAAAwlD,cAAAH,EAAAK,EAAAvF,OArBAngD,MAAAmgD,OAAA,GAAAiC,GACApiD,KAAAwlD,cAAAH,EAwIA,MA3GA/C,aAAAt/C,UAAA2iD,cAAA,WAEA,cAAA3lD,KAAAggD,KACA,KAIAP,cAAAz/C,KAAAggD,OAAAL,OAAA3/C,KAAAggD,OAAAH,WAAA7/C,KAAAggD,OACA,gBAAAhgD,MAAAggD,KACAhgD,KAAAggD,KAGAhgD,KAAAggD,eAAAoC,GACApiD,KAAAggD,KAAA3Q,WAGA,gBAAArvC,MAAAggD,MAAA,iBAAAhgD,MAAAggD,MACA9X,MAAAK,QAAAvoC,KAAAggD,MACAx4C,KAAAE,UAAA1H,KAAAggD,MAGAhgD,KAAA,KAAAqvC,YASAiT,YAAAt/C,UAAA4iD,wBAAA,WAEA,cAAA5lD,KAAAggD,KACA,KAGAH,WAAA7/C,KAAAggD,MACA,KAIAL,OAAA3/C,KAAAggD,MACAhgD,KAAAggD,KAAA9P,MAAA,KAGAuP,cAAAz/C,KAAAggD,MACA,KAIA,gBAAAhgD,MAAAggD,KACA,aAGAhgD,KAAAggD,eAAAoC,GACA,kDAGA,gBAAApiD,MAAAggD,MAAA,gBAAAhgD,MAAAggD,MACA9X,MAAAK,QAAAvoC,KAAAggD,MACA,mBAGA,MAMAsC,YAAAt/C,UAAAkhD,MAAA,SAAA7I,OACA,KAAAA,IAAgCA,KAGhC,IAAyBmE,GAAAnE,EAAAmE,QAAAx/C,KAAAw/C,OACA6F,EAAAhK,EAAAgK,KAAArlD,KAAAqlD,IACAhF,EAAAhF,EAAAgF,cAAArgD,KAAAqgD,aAKAL,MAAApY,KAAAyT,EAAA2E,KAAA3E,EAAA2E,KAAAhgD,KAAAggD,KAGAM,MAAA1Y,KAAAyT,EAAAiF,gBAAAjF,EAAAiF,gBAAAtgD,KAAAsgD,gBACAF,MAAAxY,KAAAyT,EAAA+E,eAAA/E,EAAA+E,eAAApgD,KAAAogD,eAGAH,EAAA5E,EAAA4E,SAAAjgD,KAAAigD,QACAE,EAAA9E,EAAA8E,QAAAngD,KAAAmgD,MAezB,YAbAvY,KAAAyT,EAAAwK,aAEA5F,EACAv/C,OAAA8iC,KAAA6X,EAAAwK,YACAviB,OAAA,SAAA2c,EAAAv9C,GAAsD,MAAAu9C,GAAA3N,IAAA5vC,EAAuC24C,EAAA,WAAA34C,KAAmCu9C,IAGhI5E,EAAAyK,YAEA3F,EAAAz/C,OAAA8iC,KAAA6X,EAAAyK,WACAxiB,OAAA,SAAA6c,EAAAlB,GAAkD,MAAAkB,GAAA7N,IAAA2M,EAAuC5D,EAAA,UAAA4D,KAAmCkB,IAG5H,GAAAmC,aAAA9C,EAAA6F,EAAArF,GACAG,SAAAF,UAAAG,iBAAAC,eAAAC,qBAGAgC,eASAE,IACAA,GAAAuD,KAAA,EACAvD,EAAAwD,eAAA,EACAxD,EAAAyD,eAAA,EACAzD,EAAA0D,iBAAA,EACA1D,EAAA2D,SAAA,EACA3D,EAAA4D,KAAA,EACA5D,IAAAuD,MAAA,OACAvD,IAAAwD,gBAAA,iBACAxD,IAAAyD,gBAAA,iBACAzD,IAAA0D,kBAAA,mBACA1D,IAAA2D,UAAA,WACA3D,IAAA4D,MAAA,MAOA,IAAAzD,GAAA,WAUA,QAAAA,kBAAAoB,EAAAsC,EAAAC,OACA,KAAAD,IAAuCA,EAAA,SACvC,KAAAC,IAA2CA,EAAA,MAG3CtmD,KAAAigD,QAAA8D,EAAA9D,SAAA,GAAA4B,GACA7hD,KAAA23C,WAAA/P,KAAAmc,EAAApM,OAAAoM,EAAApM,OAAA0O,EACArmD,KAAAumD,WAAAxC,EAAAwC,YAAAD,EACAtmD,KAAAqlD,IAAAtB,EAAAsB,KAAA,KAEArlD,KAAAwmD,GAAAxmD,KAAA23C,QAAA,KAAA33C,KAAA23C,OAAA,IAEA,MAAAgL,qBAWAF,EAAA,SAAA1U,GAMA,QAAA0U,oBAAAsB,OACA,KAAAA,IAA8BA,KAC9B,IAAAtiD,GAAAssC,EAAAllC,KAAA7I,KAAA+jD,IAAA/jD,IAEA,OADAyB,GAAAyuC,KAAAsS,EAAAyD,eACAxkD,EAmBA,MA5BAunC,GAAA,EAAAyZ,mBAAA1U,GAiBA0U,mBAAAz/C,UAAAkhD,MAAA,SAAA7I,GAIA,WAHA,KAAAA,IAAgCA,MAGhC,GAAAoH,qBACAxC,QAAA5E,EAAA4E,SAAAjgD,KAAAigD,QACAtI,WAAA/P,KAAAyT,EAAA1D,OAAA0D,EAAA1D,OAAA33C,KAAA23C,OACA4O,WAAAlL,EAAAkL,YAAAvmD,KAAAumD,WACAlB,IAAAhK,EAAAgK,KAAArlD,KAAAqlD,SAAAzd,MAGA6a,oBACCE,GAUDD,EAAA,SAAA3U,GAMA,QAAA2U,cAAAqB,OACA,KAAAA,IAA8BA,KAC9B,IAAAtiD,GAAAssC,EAAAllC,KAAA7I,KAAA+jD,IAAA/jD,IAGA,OAFAyB,GAAAyuC,KAAAsS,EAAA2D,SACA1kD,EAAAu+C,KAAA+D,EAAA/D,MAAA,KACAv+C,EAgBA,MA1BAunC,GAAA,EAAA0Z,aAAA3U,GAgBA2U,aAAA1/C,UAAAkhD,MAAA,SAAA7I,GAEA,WADA,KAAAA,IAAgCA,MAChC,GAAAqH,eACA1C,SAAApY,KAAAyT,EAAA2E,KAAA3E,EAAA2E,KAAAhgD,KAAAggD,KACAC,QAAA5E,EAAA4E,SAAAjgD,KAAAigD,QACAtI,WAAA/P,KAAAyT,EAAA1D,OAAA0D,EAAA1D,OAAA33C,KAAA23C,OACA4O,WAAAlL,EAAAkL,YAAAvmD,KAAAumD,WACAlB,IAAAhK,EAAAgK,KAAArlD,KAAAqlD,SAAAzd,MAGA8a,cACCC,GAcDJ,EAAA,SAAAxU,GAKA,QAAAwU,mBAAAwB,GACA,GAAAtiD,GAEAssC,EAAAllC,KAAA7I,KAAA+jD,EAAA,oBAAA/jD,IAiBA,OAhBAyB,GAAAiB,KAAA,oBAIAjB,EAAA+kD,IAAA,EAIA/kD,EAAAk2C,QAAA,KAAAl2C,EAAAk2C,OAAA,IACAl2C,EAAAglC,QAAA,oCAAAsd,EAAAsB,KAAA,iBAGA5jD,EAAAglC,QACA,8BAAAsd,EAAAsB,KAAA,sBAAAtB,EAAApM,OAAA,IAAAoM,EAAAwC,WAEA9kD,EAAAglD,MAAA1C,EAAA0C,OAAA,KACAhlD,EAEA,MA1BAunC,GAAA,EAAAuZ,kBAAAxU,GA0BAwU,mBACCI,GAoCDn+C,EAAA,WAIA,QAAAA,YAAAkiD,GACA1mD,KAAA0mD,UAmOA,MA9LAliD,YAAAxB,UAAA2jD,QAAA,SAAAC,EAAAvB,EAAA7R,GACA,GAAA/xC,GAAAzB,SACA,KAAAwzC,IAAiCA,KACjC,IAAyB+P,EAKzBA,GAHAqD,YAAAtE,GAGA,EAMA,GAAAA,GAAAsE,EAAsD,EAAApT,EAAAwM,MAAA,MACtDC,QAAAzM,EAAAyM,QACAE,OAAA3M,EAAA2M,OACAC,eAAA5M,EAAA4M,eAEAC,aAAA7M,EAAA6M,cAAA,OACAC,gBAAA9M,EAAA8M,iBAOA,IAAyBuG,GAAAvF,EAAA,UAAAz4C,KAAA/I,EAAAgB,EAAAugD,EAAA,IAAAkC,GAAA,SAAAA,GAAsD,MAAA9hD,GAAAilD,QAAApD,OAAAC,IAI/E,IAAAqD,YAAAtE,IAAA,WAAA9O,EAAA0M,QACA,MAAA2G,EAKA,IAAyBC,GAAAvF,EAAA,OAAA14C,KAAAg+C,EAAA,SAAAE,GAAkD,MAAAA,aAAArE,IAE3E,QAAAlP,EAAA0M,SAAA,QACA,WAMA,OAAAqD,EAAAlD,cACA,kBACA,MAAAmB,GAAA,IAAA34C,KAAAi+C,EAAA,SAAAzjB,GAEA,UAAAA,EAAA2c,QAAA3c,EAAA2c,eAAAN,cACA,SAAAzzC,OAAA,kCAEA,OAAAo3B,GAAA2c,MAEA,YACA,MAAAwB,GAAA,IAAA34C,KAAAi+C,EAAA,SAAAzjB,GAEA,UAAAA,EAAA2c,QAAA3c,EAAA2c,eAAAJ,OACA,SAAA3zC,OAAA,0BAEA,OAAAo3B,GAAA2c,MAEA,YACA,MAAAwB,GAAA,IAAA34C,KAAAi+C,EAAA,SAAAzjB,GAEA,UAAAA,EAAA2c,MAAA,gBAAA3c,GAAA2c,KACA,SAAA/zC,OAAA,4BAEA,OAAAo3B,GAAA2c,MAEA,YACA,QAEA,MAAAwB,GAAA,IAAA34C,KAAAi+C,EAAA,SAAAzjB,GAA8D,MAAAA,GAAA2c,OAE9D,eAEA,MAAA8G,EACA,SAEA,SAAA76C,OAAA,uCAAAunC,EAAA0M,QAAA,OAWA17C,WAAAxB,UAAAkwC,OAAA,SAAAmS,EAAA7R,GAEA,WADA,KAAAA,IAAiCA,MACjCxzC,KAAA2mD,QAAA,SAAAtB,EAAwD,IAUxD7gD,WAAAxB,UAAAgB,IAAA,SAAAqhD,EAAA7R,GAEA,WADA,KAAAA,IAAiCA,MACjCxzC,KAAA2mD,QAAA,MAAAtB,EAAqD,IAUrD7gD,WAAAxB,UAAAgkD,KAAA,SAAA3B,EAAA7R,GAEA,WADA,KAAAA,IAAiCA,MACjCxzC,KAAA2mD,QAAA,OAAAtB,EAAsD,IActD7gD,WAAAxB,UAAAikD,MAAA,SAAA5B,EAAA6B,GACA,MAAAlnD,MAAA2mD,QAAA,QAAAtB,GACAlF,QAAA,GAAAiC,IAAA6B,OAAAiD,EAAA,kBACAhH,QAAA,OACAG,aAAA,UAWA77C,WAAAxB,UAAAwwC,QAAA,SAAA6R,EAAA7R,GAEA,WADA,KAAAA,IAAiCA,MACjCxzC,KAAA2mD,QAAA,UAAAtB,EAAyD,IAWzD7gD,WAAAxB,UAAAmkD,MAAA,SAAA9B,EAAArF,EAAAxM,GAEA,WADA,KAAAA,IAAiCA,MACjCxzC,KAAA2mD,QAAA,QAAAtB,EAAAtF,QAAAvM,EAAAwM,KAWAx7C,WAAAxB,UAAAokD,KAAA,SAAA/B,EAAArF,EAAAxM,GAEA,WADA,KAAAA,IAAiCA,MACjCxzC,KAAA2mD,QAAA,OAAAtB,EAAAtF,QAAAvM,EAAAwM,KAWAx7C,WAAAxB,UAAAqkD,IAAA,SAAAhC,EAAArF,EAAAxM,GAEA,WADA,KAAAA,IAAiCA,MACjCxzC,KAAA2mD,QAAA,MAAAtB,EAAAtF,QAAAvM,EAAAwM,KAEAx7C,aAEAA,GAAAvE,aACKiwC,KAAArN,EAAA,aAKLr+B,EAAA+rC,eAAA,WAAyC,QACpCL,KAAA0R;;;;;;;AAcL,GAAAV,GAAA,WAKA,QAAAA,wBAAAF,EAAAC,GACAjhD,KAAAghD,OACAhhD,KAAAihD,cASA,MAHAC,wBAAAl+C,UAAAsgD,OAAA,SAAAC,GACA,MAAAvjD,MAAAihD,YAAAqG,UAAA/D,EAAAvjD,KAAAghD,OAEAE,0BAQAY,EAAA,GAAAjf,GAAA,oCACAkgB,EAAA,WACA,QAAAA,oBAUA,MAHAA,iBAAA//C,UAAAskD,UAAA,SAAA/D,EAAAvC,GACA,MAAAA,GAAAsC,OAAAC,IAEAR,kBAEAA,GAAA9iD,aACKiwC,KAAArN,EAAA,aAKLkgB,EAAAxS,eAAA,WAA8C;;;;;;;AAY9C,GAAAgX,GAAA,EAGAC,EAAA,iDAGAC,EAAA,gDACAC,EAAA,8CASA1E,EAAA,WACA,QAAAA,yBAEA,MAAAA,yBAQAjB,EAAA,WAKA,QAAAA,oBAAA4F,EAAAC,GACA5nD,KAAA2nD,cACA3nD,KAAA4nD,WAuIA,MAjIA7F,oBAAA/+C,UAAA6kD,aAAA,WAA6D,2BAAAN,KAM7DxF,mBAAA/+C,UAAAsgD,OAAA,SAAAC,GACA,GAAA9hD,GAAAzB,IAGA,cAAAujD,EAAA/D,OACA,SAAAvzC,OAAAw7C,EAEA,aAAAlE,EAAAlD,aACA,SAAAp0C,OAAAy7C,EAGA,WAAAhG,GAAA,oBAAAoG,GAIA,GAA6BC,GAAAtmD,EAAAomD,eACAxC,EAAA9B,EAAAiC,cAAA/3C,QAAA,2BAAAs6C,EAAA,MAEAC,EAAAvmD,EAAAmmD,SAAAK,cAAA,SAC7BD,GAAAE,IAAA7C,CAIA,IAA6BrF,GAAA,KAEAmI,GAAA,EAGAC,GAAA,CAI7B3mD,GAAAkmD,YAAAI,GAAA,SAAArmD,SAEAD,GAAAkmD,YAAAI,GAEAK,IAIApI,EAAAt+C,EACAymD,GAAA,GAKA,IAA6BE,GAAA,WAE7BL,EAAAM,YACAN,EAAAM,WAAAC,YAAAP,SAIAvmD,GAAAkmD,YAAAI,IAM6BS,EAAA,SAAAzB,GAE7B,IAAAqB,EAAA,CAMA,GAFAC,KAEAF,EASA,WANAL,GAAArB,MAAA,GAAAlE,IACA8C,MACA1N,OAAA,EACA4O,WAAA,cACAE,MAAA,GAAAx6C,OAAAu7C,KAMAM,GAAA9G,KAAA,GAAA0B,IACA1C,OACArI,OAAA,IACA4O,WAAA,KAAAlB,SAGAyC,EAAAW,aAK6BC,EAAA,SAAAjC,GAE7B2B,IAGAC,IAEAP,EAAArB,MAAA,GAAAlE,IACAkE,QACA9O,OAAA,EACA4O,WAAA,cAAAlB,UAWA,OANA2C,GAAAW,iBAAA,OAAAH,GACAR,EAAAW,iBAAA,QAAAD,GACAjnD,EAAAmmD,SAAA5H,KAAA4I,YAAAZ,GAEAF,EAAA9G,MAA2B9Q,KAAAsS,EAAAuD,OAE3B,WAEAqC,GAAA,EAEAJ,EAAAa,oBAAA,OAAAL,GACAR,EAAAa,oBAAA,QAAAH,GAEAL,QAIAtG,qBAEAA,GAAA9hD,aACKiwC,KAAArN,EAAA,aAKLkf,EAAAxR,eAAA,WAAiD,QAC5CL,KAAA8S,IACA9S,SAAAtI,GAAA3nC,aAAgCiwC,KAAArN,EAAA,OAAAsN,MAAAsR,EAAA,cAQrC,IAAAO,GAAA,WAIA,QAAAA,kBAAAiF,GACAjnD,KAAAinD,QAcA,MAPAjF,kBAAAh/C,UAAAskD,UAAA,SAAA/D,EAAAvC,GACA,gBAAAuC,EAAA/D,OACAx/C,KAAAinD,MAAA3D,OAAkD,GAGlDtC,EAAAsC,OAAAC,IAEAvB,mBAEAA,GAAA/hD,aACKiwC,KAAArN,EAAA,aAKLmf,EAAAzR,eAAA,WAA+C,QAC1CL,KAAA6R;;;;;;;AASL,GAAA+G,GAAA,eAsBAjG,EAAA,WACA,QAAAA,eAOA,MADAA,YAAA7/C,UAAA+lD,MAAA,aACAlG,cAOAI,EAAA,WACA,QAAAA,eAMA,MADAA,YAAAjgD,UAAA+lD,MAAA,WAA8C,UAAAC,iBAC9C/F,aAEAA,GAAAhjD,aACKiwC,KAAArN,EAAA,aAKLogB,EAAA1S,eAAA,WAAyC,SAOzC,IAAAqS,GAAA,WAIA,QAAAA,gBAAAqG,GACAjpD,KAAAipD,aAgOA,MAzNArG,gBAAA5/C,UAAAsgD,OAAA,SAAAC,GACA,GAAA9hD,GAAAzB,IAGA,cAAAujD,EAAA/D,OACA,SAAAvzC,OAAA,4EAGA,WAAAy1C,GAAA,oBAAAoG,GAEA,GAA6BtH,GAAA/+C,EAAAwnD,WAAAF,OAY7B,IAXAvI,EAAA0I,KAAA3F,EAAA/D,OAAA+D,EAAAiC,eACAjC,EAAAjD,kBACAE,EAAAF,iBAAA,GAGAiD,EAAAtD,QAAAx5C,QAAA,SAAA/D,EAAAoiD,GAAyD,MAAAtE,GAAA2I,iBAAAzmD,EAAAoiD,EAAAne,KAAA,QAEzD4c,EAAAtD,QAAApN,IAAA,WACA2N,EAAA2I,iBAAA,+CAGA5F,EAAAtD,QAAApN,IAAA,iBACA,GAAiCuW,GAAA7F,EAAAqC,yBAEjC,QAAAwD,GACA5I,EAAA2I,iBAAA,eAAAC,GAIA7F,EAAAlD,eACAG,EAAAH,aAAAkD,EAAAlD,aAAAxc,cAGA,IAA6BwlB,GAAA9F,EAAAoC,gBAOA2D,EAAA,KAGAC,EAAA,WAC7B,UAAAD,EACA,MAAAA,EAGA,IAAiC3R,GAAA,OAAA6I,EAAA7I,OAAA,IAAA6I,EAAA7I,OACA4O,EAAA/F,EAAA+F,YAAA,KAEAtG,EAAA,GAAA4B,GAAArB,EAAAE,yBAGA2E,EAAA9E,eAAAC,IAAA+C,EAAA8B,GAGjC,OADAiE,GAAA,GAAA7G,IAAyDxC,UAAAtI,SAAA4O,aAAAlB,SAM5BmD,EAAA,WAE7B,GAAA7V,GAAA4W,IAAAtJ,EAAAtN,EAAAsN,QAAAtI,EAAAhF,EAAAgF,OAAA4O,EAAA5T,EAAA4T,WAAAlB,EAAA1S,EAAA0S,IAEiCrF,EAAA,IACjC,OAAArI,GAKA,iBAHAqI,MAAA,KAAAQ,EAAAgJ,SAAAhJ,EAAAiJ,aAAAjJ,EAAAgJ,YAIAxJ,IAAAvyC,QAAAq7C,EAAA,KAIA,IAAAnR,IACAA,EAAAqI,EAAA,MAMA,IAAiCwG,GAAA7O,GAAA,KAAAA,EAAA,GAGjC,IAAA6O,GAAA,gBAAAxG,IAAA,SAAAuD,EAAAlD,aAEA,IACAL,EAAAx4C,KAAAC,MAAAu4C,GAEA,MAAAyG,GAEAD,GAAA,EAEAxG,GAAiCyG,QAAAp5C,KAAA2yC,GAGjCwG,GAEAsB,EAAA9G,KAAA,GAAA0B,IACA1C,OACAC,UACAtI,SACA4O,aACAlB,WAAAzd,MAIAkgB,EAAAW,YAIAX,EAAArB,MAAA,GAAAlE,IAEAkE,MAAAzG,EACAC,UACAtI,SACA4O,aACAlB,WAAAzd,OAO6B8gB,EAAA,SAAAjC,GAC7B,GAAiCpjB,GAAA,GAAAkf,IACjCkE,QACA9O,OAAA6I,EAAA7I,QAAA,EACA4O,WAAA/F,EAAA+F,YAAA,iBAEAuB,GAAArB,MAAApjB,IAM6BqmB,GAAA,EAGAC,EAAA,SAAA5C,GAE7B2C,IACA5B,EAAA9G,KAAAuI,KACAG,GAAA,EAIA,IAAiCE,IACjC1Z,KAAAsS,EAAA0D,iBACA2D,OAAA9C,EAAA8C,OAGA9C,GAAA+C,mBACAF,EAAAG,MAAAhD,EAAAgD,OAKA,SAAAxG,EAAAlD,cAAAG,EAAAiJ,eACAG,EAAAI,YAAAxJ,EAAAiJ,cAGA3B,EAAA9G,KAAA4I,IAI6BK,EAAA,SAAAlD,GAG7B,GAAiCmD,IACjCha,KAAAsS,EAAAwD,eACA6D,OAAA9C,EAAA8C,OAIA9C,GAAA+C,mBACAI,EAAAH,MAAAhD,EAAAgD,OAGAjC,EAAA9G,KAAAkJ,GAmBA,OAhBA1J,GAAAmI,iBAAA,OAAAH,GACAhI,EAAAmI,iBAAA,QAAAD,GAEAnF,EAAAnD,iBAEAI,EAAAmI,iBAAA,WAAAgB,GAEA,OAAAN,GAAA7I,EAAA2J,QACA3J,EAAA2J,OAAAxB,iBAAA,WAAAsB,IAIAzJ,EAAA4J,KAAAf,GACAvB,EAAA9G,MAA2B9Q,KAAAsS,EAAAuD,OAG3B,WAEAvF,EAAAqI,oBAAA,QAAAH,GACAlI,EAAAqI,oBAAA,OAAAL,GACAjF,EAAAnD,iBACAI,EAAAqI,oBAAA,WAAAc,GACA,OAAAN,GAAA7I,EAAA2J,QACA3J,EAAA2J,OAAAtB,oBAAA,WAAAoB,IAIAzJ,EAAA6J,YAIAzH,iBAEAA,GAAA3iD,aACKiwC,KAAArN,EAAA,aAKL+f,EAAArS,eAAA,WAA6C,QACxCL,KAAA2S;;;;;;;AASL,GAAAO,GAAA,GAAAvgB,GAAA,mCACAwgB,EAAA,GAAAxgB,GAAA,mCAOAigB,EAAA,WACA,QAAAA,2BAUA,MADAA,wBAAA9/C,UAAAsnD,SAAA,aACAxH,0BAKAI,EAAA,WAMA,QAAAA,yBAAAqH,EAAAC,EAAAC,GACAzqD,KAAAuqD,MACAvqD,KAAAwqD,WACAxqD,KAAAyqD,aACAzqD,KAAA0qD,iBAAA,GACA1qD,KAAA2qD,UAAA,KAIA3qD,KAAA4qD,WAAA,EAiBA,MAZA1H,yBAAAlgD,UAAAsnD,SAAA,WACA,cAAAtqD,KAAAwqD,SACA,WAEA,IAAyBK,GAAA7qD,KAAAuqD,IAAAO,QAAA,EAMzB,OALAD,KAAA7qD,KAAA0qD,mBACA1qD,KAAA4qD,aACA5qD,KAAA2qD,UAAA7qD,EAAAgB,EAAA2gD,EAAA,sBAAAoJ,EAAA7qD,KAAAyqD,YACAzqD,KAAA0qD,iBAAAG,GAEA7qD,KAAA2qD,WAEAzH,0BAEAA,GAAAjjD,aACKiwC,KAAArN,EAAA,aAKLqgB,EAAA3S,eAAA,WAAsD,QACjDL,SAAAtI,GAAA3nC,aAAgCiwC,KAAArN,EAAA,OAAAsN,MAAAsR,EAAA,cAChCvR,SAAAtI,GAAA3nC,aAAgCiwC,KAAArN,EAAA,OAAAsN,MAAAtN,EAAA,iBAChCqN,SAAAtI,GAAA3nC,aAAgCiwC,KAAArN,EAAA,OAAAsN,MAAAiT,OAKrC,IAAAD,GAAA,WAKA,QAAAA,qBAAA4H,EAAAC,GACAhrD,KAAA+qD,eACA/qD,KAAAgrD,aAwBA,MAjBA7H,qBAAAngD,UAAAskD,UAAA,SAAA/D,EAAAvC,GACA,GAAyBiK,GAAA1H,EAAA8B,IAAAxhB,aAKzB,YAAA0f,EAAA/D,QAAA,SAAA+D,EAAA/D,QAAAyL,EAAAC,WAAA,YACAD,EAAAC,WAAA,YACA,MAAAlK,GAAAsC,OAAAC,EAEA,IAAyB4H,GAAAnrD,KAAA+qD,aAAAT,UAKzB,OAHA,QAAAa,GAAA5H,EAAAtD,QAAApN,IAAA7yC,KAAAgrD,cACAzH,IAAAW,OAA6BjE,QAAAsD,EAAAtD,QAAA3N,IAAAtyC,KAAAgrD,WAAAG,MAE7BnK,EAAAsC,OAAAC,IAEAJ,sBAEAA,GAAAljD,aACKiwC,KAAArN,EAAA,aAKLsgB,EAAA5S,eAAA,WAAkD,QAC7CL,KAAA4S,IACA5S,SAAAtI,GAAA3nC,aAAgCiwC,KAAArN,EAAA,OAAAsN,MAAAkT,OAsDrC,IAAAlB,GAAA,WACA,QAAAA,yBA8BA,MAxBAA,sBAAAt+C,QAAA,WACA,OACAwI,SAAA81C,qBACA71C,YACiBC,QAAA42C,EAAAiI,SAAArI,MAUjBZ,qBAAAkJ,YAAA,SAAA7X,GAEA,WADA,KAAAA,IAAiCA,OAEjCnnC,SAAA81C,qBACA71C,WACAknC,EAAAiX,YAAsCl+C,QAAA62C,EAAA52C,SAAAgnC,EAAAiX,eACtCjX,EAAAwX,YAAsCz+C,QAAA82C,EAAA72C,SAAAgnC,EAAAwX,kBAItC7I,uBAEAA,GAAAliD,aACKiwC,KAAArN,EAAA,SAAAsN,OACL7jC,WACA62C,GACqB52C,QAAAu1C,EAAApS,YAAAyT,EAAAxT,OAAA,IACApjC,QAAAu2C,EAAAsI,SAAAlI,IACA32C,QAAA62C,EAAA52C,SAAA,eACAD,QAAA82C,EAAA72C,SAAA,qBAOrB21C,EAAA5R,eAAA,WAAmD,SASnD,IAAA2R,GAAA,WACA,QAAAA,qBAEA,MAAAA,oBAEAA,GAAAjiD,aACKiwC,KAAArN,EAAA,SAAAsN,OACLrjC,SACAq1C,EAAAkJ,aACAZ,WAAA,aACAO,WAAA,kBAGA1+C,WACA9H,GAIA+H,QAAAq1C,EACA0J,WAAA1K,oBACA2K,MAAA5J,GAAA,GAAA9e,GAAA,YAAAA,GAAA,OAAAif,MAEAc,GACqBr2C,QAAAo1C,EAAAjS,YAAAkT,GACrBK,GACqB12C,QAAAs2C,EAAAnT,YAAAuT,QAOrBf,EAAA3R,eAAA,WAA+C,SAS/C,IAAA0R,GAAA,WACA,QAAAA,0BAEA,MAAAA,yBAEAA,GAAAhiD,aACKiwC,KAAArN,EAAA,SAAAsN,OACL7jC,WACAy1C,GACqBx1C,QAAAy2C,EAAAsI,WAAAnK,uBACA50C,QAAAu1C,EAAAsJ,SAAApJ,EAAArS,OAAA,QAOrBsS,EAAA1R,eAAA,WAAoD,WpBurP9Cib,GACA,SAAU5rD,EAAQC,EAASC,GAEjC,YAEAY,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,KqBjwTtD,SAAYqqD,GACRA,IAAA,aACAA,IAAA,kBACAA,IAAA,cACAA,IAAA,kBACAA,IAAA,sBACAA,IAAA,0BACAA,IAAA,0BAPQ5rD,EAAA4rD,UAAA5rD,EAAA4rD,YAUZ,IAAArjD,GAAA,mBAAAA,kBACIpI,KAAA0rD,aAAe,GACf1rD,KAAA2rD,iBAAmB,GACvB,MAAAvjD,kBAHavI,GAAAuI,kBrB8wTPwjD,GACA,SAAUhsD,EAAQ2iC,EAAqBziC,GAE7C,YsBx7SA,SAAA+rD,mBAAA1L,GACA,UAAA2L,GAAA3L,GAOA,QAAA4L,0BAAAtlB,GACA,GAAqBggB,GAAAx6C,MAAA,6BAAAw6B,EAErB,OADA,GAAAulB,IAAA,EACAvF,EAMA,QAAAwF,4BAAAxF,GACA,SAAAuF,GAQA,QAAAE,mBAAAC,EAAAC,EAAA5qD,GACA,GAAqB6qD,GAAA7qD,EAAA,KAAA8iC,MAAA,IACrB,IAAA+nB,EAAA7rD,OAAA2rD,EAAA3rD,OAEA,WAEA,aAAAgB,EAAA8qD,YACAF,EAAAG,eAAAF,EAAA7rD,OAAA2rD,EAAA3rD,QAEA,WAIA,QAFqBgsD,MAEKxhD,EAAA,EAAcA,EAAAqhD,EAAA7rD,OAAsBwK,IAAA,CAC9D,GAAyByhD,GAAAJ,EAAArhD,GACA0hD,EAAAP,EAAAnhD,EAEzB,IADyByhD,EAAAvB,WAAA,KAEzBsB,EAAAC,EAAAE,UAAA,IAAAD,MAEA,IAAAD,IAAAC,EAAA9lB,KAEA,YAGA,OAAYgmB,SAAAT,EAAAllD,MAAA,EAAAolD,EAAA7rD,QAAAgsD,aAyBZ,QAAAK,gBAAAzgD,EAAA0gD,OACA,KAAAA,IAAgCA,EAAA,GAEhC,QAA0BhsD,GAAA,EAAUA,EAAAsL,EAAA5L,OAAmBM,IAAA,CACvD,GAAyBU,GAAA4K,EAAAtL,EAEzBisD,cAAAvrD,EADyBwrD,YAAAF,EAAAtrD,KASzB,QAAAurD,cAAAvrD,EAAAyrD,GACA,IAAAzrD,EACA,SAAAyK,OAAA,2CAAAghD,EAAA,kWAEA,IAAA/kB,MAAAK,QAAA/mC,GACA,SAAAyK,OAAA,mCAAAghD,EAAA,+BAEA,KAAAzrD,EAAA0rD,WAAA1rD,EAAA2rD,QAAA3rD,EAAA2rD,SAAAC,EACA,SAAAnhD,OAAA,mCAAAghD,EAAA,0DAEA,IAAAzrD,EAAA6rD,YAAA7rD,EAAA8rD,SACA,SAAArhD,OAAA,mCAAAghD,EAAA,qDAEA,IAAAzrD,EAAA6rD,YAAA7rD,EAAA+rD,aACA,SAAAthD,OAAA,mCAAAghD,EAAA,yDAEA,IAAAzrD,EAAA8rD,UAAA9rD,EAAA+rD,aACA,SAAAthD,OAAA,mCAAAghD,EAAA,uDAEA,IAAAzrD,EAAA6rD,YAAA7rD,EAAA0rD,UACA,SAAAjhD,OAAA,mCAAAghD,EAAA,sDAEA,IAAAzrD,EAAAolC,MAAAplC,EAAAgsD,QACA,SAAAvhD,OAAA,mCAAAghD,EAAA,8CAEA,aAAAzrD,EAAA6rD,aAAA7rD,EAAA0rD,YAAA1rD,EAAA8rD,WAAA9rD,EAAA+rD,aACA,SAAAthD,OAAA,mCAAAghD,EAAA,4FAEA,aAAAzrD,EAAAolC,UAAA,KAAAplC,EAAAgsD,QACA,SAAAvhD,OAAA,mCAAAghD,EAAA,2DAEA,oBAAAzrD,GAAAolC,MAAA,MAAAplC,EAAAolC,KAAA6mB,OAAA,GACA,SAAAxhD,OAAA,mCAAAghD,EAAA,oCAEA,SAAAzrD,EAAAolC,UAAA,KAAAplC,EAAA6rD,gBAAA,KAAA7rD,EAAA8qD,UAAA,CAEA,SAAArgD,OAAA,4CAA0DghD,EAAA,mBAAAzrD,EAAA6rD,WAAA,qCADjC,wFAGzB,YAAA7rD,EAAA8qD,WAAA,SAAA9qD,EAAA8qD,WAAA,WAAA9qD,EAAA8qD,UACA,SAAArgD,OAAA,mCAAAghD,EAAA,qDAEAzrD,GAAA8rD,UACAT,eAAArrD,EAAA8rD,SAAAL,GAQA,QAAAD,aAAAF,EAAAY,GACA,MAAAA,GAGAZ,GAAAY,EAAA9mB,KAGAkmB,IAAAY,EAAA9mB,KACAkmB,EAAA,KAEAA,GAAAY,EAAA9mB,KACA8mB,EAAA9mB,KAGAkmB,EAAA,IAAAY,EAAA9mB,KATA,GAHAkmB;;;;;;;AA2BA,QAAAa,oBAAApgD,EAAAqgD,GACA,GAAArgD,EAAA/M,SAAAotD,EAAAptD,OACA,QACA,QAA0BM,GAAA,EAAUA,EAAAyM,EAAA/M,SAAcM,EAClD,IAAA+sD,aAAAtgD,EAAAzM,GAAA8sD,EAAA9sD,IACA,QAEA,UAOA,QAAA+sD,cAAAtgD,EAAAqgD,GACA,GAAqBE,GAAAptD,OAAA8iC,KAAAj2B,GACAwgD,EAAArtD,OAAA8iC,KAAAoqB,EACrB,IAAAE,EAAAttD,QAAAutD,EAAAvtD,OACA,QAGA,QADqBL,GACKW,EAAA,EAAUA,EAAAgtD,EAAAttD,OAAeM,IAEnD,GADAX,EAAA2tD,EAAAhtD,GACAyM,EAAApN,KAAAytD,EAAAztD,GACA,QAGA,UAOA,QAAA6tD,SAAAC,GACA,MAAA/lB,OAAAllC,UAAA2hC,OAAAqJ,SAAAigB,GAOA,QAAAC,QAAA3gD,GACA,MAAAA,GAAA/M,OAAA,EAAA+M,IAAA/M,OAAA,QAYA,QAAAiG,SAAAu4C,EAAA+I,GACA,OAA0BoG,KAAAnP,GAC1BA,EAAAp2C,eAAAulD,IACApG,EAAA/I,EAAAmP,MAUA,QAAAC,YAAAC,EAAApe,GACA,OAAAvvC,OAAA8iC,KAAA6qB,GAAA7tD,OACA,MAAAV,GAAAgB,EAAAwtD,EAAA,OAEA,IAAqBC,MACAC,KACAnrB,IACrB58B,SAAA4nD,EAAA,SAAA9gD,EAAAtM,GACA,GAAyBwtD,GAAAC,EAAA,IAAA7lD,KAAAonC,EAAAhvC,EAAAsM,GAAA,SAAA9M,GAA8C,MAAA4iC,GAAApiC,GAAAR,GACvEQ,KAAAmsD,EACAmB,EAAAxoD,KAAA0oD,GAGAD,EAAAzoD,KAAA0oD,IAGA,IAAqBE,GAAAC,EAAA,UAAA/lD,KAAAylD,EAAA,GAAAtgB,UAAA,GAAAugB,EAAA5pB,OAAA6pB,KACAK,EAAAC,EAAA,KAAAjmD,KAAA8lD,EACrB,OAAAD,GAAA,IAAA7lD,KAAAgmD,EAAA,WAAwC,MAAAxrB,KAMxC,QAAA0rB,gBAAAtf,GACA,GAAqBuf,GAAAC,EAAA,SAAApmD,KAAA4mC,EACrB,OAAAyf,GAAA,MAAArmD,KAAAmmD,EAAA,SAAAG,GAAkD,WAAAA,IAOlD,QAAAC,oBAAAhuD,GACA,MAAAtB,GAAAgB,EAAAuuD,EAAA,kBAAAjuD,GACAA,EAEAtB,EAAAgB,EAAAuuD,EAAA,eAAAjuD,GAIAtB,EAAAgB,EAAAwuD,EAAA,aAAAhW,QAAAC,QAAAn4C,IAEAtB,EAAAgB,EAAAwtD,EAAA,IAA2B;;;;;;;AAY3B,QAAAiB,sBACA,UAAAC,GAAA,GAAAC,aAAsD,MAQtD,QAAAC,cAAA7V,EAAA8V,EAAAC,GACA,MAAAA,GACAC,iBAAAhW,EAAAiW,YAAAH,EAAAG,cACAC,mBAAAlW,EAAAmW,KAAAL,EAAAK,MAEAC,oBAAApW,EAAAiW,YAAAH,EAAAG,cACAI,qBAAArW,EAAAmW,KAAAL,EAAAK,MAOA,QAAAH,kBAAAhW,EAAA8V,GACA,MAAA9B,cAAAhU,EAAA8V,GAOA,QAAAI,oBAAAlW,EAAA8V,GACA,IAAAQ,UAAAtW,EAAAsS,SAAAwD,EAAAxD,UACA,QACA,IAAAtS,EAAAuW,mBAAAT,EAAAS,iBACA,QACA,QAA0B9vD,KAAAqvD,GAAArC,SAAA,CAC1B,IAAAzT,EAAAyT,SAAAhtD,GACA,QACA,KAAAyvD,mBAAAlW,EAAAyT,SAAAhtD,GAAAqvD,EAAArC,SAAAhtD,IACA,SAEA,SAOA,QAAA2vD,qBAAApW,EAAA8V,GACA,MAAAjvD,QAAA8iC,KAAAmsB,GAAAnvD,QAAAE,OAAA8iC,KAAAqW,GAAAr5C,QACAE,OAAA8iC,KAAAmsB,GAAAU,MAAA,SAAAlwD,GAAqD,MAAAwvD,GAAAxvD,KAAA05C,EAAA15C,KAOrD,QAAA+vD,sBAAArW,EAAA8V,GACA,MAAAW,4BAAAzW,EAAA8V,IAAAxD,UAQA,QAAAmE,4BAAAzW,EAAA8V,EAAAY,GACA,GAAA1W,EAAAsS,SAAA3rD,OAAA+vD,EAAA/vD,OAAA,CACA,GAAyBgwD,GAAA3W,EAAAsS,SAAAllD,MAAA,EAAAspD,EAAA/vD,OACzB,SAAA2vD,UAAAK,EAAAD,KAEAZ,EAAApD,cAIA,GAAA1S,EAAAsS,SAAA3rD,SAAA+vD,EAAA/vD,OAAA,CACA,IAAA2vD,UAAAtW,EAAAsS,SAAAoE,GACA,QACA,QAA8BjwD,KAAAqvD,GAAArC,SAAA,CAC9B,IAAAzT,EAAAyT,SAAAhtD,GACA,QACA,KAAA4vD,qBAAArW,EAAAyT,SAAAhtD,GAAAqvD,EAAArC,SAAAhtD,IACA,SAEA,SAGA,GAAyBkwD,GAAAD,EAAAtpD,MAAA,EAAA4yC,EAAAsS,SAAA3rD,QACAwgD,EAAAuP,EAAAtpD,MAAA4yC,EAAAsS,SAAA3rD,OACzB,SAAA2vD,UAAAtW,EAAAsS,SAAAqE,OAEA3W,EAAAyT,SAAAF,IAEAkD,2BAAAzW,EAAAyT,SAAAF,GAAAuC,EAAA3O,IAsKA,QAAAyP,eAAAC,EAAAC,GACA,MAAAR,WAAAO,EAAAC,IAAAD,EAAAL,MAAA,SAAA9iD,EAAAzM,GAA0D,MAAA+sD,cAAAtgD,EAAAqjD,WAAAD,EAAA7vD,GAAA8vD,cAO1D,QAAAT,WAAAO,EAAAC,GACA,MAAAD,GAAAlwD,SAAAmwD,EAAAnwD,QAEAkwD,EAAAL,MAAA,SAAA9iD,EAAAzM,GAAqC,MAAAyM,GAAAq5B,OAAA+pB,EAAA7vD,GAAA8lC,OAQrC,QAAAiqB,sBAAAnE,EAAAzc,GACA,GAAqB5M,KAWrB,OAVA58B,SAAAimD,EAAAY,SAAA,SAAAwD,EAAAC,GACAA,IAAA3D,IACA/pB,IAAAsB,OAAAsL,EAAA6gB,EAAAC,OAGAtqD,QAAAimD,EAAAY,SAAA,SAAAwD,EAAAC,GACAA,IAAA3D,IACA/pB,IAAAsB,OAAAsL,EAAA6gB,EAAAC,OAGA1tB,EAgFA,QAAA2tB,gBAAAtE,GACA,MAAAA,GAAAP,SAAA/mD,IAAA,SAAAuD,GAA8C,MAAAsoD,eAAAtoD,KAA2Bg+B,KAAA,KAOzE,QAAAuqB,kBAAAxE,EAAAsD,GACA,IAAAtD,EAAAH,cACA,MAAAyE,gBAAAtE,EAEA,IAAAsD,EAAA,CACA,GAAyBmB,GAAAzE,EAAAY,SAAAF,GACzB8D,iBAAAxE,EAAAY,SAAAF,IAAA,GACA,GACyBgE,IAMzB,OALA3qD,SAAAimD,EAAAY,SAAA,SAAApsD,EAAAD,GACAA,IAAAmsD,GACAgE,EAAArrD,KAAA9E,EAAA,IAAAiwD,iBAAAhwD,GAAA,MAGAkwD,EAAA5wD,OAAA,EAAA2wD,EAAA,IAAAC,EAAAzqB,KAAA,UAAAwqB,EAGA,GAAyB7D,GAAAuD,qBAAAnE,EAAA,SAAAxrD,EAAAD,GACzB,MAAAA,KAAAmsD,GACA8D,iBAAAxE,EAAAY,SAAAF,IAAA,KAEAnsD,EAAA,IAAAiwD,iBAAAhwD,GAAA,KAEA,OAAA8vD,gBAAAtE,GAAA,KAAAY,EAAA3mB,KAAA,UAgBA,QAAA0qB,QAAA5oD,GACA,MAAA62C,oBAAA72C,GACAgF,QAAA,YACAA,QAAA,aACAA,QAAA,YACAA,QAAA,aACAA,QAAA,aAMA,QAAA6jD,QAAA7oD,GACA,MAAAi7C,oBAAAj7C,GAMA,QAAAwoD,eAAArqB,GACA,SAAAyqB,OAAAzqB,QAAA2qB,gBAAA3qB,EAAAgqB,YAMA,QAAAW,iBAAApR,GACA,MAAAz/C,QAAA8iC,KAAA2c,GAAA/6C,IAAA,SAAAjF,GAAmD,UAAUkxD,OAAAlxD,GAAA,IAAAkxD,OAAAlR,EAAAhgD,MAA8CwmC,KAAA,IAM3G,QAAA6qB,sBAAArR,GACA,GAAqBsR,GAAA/wD,OAAA8iC,KAAA2c,GAAA/6C,IAAA,SAAA1C,GACrB,GAAyBtB,GAAA++C,EAAAz9C,EACzB,OAAAwlC,OAAAK,QAAAnnC,KAAAgE,IAAA,SAAAlE,GAA8D,MAAAmwD,QAAA3uD,GAAA,IAAA2uD,OAAAnwD,KAAyCylC,KAAA,KACvG0qB,OAAA3uD,GAAA,IAAA2uD,OAAAjwD,IAEA,OAAAqwD,GAAAjxD,OAAA,IAAAixD,EAAA9qB,KAAA,QAOA,QAAA+qB,eAAAC,GACA,GAAqBrkD,GAAAqkD,EAAArkD,MAAAskD,EACrB,OAAAtkD,KAAA,MAOA,QAAAukD,kBAAAF,GACA,GAAqBrkD,GAAAqkD,EAAArkD,MAAAwkD,EACrB,OAAAxkD,KAAA,MAOA,QAAAykD,yBAAAJ,GACA,GAAqBrkD,GAAAqkD,EAAArkD,MAAA0kD,EACrB,OAAA1kD,KAAA,MAuOA,QAAA2kD,SAAA7F,GACA,UAAA8F,GAAA,oBAAAtvB,GAA0C,MAAAA,GAAA6jB,MAAA,GAAA0L,GAAA/F,MAM1C,QAAAgG,kBAAAC,GACA,UAAAH,GAAA,oBAAAtvB,GAA0C,MAAAA,GAAA6jB,MAAA,GAAA6L,GAAAD,MAM1C,QAAAE,sBAAAlF,GACA,UAAA6E,GAAA,oBAAAtvB,GAA0C,MAAAA,GAAA6jB,MAAA,GAAAx6C,OAAA,gEAAAohD,EAAA,QAM1C,QAAAmF,cAAAhxD,GACA,UAAA0wD,GAAA,oBAAAtvB,GAA0C,MAAAA,GAAA6jB,MAAAsF,yBAAA,gEAAAvqD,EAAAolC,KAAA,yBAa1C,QAAA6rB,gBAAAC,EAAAC,EAAAC,EAAAC,EAAAzmD,GACA,UAAA0mD,GAAAJ,EAAAC,EAAAC,EAAAC,EAAAzmD,GAAA4hC,QAmZA,QAAA+kB,iBAAAL,EAAAlxD,GACA,GAAqBwxD,GAAAxxD,EAAAwxD,OACrB,OAAAA,IAAA,IAAAA,EAAAxyD,OAMAuuD,eAJqBL,EAAA,IAAA7lD,KAAA/I,EAAAgB,EAAAmyD,EAAA,MAAAD,GAAA,SAAAE,GACrB,GAAyBC,GAAAT,EAAA1uD,IAAAkvD,EACzB,OAAA9D,oBAAA+D,EAAAH,QAAAG,EAAAH,QAAAxxD,GAAA2xD,EAAA3xD,OAHA1B,EAAAgB,EAAAwtD,EAAA,QAaA,QAAAhhD,OAAA8+C,EAAA5qD,EAAA2qD,GACA,QAAA3qD,EAAAolC,KACA,eAAAplC,EAAA8qD,YAAAF,EAAAG,eAAAJ,EAAA3rD,OAAA,IACoB4yD,SAAA,EAAAC,oBAAAC,UAAA,EAAAC,6BAEJH,SAAA,EAAAC,oBAAAC,UAAA,EAAAC,2BAEhB,IAAqB/F,GAAAhsD,EAAAgsD,SAAAtB,kBACA7oB,EAAAmqB,EAAArB,EAAAC,EAAA5qD,EACrB,OAAA6hC,IASA+vB,SAAA,EACAC,iBAAuChwB,EAAA,SACvCiwB,UAAgCjwB,EAAAupB,SAAA,OAChC2G,wBAA8ClwB,EAAA,YAV9C+vB,SAAA,EACAC,oBACAC,UAAA,EACAC,4BAiBA,QAAAjvB,OAAA8nB,EAAAiH,EAAAG,EAAApnD,GACA,GAAAonD,EAAAhzD,OAAA,GACAizD,2CAAArH,EAAAoH,EAAApnD,GAAA,CACA,GAAyB3D,GAAA,GAAAgnD,GAAA4D,EAAAK,+BAAAtnD,EAAA,GAAAqjD,GAAA+D,EAAApH,EAAAkB,WACzB,QAAgBlB,aAAAuH,qBAAAlrD,GAAA+qD,mBAEhB,OAAAA,EAAAhzD,QACAozD,2BAAAxH,EAAAoH,EAAApnD,GAAA,CACA,GAAyB3D,GAAA,GAAAgnD,GAAArD,EAAAD,SAAA0H,mCAAAzH,EAAAoH,EAAApnD,EAAAggD,EAAAkB,UACzB,QAAgBlB,aAAAuH,qBAAAlrD,GAAA+qD,kBAEhB,OAAYpH,eAAAoH,kBAMZ,QAAAG,sBAAAlrD,GACA,OAAAA,EAAA2nD,kBAAA3nD,EAAA6kD,SAAAF,GAAA,CACA,GAAyB9sD,GAAAmI,EAAA6kD,SAAAF,EACzB,WAAAqC,GAAAhnD,EAAA0jD,SAAAxnB,OAAArkC,EAAA6rD,UAAA7rD,EAAAgtD,UAEA,MAAA7kD,GASA,QAAAorD,oCAAAzH,EAAAoH,EAAAM,EAAAxG,GAEA,OADqBjqB,MACrBqP,EAAA,EAAAqhB,EAAAD,EAAuCphB,EAAAqhB,EAAAvzD,OAAsBkyC,IAAA,CAC7D,GAAAjyC,GAAAszD,EAAArhB,EACAshB,qBAAA5H,EAAAoH,EAAA/yD,KAAA6sD,EAAA2G,UAAAxzD,MACA4iC,EAAA4wB,UAAAxzD,IAAA,GAAAgvD,WAGA,MAAA/uD,QAAA6H,UAA2B+kD,EAAAjqB,GAO3B,QAAAqwB,gCAAAI,EAAAI,GACA,GAAqB7wB,KACrBA,GAAA+pB,GAAA8G,CACA,QAAAxhB,GAAA,EAAAyhB,EAAAL,EAAuCphB,EAAAyhB,EAAA3zD,OAAsBkyC,IAAA,CAC7D,GAAAjyC,GAAA0zD,EAAAzhB,EACA,MAAAjyC,EAAAmmC,MAAAqtB,UAAAxzD,KAAA2sD,IACA/pB,EAAA4wB,UAAAxzD,IAAA,GAAAgvD,WAGA,MAAApsB,GAQA,QAAAowB,4CAAArH,EAAAD,EAAA2H,GACA,MAAAA,GAAAvsB,KAAA,SAAA9mC,GAAqC,MAAAuzD,qBAAA5H,EAAAD,EAAA1rD,IAAAwzD,UAAAxzD,KAAA2sD,IAQrC,QAAAwG,4BAAAxH,EAAAD,EAAA2H,GACA,MAAAA,GAAAvsB,KAAA,SAAA9mC,GAAqC,MAAAuzD,qBAAA5H,EAAAD,EAAA1rD,KAQrC,QAAAuzD,qBAAA5H,EAAAD,EAAA1rD,GACA,SAAA2rD,EAAAG,eAAAJ,EAAA3rD,OAAA,aAAAC,EAAA6rD,aAGA,KAAA7rD,EAAAmmC,UAAAgB,KAAAnnC,EAAA4sD,YAMA,QAAA4G,WAAAzyD,GACA,MAAAA,GAAA2rD,QAAAC,EA6EA,QAAAgH,UAAAhzD,EAAA4mD,GACA,GAAA5mD,IAAA4mD,EAAA5mD,MACA,MAAA4mD,EACA,QAAAtV,GAAA,EAAAC,EAAAqV,EAAAsF,SAAwC5a,EAAAC,EAAAnyC,OAAgBkyC,IAAA,CACxD,GAAAoe,GAAAne,EAAAD,GACyB2hB,EAAAD,SAAAhzD,EAAA0vD,EACzB,IAAAuD,EACA,MAAAA,GAEA,YAQA,QAAAC,UAAAlzD,EAAA4mD,GACA,GAAA5mD,IAAA4mD,EAAA5mD,MACA,OAAA4mD,EACA,QAAAtV,GAAA,EAAAC,EAAAqV,EAAAsF,SAAwC5a,EAAAC,EAAAnyC,OAAgBkyC,IAAA,CACxD,GAAAoe,GAAAne,EAAAD,GACyB9L,EAAA0tB,SAAAlzD,EAAA0vD,EACzB,IAAAlqB,EAAApmC,OAEA,MADAomC,GAAA2tB,QAAAvM,GACAphB,EAGA,SA0EA,QAAA4tB,kBAAA3B,EAAA4B,GACA,GAAqBC,GAAAC,yBAAA9B,EAAA4B,GACAG,EAAA,GAAAC,GAAA,oBAAAC,GAAA,SACAC,EAAA,GAAAF,GAAA,oBACAG,EAAA,GAAAH,GAAA,oBACAI,EAAA,GAAAJ,GAAA,oBACAK,EAAA,GAAAL,GAAA,oBACAM,EAAA,GAAAnzD,IAAA4yD,EAAAG,EAAAE,EAAAC,EAAAF,EAAA5H,EAAAqH,EAAAC,EAAA1E,KAErB,OADAmF,GAAAT,WAAA1E,KACA,GAAAoF,IAAA,GAAAC,IAAAF,MAAAT,GAOA,QAAAC,0BAAA9B,EAAA4B,GACA,GAAqBM,MACAC,KACAC,KACAC,EAAA,GACAC,EAAA,GAAAG,OAAAP,EAAAE,EAAAC,EAAAF,EAAA5H,EAAAqH,EAAA,KAAA5B,EAAA7C,MAAA,KACrB,WAAAuF,IAAA,MAAAF,IAAAF,OA2IA,QAAAK,4BAAAh0D,GAGA,IAFA,GAAqBi0D,GAAAj0D,EAAAk0D,aACAC,EAAAF,EAAAj1D,OAAA,EACrBm1D,GAAA,IACA,GAAyBnF,GAAAiF,EAAAE,GACAjxB,EAAA+wB,EAAAE,EAAA,EAEzB,IAAAnF,EAAAoF,aAAA,KAAApF,EAAAoF,YAAAhvB,KACA+uB,QAGA,IAAAjxB,EAAAwoB,UAIA,KAHAyI,MAMA,MAAAF,GAAAxuD,MAAA0uD,GAAAryB,OAAA,SAAAD,EAAAwyB,GAIA,OAAgB1V,OAHSz/C,OAAA6H,UAA6B86B,EAAA8c,OAAA0V,EAAA1V,QAGtCz+C,KAFShB,OAAA6H,UAA2B86B,EAAA3hC,KAAAm0D,EAAAn0D,MAEpC63C,QADS74C,OAAA6H,UAA8B86B,EAAAkW,QAAAsc,EAAAC,kBAE7B3V,UAAWz+C,QAAU63C,aA+L/C,QAAAwc,gBAAAC,EAAAhO,GACAA,EAAA5mD,MAAA60D,aAAAD,EACAhO,EAAAsF,SAAA7mD,QAAA,SAAAnG,GAAwC,MAAAy1D,gBAAAC,EAAA11D,KAMxC,QAAA41D,eAAAlO,GACA,GAAqB1nD,GAAA0nD,EAAAsF,SAAA9sD,OAAA,QAAsCwnD,EAAAsF,SAAAloD,IAAA8wD,eAAAvvB,KAAA,YAAsD,EACjH,UAAAqhB,EAAA5mD,MAAAd,EASA,QAAA61D,uBAAA30D,GACA,GAAAA,EAAAkzD,SAAA,CACA,GAAyB0B,GAAA50D,EAAAkzD,SACA2B,EAAA70D,EAAA80D,eACzB90D,GAAAkzD,SAAA2B,EACAxI,aAAAuI,EAAAtG,YAAAuG,EAAAvG,cACAtuD,EAAA,YAAAw/C,KAAAqV,EAAAvG,aAEAsG,EAAAlB,WAAAmB,EAAAnB,UACA1zD,EAAA,SAAAw/C,KAAAqV,EAAAnB,UAEArH,aAAAuI,EAAAjW,OAAAkW,EAAAlW,SACA3+C,EAAA,OAAAw/C,KAAAqV,EAAAlW,QAEAwN,mBAAAyI,EAAA/Q,IAAAgR,EAAAhR,MACA7jD,EAAA,IAAAw/C,KAAAqV,EAAAhR,KAEAwI,aAAAuI,EAAA10D,KAAA20D,EAAA30D,OACAF,EAAA,KAAAw/C,KAAAqV,EAAA30D,UAIAF,GAAAkzD,SAAAlzD,EAAA80D,gBAEA90D,EAAA,KAAAw/C,KAAAx/C,EAAA80D,gBAAA50D,MAQA,QAAA60D,2BAAAhpD,EAAAqgD,GACA,GAAqB4I,GAAA3I,aAAAtgD,EAAA4yC,OAAAyN,EAAAzN,SAAAsQ,cAAAljD,EAAA83C,IAAAuI,EAAAvI,KACAoR,GAAAlpD,EAAAm3B,SAAAkpB,EAAAlpB,MACrB,OAAA8xB,KAAAC,KACAlpD,EAAAm3B,QAAA6xB,0BAAAhpD,EAAAm3B,OAAuEkpB,EAAA;;;;;;;AAevE,QAAA8I,mBAAAC,EAAAd,EAAAe,GACA,GAAqB5G,GAAA6G,WAAAF,EAAAd,EAAAiB,MAAAF,IAAAE,UAAAlvB,GACrB,WAAAwtB,IAAApF,EAAA6F,GAQA,QAAAgB,YAAAF,EAAAd,EAAAe,GAEA,GAAAA,GAAAD,EAAAI,iBAAAlB,EAAAz0D,MAAAw1D,EAAAx1D,MAAAszD,UAAA,CACA,GAAyBtzD,GAAAw1D,EAAAx1D,KACzBA,GAAAk1D,gBAAAT,EAAAz0D,KACA,IAAyBksD,GAAA0J,sBAAAL,EAAAd,EAAAe,EACzB,WAAAvB,IAAAj0D,EAAAksD,GAGA,GAAAqJ,EAAAM,SAAApB,EAAAz0D,OAAA,CACA,GAAyB81D,GAAAP,EAAAM,SAAApB,EAAAz0D,OAAAI,KAEzB,OADA21D,qCAAAtB,EAAAqB,GACAA,EAGA,GAAyB91D,GAAAg2D,qBAAAvB,EAAAz0D,OACAksD,EAAAuI,EAAAvI,SAAAloD,IAAA,SAAA9E,GAA+C,MAAAu2D,YAAAF,EAAAr2D,IACxE,WAAA+0D,IAAAj0D,EAAAksD,GAQA,QAAA6J,qCAAAtB,EAAA1G,GACA,GAAA0G,EAAAz0D,MAAAw0D,cAAAzG,EAAA/tD,MAAAw0D,YACA,SAAA3pD,OAAA,wEAEA,IAAA4pD,EAAAvI,SAAA9sD,SAAA2uD,EAAA7B,SAAA9sD,OACA,SAAAyL,OAAA,6EAEAkjD,GAAA/tD,MAAAk1D,gBAAAT,EAAAz0D,KACA,QAA0BN,GAAA,EAAUA,EAAA+0D,EAAAvI,SAAA9sD,SAA0BM,EAC9Dq2D,oCAAAtB,EAAAvI,SAAAxsD,GAAAquD,EAAA7B,SAAAxsD,IASA,QAAAk2D,uBAAAL,EAAAd,EAAAe,GACA,MAAAf,GAAAvI,SAAAloD,IAAA,SAAA0rD,GACA,OAAApe,GAAA,EAAAC,EAAAikB,EAAAtJ,SAAiD5a,EAAAC,EAAAnyC,OAAgBkyC,IAAA,CACjE,GAAA/pC,GAAAgqC,EAAAD,EACA,IAAAikB,EAAAI,iBAAApuD,EAAAvH,MAAAszD,SAAA5D,EAAA1vD,OACA,MAAAy1D,YAAAF,EAAA7F,EAAAnoD,GAGA,MAAAkuD,YAAAF,EAAA7F,KAOA,QAAAsG,sBAAA92D,GACA,UAAA0B,IAAA,GAAA6yD,GAAA,gBAAAv0D,EAAA+kD,KAAA,GAAAwP,GAAA,gBAAAv0D,EAAA6/C,QAAA,GAAA0U,GAAA,gBAAAv0D,EAAAwvD,aAAA,GAAA+E,GAAA,gBAAAv0D,EAAA40D,UAAA,GAAAL,GAAA,gBAAAv0D,EAAAoB,MAAApB,EAAA6sD,OAAA7sD,EAAA4sD,UAAA5sD;;;;;;;AAiBA,QAAA+2D,eAAA71D,EAAAqxD,EAAAyE,EAAAxH,EAAAoF,GACA,OAAAoC,EAAA92D,OACA,MAAA+2D,MAAA1E,EAAA7C,KAAA6C,EAAA7C,KAAA6C,EAAA/C,EAAAoF,EAEA,IAAqBsC,GAAAC,kBAAAH,EACrB,IAAAE,EAAAE,SACA,MAAAH,MAAA1E,EAAA7C,KAAA,GAAAP,UAA4DoD,EAAA/C,EAAAoF,EAE5D,IAAqByC,GAAAC,qBAAAJ,EAAA3E,EAAArxD,GACA4qD,EAAAuL,EAAAE,gBACrBC,2BAAAH,EAAAvL,aAAAuL,EAAA3sD,MAAAwsD,EAAAF,UACAS,mBAAAJ,EAAAvL,aAAAuL,EAAA3sD,MAAAwsD,EAAAF,SACA,OAAAC,MAAAI,EAAAvL,eAAAyG,EAAA/C,EAAAoF,GAMA,QAAA8C,gBAAAC,GACA,sBAAAA,IAAA,MAAAA,MAAAC,UAAAD,EAAAE,YAUA,QAAAZ,MAAAa,EAAAC,EAAAxF,EAAA/C,EAAAoF,GACA,GAAqBoD,KAMrB,OALAxI,IACArpD,QAAAqpD,EAAA,SAAA1uD,EAAAsB,GACA41D,EAAA51D,GAAAwlC,MAAAK,QAAAnnC,KAAAgE,IAAA,SAAAlE,GAAsE,SAAAA,IAAiB,GAAAE,IAGvFyxD,EAAA7C,OAAAoI,EACA,GAAA5I,GAAA6I,EAAAC,EAAApD,GAEA,GAAA1F,GAAA+I,eAAA1F,EAAA7C,KAAAoI,EAAAC,GAAAC,EAAApD,GAQA,QAAAqD,gBAAA/H,EAAAgI,EAAAC,GACA,GAAqBnL,KASrB,OARA7mD,SAAA+pD,EAAAlD,SAAA,SAAAhtD,EAAAo4D,GAEApL,EAAAoL,GADAp4D,IAAAk4D,EACAC,EAGAF,eAAAj4D,EAAAk4D,EAAAC,KAGA,GAAAhJ,GAAAe,EAAArE,SAAAmB,GAiCA,QAAAmK,mBAAAH,GACA,mBAAAA,GAAA,QAAAA,EAAA92D,QAAA,MAAA82D,EAAA,GACA,UAAAqB,KAAA,IAAArB,EAEA,IAAqBsB,GAAA,EACAC,GAAA,EACAx1B,EAAAi0B,EAAAh0B,OAAA,SAAAD,EAAAy1B,EAAAC,GACrB,mBAAAD,IAAA,MAAAA,EAAA,CACA,GAAAA,EAAAZ,QAAA,CACA,GAAiCc,KAIjC,OAHAvyD,SAAAqyD,EAAAZ,QAAA,SAAAZ,EAAA50D,GACAs2D,EAAAt2D,GAAA,gBAAA40D,KAAAhzB,MAAA,KAAAgzB,IAEAj0B,EAAAsB,SAAoCuzB,QAAAc,KAEpC,GAAAF,EAAAX,YACA,MAAA90B,GAAAsB,QAAAm0B,EAAAX,cAGA,sBAAAW,GACAz1B,EAAAsB,QAAAm0B,IAEA,IAAAC,GACAD,EAAAx0B,MAAA,KAAA79B,QAAA,SAAAwyD,EAAAC,GACA,GAAAA,GAAA,MAAAD,IAGA,GAAAC,GAAA,KAAAD,EACAJ,GAAA,EAEA,OAAAI,EACAL,IAEA,IAAAK,GACA51B,EAAAt9B,KAAAkzD,MAGA51B,GAEAA,EAAAsB,QAAAm0B,QAEA,WAAAH,IAAAE,EAAAD,EAAAv1B,GAqBA,QAAAu0B,sBAAAJ,EAAAD,EAAA/1D,GACA,GAAAg2D,EAAAqB,WACA,UAAAM,IAAA5B,EAAAvH,MAAA,IAEA,SAAAxuD,EAAAkzD,SAAA0E,eACA,UAAAD,IAAA33D,EAAAkzD,SAAA2E,aAAA,IAEA,IAAqBC,GAAAtB,eAAAR,EAAAF,SAAA,QACAtsD,EAAAxJ,EAAAkzD,SAAA0E,eAAAE,CACrB,OAAAC,kCAAA/3D,EAAAkzD,SAAA2E,YAAAruD,EAAAwsD,EAAAoB,oBAQA,QAAAW,kCAAAl2D,EAAA2H,EAAA4tD,GAIA,IAHA,GAAqBY,GAAAn2D,EACAo2D,EAAAzuD,EACA0uD,EAAAd,EACrBc,EAAAD,GAAA,CAGA,GAFAC,GAAAD,IACAD,IAAA,QAEA,SAAAvtD,OAAA,0BAEAwtD,GAAAD,EAAArN,SAAA3rD,OAEA,UAAA24D,IAAAK,GAAA,EAAAC,EAAAC,GAMA,QAAAC,SAAA1B,GACA,sBAAAA,IAAA,MAAAA,KAAAC,QACAD,EAAAC,QAAA9K,GAEA,GAAA6K,EAMA,QAAA2B,YAAAtC,GACA,sBAAAA,GAAA,IACA3kB,KAAsBA,EAAAya,GAAAkK,EAAA3kB,OACtB/K,KAAA0vB,EAAA,GAAAY,SACA2B,KAAsBA,EAAAzM,GAAAkK,EAAAuC,GACtBvC,EAAA,GAAAY,OACA,IAAAvlB,GAAAknB,EAQA,QAAA9B,oBAAA3L,EAAA0N,EAAAxC,GAIA,GAHAlL,IACAA,EAAA,GAAAqD,WAEA,IAAArD,EAAAD,SAAA3rD,QAAA4rD,EAAAG,cACA,MAAAuL,4BAAA1L,EAAA0N,EAAAxC,EAEA,IAAqByC,GAAAC,aAAA5N,EAAA0N,EAAAxC,GACA2C,EAAA3C,EAAArwD,MAAA8yD,EAAAG,aACrB,IAAAH,EAAAzsD,OAAAysD,EAAAI,UAAA/N,EAAAD,SAAA3rD,OAAA,CACA,GAAyBg5D,GAAA,GAAA/J,GAAArD,EAAAD,SAAAllD,MAAA,EAAA8yD,EAAAI,cAGzB,OAFAX,GAAAlM,SAAAF,GACA,GAAAqC,GAAArD,EAAAD,SAAAllD,MAAA8yD,EAAAI,WAAA/N,EAAAkB,UACAwK,2BAAA0B,EAAA,EAAAS,GAEA,MAAAF,GAAAzsD,OAAA,IAAA2sD,EAAAz5D,OACA,GAAAivD,GAAArD,EAAAD,aAEA4N,EAAAzsD,QAAA8+C,EAAAG,cACA6N,sBAAAhO,EAAA0N,EAAAxC,GAEAyC,EAAAzsD,MACAwqD,2BAAA1L,EAAA,EAAA6N,GAGAG,sBAAAhO,EAAA0N,EAAAxC,GASA,QAAAQ,4BAAA1L,EAAA0N,EAAAxC,GACA,OAAAA,EAAA92D,OACA,UAAAivD,GAAArD,EAAAD,YAGA,IAAyBkO,GAAAT,WAAAtC,GACAgD,IAWzB,OAVA7zD,SAAA4zD,EAAA,SAAA/C,EAAAnK,GACA,OAAAmK,IACAgD,EAAAnN,GAAA4K,mBAAA3L,EAAAkB,SAAAH,GAAA2M,EAAAxC,MAGA7wD,QAAA2lD,EAAAkB,SAAA,SAAAwD,EAAAC,OACAnpB,KAAAyyB,EAAAtJ,KACAuJ,EAAAvJ,GAAAD,KAGA,GAAArB,GAAArD,EAAAD,SAAAmO,GASA,QAAAN,cAAA5N,EAAA0N,EAAAxC,GAIA,IAHA,GAAqBiD,GAAA,EACAC,EAAAV,EACA7H,GAAe3kD,OAAA,EAAA6sD,UAAA,EAAAD,aAAA,GACpCM,EAAApO,EAAAD,SAAA3rD,QAAA,CACA,GAAA+5D,GAAAjD,EAAA92D,OACA,MAAAyxD,EACA,IAAyBrrB,GAAAwlB,EAAAD,SAAAqO,GACA3E,EAAA8D,QAAArC,EAAAiD,IACAvZ,EAAAuZ,EAAAjD,EAAA92D,OAAA,EAAA82D,EAAAiD,EAAA,OACzB,IAAAC,EAAA,OAAA5yB,KAAAiuB,EACA,KACA,IAAAA,GAAA7U,GAAA,gBAAAA,QAAApZ,KAAAoZ,EAAAkX,QAAA,CACA,IAAAuC,QAAA5E,EAAA7U,EAAApa,GACA,MAAAqrB,EACAsI,IAAA,MAEA,CACA,IAAAE,QAAA5E,KAAiCjvB,GACjC,MAAAqrB,EACAsI,KAEAC,IAEA,OAAYltD,OAAA,EAAA6sD,UAAAK,EAAAN,aAAAK,GAQZ,QAAAH,uBAAAhO,EAAA0N,EAAAxC,GAGA,IAFA,GAAqBoD,GAAAtO,EAAAD,SAAAllD,MAAA,EAAA6yD,GACAh5D,EAAA,EACrBA,EAAAw2D,EAAA92D,QAAA,CACA,mBAAA82D,GAAAx2D,QAAA8mC,KAAA0vB,EAAAx2D,GAAAo3D,QAAA,CACA,GAA6B5K,GAAAqN,yBAAArD,EAAAx2D,GAAAo3D,QAC7B,WAAAzI,GAAAiL,EAAApN,GAGA,OAAAxsD,GAAAk3D,eAAAV,EAAA,KACA,GAA6B3uD,GAAAyjD,EAAAD,SAAA2N,EAC7BY,GAAA30D,KAAA,GAAA+uD,GAAAnsD,EAAAi+B,KAAA0wB,EAAA,KACAx2D,QAHA,CAMA,GAAyB+0D,GAAA8D,QAAArC,EAAAx2D,IACAkgD,EAAAlgD,EAAAw2D,EAAA92D,OAAA,EAAA82D,EAAAx2D,EAAA,OACzB+0D,IAAA7U,GAAAgX,eAAAhX,IACA0Z,EAAA30D,KAAA,GAAA+uD,GAAAe,EAAAnuD,UAAAs5C,KACAlgD,GAAA,IAGA45D,EAAA30D,KAAA,GAAA+uD,GAAAe,OACA/0D,MAGA,UAAA2uD,GAAAiL,MAMA,QAAAC,0BAAAzC,GACA,GAAqB5K,KAMrB,OALA7mD,SAAAyxD,EAAA,SAAAZ,EAAAnK,GACA,OAAAmK,IACAhK,EAAAH,GAAAiN,sBAAA,GAAA3K,UAA+E,EAAA6H,MAG/EhK,EAMA,QAAA5lD,WAAAy4C,GACA,GAAqB9c,KAErB,OADA58B,SAAA05C,EAAA,SAAAj/C,EAAAD,GAAqC,MAAAoiC,GAAApiC,GAAA,GAAAC,IACrCmiC,EAQA,QAAAo3B,SAAA7zB,EAAAuZ,EAAAuM,GACA,MAAA9lB,IAAA8lB,EAAA9lB,MAAAinB,aAAA1N,EAAAuM,EAAAkE,YAqBA,QAAAgK,WAAAC,EAAAzuD,EAAAymD,EAAAxN,GACA,UAAAyV,IAAAD,EAAAzuD,EAAAymD,EAAAxN,GAAAuV,YA0IA,QAAAG,6BAAAC,GACAA,EAAAC,KAAA,SAAA1tD,EAAAqgD,GACA,MAAArgD,GAAAnM,MAAA+rD,SAAAC,GACA,EACAQ,EAAAxsD,MAAA+rD,SAAAC,EACA,EACA7/C,EAAAnM,MAAA+rD,OAAA+N,cAAAtN,EAAAxsD,MAAA+rD,UAOA,QAAAgO,gBAAA35D,GACA,MAAAA,GAAA8rD,SACA9rD,EAAA8rD,SAEA9rD,EAAA+rD,aACA/rD,EAAA,cAAAsyD,UAUA,QAAAsH,SAAAhP,EAAA5qD,EAAA2qD,GACA,QAAA3qD,EAAAolC,KAAA,CACA,YAAAplC,EAAA8qD,YAAAF,EAAAG,eAAAJ,EAAA3rD,OAAA,GACA,SAAA66D,GAEA,QAAgBhI,oBAAAC,UAAA,EAAA1C,eAEhB,GAAqBpD,GAAAhsD,EAAAgsD,SAAAtB,kBACA7oB,EAAAmqB,EAAArB,EAAAC,EAAA5qD,EACrB,KAAA6hC,EACA,SAAAg4B,GACA,IAAqB7O,KACrB/lD,SAAyB48B,EAAA,mBAAAniC,EAAAD,GAAwCurD,EAAAvrD,GAAAC,EAAA0lC,MACjE,IAAqBgqB,GAAAvtB,EAAAupB,SAAApsD,OAAA,EAAAE,OAAA6H,UAA2DikD,EAAAnpB,EAAAupB,SAAAvpB,EAAAupB,SAAApsD,OAAA,GAAAowD,YAChFpE,CACA,QAAY6G,iBAAAhwB,EAAAupB,SAAA0G,UAAAjwB,EAAAupB,SAAApsD,OAAAowD,cAMZ,QAAA0K,2BAAAN,GACA,GAAqBO,KACrBP,GAAAv0D,QAAA,SAAAiC,GACA,GAAyB8yD,GAAAD,EAAA7yD,EAAAtH,MAAA+rD,OACzB,IAAAqO,EAAA,CACA,GAA6B7yD,GAAA6yD,EAAAnW,IAAAjgD,IAAA,SAAAqD,GAAsD,MAAAA,GAAA4mC,aAAuB1I,KAAA,KAC7ErmC,EAAAoI,EAAAtH,MAAAikD,IAAAjgD,IAAA,SAAAqD,GAAsC,MAAAA,GAAA4mC,aAAuB1I,KAAA,IAC1F,UAAA16B,OAAA,mDAAAtD,EAAA,UAAArI,EAAA,MAEAi7D,EAAA7yD,EAAAtH,MAAA+rD,QAAAzkD,EAAAtH,QAOA,QAAAq6D,uBAAArP,GAEA,IADA,GAAqB3jD,GAAA2jD,EACrB3jD,EAAAizD,gBACAjzD,IAAAizD,cAEA,OAAAjzD,GAMA,QAAAkzD,mBAAAvP,GAGA,IAFA,GAAqB3jD,GAAA2jD,EACA/oB,EAAA56B,EAAAmzD,mBAAAnzD,EAAAmzD,mBAAA,EACrBnzD,EAAAizD,gBACAjzD,IAAAizD,eACAr4B,GAAA56B,EAAAmzD,mBAAAnzD,EAAAmzD,mBAAA,CAEA,OAAAv4B,GAAA,EASA,QAAAw4B,SAAAzP,EAAAiH,EAAAG,EAAApnD,GACA,GAAAonD,EAAAhzD,OAAA,GACAs7D,yCAAA1P,EAAAoH,EAAApnD,GAAA,CACA,GAAyB2vD,GAAA,GAAAtM,GAAA4D,EAAA2I,4BAAA5P,EAAAiH,EAAAjnD,EAAA,GAAAqjD,GAAA+D,EAAApH,EAAAkB,WAGzB,OAFAyO,GAAAL,eAAAtP,EACA2P,EAAAH,mBAAAvI,EAAA7yD,QACgB4rD,aAAA2P,EAAAvI,mBAEhB,OAAAA,EAAAhzD,QACAy7D,yBAAA7P,EAAAoH,EAAApnD,GAAA,CACA,GAAyB8vD,GAAA,GAAAzM,GAAArD,EAAAD,SAAAgQ,gCAAA/P,EAAAoH,EAAApnD,EAAAggD,EAAAkB,UAGzB,OAFA4O,GAAAR,eAAAtP,EACA8P,EAAAN,mBAAAvI,EAAA7yD,QACgB4rD,aAAA8P,EAAA1I,kBAEhB,GAAqB/qD,GAAA,GAAAgnD,GAAArD,EAAAD,SAAAC,EAAAkB,SAGrB,OAFA7kD,GAAAizD,eAAAtP,EACA3jD,EAAAmzD,mBAAAvI,EAAA7yD,QACY4rD,aAAA3jD,EAAA+qD,kBASZ,QAAA2I,iCAAA/P,EAAAoH,EAAAM,EAAAxG,GAEA,OADqBjqB,MACrBqP,EAAA,EAAA0pB,EAAAtI,EAAuCphB,EAAA0pB,EAAA57D,OAAsBkyC,IAAA,CAC7D,GAAAjyC,GAAA27D,EAAA1pB,EACA,IAAA2pB,eAAAjQ,EAAAoH,EAAA/yD,KAAA6sD,EAAAgP,YAAA77D,IAAA,CACA,GAA6BgI,GAAA,GAAAgnD,SAC7BhnD,GAAAizD,eAAAtP,EACA3jD,EAAAmzD,mBAAAxP,EAAAD,SAAA3rD,OACA6iC,EAAAi5B,YAAA77D,IAAAgI,GAGA,MAAA/H,QAAA6H,UAA2B+kD,EAAAjqB,GAS3B,QAAA24B,6BAAA5P,EAAAiH,EAAAS,EAAAyI,GACA,GAAqBl5B,KACrBA,GAAA+pB,GAAAmP,EACAA,EAAAb,eAAAtP,EACAmQ,EAAAX,mBAAAvI,EAAA7yD,MACA,QAAAkyC,GAAA,EAAA8pB,EAAA1I,EAAuCphB,EAAA8pB,EAAAh8D,OAAsBkyC,IAAA,CAC7D,GAAAjyC,GAAA+7D,EAAA9pB,EACA,SAAAjyC,EAAAmmC,MAAA01B,YAAA77D,KAAA2sD,EAAA,CACA,GAA6B3kD,GAAA,GAAAgnD,SAC7BhnD,GAAAizD,eAAAtP,EACA3jD,EAAAmzD,mBAAAvI,EAAA7yD,OACA6iC,EAAAi5B,YAAA77D,IAAAgI,GAGA,MAAA46B,GAQA,QAAAy4B,0CAAA1P,EAAAoH,EAAAM,GACA,MAAAA,GAAAvsB,KAAA,SAAA9mC,GAAqC,MAAA47D,gBAAAjQ,EAAAoH,EAAA/yD,IAAA67D,YAAA77D,KAAA2sD,IAQrC,QAAA6O,0BAAA7P,EAAAoH,EAAAM,GACA,MAAAA,GAAAvsB,KAAA,SAAA9mC,GAAqC,MAAA47D,gBAAAjQ,EAAAoH,EAAA/yD,KAQrC,QAAA47D,gBAAAjQ,EAAAoH,EAAA/yD,GACA,SAAA2rD,EAAAG,eAAAiH,EAAAhzD,OAAA,aAAAC,EAAA6rD,aAGA,KAAA7rD,EAAAmmC,UAAAgB,KAAAnnC,EAAA4sD,YAMA,QAAAiP,aAAA96D,GACA,MAAAA,GAAA2rD,QAAAC,EAMA,QAAAqP,SAAAj7D,GACA,MAAAA,GAAAE,SAMA,QAAAg7D,YAAAl7D,GACA,MAAAA,GAAA+3C;;;;;;;AAmPA,QAAAojB,qBAAAlW,GACA,KAAAA,GAOA,QAAAmW,mBAAAlI,GACA,MAAA50D,GAAAgB,EAAAwtD,EAAA,UA0mCA,QAAAuO,yCAAA7U,GACAmO,sBAAAnO,EAAA5mD,OACA4mD,EAAAsF,SAAA7mD,QAAAo2D,yCAMA,QAAAC,oBAAApI,GACA,OAA0BjsD,GAAAisD,EAAAhwB,OAAwBj8B,EAAGA,IAAAi8B,OAAA,CACrD,GAAyBljC,GAAAiH,EAAAs0D,YACzB,IAAAv7D,KAAAw7D,cACA,MAAAx7D,GAAAw7D,aACA,IAAAx7D,KAAA0rD,UACA,YAEA,YAMA,QAAA+P,qBAAAvI,GACA,IAAAA,EACA,WACA,QAA0BjsD,GAAAisD,EAAAhwB,OAAwBj8B,EAAGA,IAAAi8B,OAAA,CACrD,GAAyBljC,GAAAiH,EAAAs0D,YACzB,IAAAv7D,KAAAw7D,cACA,MAAAx7D,GAAAw7D,cAEA,YAOA,QAAAE,mBAAAlV,GACA,GAAqBhJ,KAIrB,OAHAgJ,IACAA,EAAAsF,SAAA7mD,QAAA,SAAAqqD,GAAgD,MAAA9R,GAAA8R,EAAA1vD,MAAA+rD,QAAA2D,IAEhD9R,EAMA,QAAAme,kBAAA7F,GACA,OAA0Bx2D,GAAA,EAAUA,EAAAw2D,EAAA92D,OAAqBM,IAAA,CACzD,GAAyBg4D,GAAAxB,EAAAx2D,EACzB,UAAAg4D,EACA,SAAA7sD,OAAA,+BAAA6sD,EAAA,qBAAAh4D,IAyUA,QAAAs8D,eAAA30D,GACA,WAAAA,OAiuBA,QAAA40D,sBACA,UAAAhO,GAAA,sBAAAiO,IAiIA,QAAAC,yBAAAC,EAAAC,EAAAjqB,GAEA,WADA,KAAAA,IAA6BA,MAC7BA,EAAAkqB,QAAA,GAAAC,GAAA,qBAAAH,EAAAC,GACA,GAAAE,GAAA,qBAAAH,EAAAC,GAMA,QAAAG,qBAAAC,GACA,GAAAA,EACA,SAAA5xD,OAAA,uGAEA,iBAmBA,QAAA6xD,eAAAhK,GACA,QACSvnD,QAAA8iD,EAAA,6BAAA1f,OAAA,EAAAnjC,SAAAsnD,IACAvnD,QAAAwxD,GAAApuB,OAAA,EAAAnjC,SAAAsnD,IAiBT,QAAAkK,aAAAC,EAAArL,EAAAsL,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlyD,EAAAwpC,EAAA2oB,EAAA5H,OACA,KAAA/gB,IAA0BA,KAC1B,IAAqBioB,GAAA,GAAAP,IAAA,KAAA1K,EAAAsL,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtQ,QAAA5hD,GAUrB,IATAmyD,IACAV,EAAAU,uBAEA5H,IACAkH,EAAAlH,sBAEA/gB,EAAA4oB,eACAX,EAAAW,aAAA5oB,EAAA4oB,cAEA5oB,EAAA6oB,cAAA,CACA,GAAyBC,GAAA5+D,EAAAgB,EAAA69D,EAAA,aACzBd,GAAAj4D,OAAAjE,UAAA,SAAAi9D,GACAF,EAAAG,SAAA,iBAAAD,EAAA,YAAAl8D,MACAg8D,EAAAp6D,IAAAs6D,EAAAvvB,YACAqvB,EAAAp6D,IAAAs6D,GACAF,EAAAI,gBAGA,MAAAjB,GAMA,QAAAkB,WAAAlB,GACA,MAAAA,GAAAmB,YAAAhP,KAkHA,QAAAiP,mBAAAx+D,GACA,MAAAA,GAAAy+D,eAAAC,KAAA1+D,GAMA,QAAA2+D,sBAAA3+D,GACA,MAAAA,GAAA4+D,kBAAAF,KAAA1+D,GAWA,QAAA6+D,4BACA,OACAC,IAEAhzD,QAAA8iD,EAAA,gBACA1f,OAAA,EACA2b,WAAA2T,kBACA1T,MAAAgU,MAEShzD,QAAAizD,GAAAlU,WAAA8T,qBAAA7T,MAAAgU,MACAhzD,QAAA8iD,EAAA,uBAAA1f,OAAA,EAAAD,YAAA8vB,KtBysHT9+D,OAAOK,eAAewhC,EAAqB,cAAgBnhC,OAAO,GAC7C,IAAI4nC,GAAsClpC,EAAoB,IAC1D69D,EAAgD79D,EAAoB,IACpEuvD,EAA8CvvD,EAAoB,GAClE+0D,EAAqD/0D,EAAoB,IAEzE2/D,GAD6D3/D,EAAoB4I,EAAEmsD,GACtC/0D,EAAoB,IAEjEmzD,GADqDnzD,EAAoB4I,EAAE+2D,GACtB3/D,EAAoB,KAEzEwuD,GAD6DxuD,EAAoB4I,EAAEuqD,GAChCnzD,EAAoB,KAEvE4/D,GAD2D5/D,EAAoB4I,EAAE4lD,GACzBxuD,EAAoB,KAE5EovD,GADgEpvD,EAAoB4I,EAAEg3D,GAClC5/D,EAAoB,KAExE6/D,GAD4D7/D,EAAoB4I,EAAEwmD,GAC9BpvD,EAAoB,KAExEgvD,GAD4DhvD,EAAoB4I,EAAEi3D,GAC9B7/D,EAAoB,KAExE4uD,GAD4D5uD,EAAoB4I,EAAEomD,GAC/BhvD,EAAoB,KAEvE8/D,GAD2D9/D,EAAoB4I,EAAEgmD,GACzB5uD,EAAoB,KAE5E+/D,GADgE//D,EAAoB4I,EAAEk3D,GAChC9/D,EAAoB,KAE1EoyD,GAD8DpyD,EAAoB4I,EAAEm3D,GACnC//D,EAAoB,IAErEggE,GADyDhgE,EAAoB4I,EAAEwpD,GAC1BpyD,EAAoB,KAEzE8uD,GAD6D9uD,EAAoB4I,EAAEo3D,GAC1BhgE,EAAoB,KAE7EigE,GADiEjgE,EAAoB4I,EAAEkmD,GACjC9uD,EAAoB,KAE1EwvD,GAD8DxvD,EAAoB4I,EAAEq3D,GACvBjgE,EAAoB,KAEjFmvD,GADqEnvD,EAAoB4I,EAAE4mD,GACnCxvD,EAAoB,KAE5E6+D,GADgE7+D,EAAoB4I,EAAEumD,GAC3BnvD,EAAoB,KAC/EkgE,EAAsDlgE,EAAoB,GACZA,GAAoB4I,EAAEs3D,EAC9ElgE,GAAoBO,EAAEkiC,EAAqB,aAAc,WAAa,MAAO09B,MAC7EngE,EAAoBO,EAAEkiC,EAAqB,qBAAsB,WAAa,MAAO29B,MACrFpgE,EAAoBO,EAAEkiC,EAAqB,mBAAoB,WAAa,MAAO49B,MACnFrgE,EAAoBO,EAAEkiC,EAAqB,eAAgB,WAAa,MAAO69B,MAC/EtgE,EAAoBO,EAAEkiC,EAAqB,iBAAkB,WAAa,MAAO89B,KACjFvgE,EAAoBO,EAAEkiC,EAAqB,mBAAoB,WAAa,MAAO+9B,KACnFxgE,EAAoBO,EAAEkiC,EAAqB,mBAAoB,WAAa,MAAOg+B,KACnFzgE,EAAoBO,EAAEkiC,EAAqB,gBAAiB,WAAa,MAAOi+B,KAChF1gE,EAAoBO,EAAEkiC,EAAqB,kBAAmB,WAAa,MAAOk+B,KAClF3gE,EAAoBO,EAAEkiC,EAAqB,kBAAmB,WAAa,MAAOm+B,KAClF5gE,EAAoBO,EAAEkiC,EAAqB,aAAc,WAAa,MAAOo+B,KAC7E7gE,EAAoBO,EAAEkiC,EAAqB,eAAgB,WAAa,MAAOq+B,KAC/E9gE,EAAoBO,EAAEkiC,EAAqB,qBAAsB,WAAa,MAAOs+B,KACrF/gE,EAAoBO,EAAEkiC,EAAqB,uBAAwB,WAAa,MAAOu+B,KACvFhhE,EAAoBO,EAAEkiC,EAAqB,mBAAoB,WAAa,MAAOw+B,KACnFjhE,EAAoBO,EAAEkiC,EAAqB,qBAAsB,WAAa,MAAOy+B,MACrFlhE,EAAoBO,EAAEkiC,EAAqB,SAAU,WAAa,MAAO+6B,MACzEx9D,EAAoBO,EAAEkiC,EAAqB,SAAU,WAAa,MAAOw7B,MACzEj+D,EAAoBO,EAAEkiC,EAAqB,uBAAwB,WAAa,MAAO0+B,MACvFnhE,EAAoBO,EAAEkiC,EAAqB,qBAAsB,WAAa,MAAOi9B,MACrF1/D,EAAoBO,EAAEkiC,EAAqB,eAAgB,WAAa,MAAO2+B,MAC/EphE,EAAoBO,EAAEkiC,EAAqB,gBAAiB,WAAa,MAAOu7B,iBAChFh+D,EAAoBO,EAAEkiC,EAAqB,yBAA0B,WAAa,MAAO4+B,MACzFrhE,EAAoBO,EAAEkiC,EAAqB,gBAAiB,WAAa,MAAO6+B,MAChFthE,EAAoBO,EAAEkiC,EAAqB,eAAgB,WAAa,MAAO8+B,MAC/EvhE,EAAoBO,EAAEkiC,EAAqB,oBAAqB,WAAa,MAAO++B,MACpFxhE,EAAoBO,EAAEkiC,EAAqB,qBAAsB,WAAa,MAAOg/B,MACrFzhE,EAAoBO,EAAEkiC,EAAqB,kBAAmB,WAAa,MAAOi/B,MAClF1hE,EAAoBO,EAAEkiC,EAAqB,iBAAkB,WAAa,MAAOvgC,MACjFlC,EAAoBO,EAAEkiC,EAAqB,yBAA0B,WAAa,MAAO+yB,MACzFx1D,EAAoBO,EAAEkiC,EAAqB,cAAe,WAAa,MAAO6yB,MAC9Et1D,EAAoBO,EAAEkiC,EAAqB,sBAAuB,WAAa,MAAOgzB,MACtFz1D,EAAoBO,EAAEkiC,EAAqB,iBAAkB,WAAa,MAAO6qB,KACjFttD,EAAoBO,EAAEkiC,EAAqB,oBAAqB,WAAa,MAAOspB,qBACpF/rD,EAAoBO,EAAEkiC,EAAqB,sBAAuB,WAAa,MAAOk/B,MACtF3hE,EAAoBO,EAAEkiC,EAAqB,uBAAwB,WAAa,MAAOm/B,KACvF5hE,EAAoBO,EAAEkiC,EAAqB,aAAc,WAAa,MAAOuyB,KAC7Eh1D,EAAoBO,EAAEkiC,EAAqB,kBAAmB,WAAa,MAAOktB,KAClF3vD,EAAoBO,EAAEkiC,EAAqB,gBAAiB,WAAa,MAAOo/B,KAChF7hE,EAAoBO,EAAEkiC,EAAqB,UAAW,WAAa,MAAOitB,KAC1E1vD,EAAoBO,EAAEkiC,EAAqB,UAAW,WAAa,MAAOwI,MAC1EjrC,EAAoBO,EAAEkiC,EAAqB,oBAAqB,WAAa,MAAOq/B,MACpF9hE,EAAoBO,EAAEkiC,EAAqB,WAAY,WAAa,MAAOyrB,WAC3EluD,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOs/B,MACrE/hE,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOg9B,MACrEz/D,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO08B,qBACrEn/D,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO68B,wBACrEt/D,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOq7B,uBACrE99D,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOg7B,2BACrEz9D,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO+8B,4BACrEx/D,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOw8B,aACrEj/D,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO86B,sBACrEv9D,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOy7B,eACrEl+D,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAOu/B,KACrEhiE,EAAoBO,EAAEkiC,EAAqB,KAAM,WAAa,MAAO8yB;;;;;;;;;;;;AsB91TpG,GAAAqL,GAAA,WAKA,QAAAA,iBAAAj+D,EAAA4iD,GACArlD,KAAAyC,KACAzC,KAAAqlD,MAOA,MADAqb,iBAAA19D,UAAAqsC,SAAA,WAAsD,6BAAArvC,KAAAyC,GAAA,WAAAzC,KAAAqlD,IAAA,MACtDqb,mBAOAF,EAAA,WAMA,QAAAA,eAAA/9D,EAAA4iD,EAAA0c,GACA/hE,KAAAyC,KACAzC,KAAAqlD,MACArlD,KAAA+hE,oBASA,MAHAvB,eAAAx9D,UAAAqsC,SAAA,WACA,2BAAArvC,KAAAyC,GAAA,WAAAzC,KAAAqlD,IAAA,0BAAArlD,KAAA+hE,kBAAA,MAEAvB,iBAOAD,EAAA,WAMA,QAAAA,kBAAA99D,EAAA4iD,EAAA2c,GACAhiE,KAAAyC,KACAzC,KAAAqlD,MACArlD,KAAAgiE,SAOA,MADAzB,kBAAAv9D,UAAAqsC,SAAA,WAAuD,8BAAArvC,KAAAyC,GAAA,WAAAzC,KAAAqlD,IAAA,MACvDkb,oBAOAE,EAAA,WAMA,QAAAA,iBAAAh+D,EAAA4iD,EAAAoB,GACAzmD,KAAAyC,KACAzC,KAAAqlD,MACArlD,KAAAymD,QASA,MAHAga,iBAAAz9D,UAAAqsC,SAAA,WACA,6BAAArvC,KAAAyC,GAAA,WAAAzC,KAAAqlD,IAAA,aAAArlD,KAAAymD,MAAA,KAEAga,mBAOAM,EAAA,WAOA,QAAAA,kBAAAt+D,EAAA4iD,EAAA0c,EAAA/L,GACAh2D,KAAAyC,KACAzC,KAAAqlD,MACArlD,KAAA+hE,oBACA/hE,KAAAg2D,QASA,MAHA+K,kBAAA/9D,UAAAqsC,SAAA,WACA,8BAAArvC,KAAAyC,GAAA,WAAAzC,KAAAqlD,IAAA,0BAAArlD,KAAA+hE,kBAAA,aAAA/hE,KAAAg2D,MAAA,KAEA+K,oBAOAD,EAAA,WAIA,QAAAA,sBAAAt/D,GACAxB,KAAAwB,QAMA,MADAs/D,sBAAA99D,UAAAqsC,SAAA,WAA2D,oCAAArvC,KAAAwB,MAAAolC,KAAA,KAC3Dk6B,wBAOAD,EAAA,WAIA,QAAAA,oBAAAr/D,GACAxB,KAAAwB,QAMA,MADAq/D,oBAAA79D,UAAAqsC,SAAA,WAAyD,kCAAArvC,KAAAwB,MAAAolC,KAAA,KACzDi6B,sBAOAP,EAAA,WAOA,QAAAA,kBAAA79D,EAAA4iD,EAAA0c,EAAA/L,GACAh2D,KAAAyC,KACAzC,KAAAqlD,MACArlD,KAAA+hE,oBACA/hE,KAAAg2D,QAQA,MAHAsK,kBAAAt9D,UAAAqsC,SAAA,WACA,8BAAArvC,KAAAyC,GAAA,WAAAzC,KAAAqlD,IAAA,0BAAArlD,KAAA+hE,kBAAA,aAAA/hE,KAAAg2D,MAAA,KAEAsK,oBAOAD,EAAA,WAQA,QAAAA,gBAAA59D,EAAA4iD,EAAA0c,EAAA/L,EAAAiM,GACAjiE,KAAAyC,KACAzC,KAAAqlD,MACArlD,KAAA+hE,oBACA/hE,KAAAg2D,QACAh2D,KAAAiiE,iBAQA,MAHA5B,gBAAAr9D,UAAAqsC,SAAA,WACA,4BAAArvC,KAAAyC,GAAA,WAAAzC,KAAAqlD,IAAA,0BAAArlD,KAAA+hE,kBAAA,aAAA/hE,KAAAg2D,MAAA,qBAAAh2D,KAAAiiE,eAAA,KAEA5B,kBAUAO,EAAA,WAOA,QAAAA,cAAAn+D,EAAA4iD,EAAA0c,EAAA/L,GACAh2D,KAAAyC,KACAzC,KAAAqlD,MACArlD,KAAA+hE,oBACA/hE,KAAAg2D,QAQA,MAHA4K,cAAA59D,UAAAqsC,SAAA,WACA,0BAAArvC,KAAAyC,GAAA,WAAAzC,KAAAqlD,IAAA,0BAAArlD,KAAA+hE,kBAAA,aAAA/hE,KAAAg2D,MAAA,KAEA4K,gBAQAD,EAAA,WAOA,QAAAA,YAAAl+D,EAAA4iD,EAAA0c,EAAA/L,GACAh2D,KAAAyC,KACAzC,KAAAqlD,MACArlD,KAAA+hE,oBACA/hE,KAAAg2D,QAQA,MAHA2K,YAAA39D,UAAAqsC,SAAA,WACA,wBAAArvC,KAAAyC,GAAA,WAAAzC,KAAAqlD,IAAA,0BAAArlD,KAAA+hE,kBAAA,aAAA/hE,KAAAg2D,MAAA,KAEA2K,cAcAvT,EAAA,UACAtB,EAAA,WAIA,QAAAA,aAAA3L,GACAngD,KAAAmgD,aAqCA,MA/BA2L,aAAA9oD,UAAA6vC,IAAA,SAAAnwC,GAAiD,MAAA1C,MAAAmgD,OAAAv3C,eAAAlG,IAKjDopD,YAAA9oD,UAAAgB,IAAA,SAAAtB,GACA,GAAA1C,KAAA6yC,IAAAnwC,GAAA,CACA,GAA6BxB,GAAAlB,KAAAmgD,OAAAz9C,EAC7B,OAAAwlC,OAAAK,QAAArnC,KAAA,GAAAA,EAEA,aAMA4qD,YAAA9oD,UAAAghD,OAAA,SAAAthD,GACA,GAAA1C,KAAA6yC,IAAAnwC,GAAA,CACA,GAA6BxB,GAAAlB,KAAAmgD,OAAAz9C,EAC7B,OAAAwlC,OAAAK,QAAArnC,SAEA,UAEAR,OAAAK,eAAA+qD,YAAA9oD,UAAA,QAIAgB,IAAA,WAA0B,MAAAtD,QAAA8iC,KAAAxjC,KAAAmgD,SAC1B72C,YAAA,EACAC,cAAA,IAEAuiD,eAYAE,EAAA,6BAyDAkW,EAAA,WAKA,QAAAA,oBAAApO,EAAAl0D,GACAI,KAAA8zD,SACA9zD,KAAAJ,SAEA,MAAAsiE,uBA4VA1S,EAAA,WAOA,QAAAA,SAAAQ,EAAAF,EAAAoF,GACAl1D,KAAAgwD,OACAhwD,KAAA8vD,cACA9vD,KAAAk1D,WAoBA,MAlBAx0D,QAAAK,eAAAyuD,QAAAxsD,UAAA,iBAIAgB,IAAA,WAIA,MAHAhE,MAAAmiE,iBACAniE,KAAAmiE,eAAAtW,kBAAA7rD,KAAA8vD,cAEA9vD,KAAAmiE,gBAEA74D,YAAA,EACAC,cAAA,IAMAimD,QAAAxsD,UAAAqsC,SAAA,WAA8C,MAAA+yB,GAAAC,UAAAriE,OAC9CwvD,WASAC,EAAA,WAKA,QAAAA,iBAAAtD,EAAAmB,GACA,GAAA7rD,GAAAzB,IACAA,MAAAmsD,WACAnsD,KAAAstD,WAIAttD,KAAA0kC,OAAA,KACAj+B,QAAA6mD,EAAA,SAAApsD,EAAAD,GAA2C,MAAAC,GAAAwjC,OAAAjjC,IAqB3C,MAfAguD,iBAAAzsD,UAAAupD,YAAA,WAAyD,MAAAvsD,MAAAowD,iBAAA,GACzD1vD,OAAAK,eAAA0uD,gBAAAzsD,UAAA,oBAKAgB,IAAA,WAA0B,MAAAtD,QAAA8iC,KAAAxjC,KAAAstD,UAAA9sD,QAC1B8I,YAAA,EACAC,cAAA,IAMAkmD,gBAAAzsD,UAAAqsC,SAAA,WAAsD,MAAA2hB,gBAAAhxD,OACtDyvD,mBA2BAqF,EAAA,WAKA,QAAAA,YAAAluB,EAAAgqB,GACA5wD,KAAA4mC,OACA5mC,KAAA4wD,aAoBA,MAlBAlwD,QAAAK,eAAA+zD,WAAA9xD,UAAA,gBAIAgB,IAAA,WAIA,MAHAhE,MAAAsiE,gBACAtiE,KAAAsiE,cAAAzW,kBAAA7rD,KAAA4wD,aAEA5wD,KAAAsiE,eAEAh5D,YAAA,EACAC,cAAA,IAMAurD,WAAA9xD,UAAAqsC,SAAA,WAAiD,MAAA4hB,eAAAjxD,OACjD80D,cAmDA6M,EAAA,WACA,QAAAA,kBAgBA,MARAA,eAAA3+D,UAAAyE,MAAA,SAAA49C,KAOAsc,cAAA3+D,UAAAq/D,UAAA,SAAA9K,KACAoK,iBAoBAD,EAAA,WACA,QAAAA,yBAsBA,MAfAA,sBAAA1+D,UAAAyE,MAAA,SAAA49C,GACA,GAAyB18C,GAAA,GAAA45D,GAAAld,EACzB,WAAAmK,GAAA7mD,EAAA65D,mBAAA75D,EAAA85D,mBAAA95D,EAAA+5D,kBAOAhB,qBAAA1+D,UAAAq/D,UAAA,SAAA9K,GAIA,MAHyB,IAAArG,iBAAAqG,EAAAvH,MAAA,GACAwB,qBAAA+F,EAAAzH,cACA,gBAAAyH,GAAArC,SAAA,IAAAyN,UAAgFpL,EAAA,eAGzGmK,wBAEAU,EAAA,GAAAV,GA6FA9P,EAAA,iBASAE,EAAA,YASAE,EAAA,WASAuQ,EAAA,WAIA,QAAAA,WAAAld,GACArlD,KAAAqlD,MACArlD,KAAA4iE,UAAAvd,EAgMA,MA3LAkd,WAAAv/D,UAAAw/D,iBAAA,WAEA,MADAxiE,MAAA6iE,gBAAA,KACA,KAAA7iE,KAAA4iE,WAAA5iE,KAAA8iE,eAAA,MAAA9iE,KAAA8iE,eAAA,KACA,GAAArT,UAGA,GAAAA,MAAAzvD,KAAA+iE,kBAKAR,UAAAv/D,UAAAy/D,iBAAA,WACA,GAAyBtiB,KACzB,IAAAngD,KAAA6iE,gBAAA,KACA,GACA7iE,KAAAgjE,gBAAA7iB,SACangD,KAAA6iE,gBAAA,KAEb,OAAA1iB,IAKAoiB,UAAAv/D,UAAA0/D,cAAA,WACA,MAAA1iE,MAAA6iE,gBAAA,KAAAI,UAAAjjE,KAAA4iE,WAAA,MAKAL,UAAAv/D,UAAA+/D,cAAA,WACA,QAAA/iE,KAAA4iE,UACA,QAEA5iE,MAAA6iE,gBAAA,IACA,IAAyB1W,KAIzB,KAHAnsD,KAAA8iE,eAAA,MACA3W,EAAApmD,KAAA/F,KAAAkjE,gBAEAljE,KAAA8iE,eAAA,OAAA9iE,KAAA8iE,eAAA,QAAA9iE,KAAA8iE,eAAA,OACA9iE,KAAAmjE,QAAA,KACAhX,EAAApmD,KAAA/F,KAAAkjE,eAEA,IAAyB5V,KACzBttD,MAAA8iE,eAAA,QACA9iE,KAAAmjE,QAAA,KACA7V,EAAAttD,KAAAojE,aAAA,GAEA,IAAyB//B,KAOzB,OANArjC,MAAA8iE,eAAA,OACAz/B,EAAArjC,KAAAojE,aAAA,KAEAjX,EAAA3rD,OAAA,GAAAE,OAAA8iC,KAAA8pB,GAAA9sD,OAAA,KACA6iC,EAAA+pB,GAAA,GAAAqC,GAAAtD,EAAAmB,IAEAjqB,GAKAk/B,UAAAv/D,UAAAkgE,aAAA,WACA,GAAyBt8B,GAAA8qB,cAAA1xD,KAAA4iE,UACzB,SAAAh8B,GAAA5mC,KAAA8iE,eAAA,KACA,SAAA72D,OAAA,mDAAAjM,KAAA4iE,UAAA,KAGA,OADA5iE,MAAAmjE,QAAAv8B,GACA,GAAAkuB,GAAAxD,OAAA1qB,GAAA5mC,KAAAqjE,sBAKAd,UAAAv/D,UAAAqgE,kBAAA,WAEA,IADA,GAAyBljB,MACzBngD,KAAA6iE,gBAAA,MACA7iE,KAAAsjE,WAAAnjB,EAEA,OAAAA,IAMAoiB,UAAAv/D,UAAAsgE,WAAA,SAAAnjB,GACA,GAAyBhgD,GAAAuxD,cAAA1xD,KAAA4iE,UACzB,IAAAziE,EAAA,CAGAH,KAAAmjE,QAAAhjE,EACA,IAAyBiB,GAAA,EACzB,IAAApB,KAAA6iE,gBAAA,MACA,GAA6BU,GAAA7R,cAAA1xD,KAAA4iE,UAC7BW,KACAniE,EAAAmiE,EACAvjE,KAAAmjE,QAAA/hE,IAGA++C,EAAAmR,OAAAnxD,IAAAmxD,OAAAlwD,KAMAmhE,UAAAv/D,UAAAggE,gBAAA,SAAA7iB,GACA,GAAyBhgD,GAAA0xD,iBAAA7xD,KAAA4iE,UACzB,IAAAziE,EAAA,CAGAH,KAAAmjE,QAAAhjE,EACA,IAAyBiB,GAAA,EACzB,IAAApB,KAAA6iE,gBAAA,MACA,GAA6BU,GAAAxR,wBAAA/xD,KAAA4iE,UAC7BW,KACAniE,EAAAmiE,EACAvjE,KAAAmjE,QAAA/hE,IAGA,GAAyBoiE,GAAAlS,OAAAnxD,GACAsjE,EAAAnS,OAAAlwD,EACzB,IAAA++C,EAAAv3C,eAAA46D,GAAA,CAEA,GAA6BE,GAAAvjB,EAAAqjB,EAC7Bt7B,OAAAK,QAAAm7B,KACAA,MACAvjB,EAAAqjB,GAAAE,GAEAA,EAAA39D,KAAA09D,OAIAtjB,GAAAqjB,GAAAC,IAOAlB,UAAAv/D,UAAAogE,YAAA,SAAAO,GACA,GAAyBxX,KAEzB,KADAnsD,KAAAmjE,QAAA,MACAnjE,KAAA6iE,gBAAA,MAAA7iE,KAAA4iE,UAAApiE,OAAA,IACA,GAA6BomC,GAAA8qB,cAAA1xD,KAAA4iE,WACA5hB,EAAAhhD,KAAA4iE,UAAAh8B,EAAApmC,OAG7B,UAAAwgD,GAAA,MAAAA,GAAA,MAAAA,EACA,SAAA/0C,OAAA,qBAAAjM,KAAAqlD,IAAA,IAEA,IAA6BqT,OAAA,EAC7B9xB,GAAAl8B,QAAA,SACAguD,EAAA9xB,EAAAg9B,OAAA,EAAAh9B,EAAAl8B,QAAA,MACA1K,KAAAmjE,QAAAzK,GACA14D,KAAAmjE,QAAA,MAEAQ,IACAjL,EAAAtL,EAEA,IAA6BE,GAAAttD,KAAA+iE,eAC7B5W,GAAAuM,GAAA,IAAAh4D,OAAA8iC,KAAA8pB,GAAA9sD,OAAA8sD,EAAAF,GACA,GAAAqC,MAAAnC,GACAttD,KAAA6iE,gBAAA,MAEA,MAAA1W,IAMAoW,UAAAv/D,UAAA8/D,eAAA,SAAAnR,GAAyD,MAAA3xD,MAAA4iE,UAAA1X,WAAAyG,IAKzD4Q,UAAAv/D,UAAA6/D,gBAAA,SAAAlR,GACA,QAAA3xD,KAAA8iE,eAAAnR,KACA3xD,KAAA4iE,UAAA5iE,KAAA4iE,UAAAjW,UAAAgF,EAAAnxD,SACA,IAQA+hE,UAAAv/D,UAAAmgE,QAAA,SAAAxR,GACA,IAAA3xD,KAAA6iE,gBAAAlR,GACA,SAAA1lD,OAAA,aAAA0lD,EAAA,OAGA4Q,aASApQ,EAAA,WAIA,QAAAA,SAAA/F,GACApsD,KAAAosD,gBAAA,KAEA,MAAA+F,YAEAG,EAAA,WAIA,QAAAA,kBAAAO,GACA7yD,KAAA6yD,UAEA,MAAAP,qBA4CAQ,EAAA,WAQA,QAAAA,gBAAAJ,EAAAC,EAAAC,EAAAC,EAAAzmD,GACApM,KAAA2yD,eACA3yD,KAAA4yD,gBACA5yD,KAAA6yD,UACA7yD,KAAAoM,SACApM,KAAA6jE,gBAAA,EACA7jE,KAAAqM,SAAAqmD,EAAA1uD,IAAAqrD,EAAA,aA4XA,MAvXAyD,gBAAA9vD,UAAAgrC,MAAA,WACA,GAAAvsC,GAAAzB,KACyB8jE,EAAA9jE,KAAA+jE,mBAAA/jE,KAAAqM,SAAArM,KAAAoM,OAAApM,KAAA6yD,QAAA7C,KAAA5C,GACA4W,EAAAtV,EAAA,IAAA7lD,KAAAi7D,EAAA,SAAAG,GAAiE,MAAAxiE,GAAA41D,cAAA4M,EAAAxiE,EAAAoxD,QAAA/C,YAAsFruD,EAAAoxD,QAAA,WAChL,OAAAiN,GAAA,OAAAj3D,KAAAm7D,EAAA,SAAApF,GACA,GAAAA,YAAAtM,GAIA,MAFA7wD,GAAAoiE,gBAAA,EAEApiE,EAAA6L,MAAAsxD,EAAA/L,QAEA,IAAA+L,YAAAzM,GACA,KAAA1wD,GAAAyiE,aAAAtF,EAEA,MAAAA,MAOA9L,eAAA9vD,UAAAsK,MAAA,SAAAiqD,GACA,GAAA91D,GAAAzB,KACyB8jE,EAAA9jE,KAAA+jE,mBAAA/jE,KAAAqM,SAAArM,KAAAoM,OAAAmrD,EAAAvH,KAAA5C,GACA+W,EAAAzV,EAAA,IAAA7lD,KAAAi7D,EAAA,SAAAG,GAA+D,MAAAxiE,GAAA41D,cAAA4M,EAAA1M,EAAAzH,YAA6EyH,EAAA,WACrK,OAAAuI,GAAA,OAAAj3D,KAAAs7D,EAAA,SAAAvF,GACA,GAAAA,YAAAzM,GACA,KAAA1wD,GAAAyiE,aAAAtF,EAEA,MAAAA,MAOA9L,eAAA9vD,UAAAkhE,aAAA,SAAAtF,GACA,UAAA3yD,OAAA,0CAAA2yD,EAAAxS,aAAA,MAQA0G,eAAA9vD,UAAAq0D,cAAA,SAAA+M,EAAAtU,EAAAoF,GACA,GAAyBlF,GAAAoU,EAAAjY,SAAA3rD,OAAA,EACzB,GAAAivD,OAAA9c,KAA4CA,EAAAya,GAAAgX,EAAAzxB,IAC5CyxB,CACA,WAAA5U,GAAAQ,EAAAF,EAAAoF,EACA,IAAAviB,IASAmgB,eAAA9vD,UAAA+gE,mBAAA,SAAA13D,EAAAynD,EAAA1H,EAAAe,GACA,WAAAf,EAAAD,SAAA3rD,QAAA4rD,EAAAG,cACAmC,EAAA,IAAA7lD,KAAA7I,KAAAqkE,eAAAh4D,EAAAynD,EAAA1H,GAAA,SAAAkB,GAAsG,UAAAmC,MAAAnC,KAEtGttD,KAAAskE,cAAAj4D,EAAA+/C,EAAA0H,EAAA1H,EAAAD,SAAAgB,GAAA,IAQA2F,eAAA9vD,UAAAqhE,eAAA,SAAAh4D,EAAAynD,EAAA1H,GACA,GAAA3qD,GAAAzB,IACA,OAAAouD,YAAAhC,EAAAkB,SAAA,SAAAyD,EAAAD,GAAgF,MAAArvD,GAAAsiE,mBAAA13D,EAAAynD,EAAAhD,EAAAC,MAWhF+B,eAAA9vD,UAAAshE,cAAA,SAAAj4D,EAAA+/C,EAAA0H,EAAA3H,EAAAgB,EAAA0W,GACA,GAAApiE,GAAAzB,KACyBukE,EAAAjW,EAAA,GAAAtgB,UAAA,GAAA8lB,GACA0Q,EAAA9V,EAAA,IAAA7lD,KAAA07D,EAAA,SAAA9jE,GACzB,GAA6BqjE,GAAAriE,EAAAgjE,0BAAAp4D,EAAA+/C,EAAA0H,EAAArzD,EAAA0rD,EAAAgB,EAAA0W,EAC7B,OAAA/D,GAAA,OAAAj3D,KAAAi7D,EAAA,SAAAlF,GACA,GAAAA,YAAAzM,GACA,MAAAryD,GAAAgB,EAAAwtD,EAAA,SAEA,MAAAsQ,OAGyB8F,EAAA9V,EAAA,UAAA/lD,KAAA27D,GACAG,EAAAhF,EAAA,MAAA92D,KAAA67D,EAAA,SAAAj8D,GAAiE,QAAAA,GAC1F,OAAAq3D,GAAA,OAAAj3D,KAAA87D,EAAA,SAAA/F,EAAA9uB,GACA,GAAA8uB,YAAAmB,GAAA,YACA,GAAAt+D,EAAAmjE,iBAAAxY,EAAAD,EAAAgB,GACA,MAAArtD,GAAAgB,EAAAwtD,EAAA,OAAAmB,UAEA,UAAA0C,GAAA/F,GAEA,KAAAwS,MASA9L,eAAA9vD,UAAA4hE,iBAAA,SAAAxY,EAAAD,EAAAgB,GACA,WAAAhB,EAAA3rD,SAAA4rD,EAAAkB,SAAAH,IAYA2F,eAAA9vD,UAAAyhE,0BAAA,SAAAp4D,EAAA+/C,EAAA0H,EAAAtyD,EAAAk5D,EAAAvN,EAAA0W,GACA,MAAA5P,WAAAzyD,KAAA2rD,EACA8E,QAAA7F,OAEAxkB,KAAApmC,EAAA6rD,WACArtD,KAAA6kE,yBAAAx4D,EAAA+/C,EAAA5qD,EAAAk5D,GAEAmJ,GAAA7jE,KAAA6jE,eACA7jE,KAAA8kE,uCAAAz4D,EAAA+/C,EAAA0H,EAAAtyD,EAAAk5D,EAAAvN,GAEA8E,QAAA7F,IAWA0G,eAAA9vD,UAAA8hE,uCAAA,SAAAz4D,EAAA+/C,EAAA0H,EAAAtyD,EAAA2qD,EAAAgB,GACA,aAAA3rD,EAAAolC,KACA5mC,KAAA+kE,kDAAA14D,EAAAynD,EAAAtyD,EAAA2rD,GAEAntD,KAAAglE,8CAAA34D,EAAA+/C,EAAA0H,EAAAtyD,EAAA2qD,EAAAgB,IASA2F,eAAA9vD,UAAA+hE,kDAAA,SAAA14D,EAAAynD,EAAAtyD,EAAA2rD,GACA,GAAA1rD,GAAAzB,KACyBqyD,EAAAryD,KAAAilE,yBAA0DzjE,EAAA,cACnF,OAAAA,GAAA,WAAA0pD,WAAA,KACAkH,iBAAAC,GAEAuN,EAAA,SAAA/2D,KAAA7I,KAAAklE,mBAAA1jE,EAAA6wD,GAAA,SAAA8S,GACA,GAA6B9hE,GAAA,GAAAosD,GAAA0V,KAC7B,OAAA1jE,GAAA6iE,cAAAj4D,EAAAhJ,EAAAywD,EAAAqR,EAAAhY,GAAA,MAYA2F,eAAA9vD,UAAAgiE,8CAAA,SAAA34D,EAAA+/C,EAAA0H,EAAAtyD,EAAA2qD,EAAAgB,GACA,GAAA1rD,GAAAzB,KACA2yC,EAAArlC,MAAA8+C,EAAA5qD,EAAA2qD,GAAAiH,EAAAzgB,EAAAygB,QAAAC,EAAA1gB,EAAA0gB,iBAAAC,EAAA3gB,EAAA2gB,UAAAC,EAAA5gB,EAAA4gB,uBACA,KAAAH,EACA,MAAAnB,SAAA7F,EACA,IAAyBiG,GAAAryD,KAAAilE,sBAAA5R,EAAwE7xD,EAAA,WAAuC,EACxI,OAAAA,GAAA,WAAA0pD,WAAA,KACAkH,iBAAAC,GAEAuN,EAAA,SAAA/2D,KAAA7I,KAAAklE,mBAAA1jE,EAAA6wD,GAAA,SAAA8S,GACA,MAAA1jE,GAAA6iE,cAAAj4D,EAAA+/C,EAAA0H,EAAAqR,EAAAxgC,OAAAwnB,EAAAllD,MAAAqsD,IAAAnG,GAAA,MAUA2F,eAAA9vD,UAAA6hE,yBAAA,SAAAx4D,EAAA+4D,EAAA5jE,EAAA2qD,GACA,GAAA1qD,GAAAzB,IACA,WAAAwB,EAAAolC,KACA,MAAAplC,GAAA+rD,aACAmB,EAAA,IAAA7lD,KAAA7I,KAAA2yD,aAAA0S,KAAAh5D,EAAA+xD,SAAA58D,GAAA,SAAA8jE,GAEA,MADA9jE,GAAAw7D,cAAAsI,EACA,GAAA7V,GAAAtD,QAGArsD,EAAAgB,EAAAwtD,EAAA,OAAAmB,GAAAtD,MAEA,IAAAxZ,GAAArlC,MAAA83D,EAAA5jE,EAAA2qD,GAAAiH,EAAAzgB,EAAAygB,QAAAC,EAAA1gB,EAAA0gB,iBAAAC,EAAA3gB,EAAA2gB,SACA,KAAAF,EACA,MAAAnB,SAAAmT,EACA,IAAyBG,GAAApZ,EAAAllD,MAAAqsD,GACAkS,EAAAxlE,KAAAm7D,eAAA9uD,EAAA7K,EACzB,OAAAo+D,GAAA,SAAA/2D,KAAA28D,EAAA,SAAAC,GACA,GAA6BC,GAAAD,EAAA7lE,OACA+lE,EAAAF,EAAA3R,OAC7BnhB,EAAArO,MAAA8gC,EAAA/R,EAAAkS,EAAAI,GAAAvZ,EAAAzZ,EAAAyZ,aAAAoH,EAAA7gB,EAAA6gB,cACA,QAAAA,EAAAhzD,QAAA4rD,EAAAG,cAAA,CACA,GAAiCqZ,GAAAnkE,EAAA4iE,eAAAqB,EAAAC,EAAAvZ,EACjC,OAAAsC,GAAA,IAAA7lD,KAAA+8D,EAAA,SAAAtY,GAAkE,UAAAmC,GAAA4D,EAAA/F,KAElE,OAAAqY,EAAAnlE,QAAA,IAAAgzD,EAAAhzD,OACA,MAAAV,GAAAgB,EAAAwtD,EAAA,OAAAmB,GAAA4D,MAEA,IAA6ByQ,GAAAriE,EAAA6iE,cAAAoB,EAAAtZ,EAAAuZ,EAAAnS,EAAApG,GAAA,EAC7B,OAAAsB,GAAA,IAAA7lD,KAAAi7D,EAAA,SAAA+B,GAAsD,UAAApW,GAAA4D,EAAA1uB,OAAAkhC,EAAA1Z,UAAA0Z,EAAAvY,eAQtDwF,eAAA9vD,UAAAm4D,eAAA,SAAA9uD,EAAA7K,GACA,GAAAC,GAAAzB,IACA,OAAAwB,GAAA8rD,SAEAxtD,EAAAgB,EAAAwtD,EAAA,OAAA4T,GAAA1gE,EAAA8rD,SAAAjhD,IAEA7K,EAAA+rD,iBAEA3lB,KAAApmC,EAAAw7D,cACAl9D,EAAAgB,EAAAwtD,EAAA,IAAA9sD,EAAAw7D,eAEA4C,EAAA,SAAA/2D,KAAAkqD,gBAAA1mD,EAAA+xD,SAAA58D,GAAA,SAAAskE,GACA,MAAAA,GACApX,EAAA,IAAA7lD,KAAApH,EAAAkxD,aAAA0S,KAAAh5D,EAAA+xD,SAAA58D,GAAA,SAAA8jE,GAEA,MADA9jE,GAAAw7D,cAAAsI,EACAA,IAGA9S,aAAAhxD,KAGA1B,EAAAgB,EAAAwtD,EAAA,OAAA4T,MAAA71D,KAOAymD,eAAA9vD,UAAAkiE,mBAAA,SAAA1jE,EAAAqxD,GAGA,IAFA,GAAyBxvB,MACA/iC,EAAAuyD,EAAA7C,OACzB,CAEA,GADA3sB,IAAAsB,OAAArkC,EAAA6rD,UACA,IAAA7rD,EAAA8vD,iBACA,MAAAtwD,GAAAgB,EAAAwtD,EAAA,IAAAjrB,EAEA,IAAA/iC,EAAA8vD,iBAAA,IAAA9vD,EAAAgtD,SAAAF,GACA,MAAAmF,sBAAyD/wD,EAAA,WAEzDlB,KAAAgtD,SAAAF,KASA0F,eAAA9vD,UAAAiiE,sBAAA,SAAA9Y,EAAAkB,EAAAb,GACA,MAAAxsD,MAAA+lE,4BAAA1Y,EAAArtD,KAAA4yD,cAAAnrD,MAAA4lD,GAAAlB,EAAAK,IASAsG,eAAA9vD,UAAA+iE,4BAAA,SAAA1Y,EAAAwF,EAAA1G,EAAAK,GACA,GAAyBwZ,GAAAhmE,KAAAimE,mBAAA5Y,EAAAwF,EAAA7C,KAAA7D,EAAAK,EACzB,WAAAgD,GAAAwW,EAAAhmE,KAAAkmE,kBAAArT,EAAA/C,YAAA9vD,KAAA6yD,QAAA/C,aAAA+C,EAAAqC,WAOApC,eAAA9vD,UAAAkjE,kBAAA,SAAAC,EAAAC,GACA,GAAyB/iC,KAWzB,OAVA58B,SAAA0/D,EAAA,SAAAjlE,EAAAD,GAEA,GAD6B,gBAAAC,MAAAgqD,WAAA,KAC7B,CACA,GAAiCmb,GAAAnlE,EAAAyrD,UAAA,EACjCtpB,GAAApiC,GAAAmlE,EAAAC,OAGAhjC,GAAApiC,GAAAC,IAGAmiC,GASAyvB,eAAA9vD,UAAAijE,mBAAA,SAAA5Y,EAAAhqD,EAAA8oD,EAAAK,GACA,GAAA/qD,GAAAzB,KACyBsmE,EAAAtmE,KAAAumE,eAAAlZ,EAAAhqD,EAAA8oD,WAAAK,GACAc,IAIzB,OAHA7mD,SAAApD,EAAAiqD,SAAA,SAAAwD,EAAApuD,GACA4qD,EAAA5qD,GAAAjB,EAAAwkE,mBAAA5Y,EAAAyD,EAAA3E,EAAAK,KAEA,GAAAiD,GAAA6W,EAAAhZ,IASAwF,eAAA9vD,UAAAujE,eAAA,SAAAlZ,EAAAmZ,EAAAC,EAAAja,GACA,GAAA/qD,GAAAzB,IACA,OAAAwmE,GAAAphE,IAAA,SAAAqD,GAAoD,MAAAA,GAAAm+B,KAAAskB,WAAA,KAAAzpD,EAAAilE,aAAArZ,EAAA5kD,EAAA+jD,GACpD/qD,EAAAklE,aAAAl+D,EAAAg+D,MAQA3T,eAAA9vD,UAAA0jE,aAAA,SAAArZ,EAAAuZ,EAAApa,GACA,GAAyBqa,GAAAra,EAAAoa,EAAAhgC,KAAA+lB,UAAA,GACzB,KAAAka,EACA,SAAA56D,OAAA,uBAAAohD,EAAA,mBAAAuZ,EAAAhgC,KAAA,KACA,OAAAigC,IAOA/T,eAAA9vD,UAAA2jE,aAAA,SAAAC,EAAAH,GAEA,OADyBliB,GAAA,EACzB7R,EAAA,EAAAo0B,EAAAL,EAA2D/zB,EAAAo0B,EAAAtmE,OAA8BkyC,IAAA,CACzF,GAAAjqC,GAAAq+D,EAAAp0B,EACA,IAAAjqC,EAAAm+B,OAAAggC,EAAAhgC,KAEA,MADA6/B,GAAA38D,OAAAy6C,GACA97C,CAEA87C,KAEA,MAAAqiB,IAEA9T,kBA2JAgP,EAAA,WAIA,QAAAA,MAAA9R,GACAhwD,KAAA82D,MAAA9G,EAuDA,MArDAtvD,QAAAK,eAAA+gE,KAAA9+D,UAAA,QAIAgB,IAAA,WAA0B,MAAAhE,MAAA82D,MAAA11D,OAC1BkI,YAAA,EACAC,cAAA,IAOAu4D,KAAA9+D,UAAA0hC,OAAA,SAAAl8B,GACA,GAAyBG,GAAA3I,KAAA01D,aAAAltD,EACzB,OAAAG,GAAAnI,OAAA,EAAAmI,IAAAnI,OAAA,SAOAshE,KAAA9+D,UAAAsqD,SAAA,SAAA9kD,GACA,GAAyBE,GAAA0rD,SAAA5rD,EAAAxI,KAAA82D,MACzB,OAAApuD,KAAA4kD,SAAAloD,IAAA,SAAAoD,GAAgD,MAAAA,GAAApH,YAOhD0gE,KAAA9+D,UAAA+jE,WAAA,SAAAv+D,GACA,GAAyBE,GAAA0rD,SAAA5rD,EAAAxI,KAAA82D,MACzB,OAAApuD,MAAA4kD,SAAA9sD,OAAA,EAAAkI,EAAA4kD,SAAA,GAAAlsD,MAAA,MAOA0gE,KAAA9+D,UAAAgkE,SAAA,SAAAx+D,GACA,GAAyBG,GAAA2rD,SAAA9rD,EAAAxI,KAAA82D,MACzB,OAAAnuD,GAAAnI,OAAA,KAEyBmI,IAAAnI,OAAA,GAAA8sD,SAAAloD,IAAA,SAAA9E,GAAmD,MAAAA,GAAAc,QAC5E8F,OAAA,SAAA+/D,GAAuC,MAAAA,KAAAz+D,KAOvCs5D,KAAA9+D,UAAA0yD,aAAA,SAAAltD,GAAgD,MAAA8rD,UAAA9rD,EAAAxI,KAAA82D,OAAA1xD,IAAA,SAAAqD,GAAkD,MAAAA,GAAArH,SAClG0gE,QAsCAzM,GAAA,WAKA,QAAAA,UAAAj0D,EAAAksD,GACAttD,KAAAoB,QACApB,KAAAstD,WAMA,MADA+H,UAAAryD,UAAAqsC,SAAA,WAA+C,kBAAArvC,KAAAoB,MAAA,KAC/Ci0D,YAmCAD,GAAA,SAAArnB,GAOA,QAAAqnB,aAAApF,EAAA0E,GACA,GAAAjzD,GAAAssC,EAAAllC,KAAA7I,KAAAgwD,IAAAhwD,IAGA,OAFAyB,GAAAizD,WACAqB,eAAAt0D,EAAAuuD,GACAvuD,EAMA,MAhBAunC,GAAA,EAAAosB,YAAArnB,GAeAqnB,YAAApyD,UAAAqsC,SAAA,WAAkD,MAAArvC,MAAA00D,SAAArlB,YAClD+lB,aACC0M,GAmDD9/D,GAAA,WAYA,QAAAA,gBAAAqjD,EAAAlF,EAAA2P,EAAAoF,EAAAxzD,EAAAyrD,EAAAD,EAAAga,GACAlnE,KAAAqlD,MACArlD,KAAAmgD,SACAngD,KAAA8vD,cACA9vD,KAAAk1D,WACAl1D,KAAA0B,OACA1B,KAAAmtD,SACAntD,KAAAktD,YACAltD,KAAAs2D,gBAAA4Q,EAyFA,MAvFAxmE,QAAAK,eAAAiB,eAAAgB,UAAA,eAKAgB,IAAA,WAA0B,MAAAhE,MAAAs2D,gBAAAV,aAC1BtsD,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAiB,eAAAgB,UAAA,QAKAgB,IAAA,WAA0B,MAAAhE,MAAAi2D,aAAAjG,MAC1B1mD,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAiB,eAAAgB,UAAA,UAKAgB,IAAA,WAA0B,MAAAhE,MAAAi2D,aAAAvxB,OAAA1kC,OAC1BsJ,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAiB,eAAAgB,UAAA,cAKAgB,IAAA,WAA0B,MAAAhE,MAAAi2D,aAAA8Q,WAAA/mE,OAC1BsJ,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAiB,eAAAgB,UAAA,YAKAgB,IAAA,WAA0B,MAAAhE,MAAAi2D,aAAA3I,SAAAttD,OAC1BsJ,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAiB,eAAAgB,UAAA,gBAKAgB,IAAA,WAA0B,MAAAhE,MAAAi2D,aAAAP,aAAA11D,OAC1BsJ,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAiB,eAAAgB,UAAA,YAIAgB,IAAA,WAIA,MAHAhE,MAAAmnE,YACAnnE,KAAAmnE,UAAAzY,EAAA,IAAA7lD,KAAA7I,KAAAmgD,OAAA,SAAAx3C,GAAqE,MAAAkjD,mBAAAljD,MAErE3I,KAAAmnE,WAEA79D,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAiB,eAAAgB,UAAA,iBAIAgB,IAAA,WAKA,MAJAhE,MAAAmiE,iBACAniE,KAAAmiE,eACAzT,EAAA,IAAA7lD,KAAA7I,KAAA8vD,YAAA,SAAAnnD,GAA6D,MAAAkjD,mBAAAljD,MAE7D3I,KAAAmiE,gBAEA74D,YAAA,EACAC,cAAA,IAKAvH,eAAAgB,UAAAqsC,SAAA,WACA,MAAArvC,MAAA00D,SAAA10D,KAAA00D,SAAArlB,WAAA,UAAArvC,KAAAs2D,gBAAA,KAEAt0D,kBAqDAszD,GAAA,WAeA,QAAAA,wBAAAjQ,EAAAlF,EAAA2P,EAAAoF,EAAAxzD,EAAAyrD,EAAAD,EAAA0I,EAAAwR,EAAAC,EAAA9tB,GACAv5C,KAAAqlD,MACArlD,KAAAmgD,SACAngD,KAAA8vD,cACA9vD,KAAAk1D,WACAl1D,KAAA0B,OACA1B,KAAAmtD,SACAntD,KAAAktD,YACAltD,KAAA+8D,aAAAnH,EACA51D,KAAAq5D,YAAA+N,EACApnE,KAAAo5D,eAAAiO,EACArnE,KAAAsnE,SAAA/tB,EA0FA,MAxFA74C,QAAAK,eAAAu0D,uBAAAtyD,UAAA,eAKAgB,IAAA,WAA0B,MAAAhE,MAAA+8D,cAC1BzzD,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAu0D,uBAAAtyD,UAAA,QAKAgB,IAAA,WAA0B,MAAAhE,MAAAi2D,aAAAjG,MAC1B1mD,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAu0D,uBAAAtyD,UAAA,UAKAgB,IAAA,WAA0B,MAAAhE,MAAAi2D,aAAAvxB,OAAA1kC,OAC1BsJ,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAu0D,uBAAAtyD,UAAA,cAKAgB,IAAA,WAA0B,MAAAhE,MAAAi2D,aAAA8Q,WAAA/mE,OAC1BsJ,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAu0D,uBAAAtyD,UAAA,YAKAgB,IAAA,WAA0B,MAAAhE,MAAAi2D,aAAA3I,SAAAttD,OAC1BsJ,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAu0D,uBAAAtyD,UAAA,gBAKAgB,IAAA,WAA0B,MAAAhE,MAAAi2D,aAAAP,aAAA11D,OAC1BsJ,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAu0D,uBAAAtyD,UAAA,YAIAgB,IAAA,WAIA,MAHAhE,MAAAmnE,YACAnnE,KAAAmnE,UAAAtb,kBAAA7rD,KAAAmgD,SAEAngD,KAAAmnE,WAEA79D,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAu0D,uBAAAtyD,UAAA,iBAIAgB,IAAA,WAIA,MAHAhE,MAAAmiE,iBACAniE,KAAAmiE,eAAAtW,kBAAA7rD,KAAA8vD,cAEA9vD,KAAAmiE,gBAEA74D,YAAA,EACAC,cAAA,IAKA+rD,uBAAAtyD,UAAAqsC,SAAA,WAGA,oBAFyBrvC,KAAAqlD,IAAAjgD,IAAA,SAAAsnD,GAA2C,MAAAA,GAAArd,aAA6B1I,KAAA,KAEjG,aADyB3mC,KAAA+8D,aAAA/8D,KAAA+8D,aAAAn2B,KAAA,IACzB,MAEA0uB,0BA2BAC,GAAA,SAAAxnB,GAOA,QAAAwnB,qBAAAlQ,EAAA2K,GACA,GAAAvuD,GAAAssC,EAAAllC,KAAA7I,KAAAgwD,IAAAhwD,IAGA,OAFAyB,GAAA4jD,MACA0Q,eAAAt0D,EAAAuuD,GACAvuD,EAMA,MAhBAunC,GAAA,EAAAusB,oBAAAxnB,GAeAwnB,oBAAAvyD,UAAAqsC,SAAA,WAA0D,MAAA6mB,eAAAl2D,KAAA82D,QAC1DvB,qBACCuM,GA8NDnJ,GAAA,WAMA,QAAAA,YAAAE,EAAAD,EAAAtB,GAIA,GAHAt3D,KAAA64D,aACA74D,KAAA44D,qBACA54D,KAAAs3D,WACAuB,GAAAvB,EAAA92D,OAAA,GAAAw3D,eAAAV,EAAA,IACA,SAAArrD,OAAA,6CAEA,IAAAs7D,GAAAjQ,EAAAkQ,KAAA,SAAAlnE,GAAwD,sBAAAA,IAAA,MAAAA,KAAA43D,SACxD,IAAAqP,OAAArZ,OAAAoJ,GACA,SAAArrD,OAAA,2CASA,MAHA0sD,YAAA31D,UAAA00D,OAAA,WACA,MAAA13D,MAAA64D,YAAA,IAAA74D,KAAAs3D,SAAA92D,QAAA,KAAAR,KAAAs3D,SAAA,IAEAqB,cAkDAQ,GAAA,WAMA,QAAAA,UAAA/M,EAAAyL,EAAA7sD,GACAhL,KAAAosD,eACApsD,KAAA63D,kBACA73D,KAAAgL,QAEA,MAAAmuD,aAiOAkC,GAAA,WACA,QAAAA,cAEA,MAAAA,cAYAP,GAAA,WAOA,QAAAA,YAAAD,EAAAzuD,EAAAymD,EAAAxN,GACArlD,KAAA66D,oBACA76D,KAAAoM,SACApM,KAAA6yD,UACA7yD,KAAAqlD,MAuHA,MAlHAyV,YAAA93D,UAAA43D,UAAA,WACA,IACA,GAA6BqJ,GAAApI,QAAA77D,KAAA6yD,QAAA7C,WAAAhwD,KAAAoM,QAAAggD,aACAkB,EAAAttD,KAAAynE,oBAAAznE,KAAAoM,OAAA63D,EAAA7W,GACA4C,EAAA,GAAAsF,OAAA50D,OAAAgnE,WAA0DhnE,OAAAgnE,OAAA1nE,KAAA6yD,QAAA/C,aAAyD9vD,KAAA6yD,QAAA,YAAiCzF,EAAAptD,KAAA66D,kBAAA,KAAA76D,KAAA6yD,QAAA7C,MAAA,MACpJ2X,EAAA,GAAAtS,IAAArF,EAAA1C,GACAsa,EAAA,GAAArS,IAAAv1D,KAAAqlD,IAAAsiB,EAE7B,OADA3nE,MAAA6nE,qBAAAD,EAAA9Q,OACAh3D,EAAAgB,EAAAwtD,EAAA,IAAAsZ,GAEA,MAAAhJ,GACA,UAAA1M,GAAA,oBAAAtvB,GAAkD,MAAAA,GAAA6jB,MAAAmY,OAOlD9D,WAAA93D,UAAA6kE,qBAAA,SAAAC,GACA,GAAArmE,GAAAzB,KACyBwB,EAAAsmE,EAAA1mE,MACAN,EAAA00D,2BAAAh0D,EACzBA,GAAA2+C,OAAAz/C,OAAAgnE,OAAA5mE,EAAAq/C,QACA3+C,EAAAE,KAAAhB,OAAAgnE,OAAA5mE,EAAAY,MACAomE,EAAAxa,SAAA7mD,QAAA,SAAAiC,GAAiD,MAAAjH,GAAAomE,qBAAAn/D,MAQjDoyD,WAAA93D,UAAAykE,oBAAA,SAAAr7D,EAAAggD,EAAAe,GACA,WAAAf,EAAAD,SAAA3rD,QAAA4rD,EAAAG,cACAvsD,KAAA63D,gBAAAzrD,EAAAggD,GAEApsD,KAAA+nE,eAAA37D,EAAAggD,IAAAD,SAAAgB,IAOA2N,WAAA93D,UAAA60D,gBAAA,SAAAzrD,EAAAggD,GACA,GAAA3qD,GAAAzB,KACyBstD,EAAAuD,qBAAAzE,EAAA,SAAA0E,EAAAC,GAAiF,MAAAtvD,GAAAgmE,oBAAAr7D,EAAA0kD,EAAAC,IAG1G,OAFAuK,2BAAAhO,GACAyN,4BAAAzN,GACAA,GASAwN,WAAA93D,UAAA+kE,eAAA,SAAA37D,EAAAggD,EAAAD,EAAAgB,GACA,OAAAza,GAAA,EAAAs1B,EAAA57D,EAA2CsmC,EAAAs1B,EAAAxnE,OAAsBkyC,IAAA,CACjE,GAAAjyC,GAAAunE,EAAAt1B,EACA,KACA,MAAA1yC,MAAAioE,2BAAAxnE,EAAA2rD,EAAAD,EAAAgB,GAEA,MAAAyR,GACA,KAAAA,YAAAvD,KACA,KAAAuD,IAGA,GAAA5+D,KAAA4kE,iBAAAxY,EAAAD,EAAAgB,GACA,QAEA,UAAAkO,KAQAP,WAAA93D,UAAA4hE,iBAAA,SAAAxY,EAAAD,EAAAgB,GACA,WAAAhB,EAAA3rD,SAAA4rD,EAAAkB,SAAAH,IASA2N,WAAA93D,UAAAilE,2BAAA,SAAAzmE,EAAA0mE,EAAA/b,EAAAgB,GACA,GAAA3rD,EAAA6rD,WACA,SAAAgO,GACA,KAAA75D,EAAA2rD,QAAAC,KAAAD,EACA,SAAAkO,GACA,WAAA75D,EAAAolC,KAAA,CACA,GAA6BuZ,GAAAgM,EAAA3rD,OAAA,EAAA0tD,OAAA/B,GAAAyE,cACAuX,EAAA,GAAA7S,IAAAnJ,EAAAhM,EAAAz/C,OAAAgnE,OAAA1nE,KAAA6yD,QAAA/C,aAAoH9vD,KAAA6yD,QAAA,SAAA4J,QAAAj7D,GAAA2rD,EAAoE3rD,EAAA,UAAAA,EAAAi6D,sBAAAyM,GAAAvM,kBAAAuM,GAAA/b,EAAA3rD,OAAAk8D,WAAAl7D,GACrN,WAAA6zD,IAAA8S,OAEA,GAAAx1B,GAAAyoB,QAAA8M,EAAA1mE,EAAA2qD,GAAAkH,EAAA1gB,EAAA0gB,iBAAAzC,EAAAje,EAAAie,WAAA0C,EAAA3gB,EAAA2gB,UACyBiS,EAAApZ,EAAAllD,MAAAqsD,GACAqS,EAAAxK,eAAA35D,GACzBq4D,EAAAgC,QAAAqM,EAAA7U,EAAAkS,EAAAI,GAAAvZ,EAAAyN,EAAAzN,aAAAoH,EAAAqG,EAAArG,eACyBkB,EAAA,GAAAY,IAAAjC,EAAAzC,EAAAlwD,OAAAgnE,OAAA1nE,KAAA6yD,QAAA/C,aAA8H9vD,KAAA6yD,QAAA,SAAA4J,QAAAj7D,GAAA2rD,EAAoE3rD,EAAA,UAAAA,EAAAi6D,sBAAAyM,GAAAvM,kBAAAuM,GAAA7U,EAAA7yD,OAAAk8D,WAAAl7D,GAC3N,QAAAgyD,EAAAhzD,QAAA4rD,EAAAG,cAAA,CACA,GAA6B6b,GAAApoE,KAAA63D,gBAAA8N,EAAAvZ,EAC7B,WAAAiJ,IAAAX,EAAA0T,IAEA,OAAAzC,EAAAnlE,QAAA,IAAAgzD,EAAAhzD,OACA,UAAA60D,IAAAX,MAEA,IAAyBpH,GAAAttD,KAAA+nE,eAAApC,EAAAvZ,EAAAoH,EAAApG,EACzB,WAAAiI,IAAAX,EAAApH,KAEAwN,cAiOAkG,GAAA,WACA,QAAAA,uBAyCA,MAjCAA,oBAAAh+D,UAAAqlE,aAAA,SAAA7mE,KAUAw/D,mBAAAh+D,UAAAslE,MAAA,SAAA9mE,EAAA8hD,KAOA0d,mBAAAh+D,UAAAulE,aAAA,SAAA/mE,KAOAw/D,mBAAAh+D,UAAAi0D,SAAA,SAAAz1D,KAQAw/D,mBAAAh+D,UAAA+zD,iBAAA,SAAAyR,EAAA3S,KACAmL,sBAKAyH,GAAA,WACA,QAAAA,8BA+BA,MAzBAA,2BAAAzlE,UAAAqlE,aAAA,SAAA7mE,GAAyE,UAMzEinE,0BAAAzlE,UAAAslE,MAAA,SAAA9mE,EAAAknE,KAKAD,0BAAAzlE,UAAAulE,aAAA,SAAA/mE,GAAyE,UAKzEinE,0BAAAzlE,UAAAi0D,SAAA,SAAAz1D,GAAqE,aAMrEinE,0BAAAzlE,UAAA+zD,iBAAA,SAAAyR,EAAA3S,GACA,MAAA2S,GAAA5S,cAAAC,EAAAD,aAEA6S,6BAaA1K,GAAA,GAAA1O,GAAA,yBACAsZ,GAAA,WAOA,QAAAA,oBAAAtK,EAAAC,EAAAsK,EAAAC,GACA7oE,KAAAq+D,SACAr+D,KAAAs+D,WACAt+D,KAAA4oE,sBACA5oE,KAAA6oE,oBAyCA,MAlCAF,oBAAA3lE,UAAAqiE,KAAA,SAAAyD,EAAAtnE,GACA,GAAAC,GAAAzB,IACAA,MAAA4oE,qBACA5oE,KAAA4oE,oBAAApnE,EAEA,IAAyBunE,GAAA/oE,KAAAgpE,kBAAyDxnE,EAAA,aAClF,OAAAktD,GAAA,IAAA7lD,KAAAkgE,EAAA,SAAAE,GACAxnE,EAAAonE,mBACApnE,EAAAonE,kBAAArnE,EAEA,IAA6B5B,GAAAqpE,EAAAC,OAAAJ,EAC7B,WAAA5G,GAAAlU,QAAApuD,EAAAw+D,SAAAp6D,IAAA+5D,KAAAn+D,MAOA+oE,mBAAA3lE,UAAAgmE,kBAAA,SAAAzb,GACA,GAAA9rD,GAAAzB,IACA,uBAAAutD,GACAztD,EAAAgB,EAAAwuD,EAAA,aAAAtvD,KAAAq+D,OAAAgH,KAAA9X,IAGAqS,EAAA,SAAA/2D,KAAAumD,mBAAA7B,KAAA,SAAA/kD,GACA,MAAAA,aAAA6mD,GAAA,gBACAvvD,EAAAgB,EAAAwtD,EAAA,IAAA9lD,GAGA1I,EAAAgB,EAAAwuD,EAAA,aAAA7tD,EAAA68D,SAAA6K,mBAAA3gE,OAKAmgE,sBAeAlH,GAAA,WACA,QAAAA,wBA8BA,MAjBAA,qBAAAz+D,UAAAomE,iBAAA,SAAA/jB,KAQAoc,oBAAAz+D,UAAAqmE,QAAA,SAAAhkB,KAQAoc,oBAAAz+D,UAAAsmE,MAAA,SAAAC,EAAAC,KACA/H,uBAKAgI,GAAA,WACA,QAAAA,+BAkBA,MAZAA,4BAAAzmE,UAAAomE,iBAAA,SAAA/jB,GAA4E,UAK5EokB,2BAAAzmE,UAAAqmE,QAAA,SAAAhkB,GAAmE,MAAAA,IAMnEokB,2BAAAzmE,UAAAsmE,MAAA,SAAAC,EAAAG,GAAkF,MAAAH,IAClFE,8BAiCAnM,GAAA,WAWA,QAAAA,QAAAzC,EAAAjI,EAAA+W,EAAAxL,EAAAC,EAAAC,EAAAC,EAAAlyD,GACA,GAAA3K,GAAAzB,IACAA,MAAA66D,oBACA76D,KAAA4yD,gBACA5yD,KAAA2pE,eACA3pE,KAAAm+D,WACAn+D,KAAAoM,SACApM,KAAA4pE,YAAA,GAAA/U,GAAA,gBAA4D,MAC5D70D,KAAA6pE,aAAA,GAAApK,GAAA,QACAz/D,KAAA8pE,aAAA,EAMA9pE,KAAAw+D,aAAA7B,oBAIA38D,KAAA+pE,WAAA,EAMA/pE,KAAAgqE,OACAC,oBAAArN,kBACAsN,mBAAAtN,mBAKA58D,KAAAu+D,oBAAA,GAAAkL,IACAzpE,KAAA22D,mBAAA,GAAA8R,GACA,IAAA0B,GAAA,SAAA1pE,GAAwC,MAAAgB,GAAA2oE,aAAA,GAAAtJ,GAAArgE,KACxC4pE,EAAA,SAAA5pE,GAAsC,MAAAgB,GAAA2oE,aAAA,GAAAvJ,GAAApgE,IACtCT,MAAAqM,SAAA+xD,EAAAp6D,IAAAqrD,EAAA,aACArvD,KAAAsqE,YAAAl+D,GACApM,KAAAuqE,eAAAhb,qBACAvvD,KAAAwqE,WAAAxqE,KAAAuqE,eACAvqE,KAAA2yD,aAAA,GAAAgW,IAAAtK,EAAAC,EAAA6L,EAAAE,GACArqE,KAAAyqE,mBAAAjW,iBAAAx0D,KAAAuqE,eAAAvqE,KAAA66D,mBACA76D,KAAA0qE,qBAkgBA,MA1fApN,QAAAt6D,UAAA2nE,uBAAA,SAAA9P,GACA76D,KAAA66D,oBAGA76D,KAAAyqE,mBAAAza,KAAA9C,UAAAltD,KAAA66D,mBAMAyC,OAAAt6D,UAAA4nE,kBAAA,WACA5qE,KAAA6qE,8BACA,IAAA7qE,KAAA8pE,cACA9pE,KAAA8qE,cAAA9qE,KAAAm+D,SAAAv3B,MAAA,IAA0DmkC,YAAA,KAO1DzN,OAAAt6D,UAAA6nE,4BAAA,WACA,GAAAppE,GAAAzB,IAGAA,MAAAgrE,uBACAhrE,KAAAgrE,qBAAAhrE,KAAAm+D,SAAAx8D,UAAAspE,KAAAza,QAAA0a,KAAA,SAAAhkC,GACA,GAAiCsjC,GAAA/oE,EAAAmxD,cAAAnrD,MAAAy/B,EAAA,KACAikC,EAAA,aAAAjkC,EAAA,4BACjCkkC,YAAA,WAAwC3pE,EAAA4pE,mBAAAb,EAAAW,GAA+CJ,YAAA,KAAuB,QAI9GrqE,OAAAK,eAAAu8D,OAAAt6D,UAAA,eAKAgB,IAAA,WAA0B,MAAAhE,MAAAyqE,oBAC1BnhE,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAu8D,OAAAt6D,UAAA,OAKAgB,IAAA,WAA0B,MAAAhE,MAAAsrE,aAAAtrE,KAAAuqE,iBAC1BjhE,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAu8D,OAAAt6D,UAAA,UAKAgB,IAAA,WAA0B,MAAAhE,MAAA6pE,cAC1BvgE,YAAA,EACAC,cAAA,IAOA+zD,OAAAt6D,UAAAonE,aAAA,SAAAxL,GAAkD5+D,KAAA6pE,aAAA7oB,KAAA4d,IAiBlDtB,OAAAt6D,UAAAsnE,YAAA,SAAAl+D,GACAygD,eAAAzgD,GACApM,KAAAoM,SACApM,KAAA+pE,WAAA,GAMAzM,OAAAt6D,UAAA4uC,YAAA,WAAgD5xC,KAAAurE,WAKhDjO,OAAAt6D,UAAAuoE,QAAA,WACAvrE,KAAAgrE,uBACAhrE,KAAAgrE,qBAAA5zB,cACAp3C,KAAAgrE,qBAAA,OA+CA1N,OAAAt6D,UAAAq0D,cAAA,SAAAC,EAAAkU,OACA,KAAAA,IAA0CA,KAC1C,IAAAC,GAAAD,EAAAC,WAAA3b,EAAA0b,EAAA1b,YAAAoF,EAAAsW,EAAAtW,SAAAwW,EAAAF,EAAAE,oBAAAC,EAAAH,EAAAG,oBAAAC,EAAAJ,EAAAI,gBACA9rE,GAAAgB,EAAAuuD,EAAA,cAAAqc,GAAA,SAAArnE,QAAA,MACAA,QAAAi4C,KAAA,sEAEA,IAAyB/uC,GAAAk+D,GAAAzrE,KAAAg/D,YAAAhP,KACA6b,EAAAD,EAAA5rE,KAAAuqE,eAAArV,WACA4W,EAAA,IACzB,IAAAH,EACA,OAAAA,GACA,YACAG,EAAAprE,OAAA6H,UAAwCvI,KAAAuqE,eAAAza,cACxC,MACA,gBACAgc,EAAA9rE,KAAAuqE,eAAAza,WACA,MACA,SACAgc,EAAAhc,GAAA,SAIAgc,GAAAJ,EAAA1rE,KAAAuqE,eAAAza,eAAA,IAEA,OAAAuH,eAAA9pD,EAAAvN,KAAAuqE,eAAAjT,EAA4E,EAAwB,IAyBpGgG,OAAAt6D,UAAA8nE,cAAA,SAAAzlB,EAAA0mB,OACA,KAAAA,IAAgCA,GAAWC,oBAAA,GAC3C,IAAyBnZ,GAAAxN,YAAAmK,GAAAnK,EAAArlD,KAAAisE,SAAA5mB,GACA6mB,EAAAlsE,KAAAu+D,oBAAA+K,MAAAzW,EAAA7yD,KAAAwqE,WACzB,OAAAxqE,MAAAqrE,mBAAAa,EAAA,aAAAH,IA0BAzO,OAAAt6D,UAAAmpE,SAAA,SAAA7U,EAAAyU,GAMA,WALA,KAAAA,IAAgCA,GAAWC,oBAAA,IAC3C7O,iBAAA7F,GACA,gBAAAyU,GAAAjc,aAAA,OAAAic,EAAAjc,cACAic,EAAAjc,YAAA9vD,KAAAosE,iBAAAL,EAAAjc,cAEA9vD,KAAA8qE,cAAA9qE,KAAAq3D,cAAAC,EAAAyU,OAOAzO,OAAAt6D,UAAAsoE,aAAA,SAAAjmB,GAAoD,MAAArlD,MAAA4yD,cAAAyP,UAAAhd,IAMpDiY,OAAAt6D,UAAAipE,SAAA,SAAA5mB,GAAgD,MAAArlD,MAAA4yD,cAAAnrD,MAAA49C,IAOhDiY,OAAAt6D,UAAAqpE,SAAA,SAAAhnB,EAAAuK,GACA,GAAAvK,YAAAmK,GACA,MAAAE,cAAA1vD,KAAAuqE,eAAAllB,EAAAuK,EAEA,IAAyBiD,GAAA7yD,KAAA4yD,cAAAnrD,MAAA49C,EACzB,OAAAqK,cAAA1vD,KAAAuqE,eAAA1X,EAAAjD,IAMA0N,OAAAt6D,UAAAopE,iBAAA,SAAAjsB,GACA,MAAAz/C,QAAA8iC,KAAA2c,GAAA7c,OAAA,SAAA6rB,EAAAhvD,GACA,GAA6BiB,GAAA++C,EAAAhgD,EAI7B,OAHA,QAAAiB,OAAAwmC,KAAAxmC,IACA+tD,EAAAhvD,GAAAiB,GAEA+tD,QAMAmO,OAAAt6D,UAAA0nE,mBAAA,WACA,GAAAjpE,GAAAzB,IACA0/D,GAAA,UACA72D,KAAA7I,KAAA4pE,YAAA,SAAApS,GACA,MAAAA,IACA/1D,EAAA6qE,2BAAA9U,GAGAA,EAAA+U,QAAAC,MAAA,eAGA1sE,EAAAgB,EAAAwtD,EAAA,YAGA3sD,UAAA,eAQA27D,OAAAt6D,UAAAqoE,mBAAA,SAAA7B,EAAA2B,EAAAY,GACA,GAAyBU,GAAAzsE,KAAA4pE,YAAAxoE,KAIzB,IAAAqrE,GAAA,eAAAtB,GAAA,eAAAsB,EAAAtB,QACAsB,EAAAjD,OAAAn6B,aAAAm6B,EAAAn6B,WACA,MAAAiK,SAAAC,SAAA,EAKA,IAAAkzB,GAAA,cAAAtB,GAAA,aAAAsB,EAAAtB,QACAsB,EAAAjD,OAAAn6B,aAAAm6B,EAAAn6B,WACA,MAAAiK,SAAAC,SAAA,EAEA,IAAyBA,GAAA,KACAmzB,EAAA,KACAH,EAAA,GAAAjzB,SAAA,SAAAjW,EAAAspC,GACzBpzB,EAAAlW,EACAqpC,EAAAC,IAEyBlqE,IAAAzC,KAAA8pE,YAIzB,OAHA9pE,MAAA4pE,YAAA5oB,MAA+Bv+C,KAAA0oE,SAAA3B,SAAAuC,SAAAxyB,UAAAmzB,SAAAH,YAG/BA,EAAAC,MAAA,SAAA5N,GAA2C,MAAAtlB,SAAAozB,OAAA9N,MAM3CtB,OAAAt6D,UAAAspE,2BAAA,SAAA35B,GACA,GAAAlxC,GAAAzB,KACAyC,EAAAkwC,EAAAlwC,GAAA+mE,EAAA72B,EAAA62B,OAAAuC,EAAAp5B,EAAAo5B,OAAAxyB,EAAA5G,EAAA4G,QAAAmzB,EAAA/5B,EAAA+5B,OACyBrnB,EAAArlD,KAAAu+D,oBAAA8K,QAAAG,GACAoD,GAAA5sE,KAAA+pE,WAAA1kB,EAAAhW,aAAArvC,KAAAuqE,eAAAl7B,UACzBu9B,IAAA5sE,KAAAu+D,oBAAA6K,iBAAAI,IACAxpE,KAAA6pE,aAAA7oB,KAAA,GAAA0f,GAAAj+D,EAAAzC,KAAAsrE,aAAAjmB,KACA/L,QAAAC,UACAK,KAAA,SAAA9J,GAAoC,MAAAruC,GAAAorE,YAAAxnB,EAAAmkB,IAAAuC,EAAAC,qBAAAD,EAAAhB,WAAAtoE,EAAA,QACpCm3C,KAAAL,EAAAmzB,IAIAE,GAAA5sE,KAAAwqE,YACAxqE,KAAAu+D,oBAAA6K,iBAAAppE,KAAAwqE,aACAxqE,KAAA6pE,aAAA7oB,KAAA,GAAA0f,GAAAj+D,EAAAzC,KAAAsrE,aAAAjmB,KACA/L,QAAAC,UACAK,KAAA,SAAA9J,GAAoC,MAAAruC,GAAAorE,YAAAxnB,EAAAmkB,GAAA,KAAA/mE,EAAA+xD,iBAAAnP,EAAA5jD,EAAAo5D,mBAAAnG,YACpC9a,KAAAL,EAAAmzB,KAGA1sE,KAAAwqE,WAAAhB,EACAjwB,EAAA,QAYA+jB,OAAAt6D,UAAA6pE,YAAA,SAAAxnB,EAAAmkB,EAAAsD,EAAAC,EAAAtqE,EAAAuqE,GACA,GAAAvrE,GAAAzB,IACA,OAAAyC,KAAAzC,KAAA8pE,cACA9pE,KAAAm+D,SAAA8O,GAAAjtE,KAAA4yD,cAAAyP,UAAAriE,KAAAuqE,iBACAvqE,KAAA6pE,aAAA7oB,KAAA,GAAAuf,GAAA99D,EAAAzC,KAAAsrE,aAAAjmB,GAAA,iBAAA5iD,EAAA,8CAAAzC,KAAA8pE,eACAxwB,QAAAC,SAAA,IAEA,GAAAD,SAAA,SAAA4zB,EAAAC,GAGA,GAA6BC,EAC7B,IAAAJ,EAWAI,EAAAttE,EAAAgB,EAAAwtD,EAAA,KAAsC+e,WAAAhoB,EAAAqP,SAAAsY,QAXtC,CACA,GAAiCta,GAAAjxD,EAAA4K,SAAA+xD,SACAkP,EAAA7a,eAAAC,EAAAjxD,EAAAkxD,aAAAlxD,EAAAmxD,cAAAvN,EAAA5jD,EAAA2K,OACjCghE,GAAAxN,EAAA,SAAA/2D,KAAAykE,EAAA,SAAAD,GACA,MAAA3e,GAAA,IAAA7lD,KAAA+xD,UAAAn5D,EAAAo5D,kBAAAp5D,EAAA2K,OAAAihE,EAAA5rE,EAAA6pE,aAAA+B,IAAA,SAAA3Y,GAEA,MADAjzD,GAAAooE,aAAA7oB,KAAA,GAAA+f,GAAAt+D,EAAAhB,EAAA6pE,aAAAjmB,GAAA5jD,EAAA6pE,aAAA+B,GAAA3Y,KACgC2Y,aAAA3Y,gBAOhC,GAI6B6Y,GAkDAC,EAtDAC,EAAA7N,EAAA,SAAA/2D,KAAAukE,EAAA,SAAAzkE,GAC7B,MAAA+lD,GAAA,IAAA7lD,KAAApH,EAAAuoE,MAAAC,oBAAAthE,EAAA+rD,UAAA,WAA0F,MAAA/rD,OAI7D+kE,EAAAhf,EAAA,IAAA7lD,KAAA4kE,EAAA,SAAA96B,GAC7B,GAAA06B,GAAA16B,EAAA06B,WAAA3Y,EAAA/hB,EAAA+hB,SACiChC,EAAAjxD,EAAA4K,SAAA+xD,QAIjC,OAHAmP,GACA,GAAAI,IAAAjZ,EAAAjzD,EAAAgpE,mBAAA/V,SAAAhC,GACA6a,EAAAK,SAAAnsE,EAAAkoE,eACwB0D,aAAA3Y,cAEKmZ,EAAAjO,EAAA,SAAA/2D,KAAA6kE,EAAA,SAAA/6B,GAC7B,GAAA06B,GAAA16B,EAAA06B,WAAA3Y,EAAA/hB,EAAA+hB,QACA,OAAAjzD,GAAAqoE,eAAArnE,EACA3C,EAAAgB,EAAAwtD,EAAA,SACA7sD,EAAA2oE,aAAA,GAAA9J,GAAA79D,EAAAhB,EAAA6pE,aAAAjmB,GAAAgoB,EAAA3Y,IACAhG,EAAA,IAAA7lD,KAAA0kE,EAAAO,cAAA,SAAA7L,GAEA,MADAxgE,GAAA2oE,aAAA,GAAA/J,GAAA59D,EAAAhB,EAAA6pE,aAAAjmB,GAAAgoB,EAAA3Y,EAAAuN,KAC4BoL,aAAA3Y,WAAAuN,uBAGC8L,EAAAnO,EAAA,SAAA/2D,KAAAglE,EAAA,SAAAllE,GAC7B,MAAAlH,GAAAqoE,eAAArnE,EACA3C,EAAAgB,EAAAwtD,EAAA,QACA3lD,EAAAs5D,gBAAAsL,EAAAS,gBACAvsE,EAAA2oE,aAAA,GAAAxJ,GAAAn+D,EAAAhB,EAAA6pE,aAAAjmB,GAAA18C,EAAA0kE,WAAA1kE,EAAA+rD,WACAhG,EAAA,IAAA7lD,KAAA0kE,EAAAU,cAAA,WAEA,MADAxsE,GAAA2oE,aAAA,GAAAzJ,GAAAl+D,EAAAhB,EAAA6pE,aAAAjmB,GAAA18C,EAAA0kE,WAAA1kE,EAAA+rD,WACA/rD,KAIA7I,EAAAgB,EAAAwtD,EAAA,IAAA3lD,KAG6BulE,EAAAtO,EAAA,SAAA/2D,KAAAklE,EAAA,SAAAplE,GAC7B,MAAA+lD,GAAA,IAAA7lD,KAAApH,EAAAuoE,MAAAE,mBAAAvhE,EAAA+rD,UAAA,WAAyF,MAAA/rD,OAI5DwlE,EAAAzf,EAAA,IAAA7lD,KAAAqlE,EAAA,SAAAv7B,GAC7B,GAAA06B,GAAA16B,EAAA06B,WAAA3Y,EAAA/hB,EAAA+hB,SAAAuN,EAAAtvB,EAAAsvB,cACA,IAAAA,EAAA,CAEA,OAA4BoL,aAAArX,MADSU,kBAAAj1D,EAAAk1D,mBAAAjC,EAAAjzD,EAAAgpE,oBACTxI,kBAG5B,OAA4BoL,aAAArX,MAAA,KAAAiM,oBAMCmM,EAAA3sE,EAAAgpE,mBACA4D,EAAA5sE,EAAA8oE,cAC7B4D,GACA1nE,QAAA,SAAAksC,GACA,GAAA06B,GAAA16B,EAAA06B,WAAArX,EAAArjB,EAAAqjB,KACA,KADArjB,EAAAsvB,gBACAx/D,IAAAhB,EAAAqoE,aAEA,YADA0D,GAAA,EAMA,IAHA/rE,EAAA8oE,eAAA8C,EACA5rE,EAAA+oE,WAAA/oE,EAAA88D,oBAAA+K,MAAA7nE,EAAA8oE,eAAAf,GACA/nE,EAAAgpE,mBAAAzU,GACA8W,EAAA,CACA,GAAqClmC,GAAAnlC,EAAAmxD,cAAAyP,UAAA5gE,EAAA+oE,WACrC/oE,GAAA08D,SAAAmQ,qBAAA1nC,IAAAmmC,EACAtrE,EAAA08D,SAAAoQ,aAAA3nC,GAGAnlC,EAAA08D,SAAA8O,GAAArmC,GAGA,GAAA4nC,IAAA/sE,EAAAk1D,mBAAAX,EAAAoY,GACAK,SAAAhtE,EAAAkoE,cACA6D,GAAA,IAEA5zB,KAAA,WACA4zB,GACA/rE,EAAAsoE,WAAA,EACAtoE,EAAAooE,aAAA7oB,KAAA,GAAAwf,GAAA/9D,EAAAhB,EAAA6pE,aAAAjmB,GAAA5jD,EAAA6pE,aAAA7pE,EAAA8oE,kBACA2C,GAAA,KAGAzrE,EAAAitE,2BACAjtE,EAAAooE,aAAA7oB,KAAA,GAAAuf,GAAA99D,EAAAhB,EAAA6pE,aAAAjmB,GAAA,KACA6nB,GAAA,KAEa,SAAAtO,GACb,GAAA3S,2BAAA2S,GACAn9D,EAAAitE,2BACAjtE,EAAAsoE,WAAA,EACAtoE,EAAAooE,aAAA7oB,KAAA,GAAAuf,GAAA99D,EAAAhB,EAAA6pE,aAAAjmB,GAAAuZ,EAAAn4B,UACAymC,GAAA,OAEA,CACAzrE,EAAAooE,aAAA7oB,KAAA,GAAAyf,GAAAh+D,EAAAhB,EAAA6pE,aAAAjmB,GAAAuZ,GACA,KACAsO,EAAAzrE,EAAA+8D,aAAAI,IAEA,MAAA+P,GACAxB,EAAAwB,IAGAltE,EAAAgpE,mBAAA2D,EACA3sE,EAAA8oE,eAAA8D,EACA5sE,EAAA+oE,WAAA/oE,EAAA88D,oBAAA+K,MAAA7nE,EAAA8oE,eAAAf,GACA/nE,EAAA08D,SAAAoQ,aAAA9sE,EAAA6pE,aAAA7pE,EAAA+oE,kBAOAlN,OAAAt6D,UAAA0rE,yBAAA,WACA,GAAyB9nC,GAAA5mC,KAAA4yD,cAAAyP,UAAAriE,KAAAwqE,WACzBxqE,MAAAm+D,SAAAoQ,aAAA3nC,IAEA02B,UAEAsR,GAAA,WAIA,QAAAA,aAAAhoC,GACA5mC,KAAA4mC,OAUA,MARAlmC,QAAAK,eAAA6tE,YAAA5rE,UAAA,SAIAgB,IAAA,WAA0B,MAAAhE,MAAA4mC,KAAA5mC,KAAA4mC,KAAApmC,OAAA,IAC1B8I,YAAA,EACAC,cAAA,IAEAqlE,eAEAC,GAAA,WAKA,QAAAA,eAAA3hB,EAAA1rD,GACAxB,KAAAktD,YACAltD,KAAAwB,QAEA,MAAAqtE,kBAEAlB,GAAA,WAMA,QAAAA,eAAAnF,EAAA3S,EAAAnD,GACA1yD,KAAAwoE,SACAxoE,KAAA61D,OACA71D,KAAA0yD,iBACA1yD,KAAA8uE,qBACA9uE,KAAA+uE,uBA4TA,MAtTApB,eAAA3qE,UAAA4qE,SAAA,SAAAoB,GACA,GAAyBC,GAAAjvE,KAAAwoE,OAAA1R,MACAoY,EAAAlvE,KAAA61D,KAAA71D,KAAA61D,KAAAiB,MAAA,IACzB92D,MAAAmvE,oBAAAF,EAAAC,EAAAF,GAAAC,EAAA7tE,SAKAusE,cAAA3qE,UAAA8qE,YAAA,WACA,GAAArsE,GAAAzB,IACA,KAAAA,KAAAovE,mBAAApvE,KAAAguE,eACA,MAAAluE,GAAAgB,EAAAwtD,EAAA,OAEA,IAAyB+gB,GAAArvE,KAAAsvE,wBACzB,OAAA1P,GAAA,SAAA/2D,KAAAwmE,EAAA,SAAAE,GAAuE,MAAAA,GAAA9tE,EAAA+tE,uBAAA1vE,EAAAgB,EAAAwtD,EAAA,WAKvEqf,cAAA3qE,UAAAirE,YAAA,WACA,GAAAxsE,GAAAzB,IACA,KAAAA,KAAAguE,eACA,MAAAluE,GAAAgB,EAAAwtD,EAAA,SACA,IAAyBmhB,GAAA3vE,EAAAgB,EAAAmyD,EAAA,MAAAjzD,KAAA8uE,mBACAY,EAAAhQ,EAAA,UAAA72D,KAAA4mE,EAAA,SAAAE,GAA+D,MAAAluE,GAAAmuE,WAAAD,EAAAnuE,QACxF,OAAAq+D,GAAA,OAAAh3D,KAAA6mE,EAAA,SAAA5/B,EAAA+/B,GAA6D,MAAA//B,MAK7D69B,cAAA3qE,UAAAosE,eAAA,WAA0D,WAAApvE,KAAA+uE,oBAAAvuE,QAI1DmtE,cAAA3qE,UAAAgrE,aAAA,WAAwD,WAAAhuE,KAAA8uE,kBAAAtuE,QAQxDmtE,cAAA3qE,UAAAmsE,oBAAA,SAAAW,EAAAC,EAAA7R,EAAA8R,GACA,GAAAvuE,GAAAzB,KACyBiwE,EAAA/S,kBAAA6S,EAEzBD,GAAAxiB,SAAA7mD,QAAA,SAAAnG,GACAmB,EAAAyuE,eAAA5vE,EAAA2vE,EAAA3vE,EAAAc,MAAA+rD,QAAA+Q,EAAA8R,EAAArrC,QAAArkC,EAAAc,eACA6uE,GAAA3vE,EAAAc,MAAA+rD,UAGA1mD,QAAAwpE,EAAA,SAAA/uE,EAAAD,GAA+C,MAAAQ,GAAA0uE,8BAAAjvE,EAA4D,EAAAkvE,WAAAnvE,OAS3G0sE,cAAA3qE,UAAAktE,eAAA,SAAAJ,EAAAC,EAAAf,EAAAgB,GACA,GAAyBxH,GAAAsH,EAAA1uE,MACAy0D,EAAAka,IAAA3uE,MAAA,KACAivE,EAAArB,IAAAoB,WAAAN,EAAA1uE,MAAA+rD,QAAA,IAEzB,IAAA0I,GAAA2S,EAAAzL,eAAAlH,EAAAkH,aAAA,CACA,GAA6BuT,GAAAtwE,KAAAswE,4BAAAza,EAAA2S,EAA8FA,EAAA,aAAA+H,sBAiB3H,IAhBAD,EACAtwE,KAAA8uE,kBAAA/oE,KAAA,GAAA6oE,IAAAoB,KAIAxH,EAAA9mE,KAAAm0D,EAAAn0D,KACA8mE,EAAA1S,cAAAD,EAAAC,eAGA0S,EAAAtb,UACAltD,KAAAmvE,oBAAAW,EAAAC,EAAAM,IAAA/iB,SAAA,KAAA0iB,GAIAhwE,KAAAmvE,oBAAAW,EAAAC,EAAAf,EAAAgB,GAEAM,EAAA,CACA,GAAiCnjB,GAAA,QACjCntD,MAAA+uE,oBAAAhpE,KAAA,GAAA8oE,IAAA1hB,EAAAD,UAAA2I,SAIAA,IACA71D,KAAAmwE,8BAAAJ,EAAAM,GAEArwE,KAAA8uE,kBAAA/oE,KAAA,GAAA6oE,IAAAoB,IAEAxH,EAAAtb,UACAltD,KAAAmvE,oBAAAW,EAAA,KAAAO,IAAA/iB,SAAA,KAAA0iB,GAIAhwE,KAAAmvE,oBAAAW,EAAA,KAAAd,EAAAgB,IAUArC,cAAA3qE,UAAAstE,4BAAA,SAAAza,EAAA2S,EAAAgI,GACA,OAAAA,GACA,aACA,QACA,iCACA,OAAAja,0BAAAV,EAAA2S,KACA3a,aAAAgI,EAAA/F,YAAA0Y,EAAA1Y,YACA,oBACA,QACA,OAAAyG,0BAAAV,EAAA2S,KAQAmF,cAAA3qE,UAAAmtE,8BAAA,SAAA3uE,EAAA6uE,GACA,GAAA5uE,GAAAzB,KACyBstD,EAAA4P,kBAAA17D,GACAf,EAAAe,EAAAJ,KACzBqF,SAAA6mD,EAAA,SAAAtF,EAAAyoB,GACAhwE,EAAAysD,UAGAmjB,EACA5uE,EAAA0uE,8BAAAnoB,EAAAqoB,EAAA/iB,SAAA8iB,WAAAK,IAGAhvE,EAAA0uE,8BAAAnoB,EAAA,MANAvmD,EAAA0uE,8BAAAnoB,EAAAqoB,KASA5vE,EAAAysD,WAGAmjB,KAAAljB,QAAAkjB,EAAAljB,OAAAujB,YACA1wE,KAAA+uE,oBAAAhpE,KAAA,GAAA8oE,IAAAwB,EAAAljB,OAAAD,UAAAzsD,IAHAT,KAAA+uE,oBAAAhpE,KAAA,GAAA8oE,IAAA,KAAApuE,KAYAktE,cAAA3qE,UAAAssE,uBAAA,WACA,GAAA7tE,GAAAzB,KACyByvE,EAAA3vE,EAAAgB,EAAAmyD,EAAA,MAAAjzD,KAAA+uE,qBACAW,EAAA9P,EAAA,SAAA/2D,KAAA4mE,EAAA,SAAAE,GAA8D,MAAAluE,GAAAkvE,iBAAAhB,EAAAziB,UAAAyiB,EAAAnuE,QACvF,OAAA0tD,GAAA,MAAArmD,KAAA6mE,EAAA,SAAAvgB,GAA6D,WAAAA,KAK7Dwe,cAAA3qE,UAAAwsE,qBAAA,WACA,GAAA/tE,GAAAzB,KACyByvE,EAAA3vE,EAAAgB,EAAAmyD,EAAA,MAAAjzD,KAAA8uE,mBACAY,EAAAhQ,EAAA,UAAA72D,KAAA4mE,EAAA,SAAAE,GAA+D,MAAA5gB,gBAAAjvD,EAAAgB,EAAAmyD,EAAA,OAAAxxD,EAAAmvE,oBAAAjB,EAAA/oC,MAAAnlC,EAAAovE,eAAAlB,EAAAnuE,WACxF,OAAA0tD,GAAA,MAAArmD,KAAA6mE,EAAA,SAAAvgB,GAA6D,WAAAA,KAM7Dwe,cAAA3qE,UAAA6tE,eAAA,SAAArI,GACA,GAAA/mE,GAAAzB,KACyB8wE,EAAAtI,EAAAzL,aAAAyL,EAAAzL,aAAA+T,YAAA,IACzB,OAAAA,IAAA,IAAAA,EAAAtwE,OAaAuuD,eAXyBL,EAAA,IAAA7lD,KAAA/I,EAAAgB,EAAAmyD,EAAA,MAAA6d,GAAA,SAAAxwE,GACzB,GAC6BywE,GADA5d,EAAA1xD,EAAA6oD,SAAAhqD,EAAAkoE,EAQ7B,OALAuI,GAAA3hB,mBADA+D,EAAA2d,YACA3d,EAAA2d,YAAAtI,EAAA/mE,EAAA+mE,QAGArV,EAAAqV,EAAA/mE,EAAA+mE,SAEA7I,EAAA,MAAA92D,KAAAkoE,MAVAjxE,EAAAgB,EAAAwtD,EAAA,SAkBAqf,cAAA3qE,UAAA4tE,oBAAA,SAAAhqC,GACA,GAAAnlC,GAAAzB,KACyBwoE,EAAA5hC,IAAApmC,OAAA,GACAwwE,EAAApqC,EAAA3/B,MAAA,EAAA2/B,EAAApmC,OAAA,GACzBywE,UACA7rE,IAAA,SAAAuD,GAA+B,MAAAlH,GAAAyvE,wBAAAvoE,KAC/BzB,OAAA,SAAA4oC,GAAkC,cAAAA,GAClC,OAAAif,gBAAAL,EAAA,IAAA7lD,KAAA/I,EAAAgB,EAAAmyD,EAAA,MAAA+d,GAAA,SAAA3wE,GAYA,MAAA0uD,gBAX6BL,EAAA,IAAA7lD,KAAA/I,EAAAgB,EAAAmyD,EAAA,MAAA5yD,EAAA8wE,QAAA,SAAA7wE,GAC7B,GACiCywE,GADA5d,EAAA1xD,EAAA6oD,SAAAhqD,EAAAD,EAAA2nD,KAQjC,OALA+oB,GAAA3hB,mBADA+D,EAAAie,iBACAje,EAAAie,iBAAA5I,EAAA/mE,EAAA+mE,QAGArV,EAAAqV,EAAA/mE,EAAA+mE,SAEA7I,EAAA,MAAA92D,KAAAkoE,UASApD,cAAA3qE,UAAAkuE,wBAAA,SAAAvoE,GACA,GAAyByoE,GAAAzoE,EAAAo0D,aAAAp0D,EAAAo0D,aAAAqU,iBAAA,IACzB,OAAAA,IAAA,IAAAA,EAAA5wE,QAEgBwnD,KAAAr/C,EAAAwoE,OAAAC,GADhB,MAQAzD,cAAA3qE,UAAA2tE,iBAAA,SAAAzjB,EAAA2I,GACA,GAAAp0D,GAAAzB,KACyBuvE,EAAA1Z,KAAAkH,aAAAlH,EAAAkH,aAAAwS,cAAA,IACzB,KAAAA,GAAA,IAAAA,EAAA/uE,OACA,MAAAV,GAAAgB,EAAAwtD,EAAA,OACA,IAAyB+gB,GAAAzP,EAAA,SAAA/2D,KAAA/I,EAAAgB,EAAAmyD,EAAA,MAAAsc,GAAA,SAAAjvE,GACzB,GAC6BywE,GADA5d,EAAA1xD,EAAA6oD,SAAAhqD,EAAAu1D,EAS7B,OANAkb,GACA3hB,mBAFA+D,EAAAoc,cAEApc,EAAAoc,cAAAriB,EAAA2I,EAAAp0D,EAAAo0D,KAAAp0D,EAAA+mE,QAGArV,EAAAjG,EAAA2I,EAAAp0D,EAAAo0D,KAAAp0D,EAAA+mE,SAEA7I,EAAA,MAAA92D,KAAAkoE,IAEA,OAAA7hB,GAAA,MAAArmD,KAAAwmE,EAAA,SAAAlgB,GAA6D,WAAAA,KAM7Dwe,cAAA3qE,UAAA4sE,WAAA,SAAApH,GACA,GAAyBjvB,GAAAivB,EAAAlB,QACzB,OAAA5Y,GAAA,IAAA7lD,KAAA7I,KAAAqxE,YAAA93B,EAAAivB,GAAA,SAAA8I,GAGA,MAFA9I,GAAA1S,cAAAwb,EACA9I,EAAA9mE,KAAAhB,OAAA6H,UAA0CigE,EAAA9mE,KAAA8zD,2BAAAgT,GAAAjvB,SAC1C,QAQAo0B,cAAA3qE,UAAAquE,YAAA,SAAA93B,EAAAivB,GACA,GAAA/mE,GAAAzB,KACyBwjC,EAAA9iC,OAAA8iC,KAAA+V,EACzB,QAAA/V,EAAAhjC,OACA,MAAAV,GAAAgB,EAAAwtD,EAAA,OAEA,QAAA9qB,EAAAhjC,OAAA,CACA,GAA6B+wE,GAAA/tC,EAAA,EAC7B,OAAAkrB,GAAA,IAAA7lD,KAAA7I,KAAAwxE,YAAAj4B,EAAAg4B,GAAA/I,GAAA,SAAApnE,GACA,MAAAuxC,MAA8BA,EAAA4+B,GAAAnwE,EAAAuxC,CAC9B,IAAAA,KAGA,GAAyBjxC,MACA+vE,EAAA7R,EAAA,SAAA/2D,KAAA/I,EAAAgB,EAAAmyD,EAAA,MAAAzvB,GAAA,SAAArjC,GACzB,MAAAuuD,GAAA,IAAA7lD,KAAApH,EAAA+vE,YAAAj4B,EAAAp5C,GAAAqoE,GAAA,SAAApnE,GAEA,MADAM,GAAAvB,GAAAiB,EACAA,KAGA,OAAAstD,GAAA,IAAA7lD,KAAAimD,EAAA,KAAAjmD,KAAA4oE,GAAA,WAAmE,MAAA/vE,MAOnEisE,cAAA3qE,UAAAwuE,YAAA,SAAAte,EAAAsV,GACA,GAAyBkJ,GAAA1xE,KAAAsqD,SAAA4I,EAAAsV,EACzB,OAAApZ,oBAAAsiB,EAAAn4B,QAAAm4B,EAAAn4B,QAAAivB,EAAAxoE,KAAAwoE,QACAkJ,EAAAlJ,EAAAxoE,KAAAwoE,UAOAmF,cAAA3qE,UAAAsnD,SAAA,SAAAa,EAAAuJ,GACA,GAAyBtoD,GAAA6wD,oBAAAvI,EAEzB,QADyBtoD,IAAAxM,OAAAw+D,SAAAp+D,KAAA0yD,gBACzB1uD,IAAAmnD,IAEAwiB,iBAEAa,GAAA,WAMA,QAAAA,gBAAA7X,EAAAgb,EAAAC,GACA5xE,KAAA22D,qBACA32D,KAAA2xE,cACA3xE,KAAA4xE,YAkLA,MA5KApD,gBAAAxrE,UAAAyrE,SAAA,SAAAO,GACA,GAAyBC,GAAAjvE,KAAA2xE,YAAA7a,MACAoY,EAAAlvE,KAAA4xE,UAAA5xE,KAAA4xE,UAAA9a,MAAA,IACzB92D,MAAA6xE,sBAAA5C,EAAAC,EAAAF,GACA7Y,sBAAAn2D,KAAA2xE,YAAA3hB,MACAhwD,KAAA8xE,oBAAA7C,EAAAC,EAAAF,IAQAR,eAAAxrE,UAAA6uE,sBAAA,SAAA/B,EAAAC,EAAA7R,GACA,GAAAz8D,GAAAzB,KACyBstD,EAAA4P,kBAAA6S,EAEzBD,GAAAxiB,SAAA7mD,QAAA,SAAAsrE,GACA,GAA6BC,GAAAD,EAAA3wE,MAAA+rD,MAC7B1rD,GAAAwwE,iBAAAF,EAAAzkB,EAAA0kB,GAAA9T,SACA5Q,GAAA0kB,KAGAvrE,QAAA6mD,EAAA,SAAApsD,EAAAuvE,GACAhvE,EAAA0uE,8BAAAjvE,EAAAg9D,MASAsQ,eAAAxrE,UAAAivE,iBAAA,SAAAnC,EAAAC,EAAAmC,GACA,GAAyB1J,GAAAsH,EAAA1uE,MACAy0D,EAAAka,IAAA3uE,MAAA,IACzB,IAAAonE,IAAA3S,EAEA,GAAA2S,EAAAtb,UAAA,CAEA,GAAiCmjB,GAAA6B,EAAA9B,WAAA5H,EAAArb,OACjCkjB,IACArwE,KAAA6xE,sBAAA/B,EAAAC,EAAAM,EAAA/iB,cAKAttD,MAAA6xE,sBAAA/B,EAAAC,EAAAmC,OAIArc,IAEA71D,KAAAmwE,8BAAAJ,EAAAmC,IASA1D,eAAAxrE,UAAAmtE,8BAAA,SAAA3uE,EAAAwtE,GACAhvE,KAAA22D,mBAAA0R,aAAA7mE,EAAAJ,MAAAszD,UACA10D,KAAAmyE,2BAAA3wE,EAAAwtE,GAGAhvE,KAAAoyE,yBAAA5wE,EAAAwtE,IAQAR,eAAAxrE,UAAAmvE,2BAAA,SAAA3wE,EAAAwtE,GACA,GAAyBqB,GAAArB,EAAAoB,WAAA5uE,EAAAJ,MAAA+rD,OACzB,IAAAkjB,KAAAljB,OAAA,CACA,GAA6BklB,GAAAhC,EAAAljB,OAAAmlB,SACApU,EAAAmS,EAAA/iB,SAAAilB,qBAC7BvyE,MAAA22D,mBAAA2R,MAAA9mE,EAAAJ,MAAAszD,UAAiE2d,eAAA7wE,QAAA08D,eAQjEsQ,eAAAxrE,UAAAovE,yBAAA,SAAA5wE,EAAAwtE,GACA,GAAAvtE,GAAAzB,KACyBqwE,EAAArB,EAAAoB,WAAA5uE,EAAAJ,MAAA+rD,OACzB,IAAAkjB,EAAA,CACA,GAA6B/iB,GAAA4P,kBAAA17D,GACAgxE,EAAAhxE,EAAAJ,MAAA8rD,UAAAmjB,EAAA/iB,SAAA0hB,CAC7BvoE,SAAA6mD,EAAA,SAAApsD,EAAAD,GAA+C,MAAAQ,GAAA0uE,8BAAAjvE,EAAAsxE,KAC/CnC,EAAAljB,SAEAkjB,EAAAljB,OAAAslB,aAEApC,EAAA/iB,SAAAilB,yBAUA/D,eAAAxrE,UAAA8uE,oBAAA,SAAAhC,EAAAC,EAAA7R,GACA,GAAAz8D,GAAAzB,KACyBstD,EAAA4P,kBAAA6S,EACzBD,GAAAxiB,SAAA7mD,QAAA,SAAAnG,GAAkDmB,EAAAixE,eAAApyE,EAAAgtD,EAAAhtD,EAAAc,MAAA+rD,QAAA+Q,MAQlDsQ,eAAAxrE,UAAA0vE,eAAA,SAAA5C,EAAAC,EAAAf,GACA,GAAyBxG,GAAAsH,EAAA1uE,MACAy0D,EAAAka,IAAA3uE,MAAA,IAGzB,IAFA+0D,sBAAAqS,GAEAA,IAAA3S,EACA,GAAA2S,EAAAtb,UAAA,CAEA,GAAiCmjB,GAAArB,EAAA2D,mBAAAnK,EAAArb,OACjCntD,MAAA8xE,oBAAAhC,EAAAC,EAAAM,EAAA/iB,cAIAttD,MAAA8xE,oBAAAhC,EAAAC,EAAAf,OAIA,IAAAxG,EAAAtb,UAAA,CAEA,GAAiCmjB,GAAArB,EAAA2D,mBAAAnK,EAAArb,OACjC,IAAAntD,KAAA22D,mBAAA4R,aAAAC,EAAA9T,UAAA,CACA,GAAqCke,GAAA5yE,KAAA22D,mBAAAM,SAAAuR,EAAA9T,SACrC10D,MAAA22D,mBAAA2R,MAAAE,EAAA9T,SAAA,MACA2b,EAAA/iB,SAAAulB,mBAAAD,EAAA1U,UACAmS,EAAAyC,UAAAF,EAAAP,aACAhC,EAAA7uE,MAAAoxE,EAAApxE,MAAAJ,MACAivE,EAAAljB,QAGAkjB,EAAAljB,OAAA4lB,OAAAH,EAAAP,aAAAO,EAAApxE,MAAAJ,OAEAy7D,wCAAA+V,EAAApxE,WAEA,CACA,GAAqC4K,GAAA0wD,mBAAA0L,EAAA9T,UACAse,EAAA5mE,IAAAxM,OAAAqzE,yBAAA,IACrC5C,GAAA7uE,MAAAgnE,EACA6H,EAAAqB,SAAAsB,EACA3C,EAAAljB,QAGAkjB,EAAAljB,OAAA+lB,aAAA1K,EAAAwK,GAEAhzE,KAAA8xE,oBAAAhC,EAAA,KAAAO,EAAA/iB,eAKAttD,MAAA8xE,oBAAAhC,EAAA,KAAAd,IAIAR,kBAkJAvO,GAAA,WAQA,QAAAA,YAAApC,EAAAr8D,EAAA2xE,EAAAC,EAAAzqC,GACA3oC,KAAA69D,SACA79D,KAAAwB,QACAxB,KAAAs3D,YACA,MAAA6b,GACAC,EAAAC,aAAA1qC,EAAAv9B,cAAA,gBA8DA,MA3DA1K,QAAAK,eAAAk/D,WAAAj9D,UAAA,cAKAsvC,IAAA,SAAAglB,GAEAt3D,KAAAs3D,SADA,MAAAA,EACApvB,MAAAK,QAAA+uB,aAMAhuD,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAk/D,WAAAj9D,UAAA,uBAMAsvC,IAAA,SAAAlxC,GACAtB,EAAAgB,EAAAuuD,EAAA,uBAAAhrD,QAAA,MACAA,QAAAi4C,KAAA,wEAEAt8C,KAAAszE,SAAAlyE,GAEAkI,YAAA,EACAC,cAAA,IAKA02D,WAAAj9D,UAAAuwE,QAAA,WACA,GAAyBxH,IACzBC,mBAAA5O,cAAAp9D,KAAAgsE,oBACAjB,WAAA3N,cAAAp9D,KAAA+qE,YAGA,OADA/qE,MAAA69D,OAAAiN,cAAA9qE,KAAA6yD,QAAAkZ,IACA,GAEArrE,OAAAK,eAAAk/D,WAAAj9D,UAAA,WAIAgB,IAAA,WACA,MAAAhE,MAAA69D,OAAAxG,cAAAr3D,KAAAs3D,UACAmU,WAAAzrE,KAAAwB,MACAsuD,YAAA9vD,KAAA8vD,YACAoF,SAAAl1D,KAAAk1D,SACAwW,oBAAAtO,cAAAp9D,KAAAszE,UACA3H,oBAAA3rE,KAAA2rE,oBACAC,iBAAAxO,cAAAp9D,KAAA4rE,qBAGAtiE,YAAA,EACAC,cAAA,IAEA02D,aAEAA,IAAAhgE,aACKiwC,KAAAmf,EAAA,UAAAlf,OAA0BruC,SAAA,0BAK/Bm+D,GAAA1vB,eAAA,WAAyC,QACpCL,KAAAotB,KACAptB,KAAAluC,KACAkuC,SAAAtI,GAAA3nC,aAAgCiwC,KAAAmf,EAAA,UAAAlf,MAAA,gBAChCD,KAAAmf,EAAA,YACAnf,KAAAmf,EAAA,cAEL4Q,GAAAhuB,gBACA6d,cAAqB5f,KAAAmf,EAAA,QACrB6F,WAAkBhlB,KAAAmf,EAAA,QAClBsc,sBAA6Bz7B,KAAAmf,EAAA,QAC7Buc,mBAA0B17B,KAAAmf,EAAA,QAC1B2c,qBAA4B97B,KAAAmf,EAAA,QAC5B0b,aAAoB76B,KAAAmf,EAAA,QACpBmkB,aAAoBtjC,KAAAmf,EAAA,QACpBqc,sBAA6Bx7B,KAAAmf,EAAA,QAC7BkkB,UAAiBrjC,KAAAmf,EAAA,aAAAlf,MAAA,WAWjB,IAAA+vB,IAAA,WAMA,QAAAA,oBAAArC,EAAAr8D,EAAAiyE,GACA,GAAAhyE,GAAAzB,IACAA,MAAA69D,SACA79D,KAAAwB,QACAxB,KAAAyzE,mBACAzzE,KAAAs3D,YACAt3D,KAAA0zE,aAAA7V,EAAAj4D,OAAAjE,UAAA,SAAA8G,GACAA,YAAA+3D,IACA/+D,EAAAkyE,2BAuFA,MAnFAjzE,QAAAK,eAAAm/D,mBAAAl9D,UAAA,cAKAsvC,IAAA,SAAAglB,GAEAt3D,KAAAs3D,SADA,MAAAA,EACApvB,MAAAK,QAAA+uB,aAMAhuD,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAm/D,mBAAAl9D,UAAA,uBAKAsvC,IAAA,SAAAlxC,GACAtB,EAAAgB,EAAAuuD,EAAA,uBAAAhrD,QAAA,MACAA,QAAAi4C,KAAA,uEAEAt8C,KAAAszE,SAAAlyE,GAEAkI,YAAA,EACAC,cAAA,IAMA22D,mBAAAl9D,UAAAs4C,YAAA,SAAAtU,GAAmEhnC,KAAA2zE,0BAInEzT,mBAAAl9D,UAAA4uC,YAAA,WAA4D5xC,KAAA0zE,aAAAt8B,eAQ5D8oB,mBAAAl9D,UAAAuwE,QAAA,SAAAK,EAAAC,EAAAC,EAAAC,GACA,OAAAH,GAAAC,GAAAC,GAAAC,EACA,QAEA,oBAAA/zE,MAAAE,QAAA,SAAAF,KAAAE,OACA,QAEA,IAAyB6rE,IACzBC,mBAAA5O,cAAAp9D,KAAAgsE,oBACAjB,WAAA3N,cAAAp9D,KAAA+qE,YAGA,OADA/qE,MAAA69D,OAAAiN,cAAA9qE,KAAA6yD,QAAAkZ,IACA,GAKA7L,mBAAAl9D,UAAA2wE,uBAAA,WACA3zE,KAAAg0E,KAAAh0E,KAAAyzE,iBAAAQ,mBAAAj0E,KAAA69D,OAAAyN,aAAAtrE,KAAA6yD,WAEAnyD,OAAAK,eAAAm/D,mBAAAl9D,UAAA,WAIAgB,IAAA,WACA,MAAAhE,MAAA69D,OAAAxG,cAAAr3D,KAAAs3D,UACAmU,WAAAzrE,KAAAwB,MACAsuD,YAAA9vD,KAAA8vD,YACAoF,SAAAl1D,KAAAk1D,SACAwW,oBAAAtO,cAAAp9D,KAAAszE,UACA3H,oBAAA3rE,KAAA2rE,oBACAC,iBAAAxO,cAAAp9D,KAAA4rE,qBAGAtiE,YAAA,EACAC,cAAA,IAEA22D,qBAEAA,IAAAjgE,aACKiwC,KAAAmf,EAAA,UAAAlf,OAA0BruC,SAAA,oBAK/Bo+D,GAAA3vB,eAAA,WAAiD,QAC5CL,KAAAotB,KACAptB,KAAAluC,KACAkuC,KAAAytB,EAAA,oBAELuC,GAAAjuB,gBACA/xC,SAAgBgwC,KAAAmf,EAAA,YAAAlf,MAAA,iBAA+CD,KAAAmf,EAAA,QAC/DS,cAAqB5f,KAAAmf,EAAA,QACrB6F,WAAkBhlB,KAAAmf,EAAA,QAClBsc,sBAA6Bz7B,KAAAmf,EAAA,QAC7Buc,mBAA0B17B,KAAAmf,EAAA,QAC1B2c,qBAA4B97B,KAAAmf,EAAA,QAC5B0b,aAAoB76B,KAAAmf,EAAA,QACpB2kB,OAAc9jC,KAAAmf,EAAA,cACdmkB,aAAoBtjC,KAAAmf,EAAA,QACpBqc,sBAA6Bx7B,KAAAmf,EAAA,QAC7BkkB,UAAiBrjC,KAAAmf,EAAA,aAAAlf,MAAA;;;;;;;AA8EjB,GAAAgwB,IAAA,WAOA,QAAAA,kBAAAtC,EAAAqW,EAAAd,EAAAe,GACA,GAAA1yE,GAAAzB,IACAA,MAAA69D,SACA79D,KAAAk0E,UACAl0E,KAAAozE,WACApzE,KAAAm0E,MACAn0E,KAAAo0E,WACAp0E,KAAAq0E,QAAA,EACAr0E,KAAAs0E,yBAAwC1kB,OAAA,GACxC5vD,KAAA0zE,aAAA7V,EAAAj4D,OAAAjE,UAAA,SAAA8G,GACAA,YAAA+3D,IACA/+D,EAAA45C,WA8EA,MA1EA36C,QAAAK,eAAAo/D,iBAAAn9D,UAAA,YAIAgB,IAAA,WAA0B,MAAAhE,MAAAq0E,QAC1B/qE,YAAA,EACAC,cAAA,IAKA42D,iBAAAn9D,UAAAuxE,mBAAA,WACA,GAAA9yE,GAAAzB,IACAA,MAAAw0E,MAAAxtC,QAAArlC,UAAA,SAAAmuC,GAAmD,MAAAruC,GAAA45C,WACnDr7C,KAAAy0E,eAAAztC,QAAArlC,UAAA,SAAAmuC,GAA4D,MAAAruC,GAAA45C,WAC5Dr7C,KAAAq7C,UAEA36C,OAAAK,eAAAo/D,iBAAAn9D,UAAA,oBAKAsvC,IAAA,SAAA5wC,GACA,GAA6B0yE,GAAAlsC,MAAAK,QAAA7mC,OAAA4iC,MAAA,IAC7BtkC,MAAAo0E,UAAAltE,OAAA,SAAA5G,GAAwD,QAAAA,KAExDgJ,YAAA,EACAC,cAAA,IAMA42D,iBAAAn9D,UAAAs4C,YAAA,SAAAtU,GAAiEhnC,KAAAq7C,UAIjE8kB,iBAAAn9D,UAAA4uC,YAAA,WAA0D5xC,KAAA0zE,aAAAt8B,eAI1D+oB,iBAAAn9D,UAAAq4C,OAAA,WACA,GAAA55C,GAAAzB,IACA,IAAAA,KAAAw0E,OAAAx0E,KAAAy0E,gBAAAz0E,KAAA69D,OAAAkM,UAAA,CAEA,GAAyB2K,GAAA10E,KAAA00E,gBAEzB10E,MAAAq0E,SAAAK,IACA10E,KAAAo0E,QAAA3tE,QAAA,SAAAnG,GACAo0E,EACAjzE,EAAA2xE,SAAAuB,SAAAlzE,EAAAyyE,QAAA9oE,cAAA9K,GAGAmB,EAAA2xE,SAAAwB,YAAAnzE,EAAAyyE,QAAA9oE,cAAA9K,KAGAg5C,QAAAC,QAAAm7B,GAAA96B,KAAA,SAAAy6B,GAAoE,MAAA5yE,GAAA4yE,cAOpElU,iBAAAn9D,UAAA6xE,aAAA,SAAAhX,GACA,GAAAp8D,GAAAzB,IACA,iBAAA80E,GAAgC,MAAAjX,GAAAwO,SAAAyI,EAAAjiB,QAAApxD,EAAA6yE,wBAAA1kB,SAKhCuQ,iBAAAn9D,UAAA0xE,eAAA,WACA,MAAA10E,MAAAw0E,MAAAjtC,KAAAvnC,KAAA60E,aAAA70E,KAAA69D,UACA79D,KAAAy0E,eAAAltC,KAAAvnC,KAAA60E,aAAA70E,KAAA69D,UAEAsC,mBAEAA,IAAAlgE,aACKiwC,KAAAmf,EAAA,UAAAlf,OACLruC,SAAA,qBACA04C,SAAA,uBAMA2lB,GAAA5vB,eAAA,WAA+C,QAC1CL,KAAAotB,KACAptB,KAAAmf,EAAA,aACAnf,KAAAmf,EAAA,YACAnf,KAAAmf,EAAA,qBAEL8Q,GAAAluB,gBACAuiC,QAAetkC,KAAAmf,EAAA,gBAAAlf,MAAA8vB,IAA4C8U,aAAA,MAC3DN,iBAAwBvkC,KAAAmf,EAAA,gBAAAlf,MAAA+vB,IAAoD6U,aAAA,MAC5ET,0BAAiCpkC,KAAAmf,EAAA,QACjC2lB,mBAA0B9kC,KAAAmf,EAAA;;;;;;;AAc1B,GAAA+R,IAAA,WACA,QAAAA,iBACAphE,KAAAmtD,OAAA,KACAntD,KAAAwB,MAAA,KACAxB,KAAA0xE,SAAA,KACA1xE,KAAAstD,SAAA,GAAA6T,IACAnhE,KAAA8yE,UAAA,KAEA,MAAA1R,kBAOAD,GAAA,WACA,QAAAA,0BACAnhE,KAAAk+D,SAAA,GAAA/rB,KA0DA,MAlDAgvB,wBAAAn+D,UAAAiyE,qBAAA,SAAAxE,EAAAtjB,GACA,GAAyBkjB,GAAArwE,KAAA2yE,mBAAAlC,EACzBJ,GAAAljB,SACAntD,KAAAk+D,SAAA5rB,IAAAm+B,EAAAJ,IASAlP,uBAAAn+D,UAAAkyE,uBAAA,SAAAzE,GACA,GAAyBJ,GAAArwE,KAAAowE,WAAAK,EACzBJ,KACAA,EAAAljB,OAAA,OAQAgU,uBAAAn+D,UAAAuvE,oBAAA,WACA,GAAyBrU,GAAAl+D,KAAAk+D,QAEzB,OADAl+D,MAAAk+D,SAAA,GAAA/rB,KACA+rB,GAMAiD,uBAAAn+D,UAAA6vE,mBAAA,SAAA3U,GAA+El+D,KAAAk+D,YAK/EiD,uBAAAn+D,UAAA2vE,mBAAA,SAAAlC,GACA,GAAyBJ,GAAArwE,KAAAowE,WAAAK,EAKzB,OAJAJ,KACAA,EAAA,GAAAjP,IACAphE,KAAAk+D,SAAA5rB,IAAAm+B,EAAAJ,IAEAA,GAMAlP,uBAAAn+D,UAAAotE,WAAA,SAAAK,GAAwE,MAAAzwE,MAAAk+D,SAAAl6D,IAAAysE,IAAA,MACxEtP,0BAiCAf,GAAA,WAQA,QAAAA,cAAA4O,EAAA7Q,EAAAuT,EAAAhvE,EAAAyyE,GACAn1E,KAAAgvE,iBACAhvE,KAAAm+D,WACAn+D,KAAA0xE,WACA1xE,KAAAm1E,iBACAn1E,KAAAm1D,UAAA,KACAn1D,KAAAo1E,gBAAA,KACAp1E,KAAAq1E,eAAA,GAAAhmB,GAAA,aACArvD,KAAAs1E,iBAAA,GAAAjmB,GAAA,aACArvD,KAAA0C,QAAA0qD,EACA4hB,EAAAiG,qBAAAj1E,KAAA0C,KAAA1C,MAmJA,MA9IAogE,cAAAp9D,UAAA4uC,YAAA,WAAsD5xC,KAAAgvE,eAAAkG,uBAAAl1E,KAAA0C,OAItD09D,aAAAp9D,UAAAC,SAAA,WACA,IAAAjD,KAAAm1D,UAAA,CAGA,GAA6Bkb,GAAArwE,KAAAgvE,eAAAoB,WAAApwE,KAAA0C,KAC7B2tE,MAAA7uE,QACA6uE,EAAAyC,UAEA9yE,KAAA+yE,OAAA1C,EAAAyC,UAAAzC,EAAA7uE,OAIAxB,KAAAkzE,aAAA7C,EAAA7uE,MAAA6uE,EAAAqB,UAAA,SAKAhxE,OAAAK,eAAAq/D,aAAAp9D,UAAA,oBAKAgB,IAAA,WAA0B,MAAAhE,MAAAm+D,SAAAC,UAC1B90D,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAq/D,aAAAp9D,UAAA,2BAKAgB,IAAA,WAA0B,MAAAhE,MAAA0xE,UAC1BpoE,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAq/D,aAAAp9D,UAAA,eAIAgB,IAAA,WAA0B,QAAAhE,KAAAm1D,WAC1B7rD,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAq/D,aAAAp9D,UAAA,aAIAgB,IAAA,WACA,IAAAhE,KAAAm1D,UACA,SAAAlpD,OAAA,0BACA,OAAAjM,MAAAm1D,UAAAogB,UAEAjsE,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAq/D,aAAAp9D,UAAA,kBAIAgB,IAAA,WACA,IAAAhE,KAAAm1D,UACA,SAAAlpD,OAAA,0BACA,OAAAjM,MAAA,iBAEAsJ,YAAA,EACAC,cAAA,IAEA7I,OAAAK,eAAAq/D,aAAAp9D,UAAA,sBAIAgB,IAAA,WACA,MAAAhE,MAAAo1E,gBACAp1E,KAAAo1E,gBAAA1gB,SAAAhzD,SAIA4H,YAAA,EACAC,cAAA,IAMA62D,aAAAp9D,UAAAsvE,OAAA,WACA,IAAAtyE,KAAAm1D,UACA,SAAAlpD,OAAA,0BACAjM,MAAAm+D,SAAAmU,QACA,IAAyBkD,GAAAx1E,KAAAm1D,SAGzB,OAFAn1D,MAAAm1D,UAAA,KACAn1D,KAAAo1E,gBAAA,KACAI,GAQApV,aAAAp9D,UAAA+vE,OAAA,SAAA9U,EAAAwX,GACAz1E,KAAAm1D,UAAA8I,EACAj+D,KAAAo1E,gBAAAK,EACAz1E,KAAAm+D,SAAAhlB,OAAA8kB,EAAAyX,WAKAtV,aAAAp9D,UAAAyvE,WAAA,WACA,GAAAzyE,KAAAm1D,UAAA,CACA,GAA6B70D,GAAAN,KAAAktD,SAC7BltD,MAAAm1D,UAAAwgB,UACA31E,KAAAm1D,UAAA,KACAn1D,KAAAo1E,gBAAA,KACAp1E,KAAAs1E,iBAAAh/B,KAAAh2C,KAQA8/D,aAAAp9D,UAAAkwE,aAAA,SAAAuC,EAAA/D,GACA,GAAA1xE,KAAA0wE,YACA,SAAAzkE,OAAA,8CAEAjM,MAAAo1E,gBAAAK,CACA,IAAyB/gB,GAAA+gB,EAAAnf,gBACApJ,EAAAwH,EAAA,sBACzBgd,MAAA1xE,KAAA0xE,QACA,IAAyBzI,GAAAyI,EAAAkE,wBAAA1oB,GACA2oB,EAAA71E,KAAAgvE,eAAA2D,mBAAA3yE,KAAA0C,MAAA4qD,SACA8Q,EAAA,GAAA0X,IAAAL,EAAAI,EAAA71E,KAAAm+D,SAAAC,SACzBp+D,MAAAm1D,UAAAn1D,KAAAm+D,SAAA4X,gBAAA9M,EAAAjpE,KAAAm+D,SAAA39D,OAAA49D,GAGAp+D,KAAAm1E,eAAAa,eACAh2E,KAAAq1E,eAAA/+B,KAAAt2C,KAAAm1D,UAAAogB,WAEAnV,eAEAA,IAAAngE,aACKiwC,KAAAmf,EAAA,UAAAlf,OAA0BruC,SAAA,gBAAA04C,SAAA,aAK/B4lB,GAAA7vB,eAAA,WAA2C,QACtCL,KAAAixB,KACAjxB,KAAAmf,EAAA,mBACAnf,KAAAmf,EAAA,2BACAnf,SAAAtI,GAAA3nC,aAAgCiwC,KAAAmf,EAAA,UAAAlf,MAAA,YAChCD,KAAAmf,EAAA,qBAEL+Q,GAAAnuB,gBACAojC,iBAAwBnlC,KAAAmf,EAAA,OAAAlf,MAAA,cACxBmlC,mBAA0BplC,KAAAmf,EAAA,OAAAlf,MAAA,gBAE1B,IAAA2lC,IAAA,WAMA,QAAAA,gBAAAt0E,EAAAq0E,EAAAnxC,GACA1kC,KAAAwB,QACAxB,KAAA61E,gBACA71E,KAAA0kC,SAgBA,MATAoxC,gBAAA9yE,UAAAgB,IAAA,SAAAmnD,EAAA8qB,GACA,MAAA9qB,KAAAnpD,GACAhC,KAAAwB,MAEA2pD,IAAAgW,GACAnhE,KAAA61E,cAEA71E,KAAA0kC,OAAA1gC,IAAAmnD,EAAA8qB,IAEAH,kBAeAvU,GAAA,WACA,QAAAA,uBASA,MADAA,oBAAAv+D,UAAAkzE,QAAA,SAAA10E,EAAAyuC,KACAsxB,sBAaAD,GAAA,WACA,QAAAA,sBAUA,MAHAA,mBAAAt+D,UAAAkzE,QAAA,SAAA10E,EAAAyuC,GACA,MAAA6vB,GAAA,OAAAj3D,KAAAonC,IAAA,WAA8C,MAAAnwC,GAAAgB,EAAAwtD,EAAA,aAE9CgT,qBAWAD,GAAA,WACA,QAAAA,iBAQA,MADAA,cAAAr+D,UAAAkzE,QAAA,SAAA10E,EAAAyuC,GAA2D,MAAAnwC,GAAAgB,EAAAwtD,EAAA,WAC3D+S,gBAcAG,GAAA,WAQA,QAAAA,iBAAA3D,EAAAsY,EAAA7X,EAAAF,EAAAgY,GACAp2E,KAAA69D,SACA79D,KAAAo+D,WACAp+D,KAAAo2E,oBACA,IAAAC,GAAA,SAAA51E,GAAwC,MAAAo9D,GAAAuM,aAAA,GAAAtJ,GAAArgE,KACxC61E,EAAA,SAAA71E,GAAsC,MAAAo9D,GAAAuM,aAAA,GAAAvJ,GAAApgE,IACtCT,MAAAq+D,OAAA,GAAAsK,IAAAwN,EAAA7X,EAAA+X,EAAAC,GA8DA,MAxDA9U,iBAAAx+D,UAAAuzE,gBAAA,WACA,GAAA90E,GAAAzB,KACyBw2E,EAAAxW,EAAA,OAAAn3D,KAAA7I,KAAA69D,OAAAj4D,OAAA,SAAAg5D,GAAiE,MAAAA,aAAA4B,IAC1FxgE,MAAA0zE,aAAAhU,EAAA,UAAA72D,KAAA2tE,EAAA,WAAsE,MAAA/0E,GAAAy0E,YAA0Bv0E,UAAA,eAKhG6/D,gBAAAx+D,UAAAkzE,QAAA,WACA,GAAyB7pE,GAAArM,KAAAo+D,SAAAp6D,IAAAqrD,EAAA,YACzB,OAAArvD,MAAAy2E,cAAApqE,EAAArM,KAAA69D,OAAAzxD,SAKAo1D,gBAAAx+D,UAAA4uC,YAAA,WAAyD5xC,KAAA0zE,aAAAt8B,eAMzDoqB,gBAAAx+D,UAAAyzE,cAAA,SAAApqE,EAAAynD,GAEA,OADyBzwB,MACzBqP,EAAA,EAAAgkC,EAAA5iB,EAA2CphB,EAAAgkC,EAAAl2E,OAAsBkyC,IAAA,CACjE,GAAAlxC,GAAAk1E,EAAAhkC,EAEA,IAAAlxC,EAAA+rD,eAAA/rD,EAAAwxD,SAAAxxD,EAAAw7D,cAAA,CACA,GAAiC2I,GAAAnkE,EAAAw7D,aACjC35B,GAAAt9B,KAAA/F,KAAAy2E,cAAA9Q,EAAA/lE,OAAA+lE,EAAA7R,aAGAtyD,GAAA+rD,eAAA/rD,EAAAwxD,QACA3vB,EAAAt9B,KAAA/F,KAAA22E,cAAAtqE,EAAA7K,IAGAA,EAAA8rD,UACAjqB,EAAAt9B,KAAA/F,KAAAy2E,cAAApqE,EAAA7K,EAAA8rD,WAGA,MAAA2B,GAAA,SAAApmD,KAAA/I,EAAAgB,EAAAmyD,EAAA,MAAA5vB,KAOAm+B,gBAAAx+D,UAAA2zE,cAAA,SAAAtqE,EAAA7K,GACA,GAAAC,GAAAzB,IACA,OAAAA,MAAAo2E,mBAAAF,QAAA10E,EAAA,WACA,GAA6Bo1E,GAAAn1E,EAAA48D,OAAAgH,KAAAh5D,EAAA+xD,SAAA58D,EAC7B,OAAAo+D,GAAA,SAAA/2D,KAAA+tE,EAAA,SAAAxqE,GAEA,MADA5K,GAAAw7D,cAAA5wD,EACA3K,EAAAg1E,cAAArqE,EAAAxM,OAAAwM,EAAA0nD,aAIA0N,kBAEAA,IAAAvhE,aACKiwC,KAAAmf,EAAA,aAKLmS,GAAAjxB,eAAA,WAA8C,QACzCL,KAAAotB,KACAptB,KAAAmf,EAAA,wBACAnf,KAAAmf,EAAA,WACAnf,KAAAmf,EAAA,WACAnf,KAAAqxB;;;;;;;AAaL,GAAAsV,KAAAzW,GAAAH,GAAAC,GAAAC,IAKAc,GAAA,GAAA5R,GAAA,uCAIAwS,GAAA,GAAAxS,GAAA,uCACAuS,IACAjE,EAAA,UACKpxD,QAAAo1D,EAAAvW,SAAAsW,IAELn1D,QAAA+wD,GACAhS,WAAA0S,YACAzS,MACA8D,EAAA,eAAAsS,EAAAR,GAAAxD,EAAA,SAAAtO,EAAA,SACAA,EAAA,sBAAAA,EAAA,SAAA0O,GAAAkD,IACAQ,GAAA,GAAApS,GAAA,WAAA2R,GAAA,GAAA3R,GAAA,YAGA8R,IACK50D,QAAAvK,GAAAspD,WAAAyT,UAAAxT,MAAA+R,MACA/wD,QAAA8iD,EAAA,sBAAAjE,SAAAiE,EAAA,wBACLmS,GACAH,GACAC,IACK/0D,QAAA00D,GAAAz0D,UAA2CiyD,eAAA,KA2DhDyC,GAAA,WAKA,QAAAA,cAAA/N,EAAA0K,IAqDA,MArCAqD,cAAA/0D,QAAA,SAAA2nD,EAAA1nD,GACA,OACAC,SAAA60D,aACA50D,WACAs1D,GACA9D,cAAAhK,IAEAvnD,QAAAs1D,GACAvW,WAAAsS,oBACArS,OAAA+R,GAAA,GAAAjO,GAAA,YAAAA,GAAA,aAEiB9iD,QAAA00D,GAAAz0D,SAAAJ,QAEjBG,QAAAoxD,EAAA,iBACArS,WAAAiS,wBACAhS,MACAoS,EAAA,qBAAAtO,GAAA,OAAAsO,EAAA,kBAAAtO,GAAA,UAAA4R,MAIA10D,QAAAg1D,GACA7xB,YAAAtjC,KAAAgqE,mBAAAhqE,EAAAgqE,mBACA/U,KAEiB90D,QAAA8iD,EAAA,aAAA1f,OAAA,EAAA2b,WAAA+R,oBACjBiC,8BASA4B,aAAA4V,SAAA,SAAAhjB,GACA,OAAgBznD,SAAA60D,aAAA50D,WAAAwxD,cAAAhK,MAEhBoN,eAEAA,IAAAjhE,aACKiwC,KAAAmf,EAAA,SAAAlf,OAAyBzjC,aAAAmqE,GAAAh3E,QAAAg3E,OAK9B3V,GAAA3wB,eAAA,WAA2C,QACtCL,SAAAtI,GAAA3nC,aAAgCiwC,KAAAmf,EAAA,WAAoBnf,KAAAmf,EAAA,OAAAlf,MAAA0xB,QACpD3xB,KAAAotB,GAAAr9D,aAA6BiwC,KAAAmf,EAAA,aAqGlC,IAAAkQ,IAAA,WAIA,QAAAA,mBAAAnB,GACAp+D,KAAAo+D,WACAp+D,KAAA+2E,gBAAA,EACA/2E,KAAAg3E,0BAAA,GAAAvX,GAAA,QA+EA,MA1EAF,mBAAAv8D,UAAAk8D,eAAA,WACA,GAAAz9D,GAAAzB,IAEA,OADyBA,MAAAo+D,SAAAp6D,IAAA25D,EAAA,qBAAArkB,QAAAC,QAAA,OACzBK,KAAA,WACA,GAA6BL,GAAA,KACAlW,EAAA,GAAAiW,SAAA,SAAA74C,GAAoC,MAAA84C,GAAA94C,IACpCo9D,EAAAp8D,EAAA28D,SAAAp6D,IAAAs5D,IACA1nB,EAAAn0C,EAAA28D,SAAAp6D,IAAAi9D,GAC7B,IAAAx/D,EAAAw1E,iBAAArhC,IAAAn0C,EAAAy1E,gBAAAthC,GACA2D,GAAA,OAEA,iBAAA3D,EAAAg1B,kBACA/M,EAAAgN,8BACAtxB,GAAA,OAEA,gBAAA3D,EAAAg1B,kBAgBA,SAAA3+D,OAAA,uCAAA2pC,EAAAg1B,kBAAA,IAfA/M,GAAAmM,MAAAE,mBAAA,WAEA,MAAAzoE,GAAAs1E,eAOAj3E,EAAAgB,EAAAwtD,EAAA,WANA7sD,EAAAs1E,gBAAA,EACAx9B,GAAA,GACA93C,EAAAu1E,4BAOAnZ,EAAA+M,oBAKA,MAAAvnC,MAOAk8B,kBAAAv8D,UAAAq8D,kBAAA,SAAA8X,GACA,GAAyBvhC,GAAA51C,KAAAo+D,SAAAp6D,IAAAi9D,IACAmW,EAAAp3E,KAAAo+D,SAAAp6D,IAAAw9D,IACA3D,EAAA79D,KAAAo+D,SAAAp6D,IAAAs5D,IACAW,EAAAj+D,KAAAo+D,SAAAp6D,IAAAqrD,EAAA,eACzB8nB,KAAAlZ,EAAAoZ,WAAA,KAGAr3E,KAAAk3E,gBAAAthC,GACAioB,EAAA+M,oBAEA5qE,KAAAi3E,iBAAArhC,IACAioB,EAAAgN,8BAEAuM,EAAAb,kBACA1Y,EAAA8M,uBAAA1M,EAAAqZ,eAAA,IACAt3E,KAAAg3E,0BAAAh2B,KAAyD,MACzDhhD,KAAAg3E,0BAAAvuB,aAMA8W,kBAAAv8D,UAAAk0E,gBAAA,SAAAthC,GACA,yBAAAA,EAAAg1B,oBAAA,IAAAh1B,EAAAg1B,uBACAhjC,KAAAgO,EAAAg1B,mBAMArL,kBAAAv8D,UAAAi0E,iBAAA,SAAArhC,GACA,0BAAAA,EAAAg1B,oBAAA,IAAAh1B,EAAAg1B,mBAEArL,oBAEAA,IAAAt/D,aACKiwC,KAAAmf,EAAA,aAKLkQ,GAAAhvB,eAAA,WAAgD,QAC3CL,KAAAmf,EAAA,WAqBL,IAAAmQ,IAAA,GAAAnQ,GAAA,qCAgCAtkB,GAAA,GAAAskB,GAAA,kBtB26TMkoB,GACA,SAAU33E,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,GAE5DO,EAAchB,MAAQA,KAAKgB,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZN,UAAoD,kBAArBA,SAAQO,SAAyB,MAAOP,SAAQO,SAASF,EAAGC,IAEtGsK,EAAWxL,MAAQA,KAAKwL,SAAY,SAAUC,EAAYC,GAC1D,MAAO,UAAUxL,EAAQC,GAAOuL,EAAUxL,EAAQC,EAAKsL,IAE3D/K,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,GuB3igBtD,IAAAC,GAAAvB,EAAA,GAqBAoC,EAAApC,EAAA,IACA8L,EAAA9L,EAAA,IACAgM,EAAAhM,EAAA,IACAqI,EAAArI,EAAA,IACA03E,EAAA13E,EAAA,KACA23E,EAAA33E,EAAA,GAEM43E,GACFnrE,QAASrK,EAAAqnC,kBACTmG,YAAaruC,EAAAs2E,WAAW,WAAM,MAAA3vE,KAC9B2nC,OAAO,GAcX3nC,EAAA,WA6CI,QAAAA,mBAAwBoE,EACJwrE,EACAzsE,EACAioE,GAFApzE,KAAA43E,oBACA53E,KAAAmL,aACAnL,KAAAozE,WArCXpzE,KAAA63E,WAAY,EAEZ73E,KAAA0rD,aAAe,iBACf1rD,KAAA2rD,iBAAmB,iBAIM3rD,KAAAgJ,UAAW,EAG7BhJ,KAAAiG,OAAS,GAAI5E,GAAAwD,aACZ7E,KAAAgG,QAAU,GAAI3E,GAAAwD,aACb7E,KAAA6F,SAAW,GAAIxE,GAAAwD,aACjB7E,KAAAkG,OAAS,GAAI7E,GAAAwD,aACZ7E,KAAAmG,QAAU,GAAI9E,GAAAwD,aACb7E,KAAA83E,SAAW,GAAIz2E,GAAAwD,aAOJ7E,KAAA+3E,QAAS,EACR/3E,KAAAg4E,WAAY,EACXh4E,KAAAgmC,YAAa,EAE5ChmC,KAAAi4E,UAAY,GAAIT,GAAAzuE,cAAc,GAC9B/I,KAAAk4E,iBACAl4E,KAAAm4E,WAAY,EACZn4E,KAAAo4E,YAAsB,KAEdp4E,KAAAq4E,gBAAkB,SAACvoC,KACnB9vC,KAAAs4E,6BAA+B,aAOnCt4E,KAAKu4E,YAAYnsE,GA8YzB,MAnaI1L,QAAAK,eAAIiH,kBAAAhF,UAAA,UvB0ggBAgB,IuB1ggBJ,WACI,OAAQhE,KAAKgJ,UvB4ggBbM,YAAY,EACZC,cAAc,IuBr/flB7I,OAAAK,eAAIiH,kBAAAhF,UAAA,SvBw/fAgB,IuBx/fJ,WACI,MAAOhE,MAAKi4E,UAAUtzE,OvB0/ftB2tC,IuBv/fJ,SAAU3tC,GACN3E,KAAKi4E,UAAY,GAAIT,GAAAzuE,UAAUpE,MAAa3E,KAAKgJ,UAE7ChJ,KAAKw4E,eACLx4E,KAAKy4E,qBvBy/fTnvE,YAAY,EACZC,cAAc,IuBt/flB7I,OAAAK,eAAIiH,kBAAAhF,UAAA,SvBy/fAgB,IuBz/fJ,WACI,MAAOhE,MAAKi4E,UAAU72E,OvB2/ftBkI,YAAY,EACZC,cAAc,IuBz/flBvB,kBAAAhF,UAAAC,SAAA,WACIjD,KAAK04E,sBACL14E,KAAKgK,UAAYhK,KAAKgK,WAAa,SAGvChC,kBAAAhF,UAAA4uC,YAAA,WACI5xC,KAAK43E,kBAAkBtF,SACvBtyE,KAAKs4E,gCAITtwE,kBAAAhF,UAAA21E,cAAA,SAAc7yE,GACV,GAAIqC,EAAAsjD,QAAQ3lD,EAAO8yE,OACf,OAAQ9yE,EAAO8yE,OACX,IAAKzwE,GAAAsjD,QAAQotB,UACT74E,KAAK84E,gBAAgBhzE,EACrB,MACJ,KAAKqC,GAAAsjD,QAAQstB,QACT/4E,KAAKg5E,cAAclzE,EACnB,MACJ,KAAKqC,GAAAsjD,QAAQwtB,MACTj5E,KAAKk5E,YAAYpzE,EACjB,MACJ,KAAKqC,GAAAsjD,QAAQ0tB,MACTn5E,KAAKo5E,YAAYtzE,EACjB,MACJ,KAAKqC,GAAAsjD,QAAQ4tB,IACTr5E,KAAKs5E,UAAUxzE,EACf,MACJ,KAAKqC,GAAAsjD,QAAQ8tB,IACTv5E,KAAKw5E,OACL,MACJ,KAAKrxE,GAAAsjD,QAAQguB,UACTz5E,KAAK05E,oBAMrB1xE,kBAAAhF,UAAA22E,iBAAA,SAAiB7zE,GACbA,EAAO8zE,kBACH55E,KAAK+3E,OACL/3E,KAAKw5E,QAELx5E,KAAKkpD,QAIblhD,kBAAAhF,UAAA62E,kBAAA,SAAkB/zE,GACdA,EAAO8zE,kBACP55E,KAAKkpD,QAGTlhD,kBAAAhF,UAAA82E,iBAAA,SAAiBh0E,GACbA,EAAO8zE,kBACP55E,KAAK+5E,SAGT/xE,kBAAAhF,UAAA+2E,MAAA,WACS/5E,KAAK63E,YAGV73E,KAAKi4E,UAAUvuE,gBACf1J,KAAKg6E,cACLh6E,KAAKi6E,uBAGTjyE,kBAAAhF,UAAAoiC,WAAA,SAAWhkC,GAAX,GAAAK,GAAAzB,IACIA,MAAKi4E,UAAUvuE,gBACXtI,IACIpB,KAAKgJ,SACL5H,EAAMqF,QAAQ,SAAAgD,GACVhI,EAAKy4E,iBAAiBzwE,KAG1BzJ,KAAKk6E,iBAAiB94E,IAG9BpB,KAAKm6E,iBAGTnyE,kBAAAhF,UAAAqiC,iBAAA,SAAiB4K,GACbjwC,KAAKq4E,gBAAkBpoC,GAG3BjoC,kBAAAhF,UAAA2iC,kBAAA,SAAkBsK,KAIlBjoC,kBAAAhF,UAAA8iC,iBAAA,SAAiBE,GACbhmC,KAAKgmC,WAAaA,GAGtBh+B,kBAAAhF,UAAAkmD,KAAA,WACQlpD,KAAKgmC,YAAchmC,KAAK+3E,SAG5B/3E,KAAK+3E,QAAS,EACd/3E,KAAKi4E,UAAUztE,WACfxK,KAAKo6E,iBACLp6E,KAAKq6E,mBACLr6E,KAAKkG,OAAOowC,SAGhBtuC,kBAAAhF,UAAAw2E,MAAA,WACSx5E,KAAK+3E,SAGV/3E,KAAK+3E,QAAS,EACd/3E,KAAKg6E,cACLh6E,KAAKmG,QAAQmwC,SAGjBtuC,kBAAAhF,UAAAs3E,cAAA,SAAcl5E,GACV,MAAOA,GAAQA,EAAMpB,KAAKgK,WAAa,IAG3ChC,kBAAAhF,UAAAu3E,0BAAA,WACI,MAAOv6E,MAAKi4E,UAAU72E,OAAUqI,KAAMzJ,KAAKi4E,UAAU72E,QAAYqI,UAGrEzB,kBAAAhF,UAAAw3E,OAAA,SAAO/wE,IACEA,GAAQA,EAAK9G,UAAY3C,KAAKgmC,aAI/BhmC,KAAKgJ,UAAYS,EAAKE,SACtB3J,KAAK4J,SAASH,GAEdzJ,KAAKwJ,OAAOC,KAIpBzB,kBAAAhF,UAAAwG,OAAA,SAAOC,GACEA,EAAKE,WACN3J,KAAKi4E,UAAUzuE,OAAOC,GACtBzJ,KAAKg6C,eAGLh6C,KAAKy6E,QACLz6E,KAAKw5E,SAIbxxE,kBAAAhF,UAAA4G,SAAA,SAASH,GACLzJ,KAAKi4E,UAAUruE,SAASH,GACxBzJ,KAAKg6C,eAGThyC,kBAAAhF,UAAA03E,gBAAA,WACI,MAAO16E,MAAK26E,cAAgB36E,KAAK46E,WAAW56E,KAAKoB,SAAWpB,KAAKo4E,aAGrEpwE,kBAAAhF,UAAA63E,UAAA,WACI,OAAQ76E,KAAKo4E,aAAep4E,KAAK46E,WAAW56E,KAAKoB,QAGrD4G,kBAAAhF,UAAA83E,UAAA,WACI,MAAO96E,MAAK63E,YAAc73E,KAAK46E,WAAW56E,KAAKoB,QAAUpB,KAAKo4E,eAAiBp4E,KAAKgmC,YAGxFh+B,kBAAAhF,UAAA+3E,WAAA,WACI,OAAQ/6E,KAAKgmC,YAGjBh+B,kBAAAhF,UAAAg4E,iBAAA,WACI,GAAMC,GAAgD,IAAxCj7E,KAAKi4E,UAAUhvE,cAAczI,MAC3C,OAAQy6E,KAAUj7E,KAAKw4E,eAClByC,GAASj7E,KAAKw4E,eAAiBx4E,KAAKo4E,cAAgBp4E,KAAKm4E,WAGlEnwE,kBAAAhF,UAAAk4E,iBAAA,WAEI,MADsD,KAAxCl7E,KAAKi4E,UAAUhvE,cAAczI,QAC3BR,KAAKw4E,gBAAkBx4E,KAAKo4E,cAAgBp4E,KAAKm4E,WAGrEnwE,kBAAAhF,UAAAm4E,SAAA,SAASr1E,GACA9F,KAAK+3E,QACN/3E,KAAKkpD,OAGTlpD,KAAKo4E,YAActyE,EAAO5F,OAAOkB,MAE7BpB,KAAKw4E,eACLx4E,KAAKm4E,WAAY,EACjBn4E,KAAK4E,UAAUo8C,KAAKhhD,KAAKo4E,cAEzBp4E,KAAKi4E,UAAU/wE,OAAOlH,KAAKo4E,YAAap4E,KAAKgK,YAIrDhC,kBAAAhF,UAAAo4E,aAAA,SAAat1E,GACT9F,KAAKg4E,WAAY,EACjBh4E,KAAKgG,QAAQswC,KAAKxwC,IAGtBkC,kBAAAhF,UAAAq4E,YAAA,SAAYv1E,GACR9F,KAAKg4E,WAAY,EACjBh4E,KAAKiG,OAAOqwC,KAAKxwC,IAGrBkC,kBAAAhF,UAAAs4E,YAAA,SAAY7xE,GACJA,EAAK9G,UAGT3C,KAAKi4E,UAAUztE,SAASf,IAGpBzB,kBAAAhF,UAAA01E,oBAAR,cAAAj3E,GAAAzB,KACU0mD,EAAU,SAAC5gD,GAEb,IAAIrE,EAAK0J,WAAWC,cAAcqtC,SAAS3yC,EAAO5F,QAAlD,CAKA,GAAMq7E,GAAW95E,EAAK+5E,iBAClBD,IAAYA,EAAS9iC,SAAS3yC,EAAO5F,UAKrCuB,EAAKu2E,WACLv2E,EAAK45E,YAAYv1E,GAGjBrE,EAAKs2E,QACLt2E,EAAK+3E,UAIbx5E,MAAKs4E,6BAA+Bt4E,KAAKozE,SAASqI,OAAO,WAAY,QAAS/0B,IAG1E1+C,kBAAAhF,UAAA04E,mBAAR,SAA2Bt6E,GACvB,GAAIA,YAAiBV,SAAUV,KAAK27E,UAChC,KAAM,IAAI1vE,OAAM,kDAIhBjE,kBAAAhF,UAAAy1E,kBAAR,WACIz4E,KAAKm4E,WAAY,EACjBn4E,KAAKi4E,UAAUztE,YAGXxC,kBAAAhF,UAAAk3E,iBAAR,SAAyB94E,GAAzB,GAAAK,GAAAzB,IACIA,MAAK07E,mBAAmBt6E,EACxB,IAAI4J,IAAS,CACThL,MAAK27E,UACL3wE,EAAQhL,KAAKi4E,UAAUtzE,MAAMi3E,UAAU,SAAAz0E,GAAK,MAAAA,GAAE1F,EAAKk6E,aAAev6E,KAElE4J,EAAQhL,KAAKi4E,UAAUtzE,MAAM+F,QAAQtJ,GACrC4J,EAAQA,GAAS,EAAIA,EACjBhL,KAAKi4E,UAAUtzE,MAAMi3E,UAAU,SAAAz0E,GAAK,MAAAA,GAAE1F,EAAKuI,aAAe5I,EAAMK,EAAKuI,cAEzEgB,GAAS,GACThL,KAAKi4E,UAAUzuE,OAAOxJ,KAAKi4E,UAAUtzE,MAAMqG,KAI3ChD,kBAAAhF,UAAAg3C,YAAR,WACIh6C,KAAKi6E,qBACLj6E,KAAK43E,kBAAkB5B,gBAGnBhuE,kBAAAhF,UAAAg3E,YAAR,WACIh6E,KAAKo4E,YAAc,KACnBp4E,KAAKi4E,UAAU7tE,eAGXpC,kBAAAhF,UAAAq3E,iBAAR,cAAA54E,GAAAzB,IACIorE,YAAW,WACP3pE,EAAKo6E,YAAYzwE,cAAc0wE,WAI/B9zE,kBAAAhF,UAAAo3E,eAAR,WACIp6E,KAAK+7E,aAAaC,WAAWh8E,KAAKi4E,UAAUptE,aAGxC7C,kBAAAhF,UAAAs2E,UAAR,SAAkBxzE,GACV9F,KAAK+3E,SACL/3E,KAAKwJ,OAAOxJ,KAAKi4E,UAAUptE,YACvB7K,KAAKgJ,UACLhJ,KAAKw5E,UAKTxxE,kBAAAhF,UAAAo2E,YAAR,SAAoBtzE,GACZ9F,KAAK+3E,QACL/3E,KAAKw6E,OAAOx6E,KAAKi4E,UAAUptE,YAE/B/E,EAAOm2E,kBAGHj0E,kBAAAhF,UAAAk2E,YAAR,SAAoBpzE,GACZ9F,KAAK+3E,SAGT/3E,KAAKkpD,OACLpjD,EAAOm2E,mBAGHj0E,kBAAAhF,UAAA81E,gBAAR,SAAwBhzE,GACf9F,KAAK+3E,QAGN/3E,KAAKi4E,UAAU5tE,eACfrK,KAAKo6E,kBAHLp6E,KAAKkpD,OAKTpjD,EAAOm2E,kBAGHj0E,kBAAAhF,UAAAg2E,cAAR,SAAsBlzE,GAClB9F,KAAKi4E,UAAU1tE,mBACfvK,KAAKo6E,iBACLt0E,EAAOm2E,kBAGHj0E,kBAAAhF,UAAA02E,gBAAR,WACI,GAAI15E,KAAKgJ,SACLhJ,KAAKi4E,UAAUpuE,mBACf7J,KAAKg6C,kBACF,CACH,GAAIh6C,KAAKo4E,YACL,MAEJp4E,MAAK+5E,UAIL/xE,kBAAAhF,UAAAi3E,mBAAR,cAAAx4E,GAAAzB,KACUoB,EAAQpB,KAAKi4E,UAAU72E,KAC7B,IAAKA,EAEE,GAAIpB,KAAK27E,UAAW,CACvB,GAAMA,GAAYzzC,MAAMK,QAAQnnC,GAC5BA,EAAMgE,IAAI,SAAA+B,GAAK,MAAAA,GAAE1F,EAAKk6E,aACtBv6E,EAAMpB,KAAK27E,UACf37E,MAAKq4E,gBAAgBsD,OAErB37E,MAAKq4E,gBAAgBj3E,OAPrBpB,MAAKq4E,gBAAgB,KASzBr4E,MAAK6F,SAASywC,KAAKl1C,IAGf4G,kBAAAhF,UAAAw4E,gBAAR,WACI,MAAKx7E,MAAK+3E,QAAW/3E,KAAK+7E,aAGN/7E,KAAKmL,WAAWC,cAAc8wE,cAAc,kBAFrD,MAKPl0E,kBAAAhF,UAAAw1E,YAAR,WACI,MAAOx4E,MAAK4E,WAAa5E,KAAK4E,UAAUu3E,UAAU37E,OAAS,GAGvDwH,kBAAAhF,UAAAm3E,cAAR,WACen6E,KAAK43E,kBAAmBwE,WAC/Bp8E,KAAK43E,kBAAkBuC,iBAIvBnyE,kBAAAhF,UAAA43E,WAAR,SAAmBx5E,GACf,MAAIpB,MAAKgJ,WACI5H,GAASA,EAAMZ,OAAS,IAE5BY,GAGL4G,kBAAAhF,UAAAu1E,YAAR,SAAoBnsE,GACXA,IAGLpM,KAAK0rD,aAAet/C,EAAOs/C,cAAgB1rD,KAAK0rD,aAChD1rD,KAAK2rD,iBAAmBv/C,EAAOu/C,kBAAoB3rD,KAAK2rD,mBA5bI5rD,GAA/DsB,EAAAg7E,aAAazwE,EAAAe,2BAA6B2vE,KAAMj7E,EAAAk7E,cvBg5gB7Cv7E,EAAW,cuBh5gBiEK,EAAAk7E,cvBi5gB7Ev0E,kBAAkBhF,UAAW,qBAAkB,IuBh5gBajD,GAA9DsB,EAAAg7E,aAAazwE,EAAAgB,0BAA4B0vE,KAAMj7E,EAAAk7E,cvBm5gB5Cv7E,EAAW,cuBn5gB+DK,EAAAk7E,cvBo5gB3Ev0E,kBAAkBhF,UAAW,oBAAiB,IuBl5gBdjD,GAAlCsB,EAAAm7E,UAAU1wE,EAAA2wE,wBvBq5gBPz7E,EAAW,cuBr5gBkC8K,EAAA2wE,yBvBs5gB9Cz0E,kBAAkBhF,UAAW,mBAAgB,IuBr5gBtBjD,GAAzBsB,EAAAm7E,UAAU,evBw5gBPx7E,EAAW,cAAeN,SAC3BsH,kBAAkBhF,UAAW,kBAAe,IuBt5gBtCjD,GAARsB,EAAAq7E,QvBy5gBG17E,EAAW,cAAe27E,SAC3B30E,kBAAkBhF,UAAW,gBAAa,IuBz5gBpCjD,GAARsB,EAAAq7E,QvB45gBG17E,EAAW,cAAe27E,SAC3B30E,kBAAkBhF,UAAW,gBAAa,IuB55gBpCjD,GAARsB,EAAAq7E,QvB+5gBG17E,EAAW,cAAeN,SAC3BsH,kBAAkBhF,UAAW,gBAAa,IuB/5gBpCjD,GAARsB,EAAAq7E,QvBk6gBG17E,EAAW,cAAe27E,SAC3B30E,kBAAkBhF,UAAW,kBAAe,IuBl6gBtCjD,GAARsB,EAAAq7E,QvBq6gBG17E,EAAW,cAAeN,SAC3BsH,kBAAkBhF,UAAW,mBAAgB,IuBr6gBvCjD,GAARsB,EAAAq7E,QvBw6gBG17E,EAAW,cAAeN,SAC3BsH,kBAAkBhF,UAAW,uBAAoB,IuBx6gB3CjD,GAARsB,EAAAq7E,QvB26gBG17E,EAAW,cuB36gBKy2E,EAAAmF,UvB46gBjB50E,kBAAkBhF,UAAW,gBAAa,IuBz6gBXjD,GADjCsB,EAAAq7E,QACAr7E,EAAAw7E,YAAY,qBvB66gBT77E,EAAW,cAAeN,SAC3BsH,kBAAkBhF,UAAW,eAAY,IuB36gB5BjD,GAAfsB,EAAAy7E,OAAO,QvB86gBJ97E,EAAW,cAAeN,SAC3BsH,kBAAkBhF,UAAW,aAAU,IuB96gBzBjD,GAAhBsB,EAAAy7E,OAAO,SvBi7gBJ97E,EAAW,cAAeN,SAC3BsH,kBAAkBhF,UAAW,cAAW,IuBj7gBzBjD,GAAjBsB,EAAAy7E,OAAO,UvBo7gBJ97E,EAAW,cAAeN,SAC3BsH,kBAAkBhF,UAAW,eAAY,IuBp7gB5BjD,GAAfsB,EAAAy7E,OAAO,QvBu7gBJ97E,EAAW,cAAeN,SAC3BsH,kBAAkBhF,UAAW,aAAU,IuBv7gBzBjD,GAAhBsB,EAAAy7E,OAAO,SvB07gBJ97E,EAAW,cAAeN,SAC3BsH,kBAAkBhF,UAAW,cAAW,IuB17gBzBjD,GAAjBsB,EAAAy7E,OAAO,UvB67gBJ97E,EAAW,cAAeN,SAC3BsH,kBAAkBhF,UAAW,eAAY,IuB37gB5CjD,GADCsB,EAAAw7E,YAAY,mBvB+7gBT77E,EAAW,cAAeN,QAC1BM,EAAW,yBACZgH,kBAAkBhF,UAAW,SAAU,MuB57gBbjD,GAA5BsB,EAAAw7E,YAAY,gBvB+7gBT77E,EAAW,cAAeN,SAC3BsH,kBAAkBhF,UAAW,aAAU,IuB/7gBZjD,GAA7BsB,EAAAw7E,YAAY,iBvBk8gBT77E,EAAW,cAAeN,SAC3BsH,kBAAkBhF,UAAW,gBAAa,IuBl8gBdjD,GAA9BsB,EAAAw7E,YAAY,kBvBq8gBT77E,EAAW,cAAeN,SAC3BsH,kBAAkBhF,UAAW,iBAAc,IuBn7gB9CjD,GADCsB,EAAAq7E,QvBu7gBG17E,EAAW,cAAeknC,OAC1BlnC,EAAW,qBAAsBknC,SAClClgC,kBAAkBhF,UAAW,QAAS,MuB75gBzCjD,GADCsB,EAAA07E,aAAa,WAAY,WvBi6gBtB/7E,EAAW,cAAeg8E,UAC1Bh8E,EAAW,qBuBj6gBOi8E,gBvBk6gBlBj8E,EAAW,wBAAqB,KACjCgH,kBAAkBhF,UAAW,gBAAiB,MuBp/gBxCgF,kBAAiBjI,GAX7BsB,EAAAQ,WACGC,SAAU,YACVC,SAAUjC,EAAQ,KAClBo9E,QAASp9E,EAAQ,MACjBwM,WAAYorE,GACZyF,cAAe97E,EAAA+7E,kBAAkBC,KACjCC,gBAAiBj8E,EAAAk8E,wBAAwBC,OACzCptC,MACIqtC,KAAQ,cAgDCjyE,EAAA,EAAAnK,EAAA6L,YvBq9gBTlM,EAAW,qBuBr9gBiBmH,EAAAC,eACO/G,EAAAq8E,kBACPr8E,EAAAiK,WACFjK,EAAAs8E,aAhDrB31E,qBAAAnI,GAAAmI,qBvB8ghBP41E,GACA,SAAUh+E,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,GAE5DO,EAAchB,MAAQA,KAAKgB,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZN,UAAoD,kBAArBA,SAAQO,SAAyB,MAAOP,SAAQO,SAASF,EAAGC,GAE1GR,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,GwBzkhBtD,IAAAC,GAAAvB,EAAA,GAGA6M,EAAA,WACI,QAAAA,2BAAmB5K,GAAA/B,KAAA+B,WAEvB,MAHa4K,2BAAyB5M,GADrCsB,EAAAgK,WAAYvJ,SAAU,oBxB+khBfd,EAAW,qBwB7khBcK,EAAAk7E,eADpB5vE,6BAAA9M,GAAA8M,2BAMb,IAAAC,GAAA,WACI,QAAAA,0BAAmB7K,GAAA/B,KAAA+B,WAEvB,MAHa6K,0BAAwB7M,GADpCsB,EAAAgK,WAAYvJ,SAAU,mBxBolhBfd,EAAW,qBwBllhBcK,EAAAk7E,eADpB3vE,4BAAA/M,GAAA+M,4BxB4lhBPixE,GACA,SAAUj+E,EAAQC,EAASC,GAEjC,YAOA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,GAE5DO,EAAchB,MAAQA,KAAKgB,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZN,UAAoD,kBAArBA,SAAQO,SAAyB,MAAOP,SAAQO,SAASF,EAAGC,GAE1GR,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,GyBlnhBtD,IAAAC,GAAAvB,EAAA,GAeA6L,EAAA7L,EAAA,IA4CA28E,EAAA,WAqCI,QAAAA,wBAAoBvI,EAA6B4J,EAAsB1K,GAAnDpzE,KAAAk0E,UAA6Bl0E,KAAA89E,OAAsB99E,KAAAozE,WAlCvEpzE,KAAA2E,SAeA3E,KAAA+9E,aAAe,EAGf/9E,KAAAq7C,OAA8B,GAAIh6C,GAAAwD,aAa1B7E,KAAAg+E,aAAc,EACdh+E,KAAAi+E,sBAAwB,aAmLpC,MA9KIv9E,QAAAK,eAAI07E,uBAAAz5E,UAAA,WzB8hhBAgB,IyB9hhBJ,WACI,MAAOhE,MAAK2E,OAAS3E,KAAK2E,MAAMnE,OAAS,IzBgihBzC8I,YAAY,EACZC,cAAc,IyB9hhBlBkzE,uBAAAz5E,UAAAk7E,aAAA,cAAAz8E,GAAAzB,KACU0mD,EAAU,WACZ,IAAKjlD,EAAK2rC,QAEN,WADA3rC,GAAK45C,OAAO/E,KAAK70C,EAAKkD,MAG1BlD,GAAK08E,UAETn+E,MAAKi+E,sBAAwBj+E,KAAKozE,SAASqI,OAAOz7E,KAAKk0E,QAAQ9oE,cAAe,SAAUs7C,IAG5F+1B,uBAAAz5E,UAAAC,SAAA,WACIjD,KAAKk+E,eACLl+E,KAAKo+E,eAAiB,EACtBp+E,KAAKq+E,gBAAkB,GAG3B5B,uBAAAz5E,UAAA4uC,YAAA,WACI5xC,KAAKi+E,yBAGTxB,uBAAAz5E,UAAAs4C,YAAA,SAAYtU,GACRhnC,KAAKs+E,kBAAgB12C,GACrB5nC,KAAKu+E,gBAAc32C,EACnB,IAAMjjC,GAASqiC,EAAgBriC,eACAijC,KAA1BZ,EAAgBriC,WAA+CijC,KAAxBjjC,EAAM65E,mBACrB52C,KAAxBjjC,EAAM65E,eAA8D,IAA/B75E,EAAM65E,cAAch+E,UAC1DR,KAAKg+E,aAAc,GAEvBh+E,KAAK2E,MAAQA,EAAMyiC,aACnBpnC,KAAKm+E,WAGT1B,uBAAAz5E,UAAAm7E,QAAA,cAAA18E,GAAAzB,IACI,KAAKA,KAAKotC,QAEN,WADAptC,MAAKq7C,OAAO/E,KAAKt2C,KAAK2E,MAG1B3E,MAAK89E,KAAKW,kBAAkB,WACxBC,sBAAsB,WAAM,MAAAj9E,GAAKk9E,sBAIzClC,uBAAAz5E,UAAAg5E,WAAA,SAAWvyE,GACP,GAAIk/B,GAAc3oC,KAAKk0E,QAAQ9oE,cAC3BJ,GAAiBhL,KAAK2E,WAAa+F,QAAQjB,EAC/C,MAAIuB,EAAQ,GAAKA,IAAUhL,KAAK2E,WAAanE,QAA7C,CAIA,GAAMH,GAAIL,KAAK4+E,sBACTC,EAASC,KAAKC,MAAM1+E,EAAE2+E,WAAa3+E,EAAE4+E,aAAe,CAC1Dt2C,GAAGu2C,UAAaJ,KAAKC,MAAM/zE,EAAQ3K,EAAE8+E,aAAe9+E,EAAE4+E,YAC/C5+E,EAAE4+E,YAAcH,KAAK5wC,IAAIljC,EAAO6zE,GACvC7+E,KAAKm+E,YAGD1B,uBAAAz5E,UAAAo8E,iBAAR,WACI,GAAIC,GACAF,EACA7xB,EAAWttD,KAAKs/E,kBAAkBl0E,cAAckiD,QACpD,KAAK6xB,EAAc,EAAGA,EAAc7xB,EAAS9sD,aACvBonC,KAAdy3C,GAA2BA,IAAc/xB,EAAS6xB,GAAaE,WADlBF,IAIjDE,EAAY/xB,EAAS6xB,GAAaE,SAEtC,OAAOF,IAGH1C,uBAAAz5E,UAAAu8E,kBAAR,WACI,GAAIF,GAAY,CAIhB,OAHIr/E,MAAKw/E,qBAAuBx/E,KAAKw/E,oBAAoBp0E,gBACrDi0E,GAAar/E,KAAKw/E,oBAAoBp0E,cAAci0E,WAEjDA,GAGH5C,uBAAAz5E,UAAA47E,oBAAR,WACI,GAMIa,GANA92C,EAAc3oC,KAAKk0E,QAAQ9oE,cAC3BzG,EAAQ3E,KAAK2E,UACb+6E,EAAY/6E,EAAMnE,OAClBm/E,EAAYh3C,EAAGi3C,YAAc5/E,KAAKo+E,eAClCY,EAAar2C,EAAGk3C,aAAe7/E,KAAKq+E,eAGxC,QAAwBz2C,KAApB5nC,KAAK8/E,gBAAiDl4C,KAArB5nC,KAAKi/E,YAA2B,CACjE,GAAIc,GAAU//E,KAAKs/E,kBAAkBl0E,aACjCpL,MAAKw/E,qBAAuBx/E,KAAKw/E,oBAAoBp0E,gBACrD20E,EAAU//E,KAAKw/E,oBAAoBp0E,eAEvCq0E,EAAoBM,EAAQzyB,SAAS,GAAKyyB,EAAQzyB,SAAS,GAAG0yB,yBAC1DC,MAAON,EACPO,OAAQlB,GAGhB,GAAIc,GAAa9/E,KAAK8/E,YAAcL,EAAkBQ,MAClDhB,EAAcj/E,KAAKi/E,aAAeQ,EAAkBS,OAEpDf,EAAcL,KAAKxwC,IAAI,EAAGtuC,KAAKo/E,oBAC/Be,EAAoBrB,KAAKxwC,IAAI,EAAGwwC,KAAKC,MAAMY,EAAYG,IACvDM,EAActB,KAAKxwC,IAAI,EAAGwwC,KAAKC,MAAMC,EAAaC,IAClDC,EAAYJ,KAAKxwC,IAAI,EAAG3F,EAAGu2C,UAK/B,OAJoB,KAAhBkB,GAAqBtB,KAAKC,MAAMG,EAAYl/E,KAAKqgF,aAAeX,GAAaS,GAAqBT,IAClGP,EAAcgB,IAIdT,UAAWA,EACXC,UAAWA,EACXX,WAAYA,EACZc,WAAYA,EACZb,YAAaA,EACbE,YAAaA,EACbiB,YAAaA,EACbD,kBAAmBA,IAInB1D,uBAAAz5E,UAAA27E,eAAR,cAAAl9E,GAAAzB,IACIqB,GAAAi/E,OAAOC,wBACP,IAAI53C,GAAK3oC,KAAKk0E,QAAQ9oE,cAElB/K,EAAIL,KAAK4+E,sBACTj6E,EAAQ3E,KAAK2E,UACb06E,EAAYr/E,KAAKu/E,mBACrBv/E,MAAKqgF,aAAehgF,EAAE4+E,YAAc5+E,EAAEq/E,UAAYr/E,EAAE8+E,YAChDx2C,EAAGu2C,UAAYl/E,KAAKqgF,eACpB13C,EAAGu2C,UAAYl/E,KAAKqgF,aAAehB,EAGvC,IAAIH,GAAYJ,KAAKxwC,IAAI,EAAG3F,EAAGu2C,UAAYG,GACvCmB,EAAmBtB,EAAYl/E,KAAKqgF,aAAehgF,EAAEq/E,UAAYr/E,EAAE8+E,YACnEsB,EAAM3B,KAAK5wC,IAAI7tC,EAAEq/E,UAAWZ,KAAK4B,KAAKF,GAAoBngF,EAAE8+E,YAAc9+E,EAAE8+E,aAAe9+E,EAAE+/E,YAAc,IAE3GO,EAAcF,EACZG,EAASH,EAAMpgF,EAAE8+E,WACnByB,KACAD,EAAcF,EAAMpgF,EAAE8+E,YAAcyB,EAExC,IAAIC,GAAW/B,KAAKxwC,IAAI,EAAGqyC,EAActgF,EAAE+/E,YAAc//E,EAAE8+E,YAAc9+E,EAAE8+E,aACvE2B,EAAQhC,KAAK5wC,IAAI2yC,EAAU/B,KAAKC,MAAMyB,GAAoBngF,EAAE8+E,YAEhEn/E,MAAK+gF,WAAa1gF,EAAE4+E,YAAcH,KAAK4B,KAAKI,EAAQzgF,EAAE8+E,aAAgB9+E,EAAE4+E,YAAcH,KAAK5wC,IAAI4yC,EAAO9gF,KAAK+9E,cAE3G+C,EAAS1yC,MAAM0yC,IAAkB,EAATA,EACxBL,EAAOryC,MAAMqyC,IAAc,EAAPA,EACpBK,GAAS9gF,KAAK+9E,aACd+C,EAAQhC,KAAKxwC,IAAI,EAAGwyC,GACpBL,GAAOzgF,KAAK+9E,aACZ0C,EAAM3B,KAAK5wC,IAAIvpC,EAAMnE,OAAQigF,GACzBK,IAAU9gF,KAAKs+E,eAAiBmC,IAAQzgF,KAAKu+E,aAG7Cv+E,KAAK89E,KAAKkD,IAAI,WACVv/E,EAAK45C,OAAO/E,KAAK3xC,EAAMsC,MAAM65E,EAAOL,MAGxCzgF,KAAKs+E,cAAgBwC,EACrB9gF,KAAKu+E,YAAckC,GAEM,IAArBzgF,KAAKg+E,aACLh+E,KAAKm+E,YAGmB,IAArBn+E,KAAKg+E,cACZh+E,KAAKg+E,aAAc,EACnBh+E,KAAKm+E,YAhNbp+E,GADCsB,EAAAq7E,QzBouhBG17E,EAAW,cAAeknC,QAC3Bu0C,uBAAuBz5E,UAAW,YAAS,IyBjuhB9CjD,GADCsB,EAAAq7E,QzBquhBG17E,EAAW,cAAeigF,SAC3BxE,uBAAuBz5E,UAAW,qBAAkB,IyBluhBvDjD,GADCsB,EAAAq7E,QzBsuhBG17E,EAAW,cAAeigF,SAC3BxE,uBAAuBz5E,UAAW,sBAAmB,IyBnuhBxDjD,GADCsB,EAAAq7E,QzBuuhBG17E,EAAW,cAAeigF,SAC3BxE,uBAAuBz5E,UAAW,iBAAc,IyBpuhBnDjD,GADCsB,EAAAq7E,QzBwuhBG17E,EAAW,cAAeigF,SAC3BxE,uBAAuBz5E,UAAW,kBAAe,IyBruhBpDjD,GADCsB,EAAAq7E,QzByuhBG17E,EAAW,cAAeN,SAC3B+7E,uBAAuBz5E,UAAW,mBAAgB,IyBtuhBrDjD,GADCsB,EAAAy7E,SzB0uhBG97E,EAAW,cyBzuhBPK,EAAAwD,ezB0uhBL43E,uBAAuBz5E,UAAW,aAAU,IyBvuhB/CjD,GADCsB,EAAAm7E,UAAU,WAAYF,KAAMj7E,EAAAiK,azB2uhBzBtK,EAAW,cyB1uhBIK,EAAAiK,azB2uhBhBmxE,uBAAuBz5E,UAAW,wBAAqB,IyBxuhB1DjD,GADCsB,EAAAg7E,aAAa,azB4uhBVr7E,EAAW,cyB3uhBMK,EAAAiK,azB4uhBlBmxE,uBAAuBz5E,UAAW,0BAAuB,IyBvwhBnDy5E,uBAAsB18E,GArClCsB,EAAAQ,WACGC,SAAU,iCACV04C,SAAU,gBACVz4C,SAAU,6aASVquC,MACI8wC,qBAAsB,oCAE1BhE,QAAS,2bzBwyhBLl8E,EAAW,qByB7uhBcK,EAAAiK,WAA0BjK,EAAAi/E,OAA0Bj/E,EAAAs8E,aArCxElB,0BAAA58E,GAAA48E,wBA6Nb,IAAAxvE,GAAA,mBAAAA,wBACA,MADaA,qBAAmBlN,GAL/BsB,EAAAoL,UACGK,SAAUnB,EAAAqB,cACVnN,SAAU48E,GACV/vE,cAAe+vE,MAENxvE,uBAAApN,GAAAoN,uBzB2khBPk0E,GACA,SAAUvhF,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,EAEhEC,QAAOK,eAAelB,EAAS,cAAgBuB,OAAO,G0Bp3hBtD,IAAAC,GAAAvB,EAAA,GACA6L,EAAA7L,EAAA,IACAqC,EAAArC,EAAA,IACAoC,EAAApC,EAAA,IACAshF,EAAAthF,EAAA,IACAwB,EAAAxB,EAAA,IACAuhF,EAAAvhF,EAAA,KAEAwhF,EAAAxhF,EAAA,KACAyhF,EAAAzhF,EAAA,KACA0hF,EAAA1hF,EAAA,KACA2hF,EAAA3hF,EAAA,KACA4hF,EAAA5hF,EAAA,KACA6hF,EAAA7hF,EAAA,KACA8hF,EAAA9hF,EAAA,KACA+hF,EAAA/hF,EAAA,KAEMgiF,IAEEl7C,KAAM,GACNymB,WAAY,SACZf,UAAW,SAEb1lB,KAAM,QAASsmB,UAAWw0B,EAAAt/E,uBAAwBV,MAAQE,MAAO,oBACjEglC,KAAM,WAAYsmB,UAAWs0B,EAAAl8E,wBAAyB5D,MAAQE,MAAO,qBACrEglC,KAAM,gBAAiBsmB,UAAWu0B,EAAA36E,wBAClC8/B,KAAM,gBAAiBsmB,UAAW20B,EAAAn9E,8BAClCkiC,KAAM,YAAasmB,UAAWq0B,EAAAl6E,+BAC9Bu/B,KAAM,cAAesmB,UAAW00B,EAAAv7E,uBAChCugC,KAAM,SAAUsmB,UAAWy0B,EAAAh8E,wBA8BjC+4C,EAAA,mBAAAA,cACA,MADaA,WAAS3+C,GA3BrBsB,EAAAoL,UACGK,SACIs0E,EAAAW,cACAV,EAAAn5E,eAAeiE,SAASu/C,aAAc,iBAAkBC,iBAAkB,mBAC1EhgD,EAAAqB,aACA9K,EAAA6K,YACA7K,EAAA8oC,oBACA7oC,EAAA+/C,iBACA5gD,EAAA4/D,aAAa/0D,QACT21E,GAEIpkB,SAAS,KAIrBhxD,cACI40E,EAAA//E,aACAggF,EAAAl6E,6BACAm6E,EAAAl8E,wBACAm8E,EAAA36E,sBACA46E,EAAAt/E,uBACAu/E,EAAAh8E,sBACAi8E,EAAAv7E,qBACAw7E,EAAAn9E,6BAEJs9E,WAAYV,EAAA//E,iBAEHm9C,aAAA7+C,GAAA6+C,e1B23hBV","file":"js/app.9b5bf08a71e0788518ef.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 103:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(117);\r\nvar core_1 = __webpack_require__(4);\r\nvar router_1 = __webpack_require__(52);\r\nvar AppComponent = /** @class */ (function () {\r\n    function AppComponent(route) {\r\n        var _this = this;\r\n        this.route = route;\r\n        this.route.data.subscribe(function (d) {\r\n            _this.title = d.title;\r\n        });\r\n    }\r\n    AppComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'demo-app',\r\n            template: __webpack_require__(119)\r\n        }),\r\n        __metadata(\"design:paramtypes\", [router_1.ActivatedRoute])\r\n    ], AppComponent);\r\n    return AppComponent;\r\n}());\r\nexports.AppComponent = AppComponent;\r\n\n\n/***/ }),\n\n/***/ 104:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(4);\r\nvar forms_1 = __webpack_require__(28);\r\nvar http_1 = __webpack_require__(40);\r\nvar ReactiveFormsComponent = /** @class */ (function () {\r\n    function ReactiveFormsComponent(fb, http) {\r\n        this.fb = fb;\r\n        this.http = http;\r\n        this.isCitiesControlVisible = true;\r\n        this.cities = [\r\n            { id: 1, name: 'Vilnius' },\r\n            { id: 2, name: 'Kaunas' },\r\n            { id: 3, name: 'Pavilnys (Disabled)', disabled: true },\r\n            { id: 4, name: 'Pabradė' },\r\n        ];\r\n        this.ages = [\r\n            { value: '<18', label: 'Under 18' },\r\n            { value: '18', label: '18' },\r\n            { value: '>18', label: 'More than 18' },\r\n        ];\r\n        this.albums = [];\r\n        this.photos = [];\r\n    }\r\n    ReactiveFormsComponent.prototype.ngOnInit = function () {\r\n        this.loadAlbums();\r\n        this.loadPhotos();\r\n        this.heroForm = this.fb.group({\r\n            selectedCitiesIds: [],\r\n            age: '',\r\n            album: '',\r\n            photo: ''\r\n        });\r\n    };\r\n    ReactiveFormsComponent.prototype.toggleAgeDisable = function () {\r\n        if (this.heroForm.controls.age.disabled) {\r\n            this.heroForm.controls.age.enable();\r\n        }\r\n        else {\r\n            this.heroForm.controls.age.disable();\r\n        }\r\n    };\r\n    ReactiveFormsComponent.prototype.toggleCitiesControl = function () {\r\n        this.isCitiesControlVisible = !this.isCitiesControlVisible;\r\n    };\r\n    ReactiveFormsComponent.prototype.clearCities = function () {\r\n        this.heroForm.get('selectedCitiesIds').patchValue([]);\r\n    };\r\n    ReactiveFormsComponent.prototype.selectFirstPhoto = function () {\r\n        this.heroForm.get('photo').patchValue(this.photos[0].thumbnailUrl);\r\n    };\r\n    ReactiveFormsComponent.prototype.loadAlbums = function () {\r\n        var _this = this;\r\n        this.http.get('https://jsonplaceholder.typicode.com/albums').subscribe(function (rsp) {\r\n            _this.albums = rsp;\r\n        });\r\n    };\r\n    ReactiveFormsComponent.prototype.loadPhotos = function () {\r\n        var _this = this;\r\n        this.http.get('https://jsonplaceholder.typicode.com/photos').subscribe(function (rsp) {\r\n            _this.photos = rsp;\r\n            console.log('loaded photos:', _this.photos.length);\r\n        });\r\n    };\r\n    ReactiveFormsComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'reactive-forms',\r\n            template: \"\\n        <form [formGroup]=\\\"heroForm\\\" novalidate>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"state\\\">Cities</label>\\n                <ng-select *ngIf=\\\"isCitiesControlVisible\\\"\\n                           [items]=\\\"cities\\\"\\n                           bindLabel=\\\"name\\\"\\n                           bindValue=\\\"id\\\"\\n                           [multiple]=\\\"true\\\"\\n                           placeholder=\\\"Select cities\\\"\\n                           formControlName=\\\"selectedCitiesIds\\\">\\n                </ng-select>\\n                <br>\\n                <button (click)=\\\"toggleCitiesControl()\\\" class=\\\"btn btn-sm btn-secondary\\\">Show/Hide</button>\\n                <button (click)=\\\"clearCities()\\\" class=\\\"btn btn-sm btn-secondary\\\">Clear</button>\\n            </div>\\n            <hr>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"state\\\">Age</label>\\n                <ng-select [items]=\\\"ages\\\"\\n                           bindValue=\\\"value\\\"\\n                           placeholder=\\\"Select age\\\"\\n                           formControlName=\\\"age\\\">\\n                </ng-select>\\n                <br>\\n                <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"toggleAgeDisable()\\\">Toggle disabled</button>\\n            </div>\\n            <hr>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"album\\\">Favorite album</label>\\n                <ng-select [items]=\\\"albums\\\"\\n                           bindLabel=\\\"title\\\"\\n                           bindValue=\\\"id\\\"\\n                           placeholder=\\\"Select album\\\"\\n                           formControlName=\\\"album\\\">\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                        <div>Title: {{item.title}}</div>\\n                        <small><b>Id:</b> {{item.id}} | <b>UserId:</b> {{item.userId}}</small>\\n                    </ng-template>\\n                </ng-select>\\n                <small class=\\\"form-text text-muted\\\">Albums data from backend using HttpClient.</small>\\n            </div>\\n            <hr>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"album\\\">Favorite photo</label>\\n                <ng-select [items]=\\\"photos\\\"\\n                           bindLabel=\\\"title\\\"\\n                           bindValue=\\\"thumbnailUrl\\\"\\n                           placeholder=\\\"Select photo\\\"\\n                           formControlName=\\\"photo\\\">\\n                    <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                        <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.thumbnailUrl\\\"/>\\n                        <span>{{item.title}}</span>\\n                    </ng-template>\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\">\\n                        <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.thumbnailUrl\\\"/>\\n                        <span>{{item.title}}</span>\\n                    </ng-template>\\n                </ng-select>\\n                <small class=\\\"form-text text-muted\\\">5000 items with virtual scroll</small>\\n                <br>\\n                <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"selectFirstPhoto()\\\">Select first photo</button>\\n            </div>\\n        </form>\\n\\n        <p>Form value: {{ heroForm.value | json }}</p>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [forms_1.FormBuilder, http_1.HttpClient])\r\n    ], ReactiveFormsComponent);\r\n    return ReactiveFormsComponent;\r\n}());\r\nexports.ReactiveFormsComponent = ReactiveFormsComponent;\r\n\n\n/***/ }),\n\n/***/ 105:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(4);\r\nvar http_1 = __webpack_require__(40);\r\nvar SelectAutocompleteComponent = /** @class */ (function () {\r\n    function SelectAutocompleteComponent(http) {\r\n        var _this = this;\r\n        this.http = http;\r\n        this.items = [];\r\n        this.typeahead = new core_1.EventEmitter();\r\n        this.typeahead\r\n            .distinctUntilChanged()\r\n            .debounceTime(200)\r\n            .switchMap(function (term) { return _this.loadGithubUsers(term); })\r\n            .subscribe(function (items) {\r\n            _this.items = items;\r\n        }, function (err) {\r\n            console.log(err);\r\n            _this.items = [];\r\n        });\r\n    }\r\n    SelectAutocompleteComponent.prototype.loadGithubUsers = function (term) {\r\n        return this.http.get(\"https://api.github.com/search/users?q=\" + term).map(function (rsp) { return rsp.items; });\r\n    };\r\n    SelectAutocompleteComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'select-autocomplete',\r\n            template: \"\\n        <label>Search with autocomplete in Github accounts</label>\\n        <ng-select [items]=\\\"items\\\"\\n                   notFoundText=\\\"No results found\\\"\\n                   typeToSearchText=\\\"Search for github account\\\"\\n                   bindLabel=\\\"login\\\"\\n                   [typeahead]=\\\"typeahead\\\"\\n                   [(ngModel)]=\\\"githubAccount\\\">\\n\\n            <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                <img [src]=\\\"item.avatar_url\\\" width=\\\"20px\\\" height=\\\"20px\\\"> {{item.login}}\\n            </ng-template>\\n\\n        </ng-select>\\n        <p>\\n            Selected github account:\\n            <span *ngIf=\\\"githubAccount\\\">\\n                <img [src]=\\\"githubAccount.avatar_url\\\" width=\\\"20px\\\" height=\\\"20px\\\"> {{githubAccount.login}}\\n            </span>\\n        </p>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [http_1.HttpClient])\r\n    ], SelectAutocompleteComponent);\r\n    return SelectAutocompleteComponent;\r\n}());\r\nexports.SelectAutocompleteComponent = SelectAutocompleteComponent;\r\n\n\n/***/ }),\n\n/***/ 106:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(4);\r\nvar SelectBindingsComponent = /** @class */ (function () {\r\n    function SelectBindingsComponent() {\r\n        this.defaultBindingsList = [\r\n            { value: 1, label: 'Vilnius' },\r\n            { value: 2, label: 'Kaunas' },\r\n            { value: 3, label: 'Pavilnys', disabled: true }\r\n        ];\r\n        this.cities = [\r\n            { id: 1, name: 'Vilnius' },\r\n            { id: 2, name: 'Kaunas' },\r\n            { id: 3, name: 'Pavilnys', disabled: true }\r\n        ];\r\n        this.selectedCity2 = null;\r\n        this.selectedCityId2 = null;\r\n    }\r\n    SelectBindingsComponent.prototype.ngOnInit = function () {\r\n    };\r\n    SelectBindingsComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'select-bindings',\r\n            template: \"\\n        <label>Bind to default <b>label</b>, <b>object</b> bindings</label>\\n        <ng-select [items]=\\\"defaultBindingsList\\\"\\n                   [(ngModel)]=\\\"selectedCity2\\\">\\n        </ng-select>\\n        <p>\\n            Selected city object: {{selectedCity2 | json}}\\n        </p>\\n        <hr>\\n        <label>Bind label to custom property</label>\\n        <ng-select [items]=\\\"cities\\\"\\n                   bindLabel=\\\"name\\\"\\n                   placeholder=\\\"Select value\\\"\\n                   [clearable]=\\\"false\\\"\\n                   [(ngModel)]=\\\"selectedCity\\\">\\n        </ng-select>\\n        <p>\\n            Selected city object: {{selectedCity | json}}\\n        </p>\\n        <hr>\\n        <label>Bind label and model to custom properties</label>\\n        <ng-select [items]=\\\"cities\\\"\\n                   bindLabel=\\\"name\\\"\\n                   bindValue=\\\"id\\\"\\n                   [(ngModel)]=\\\"selectedCityId2\\\">\\n        </ng-select>\\n        <p>\\n            Selected city ID: {{selectedCityId2 | json}}\\n        </p>\\n    \"\r\n        })\r\n    ], SelectBindingsComponent);\r\n    return SelectBindingsComponent;\r\n}());\r\nexports.SelectBindingsComponent = SelectBindingsComponent;\r\n\n\n/***/ }),\n\n/***/ 107:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(4);\r\nvar SelectEventsComponent = /** @class */ (function () {\r\n    function SelectEventsComponent() {\r\n        this.cities = [\r\n            { id: 1, name: 'Vilnius' },\r\n            { id: 2, name: 'Kaunas' },\r\n            { id: 3, name: 'Pavilnys', disabled: true }\r\n        ];\r\n        this.events = [];\r\n    }\r\n    SelectEventsComponent.prototype.onChange = function ($event) {\r\n        this.events.push({ name: '(change)', value: $event });\r\n    };\r\n    SelectEventsComponent.prototype.onFocus = function ($event) {\r\n        this.events.push({ name: '(focus)', value: $event });\r\n    };\r\n    SelectEventsComponent.prototype.onBlur = function ($event) {\r\n        this.events.push({ name: '(blur)', value: $event });\r\n    };\r\n    SelectEventsComponent.prototype.onOpen = function () {\r\n        this.events.push({ name: '(open)', value: null });\r\n    };\r\n    SelectEventsComponent.prototype.onClose = function () {\r\n        this.events.push({ name: '(close)', value: null });\r\n    };\r\n    SelectEventsComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'select-events',\r\n            template: \"\\n        <label>Open, close, focus, blur, change events</label>\\n        <ng-select [items]=\\\"cities\\\"\\n                   [(ngModel)]=\\\"selectedCity\\\"\\n                   bindLabel=\\\"name\\\"\\n                   bindValue=\\\"id\\\"\\n                   (open)=\\\"onOpen()\\\"\\n                   (close)=\\\"onClose()\\\"\\n                   (focus)=\\\"onFocus($event)\\\"\\n                   (blur)=\\\"onBlur($event)\\\"\\n                   (change)=\\\"onChange($event)\\\">\\n        </ng-select>\\n\\n        <div *ngIf=\\\"events.length > 0\\\">\\n            <br>\\n            <button (click)=\\\"events = []\\\" class=\\\"btn btn-secondary btn-sm\\\">Clear events</button>\\n            <br>\\n            <br>\\n        </div>\\n\\n        <div *ngFor=\\\"let event of events\\\">\\n            <small>{{event.name}} - {{event.value | json}}</small>\\n            <hr>\\n        </div>\\n    \"\r\n        })\r\n    ], SelectEventsComponent);\r\n    return SelectEventsComponent;\r\n}());\r\nexports.SelectEventsComponent = SelectEventsComponent;\r\n\n\n/***/ }),\n\n/***/ 108:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(4);\r\nvar SelectMultiComponent = /** @class */ (function () {\r\n    function SelectMultiComponent() {\r\n        this.companies = [];\r\n        this.companies2 = [];\r\n        this.disable = true;\r\n        /* tslint:disable */\r\n        this.companiesNames = ['Miškas', 'Žalias', 'Flexigen', 'Rooforia', 'Rooblia', 'Tropoli', 'Eargo', 'Gadtron', 'Elentrix', 'Terragen', 'Medalert', 'Xelegyl', 'Bristo', 'Xylar', 'Imperium', 'Kangle', 'Earwax', 'Zanity', 'Portico', 'Tsunamia', 'Kage', 'Comstar', 'Radiantix', 'Bostonic', 'Geekko', 'Eventex', 'Stockpost', 'Silodyne', 'Enersave', 'Perkle', 'Pyramis', 'Accuprint', 'Papricut', 'Pathways', 'Circum', 'Gology', 'Buzzworks', 'Dancerity', 'Zounds', 'Diginetic', 'Snips', 'Chillium', 'Exotechno', 'Accufarm', 'Vidto', 'Signidyne', 'Escenta', 'Sureplex', 'Quarmony', 'Interfind', 'Exoswitch', 'Mondicil', 'Pyramia', 'Digitalus', 'Earthplex', 'Limozen', 'Twiist', 'Tubalum', 'Securia', 'Uni', 'Biospan', 'Zensus', 'Memora'];\r\n    }\r\n    /* tslint:enable */\r\n    SelectMultiComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.companiesNames.forEach(function (c, i) {\r\n            _this.companies.push({ id: i, name: c });\r\n            _this.companies2.push({ id: i, name: c });\r\n        });\r\n        this.selectedCompaniesDisabled = [{ id: 0, name: 'Miškas' }, { id: 1, name: 'Žalias' }];\r\n    };\r\n    SelectMultiComponent.prototype.clearModel = function () {\r\n        this.selectedCompanies = [];\r\n    };\r\n    SelectMultiComponent = __decorate([\r\n        core_1.Component({\r\n            template: \"\\n        <label>Select multiple elements</label>\\n        <ng-select\\n                [items]=\\\"companies\\\"\\n                bindLabel=\\\"name\\\"\\n                [multiple]=\\\"true\\\"\\n                [(ngModel)]=\\\"selectedCompanies\\\">\\n        </ng-select>\\n        <p>\\n            Selected value: {{selectedCompanies | json}} <br>\\n            <button (click)=\\\"clearModel()\\\" class=\\\"btn btn-secondary btn-sm\\\">Clear model</button>\\n        </p>\\n\\n        <label>Disabled multiple elements</label>\\n        <ng-select\\n                [items]=\\\"companies2\\\"\\n                bindLabel=\\\"name\\\"\\n                [multiple]=\\\"true\\\"\\n                [disabled]=\\\"disable\\\"\\n                [(ngModel)]=\\\"selectedCompaniesDisabled\\\">\\n        </ng-select>\\n        <br>\\n        <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"disable = !disable\\\">Toggle disabled</button>\\n    \"\r\n        })\r\n    ], SelectMultiComponent);\r\n    return SelectMultiComponent;\r\n}());\r\nexports.SelectMultiComponent = SelectMultiComponent;\r\n\n\n/***/ }),\n\n/***/ 109:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(4);\r\nvar SelectSearchComponent = /** @class */ (function () {\r\n    function SelectSearchComponent() {\r\n        this.companies = [];\r\n        this.companies2 = [];\r\n        this.filteredCompanies2 = [];\r\n        this.customFilter = new core_1.EventEmitter();\r\n        /* tslint:disable */\r\n        this.companiesNames = ['Miškas', 'Žalias', 'Flexigen', 'Rooforia', 'Rooblia', 'Tropoli', 'Eargo', 'Gadtron', 'Elentrix', 'Terragen', 'Medalert', 'Xelegyl', 'Bristo', 'Xylar', 'Imperium', 'Kangle', 'Earwax', 'Zanity', 'Portico', 'Tsunamia', 'Kage', 'Comstar', 'Radiantix', 'Bostonic', 'Geekko', 'Eventex', 'Stockpost', 'Silodyne', 'Enersave', 'Perkle', 'Pyramis', 'Accuprint', 'Papricut', 'Pathways', 'Circum', 'Gology', 'Buzzworks', 'Dancerity', 'Zounds', 'Diginetic', 'Snips', 'Chillium', 'Exotechno', 'Accufarm', 'Vidto', 'Signidyne', 'Escenta', 'Sureplex', 'Quarmony', 'Interfind', 'Exoswitch', 'Mondicil', 'Pyramia', 'Digitalus', 'Earthplex', 'Limozen', 'Twiist', 'Tubalum', 'Securia', 'Uni', 'Biospan', 'Zensus', 'Memora'];\r\n    }\r\n    /* tslint:enable */\r\n    SelectSearchComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.companiesNames.forEach(function (c, i) {\r\n            _this.companies.push({ id: i, name: c });\r\n            _this.companies2.push({ id: i, name: c });\r\n        });\r\n        this.filteredCompanies2 = this.companies2.slice();\r\n        this.customFilter.subscribe(function (term) {\r\n            _this.filteredCompanies2 = term ? _this.companies2.filter(function (x) { return term === 'Rooforia' && x.name === term; }) : _this.companies2;\r\n        });\r\n    };\r\n    SelectSearchComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'select-search',\r\n            template: \"\\n        <label>Search in label text (default)</label>\\n        <ng-select [items]=\\\"companies\\\"\\n                   bindLabel=\\\"name\\\"\\n                   [(ngModel)]=\\\"selectedCompany\\\">\\n        </ng-select>\\n        <p>\\n            Selected value: {{selectedCompany | json}}\\n        </p>\\n\\n        <label>Search using custom filter handler (search for Rooforia)</label>\\n        <ng-select [items]=\\\"filteredCompanies2\\\"\\n                   bindLabel=\\\"name\\\"\\n                   [typeahead]=\\\"customFilter\\\"\\n                   [(ngModel)]=\\\"selectedCompany2\\\">\\n        </ng-select>\\n        <p>\\n            Selected value: {{selectedCompany2 | json}}\\n        </p>\\n    \"\r\n        })\r\n    ], SelectSearchComponent);\r\n    return SelectSearchComponent;\r\n}());\r\nexports.SelectSearchComponent = SelectSearchComponent;\r\n\n\n/***/ }),\n\n/***/ 110:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(4);\r\nvar SelectWithTemplatesComponent = /** @class */ (function () {\r\n    function SelectWithTemplatesComponent() {\r\n        this.cities = [\r\n            { id: 1, name: 'Vilnius', avatar: '//www.gravatar.com/avatar/b0d8c6e5ea589e6fc3d3e08afb1873bb?d=retro&r=g&s=30 2x' },\r\n            { id: 2, name: 'Kaunas', avatar: '//www.gravatar.com/avatar/ddac2aa63ce82315b513be9dc93336e5?d=retro&r=g&s=15' },\r\n            { id: 3, name: 'Pavilnys', avatar: '//www.gravatar.com/avatar/6acb7abf486516ab7fb0a6efa372042b?d=retro&r=g&s=15' }\r\n        ];\r\n        this.cities2 = JSON.parse(JSON.stringify(this.cities));\r\n        this.cities3 = JSON.parse(JSON.stringify(this.cities));\r\n        this.selectedCity = this.cities[0].name;\r\n        this.selectedCity2 = this.cities2[1].name;\r\n        this.selectedCity3 = this.cities3[2].name;\r\n    }\r\n    SelectWithTemplatesComponent.prototype.ngOnInit = function () {\r\n    };\r\n    SelectWithTemplatesComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'select-with-templates',\r\n            template: \"\\n        <label>Custom label</label>\\n        <ng-select [items]=\\\"cities\\\" [(ngModel)]=\\\"selectedCity\\\" bindLabel=\\\"name\\\" bindValue=\\\"name\\\">\\n            <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.avatar\\\"/>\\n                {{item.name}}\\n            </ng-template>\\n        </ng-select>\\n        <p>\\n            Selected city name: {{selectedCity}}\\n        </p>\\n        <hr>\\n\\n        <label>Custom option</label>\\n        <ng-select [items]=\\\"cities2\\\" [(ngModel)]=\\\"selectedCity2\\\" bindLabel=\\\"name\\\" bindValue=\\\"name\\\">\\n            <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\">\\n                <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.avatar\\\"/>\\n                <b>{{item.name}}</b>\\n            </ng-template>\\n        </ng-select>\\n        <p>\\n            Selected city name: {{selectedCity2}}\\n        </p>\\n        <hr>\\n\\n        <label>Custom label and option</label>\\n        <ng-select [items]=\\\"cities3\\\" [(ngModel)]=\\\"selectedCity3\\\" bindLabel=\\\"name\\\" bindValue=\\\"name\\\">\\n            <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.avatar\\\"/>\\n                <b>{{item.name}}</b>\\n            </ng-template>\\n            <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\">\\n                <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.avatar\\\"/>\\n                <b>{{item.name}}</b>\\n            </ng-template>\\n        </ng-select>\\n        <p>\\n            Selected city name: {{selectedCity3}}\\n        </p>\\n    \"\r\n        })\r\n    ], SelectWithTemplatesComponent);\r\n    return SelectWithTemplatesComponent;\r\n}());\r\nexports.SelectWithTemplatesComponent = SelectWithTemplatesComponent;\r\n\n\n/***/ }),\n\n/***/ 111:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ng_select_component_1 = __webpack_require__(53);\r\nexports.NgSelectComponent = ng_select_component_1.NgSelectComponent;\r\nvar ng_select_module_1 = __webpack_require__(114);\r\nexports.NgSelectModule = ng_select_module_1.NgSelectModule;\r\nvar ng_select_types_1 = __webpack_require__(41);\r\nexports.NgSelectConfig = ng_select_types_1.NgSelectConfig;\r\n\n\n/***/ }),\n\n/***/ 112:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar searchHelper = __webpack_require__(115);\r\nvar ItemsList = /** @class */ (function () {\r\n    function ItemsList(items, multiple) {\r\n        this.items = [];\r\n        this.filteredItems = [];\r\n        this._markedIndex = -1;\r\n        this._selected = [];\r\n        this.items = this.mapItems(items);\r\n        this.filteredItems = this.items.slice();\r\n        this._multiple = multiple;\r\n    }\r\n    Object.defineProperty(ItemsList.prototype, \"value\", {\r\n        get: function () {\r\n            if (this._multiple) {\r\n                return this._selected;\r\n            }\r\n            return this._selected[0] || null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ItemsList.prototype, \"markedItem\", {\r\n        get: function () {\r\n            return this.filteredItems[this._markedIndex];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ItemsList.prototype.select = function (item) {\r\n        if (!this._multiple) {\r\n            this.clearSelected();\r\n        }\r\n        this._selected.push(item);\r\n        item.selected = true;\r\n    };\r\n    ItemsList.prototype.unselect = function (item) {\r\n        this._selected = this._selected.filter(function (x) { return x !== item; });\r\n        item.selected = false;\r\n    };\r\n    ItemsList.prototype.unselectLastItem = function () {\r\n        if (this._selected.length === 0) {\r\n            return;\r\n        }\r\n        this._selected[this._selected.length - 1].selected = false;\r\n        this._selected.splice(this._selected.length - 1, 1);\r\n    };\r\n    ItemsList.prototype.clearSelected = function () {\r\n        this._selected.forEach(function (item) {\r\n            item.selected = false;\r\n            item.marked = false;\r\n        });\r\n        this._selected = [];\r\n    };\r\n    ItemsList.prototype.filter = function (term, bindLabel) {\r\n        var filterFuncVal = this.getDefaultFilterFunc(term, bindLabel);\r\n        this.filteredItems = term ? this.items.filter(function (val) { return filterFuncVal(val); }) : this.items;\r\n        this._markedIndex = 0;\r\n    };\r\n    ItemsList.prototype.clearFilter = function () {\r\n        this.filteredItems = this.items.slice();\r\n    };\r\n    ItemsList.prototype.markNextItem = function () {\r\n        this.stepToItem(+1);\r\n    };\r\n    ItemsList.prototype.markPreviousItem = function () {\r\n        this.stepToItem(-1);\r\n    };\r\n    ItemsList.prototype.markItem = function (item) {\r\n        if (item === void 0) { item = null; }\r\n        if (this.filteredItems.length === 0) {\r\n            return;\r\n        }\r\n        item = item || this.lastSelectedItem;\r\n        if (item) {\r\n            this._markedIndex = this.filteredItems.indexOf(item);\r\n        }\r\n        else {\r\n            this._markedIndex = 0;\r\n        }\r\n    };\r\n    ItemsList.prototype.getNextItemIndex = function (steps) {\r\n        if (steps > 0) {\r\n            return (this._markedIndex === this.filteredItems.length - 1) ? 0 : (this._markedIndex + 1);\r\n        }\r\n        else {\r\n            return (this._markedIndex === 0) ? (this.filteredItems.length - 1) : (this._markedIndex - 1);\r\n        }\r\n    };\r\n    ItemsList.prototype.stepToItem = function (steps) {\r\n        if (this.filteredItems.length === 0) {\r\n            return;\r\n        }\r\n        this._markedIndex = this.getNextItemIndex(steps);\r\n        while (this.markedItem.disabled) {\r\n            this.stepToItem(steps);\r\n        }\r\n    };\r\n    ItemsList.prototype.getDefaultFilterFunc = function (term, bindLabel) {\r\n        return function (val) {\r\n            return searchHelper.stripSpecialChars(val[bindLabel])\r\n                .toUpperCase()\r\n                .indexOf(searchHelper.stripSpecialChars(term).toUpperCase()) > -1;\r\n        };\r\n    };\r\n    Object.defineProperty(ItemsList.prototype, \"lastSelectedItem\", {\r\n        get: function () {\r\n            return this._selected[this._selected.length - 1];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ItemsList.prototype.mapItems = function (items) {\r\n        return items.map(function (item, index) {\r\n            return __assign({ index: index }, item);\r\n        });\r\n    };\r\n    return ItemsList;\r\n}());\r\nexports.ItemsList = ItemsList;\r\n\n\n/***/ }),\n\n/***/ 113:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(4);\r\nvar AngSearchFocusDirective = /** @class */ (function () {\r\n    function AngSearchFocusDirective(elementRef) {\r\n        this.elementRef = elementRef;\r\n    }\r\n    ;\r\n    AngSearchFocusDirective.prototype.ngOnInit = function () {\r\n        this.elementRef.nativeElement.onFocus();\r\n    };\r\n    AngSearchFocusDirective = __decorate([\r\n        core_1.Directive({\r\n            selector: '[angSearchFocus]'\r\n        }),\r\n        __metadata(\"design:paramtypes\", [core_1.ElementRef])\r\n    ], AngSearchFocusDirective);\r\n    return AngSearchFocusDirective;\r\n}());\r\nexports.AngSearchFocusDirective = AngSearchFocusDirective;\r\n\n\n/***/ }),\n\n/***/ 114:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(4);\r\nvar forms_1 = __webpack_require__(28);\r\nvar common_1 = __webpack_require__(14);\r\nvar ng_select_component_1 = __webpack_require__(53);\r\nvar ng_templates_directive_1 = __webpack_require__(54);\r\nvar ng_search_focus_directive_1 = __webpack_require__(113);\r\nvar virtual_scroll_component_1 = __webpack_require__(55);\r\nvar spinner_component_1 = __webpack_require__(116);\r\nvar ng_select_types_1 = __webpack_require__(41);\r\nvar NgSelectModule = /** @class */ (function () {\r\n    function NgSelectModule(parentModule) {\r\n        if (parentModule) {\r\n            throw new Error('NgSelectModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n    NgSelectModule_1 = NgSelectModule;\r\n    NgSelectModule.forRoot = function (config) {\r\n        return {\r\n            ngModule: NgSelectModule_1,\r\n            providers: [\r\n                { provide: ng_select_types_1.NgSelectConfig, useValue: config }\r\n            ]\r\n        };\r\n    };\r\n    NgSelectModule = NgSelectModule_1 = __decorate([\r\n        core_1.NgModule({\r\n            declarations: [\r\n                ng_select_component_1.NgSelectComponent,\r\n                ng_templates_directive_1.NgOptionTemplateDirective,\r\n                ng_templates_directive_1.NgLabelTemplateDirective,\r\n                ng_search_focus_directive_1.AngSearchFocusDirective,\r\n                spinner_component_1.SpinnerComponent\r\n            ],\r\n            imports: [\r\n                forms_1.FormsModule,\r\n                common_1.CommonModule,\r\n                virtual_scroll_component_1.VirtualScrollModule\r\n            ],\r\n            exports: [\r\n                ng_select_component_1.NgSelectComponent,\r\n                ng_templates_directive_1.NgOptionTemplateDirective,\r\n                ng_templates_directive_1.NgLabelTemplateDirective\r\n            ]\r\n        }),\r\n        __param(0, core_1.Optional()), __param(0, core_1.SkipSelf()),\r\n        __metadata(\"design:paramtypes\", [NgSelectModule])\r\n    ], NgSelectModule);\r\n    return NgSelectModule;\r\n    var NgSelectModule_1;\r\n}());\r\nexports.NgSelectModule = NgSelectModule;\r\n\n\n/***/ }),\n\n/***/ 115:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar diacritics = {\r\n    '\\u24B6': 'A',\r\n    '\\uFF21': 'A',\r\n    '\\u00C0': 'A',\r\n    '\\u00C1': 'A',\r\n    '\\u00C2': 'A',\r\n    '\\u1EA6': 'A',\r\n    '\\u1EA4': 'A',\r\n    '\\u1EAA': 'A',\r\n    '\\u1EA8': 'A',\r\n    '\\u00C3': 'A',\r\n    '\\u0100': 'A',\r\n    '\\u0102': 'A',\r\n    '\\u1EB0': 'A',\r\n    '\\u1EAE': 'A',\r\n    '\\u1EB4': 'A',\r\n    '\\u1EB2': 'A',\r\n    '\\u0226': 'A',\r\n    '\\u01E0': 'A',\r\n    '\\u00C4': 'A',\r\n    '\\u01DE': 'A',\r\n    '\\u1EA2': 'A',\r\n    '\\u00C5': 'A',\r\n    '\\u01FA': 'A',\r\n    '\\u01CD': 'A',\r\n    '\\u0200': 'A',\r\n    '\\u0202': 'A',\r\n    '\\u1EA0': 'A',\r\n    '\\u1EAC': 'A',\r\n    '\\u1EB6': 'A',\r\n    '\\u1E00': 'A',\r\n    '\\u0104': 'A',\r\n    '\\u023A': 'A',\r\n    '\\u2C6F': 'A',\r\n    '\\uA732': 'AA',\r\n    '\\u00C6': 'AE',\r\n    '\\u01FC': 'AE',\r\n    '\\u01E2': 'AE',\r\n    '\\uA734': 'AO',\r\n    '\\uA736': 'AU',\r\n    '\\uA738': 'AV',\r\n    '\\uA73A': 'AV',\r\n    '\\uA73C': 'AY',\r\n    '\\u24B7': 'B',\r\n    '\\uFF22': 'B',\r\n    '\\u1E02': 'B',\r\n    '\\u1E04': 'B',\r\n    '\\u1E06': 'B',\r\n    '\\u0243': 'B',\r\n    '\\u0182': 'B',\r\n    '\\u0181': 'B',\r\n    '\\u24B8': 'C',\r\n    '\\uFF23': 'C',\r\n    '\\u0106': 'C',\r\n    '\\u0108': 'C',\r\n    '\\u010A': 'C',\r\n    '\\u010C': 'C',\r\n    '\\u00C7': 'C',\r\n    '\\u1E08': 'C',\r\n    '\\u0187': 'C',\r\n    '\\u023B': 'C',\r\n    '\\uA73E': 'C',\r\n    '\\u24B9': 'D',\r\n    '\\uFF24': 'D',\r\n    '\\u1E0A': 'D',\r\n    '\\u010E': 'D',\r\n    '\\u1E0C': 'D',\r\n    '\\u1E10': 'D',\r\n    '\\u1E12': 'D',\r\n    '\\u1E0E': 'D',\r\n    '\\u0110': 'D',\r\n    '\\u018B': 'D',\r\n    '\\u018A': 'D',\r\n    '\\u0189': 'D',\r\n    '\\uA779': 'D',\r\n    '\\u01F1': 'DZ',\r\n    '\\u01C4': 'DZ',\r\n    '\\u01F2': 'Dz',\r\n    '\\u01C5': 'Dz',\r\n    '\\u24BA': 'E',\r\n    '\\uFF25': 'E',\r\n    '\\u00C8': 'E',\r\n    '\\u00C9': 'E',\r\n    '\\u00CA': 'E',\r\n    '\\u1EC0': 'E',\r\n    '\\u1EBE': 'E',\r\n    '\\u1EC4': 'E',\r\n    '\\u1EC2': 'E',\r\n    '\\u1EBC': 'E',\r\n    '\\u0112': 'E',\r\n    '\\u1E14': 'E',\r\n    '\\u1E16': 'E',\r\n    '\\u0114': 'E',\r\n    '\\u0116': 'E',\r\n    '\\u00CB': 'E',\r\n    '\\u1EBA': 'E',\r\n    '\\u011A': 'E',\r\n    '\\u0204': 'E',\r\n    '\\u0206': 'E',\r\n    '\\u1EB8': 'E',\r\n    '\\u1EC6': 'E',\r\n    '\\u0228': 'E',\r\n    '\\u1E1C': 'E',\r\n    '\\u0118': 'E',\r\n    '\\u1E18': 'E',\r\n    '\\u1E1A': 'E',\r\n    '\\u0190': 'E',\r\n    '\\u018E': 'E',\r\n    '\\u24BB': 'F',\r\n    '\\uFF26': 'F',\r\n    '\\u1E1E': 'F',\r\n    '\\u0191': 'F',\r\n    '\\uA77B': 'F',\r\n    '\\u24BC': 'G',\r\n    '\\uFF27': 'G',\r\n    '\\u01F4': 'G',\r\n    '\\u011C': 'G',\r\n    '\\u1E20': 'G',\r\n    '\\u011E': 'G',\r\n    '\\u0120': 'G',\r\n    '\\u01E6': 'G',\r\n    '\\u0122': 'G',\r\n    '\\u01E4': 'G',\r\n    '\\u0193': 'G',\r\n    '\\uA7A0': 'G',\r\n    '\\uA77D': 'G',\r\n    '\\uA77E': 'G',\r\n    '\\u24BD': 'H',\r\n    '\\uFF28': 'H',\r\n    '\\u0124': 'H',\r\n    '\\u1E22': 'H',\r\n    '\\u1E26': 'H',\r\n    '\\u021E': 'H',\r\n    '\\u1E24': 'H',\r\n    '\\u1E28': 'H',\r\n    '\\u1E2A': 'H',\r\n    '\\u0126': 'H',\r\n    '\\u2C67': 'H',\r\n    '\\u2C75': 'H',\r\n    '\\uA78D': 'H',\r\n    '\\u24BE': 'I',\r\n    '\\uFF29': 'I',\r\n    '\\u00CC': 'I',\r\n    '\\u00CD': 'I',\r\n    '\\u00CE': 'I',\r\n    '\\u0128': 'I',\r\n    '\\u012A': 'I',\r\n    '\\u012C': 'I',\r\n    '\\u0130': 'I',\r\n    '\\u00CF': 'I',\r\n    '\\u1E2E': 'I',\r\n    '\\u1EC8': 'I',\r\n    '\\u01CF': 'I',\r\n    '\\u0208': 'I',\r\n    '\\u020A': 'I',\r\n    '\\u1ECA': 'I',\r\n    '\\u012E': 'I',\r\n    '\\u1E2C': 'I',\r\n    '\\u0197': 'I',\r\n    '\\u24BF': 'J',\r\n    '\\uFF2A': 'J',\r\n    '\\u0134': 'J',\r\n    '\\u0248': 'J',\r\n    '\\u24C0': 'K',\r\n    '\\uFF2B': 'K',\r\n    '\\u1E30': 'K',\r\n    '\\u01E8': 'K',\r\n    '\\u1E32': 'K',\r\n    '\\u0136': 'K',\r\n    '\\u1E34': 'K',\r\n    '\\u0198': 'K',\r\n    '\\u2C69': 'K',\r\n    '\\uA740': 'K',\r\n    '\\uA742': 'K',\r\n    '\\uA744': 'K',\r\n    '\\uA7A2': 'K',\r\n    '\\u24C1': 'L',\r\n    '\\uFF2C': 'L',\r\n    '\\u013F': 'L',\r\n    '\\u0139': 'L',\r\n    '\\u013D': 'L',\r\n    '\\u1E36': 'L',\r\n    '\\u1E38': 'L',\r\n    '\\u013B': 'L',\r\n    '\\u1E3C': 'L',\r\n    '\\u1E3A': 'L',\r\n    '\\u0141': 'L',\r\n    '\\u023D': 'L',\r\n    '\\u2C62': 'L',\r\n    '\\u2C60': 'L',\r\n    '\\uA748': 'L',\r\n    '\\uA746': 'L',\r\n    '\\uA780': 'L',\r\n    '\\u01C7': 'LJ',\r\n    '\\u01C8': 'Lj',\r\n    '\\u24C2': 'M',\r\n    '\\uFF2D': 'M',\r\n    '\\u1E3E': 'M',\r\n    '\\u1E40': 'M',\r\n    '\\u1E42': 'M',\r\n    '\\u2C6E': 'M',\r\n    '\\u019C': 'M',\r\n    '\\u24C3': 'N',\r\n    '\\uFF2E': 'N',\r\n    '\\u01F8': 'N',\r\n    '\\u0143': 'N',\r\n    '\\u00D1': 'N',\r\n    '\\u1E44': 'N',\r\n    '\\u0147': 'N',\r\n    '\\u1E46': 'N',\r\n    '\\u0145': 'N',\r\n    '\\u1E4A': 'N',\r\n    '\\u1E48': 'N',\r\n    '\\u0220': 'N',\r\n    '\\u019D': 'N',\r\n    '\\uA790': 'N',\r\n    '\\uA7A4': 'N',\r\n    '\\u01CA': 'NJ',\r\n    '\\u01CB': 'Nj',\r\n    '\\u24C4': 'O',\r\n    '\\uFF2F': 'O',\r\n    '\\u00D2': 'O',\r\n    '\\u00D3': 'O',\r\n    '\\u00D4': 'O',\r\n    '\\u1ED2': 'O',\r\n    '\\u1ED0': 'O',\r\n    '\\u1ED6': 'O',\r\n    '\\u1ED4': 'O',\r\n    '\\u00D5': 'O',\r\n    '\\u1E4C': 'O',\r\n    '\\u022C': 'O',\r\n    '\\u1E4E': 'O',\r\n    '\\u014C': 'O',\r\n    '\\u1E50': 'O',\r\n    '\\u1E52': 'O',\r\n    '\\u014E': 'O',\r\n    '\\u022E': 'O',\r\n    '\\u0230': 'O',\r\n    '\\u00D6': 'O',\r\n    '\\u022A': 'O',\r\n    '\\u1ECE': 'O',\r\n    '\\u0150': 'O',\r\n    '\\u01D1': 'O',\r\n    '\\u020C': 'O',\r\n    '\\u020E': 'O',\r\n    '\\u01A0': 'O',\r\n    '\\u1EDC': 'O',\r\n    '\\u1EDA': 'O',\r\n    '\\u1EE0': 'O',\r\n    '\\u1EDE': 'O',\r\n    '\\u1EE2': 'O',\r\n    '\\u1ECC': 'O',\r\n    '\\u1ED8': 'O',\r\n    '\\u01EA': 'O',\r\n    '\\u01EC': 'O',\r\n    '\\u00D8': 'O',\r\n    '\\u01FE': 'O',\r\n    '\\u0186': 'O',\r\n    '\\u019F': 'O',\r\n    '\\uA74A': 'O',\r\n    '\\uA74C': 'O',\r\n    '\\u01A2': 'OI',\r\n    '\\uA74E': 'OO',\r\n    '\\u0222': 'OU',\r\n    '\\u24C5': 'P',\r\n    '\\uFF30': 'P',\r\n    '\\u1E54': 'P',\r\n    '\\u1E56': 'P',\r\n    '\\u01A4': 'P',\r\n    '\\u2C63': 'P',\r\n    '\\uA750': 'P',\r\n    '\\uA752': 'P',\r\n    '\\uA754': 'P',\r\n    '\\u24C6': 'Q',\r\n    '\\uFF31': 'Q',\r\n    '\\uA756': 'Q',\r\n    '\\uA758': 'Q',\r\n    '\\u024A': 'Q',\r\n    '\\u24C7': 'R',\r\n    '\\uFF32': 'R',\r\n    '\\u0154': 'R',\r\n    '\\u1E58': 'R',\r\n    '\\u0158': 'R',\r\n    '\\u0210': 'R',\r\n    '\\u0212': 'R',\r\n    '\\u1E5A': 'R',\r\n    '\\u1E5C': 'R',\r\n    '\\u0156': 'R',\r\n    '\\u1E5E': 'R',\r\n    '\\u024C': 'R',\r\n    '\\u2C64': 'R',\r\n    '\\uA75A': 'R',\r\n    '\\uA7A6': 'R',\r\n    '\\uA782': 'R',\r\n    '\\u24C8': 'S',\r\n    '\\uFF33': 'S',\r\n    '\\u1E9E': 'S',\r\n    '\\u015A': 'S',\r\n    '\\u1E64': 'S',\r\n    '\\u015C': 'S',\r\n    '\\u1E60': 'S',\r\n    '\\u0160': 'S',\r\n    '\\u1E66': 'S',\r\n    '\\u1E62': 'S',\r\n    '\\u1E68': 'S',\r\n    '\\u0218': 'S',\r\n    '\\u015E': 'S',\r\n    '\\u2C7E': 'S',\r\n    '\\uA7A8': 'S',\r\n    '\\uA784': 'S',\r\n    '\\u24C9': 'T',\r\n    '\\uFF34': 'T',\r\n    '\\u1E6A': 'T',\r\n    '\\u0164': 'T',\r\n    '\\u1E6C': 'T',\r\n    '\\u021A': 'T',\r\n    '\\u0162': 'T',\r\n    '\\u1E70': 'T',\r\n    '\\u1E6E': 'T',\r\n    '\\u0166': 'T',\r\n    '\\u01AC': 'T',\r\n    '\\u01AE': 'T',\r\n    '\\u023E': 'T',\r\n    '\\uA786': 'T',\r\n    '\\uA728': 'TZ',\r\n    '\\u24CA': 'U',\r\n    '\\uFF35': 'U',\r\n    '\\u00D9': 'U',\r\n    '\\u00DA': 'U',\r\n    '\\u00DB': 'U',\r\n    '\\u0168': 'U',\r\n    '\\u1E78': 'U',\r\n    '\\u016A': 'U',\r\n    '\\u1E7A': 'U',\r\n    '\\u016C': 'U',\r\n    '\\u00DC': 'U',\r\n    '\\u01DB': 'U',\r\n    '\\u01D7': 'U',\r\n    '\\u01D5': 'U',\r\n    '\\u01D9': 'U',\r\n    '\\u1EE6': 'U',\r\n    '\\u016E': 'U',\r\n    '\\u0170': 'U',\r\n    '\\u01D3': 'U',\r\n    '\\u0214': 'U',\r\n    '\\u0216': 'U',\r\n    '\\u01AF': 'U',\r\n    '\\u1EEA': 'U',\r\n    '\\u1EE8': 'U',\r\n    '\\u1EEE': 'U',\r\n    '\\u1EEC': 'U',\r\n    '\\u1EF0': 'U',\r\n    '\\u1EE4': 'U',\r\n    '\\u1E72': 'U',\r\n    '\\u0172': 'U',\r\n    '\\u1E76': 'U',\r\n    '\\u1E74': 'U',\r\n    '\\u0244': 'U',\r\n    '\\u24CB': 'V',\r\n    '\\uFF36': 'V',\r\n    '\\u1E7C': 'V',\r\n    '\\u1E7E': 'V',\r\n    '\\u01B2': 'V',\r\n    '\\uA75E': 'V',\r\n    '\\u0245': 'V',\r\n    '\\uA760': 'VY',\r\n    '\\u24CC': 'W',\r\n    '\\uFF37': 'W',\r\n    '\\u1E80': 'W',\r\n    '\\u1E82': 'W',\r\n    '\\u0174': 'W',\r\n    '\\u1E86': 'W',\r\n    '\\u1E84': 'W',\r\n    '\\u1E88': 'W',\r\n    '\\u2C72': 'W',\r\n    '\\u24CD': 'X',\r\n    '\\uFF38': 'X',\r\n    '\\u1E8A': 'X',\r\n    '\\u1E8C': 'X',\r\n    '\\u24CE': 'Y',\r\n    '\\uFF39': 'Y',\r\n    '\\u1EF2': 'Y',\r\n    '\\u00DD': 'Y',\r\n    '\\u0176': 'Y',\r\n    '\\u1EF8': 'Y',\r\n    '\\u0232': 'Y',\r\n    '\\u1E8E': 'Y',\r\n    '\\u0178': 'Y',\r\n    '\\u1EF6': 'Y',\r\n    '\\u1EF4': 'Y',\r\n    '\\u01B3': 'Y',\r\n    '\\u024E': 'Y',\r\n    '\\u1EFE': 'Y',\r\n    '\\u24CF': 'Z',\r\n    '\\uFF3A': 'Z',\r\n    '\\u0179': 'Z',\r\n    '\\u1E90': 'Z',\r\n    '\\u017B': 'Z',\r\n    '\\u017D': 'Z',\r\n    '\\u1E92': 'Z',\r\n    '\\u1E94': 'Z',\r\n    '\\u01B5': 'Z',\r\n    '\\u0224': 'Z',\r\n    '\\u2C7F': 'Z',\r\n    '\\u2C6B': 'Z',\r\n    '\\uA762': 'Z',\r\n    '\\u24D0': 'a',\r\n    '\\uFF41': 'a',\r\n    '\\u1E9A': 'a',\r\n    '\\u00E0': 'a',\r\n    '\\u00E1': 'a',\r\n    '\\u00E2': 'a',\r\n    '\\u1EA7': 'a',\r\n    '\\u1EA5': 'a',\r\n    '\\u1EAB': 'a',\r\n    '\\u1EA9': 'a',\r\n    '\\u00E3': 'a',\r\n    '\\u0101': 'a',\r\n    '\\u0103': 'a',\r\n    '\\u1EB1': 'a',\r\n    '\\u1EAF': 'a',\r\n    '\\u1EB5': 'a',\r\n    '\\u1EB3': 'a',\r\n    '\\u0227': 'a',\r\n    '\\u01E1': 'a',\r\n    '\\u00E4': 'a',\r\n    '\\u01DF': 'a',\r\n    '\\u1EA3': 'a',\r\n    '\\u00E5': 'a',\r\n    '\\u01FB': 'a',\r\n    '\\u01CE': 'a',\r\n    '\\u0201': 'a',\r\n    '\\u0203': 'a',\r\n    '\\u1EA1': 'a',\r\n    '\\u1EAD': 'a',\r\n    '\\u1EB7': 'a',\r\n    '\\u1E01': 'a',\r\n    '\\u0105': 'a',\r\n    '\\u2C65': 'a',\r\n    '\\u0250': 'a',\r\n    '\\uA733': 'aa',\r\n    '\\u00E6': 'ae',\r\n    '\\u01FD': 'ae',\r\n    '\\u01E3': 'ae',\r\n    '\\uA735': 'ao',\r\n    '\\uA737': 'au',\r\n    '\\uA739': 'av',\r\n    '\\uA73B': 'av',\r\n    '\\uA73D': 'ay',\r\n    '\\u24D1': 'b',\r\n    '\\uFF42': 'b',\r\n    '\\u1E03': 'b',\r\n    '\\u1E05': 'b',\r\n    '\\u1E07': 'b',\r\n    '\\u0180': 'b',\r\n    '\\u0183': 'b',\r\n    '\\u0253': 'b',\r\n    '\\u24D2': 'c',\r\n    '\\uFF43': 'c',\r\n    '\\u0107': 'c',\r\n    '\\u0109': 'c',\r\n    '\\u010B': 'c',\r\n    '\\u010D': 'c',\r\n    '\\u00E7': 'c',\r\n    '\\u1E09': 'c',\r\n    '\\u0188': 'c',\r\n    '\\u023C': 'c',\r\n    '\\uA73F': 'c',\r\n    '\\u2184': 'c',\r\n    '\\u24D3': 'd',\r\n    '\\uFF44': 'd',\r\n    '\\u1E0B': 'd',\r\n    '\\u010F': 'd',\r\n    '\\u1E0D': 'd',\r\n    '\\u1E11': 'd',\r\n    '\\u1E13': 'd',\r\n    '\\u1E0F': 'd',\r\n    '\\u0111': 'd',\r\n    '\\u018C': 'd',\r\n    '\\u0256': 'd',\r\n    '\\u0257': 'd',\r\n    '\\uA77A': 'd',\r\n    '\\u01F3': 'dz',\r\n    '\\u01C6': 'dz',\r\n    '\\u24D4': 'e',\r\n    '\\uFF45': 'e',\r\n    '\\u00E8': 'e',\r\n    '\\u00E9': 'e',\r\n    '\\u00EA': 'e',\r\n    '\\u1EC1': 'e',\r\n    '\\u1EBF': 'e',\r\n    '\\u1EC5': 'e',\r\n    '\\u1EC3': 'e',\r\n    '\\u1EBD': 'e',\r\n    '\\u0113': 'e',\r\n    '\\u1E15': 'e',\r\n    '\\u1E17': 'e',\r\n    '\\u0115': 'e',\r\n    '\\u0117': 'e',\r\n    '\\u00EB': 'e',\r\n    '\\u1EBB': 'e',\r\n    '\\u011B': 'e',\r\n    '\\u0205': 'e',\r\n    '\\u0207': 'e',\r\n    '\\u1EB9': 'e',\r\n    '\\u1EC7': 'e',\r\n    '\\u0229': 'e',\r\n    '\\u1E1D': 'e',\r\n    '\\u0119': 'e',\r\n    '\\u1E19': 'e',\r\n    '\\u1E1B': 'e',\r\n    '\\u0247': 'e',\r\n    '\\u025B': 'e',\r\n    '\\u01DD': 'e',\r\n    '\\u24D5': 'f',\r\n    '\\uFF46': 'f',\r\n    '\\u1E1F': 'f',\r\n    '\\u0192': 'f',\r\n    '\\uA77C': 'f',\r\n    '\\u24D6': 'g',\r\n    '\\uFF47': 'g',\r\n    '\\u01F5': 'g',\r\n    '\\u011D': 'g',\r\n    '\\u1E21': 'g',\r\n    '\\u011F': 'g',\r\n    '\\u0121': 'g',\r\n    '\\u01E7': 'g',\r\n    '\\u0123': 'g',\r\n    '\\u01E5': 'g',\r\n    '\\u0260': 'g',\r\n    '\\uA7A1': 'g',\r\n    '\\u1D79': 'g',\r\n    '\\uA77F': 'g',\r\n    '\\u24D7': 'h',\r\n    '\\uFF48': 'h',\r\n    '\\u0125': 'h',\r\n    '\\u1E23': 'h',\r\n    '\\u1E27': 'h',\r\n    '\\u021F': 'h',\r\n    '\\u1E25': 'h',\r\n    '\\u1E29': 'h',\r\n    '\\u1E2B': 'h',\r\n    '\\u1E96': 'h',\r\n    '\\u0127': 'h',\r\n    '\\u2C68': 'h',\r\n    '\\u2C76': 'h',\r\n    '\\u0265': 'h',\r\n    '\\u0195': 'hv',\r\n    '\\u24D8': 'i',\r\n    '\\uFF49': 'i',\r\n    '\\u00EC': 'i',\r\n    '\\u00ED': 'i',\r\n    '\\u00EE': 'i',\r\n    '\\u0129': 'i',\r\n    '\\u012B': 'i',\r\n    '\\u012D': 'i',\r\n    '\\u00EF': 'i',\r\n    '\\u1E2F': 'i',\r\n    '\\u1EC9': 'i',\r\n    '\\u01D0': 'i',\r\n    '\\u0209': 'i',\r\n    '\\u020B': 'i',\r\n    '\\u1ECB': 'i',\r\n    '\\u012F': 'i',\r\n    '\\u1E2D': 'i',\r\n    '\\u0268': 'i',\r\n    '\\u0131': 'i',\r\n    '\\u24D9': 'j',\r\n    '\\uFF4A': 'j',\r\n    '\\u0135': 'j',\r\n    '\\u01F0': 'j',\r\n    '\\u0249': 'j',\r\n    '\\u24DA': 'k',\r\n    '\\uFF4B': 'k',\r\n    '\\u1E31': 'k',\r\n    '\\u01E9': 'k',\r\n    '\\u1E33': 'k',\r\n    '\\u0137': 'k',\r\n    '\\u1E35': 'k',\r\n    '\\u0199': 'k',\r\n    '\\u2C6A': 'k',\r\n    '\\uA741': 'k',\r\n    '\\uA743': 'k',\r\n    '\\uA745': 'k',\r\n    '\\uA7A3': 'k',\r\n    '\\u24DB': 'l',\r\n    '\\uFF4C': 'l',\r\n    '\\u0140': 'l',\r\n    '\\u013A': 'l',\r\n    '\\u013E': 'l',\r\n    '\\u1E37': 'l',\r\n    '\\u1E39': 'l',\r\n    '\\u013C': 'l',\r\n    '\\u1E3D': 'l',\r\n    '\\u1E3B': 'l',\r\n    '\\u017F': 'l',\r\n    '\\u0142': 'l',\r\n    '\\u019A': 'l',\r\n    '\\u026B': 'l',\r\n    '\\u2C61': 'l',\r\n    '\\uA749': 'l',\r\n    '\\uA781': 'l',\r\n    '\\uA747': 'l',\r\n    '\\u01C9': 'lj',\r\n    '\\u24DC': 'm',\r\n    '\\uFF4D': 'm',\r\n    '\\u1E3F': 'm',\r\n    '\\u1E41': 'm',\r\n    '\\u1E43': 'm',\r\n    '\\u0271': 'm',\r\n    '\\u026F': 'm',\r\n    '\\u24DD': 'n',\r\n    '\\uFF4E': 'n',\r\n    '\\u01F9': 'n',\r\n    '\\u0144': 'n',\r\n    '\\u00F1': 'n',\r\n    '\\u1E45': 'n',\r\n    '\\u0148': 'n',\r\n    '\\u1E47': 'n',\r\n    '\\u0146': 'n',\r\n    '\\u1E4B': 'n',\r\n    '\\u1E49': 'n',\r\n    '\\u019E': 'n',\r\n    '\\u0272': 'n',\r\n    '\\u0149': 'n',\r\n    '\\uA791': 'n',\r\n    '\\uA7A5': 'n',\r\n    '\\u01CC': 'nj',\r\n    '\\u24DE': 'o',\r\n    '\\uFF4F': 'o',\r\n    '\\u00F2': 'o',\r\n    '\\u00F3': 'o',\r\n    '\\u00F4': 'o',\r\n    '\\u1ED3': 'o',\r\n    '\\u1ED1': 'o',\r\n    '\\u1ED7': 'o',\r\n    '\\u1ED5': 'o',\r\n    '\\u00F5': 'o',\r\n    '\\u1E4D': 'o',\r\n    '\\u022D': 'o',\r\n    '\\u1E4F': 'o',\r\n    '\\u014D': 'o',\r\n    '\\u1E51': 'o',\r\n    '\\u1E53': 'o',\r\n    '\\u014F': 'o',\r\n    '\\u022F': 'o',\r\n    '\\u0231': 'o',\r\n    '\\u00F6': 'o',\r\n    '\\u022B': 'o',\r\n    '\\u1ECF': 'o',\r\n    '\\u0151': 'o',\r\n    '\\u01D2': 'o',\r\n    '\\u020D': 'o',\r\n    '\\u020F': 'o',\r\n    '\\u01A1': 'o',\r\n    '\\u1EDD': 'o',\r\n    '\\u1EDB': 'o',\r\n    '\\u1EE1': 'o',\r\n    '\\u1EDF': 'o',\r\n    '\\u1EE3': 'o',\r\n    '\\u1ECD': 'o',\r\n    '\\u1ED9': 'o',\r\n    '\\u01EB': 'o',\r\n    '\\u01ED': 'o',\r\n    '\\u00F8': 'o',\r\n    '\\u01FF': 'o',\r\n    '\\u0254': 'o',\r\n    '\\uA74B': 'o',\r\n    '\\uA74D': 'o',\r\n    '\\u0275': 'o',\r\n    '\\u01A3': 'oi',\r\n    '\\u0223': 'ou',\r\n    '\\uA74F': 'oo',\r\n    '\\u24DF': 'p',\r\n    '\\uFF50': 'p',\r\n    '\\u1E55': 'p',\r\n    '\\u1E57': 'p',\r\n    '\\u01A5': 'p',\r\n    '\\u1D7D': 'p',\r\n    '\\uA751': 'p',\r\n    '\\uA753': 'p',\r\n    '\\uA755': 'p',\r\n    '\\u24E0': 'q',\r\n    '\\uFF51': 'q',\r\n    '\\u024B': 'q',\r\n    '\\uA757': 'q',\r\n    '\\uA759': 'q',\r\n    '\\u24E1': 'r',\r\n    '\\uFF52': 'r',\r\n    '\\u0155': 'r',\r\n    '\\u1E59': 'r',\r\n    '\\u0159': 'r',\r\n    '\\u0211': 'r',\r\n    '\\u0213': 'r',\r\n    '\\u1E5B': 'r',\r\n    '\\u1E5D': 'r',\r\n    '\\u0157': 'r',\r\n    '\\u1E5F': 'r',\r\n    '\\u024D': 'r',\r\n    '\\u027D': 'r',\r\n    '\\uA75B': 'r',\r\n    '\\uA7A7': 'r',\r\n    '\\uA783': 'r',\r\n    '\\u24E2': 's',\r\n    '\\uFF53': 's',\r\n    '\\u00DF': 's',\r\n    '\\u015B': 's',\r\n    '\\u1E65': 's',\r\n    '\\u015D': 's',\r\n    '\\u1E61': 's',\r\n    '\\u0161': 's',\r\n    '\\u1E67': 's',\r\n    '\\u1E63': 's',\r\n    '\\u1E69': 's',\r\n    '\\u0219': 's',\r\n    '\\u015F': 's',\r\n    '\\u023F': 's',\r\n    '\\uA7A9': 's',\r\n    '\\uA785': 's',\r\n    '\\u1E9B': 's',\r\n    '\\u24E3': 't',\r\n    '\\uFF54': 't',\r\n    '\\u1E6B': 't',\r\n    '\\u1E97': 't',\r\n    '\\u0165': 't',\r\n    '\\u1E6D': 't',\r\n    '\\u021B': 't',\r\n    '\\u0163': 't',\r\n    '\\u1E71': 't',\r\n    '\\u1E6F': 't',\r\n    '\\u0167': 't',\r\n    '\\u01AD': 't',\r\n    '\\u0288': 't',\r\n    '\\u2C66': 't',\r\n    '\\uA787': 't',\r\n    '\\uA729': 'tz',\r\n    '\\u24E4': 'u',\r\n    '\\uFF55': 'u',\r\n    '\\u00F9': 'u',\r\n    '\\u00FA': 'u',\r\n    '\\u00FB': 'u',\r\n    '\\u0169': 'u',\r\n    '\\u1E79': 'u',\r\n    '\\u016B': 'u',\r\n    '\\u1E7B': 'u',\r\n    '\\u016D': 'u',\r\n    '\\u00FC': 'u',\r\n    '\\u01DC': 'u',\r\n    '\\u01D8': 'u',\r\n    '\\u01D6': 'u',\r\n    '\\u01DA': 'u',\r\n    '\\u1EE7': 'u',\r\n    '\\u016F': 'u',\r\n    '\\u0171': 'u',\r\n    '\\u01D4': 'u',\r\n    '\\u0215': 'u',\r\n    '\\u0217': 'u',\r\n    '\\u01B0': 'u',\r\n    '\\u1EEB': 'u',\r\n    '\\u1EE9': 'u',\r\n    '\\u1EEF': 'u',\r\n    '\\u1EED': 'u',\r\n    '\\u1EF1': 'u',\r\n    '\\u1EE5': 'u',\r\n    '\\u1E73': 'u',\r\n    '\\u0173': 'u',\r\n    '\\u1E77': 'u',\r\n    '\\u1E75': 'u',\r\n    '\\u0289': 'u',\r\n    '\\u24E5': 'v',\r\n    '\\uFF56': 'v',\r\n    '\\u1E7D': 'v',\r\n    '\\u1E7F': 'v',\r\n    '\\u028B': 'v',\r\n    '\\uA75F': 'v',\r\n    '\\u028C': 'v',\r\n    '\\uA761': 'vy',\r\n    '\\u24E6': 'w',\r\n    '\\uFF57': 'w',\r\n    '\\u1E81': 'w',\r\n    '\\u1E83': 'w',\r\n    '\\u0175': 'w',\r\n    '\\u1E87': 'w',\r\n    '\\u1E85': 'w',\r\n    '\\u1E98': 'w',\r\n    '\\u1E89': 'w',\r\n    '\\u2C73': 'w',\r\n    '\\u24E7': 'x',\r\n    '\\uFF58': 'x',\r\n    '\\u1E8B': 'x',\r\n    '\\u1E8D': 'x',\r\n    '\\u24E8': 'y',\r\n    '\\uFF59': 'y',\r\n    '\\u1EF3': 'y',\r\n    '\\u00FD': 'y',\r\n    '\\u0177': 'y',\r\n    '\\u1EF9': 'y',\r\n    '\\u0233': 'y',\r\n    '\\u1E8F': 'y',\r\n    '\\u00FF': 'y',\r\n    '\\u1EF7': 'y',\r\n    '\\u1E99': 'y',\r\n    '\\u1EF5': 'y',\r\n    '\\u01B4': 'y',\r\n    '\\u024F': 'y',\r\n    '\\u1EFF': 'y',\r\n    '\\u24E9': 'z',\r\n    '\\uFF5A': 'z',\r\n    '\\u017A': 'z',\r\n    '\\u1E91': 'z',\r\n    '\\u017C': 'z',\r\n    '\\u017E': 'z',\r\n    '\\u1E93': 'z',\r\n    '\\u1E95': 'z',\r\n    '\\u01B6': 'z',\r\n    '\\u0225': 'z',\r\n    '\\u0240': 'z',\r\n    '\\u2C6C': 'z',\r\n    '\\uA763': 'z',\r\n    '\\u0386': '\\u0391',\r\n    '\\u0388': '\\u0395',\r\n    '\\u0389': '\\u0397',\r\n    '\\u038A': '\\u0399',\r\n    '\\u03AA': '\\u0399',\r\n    '\\u038C': '\\u039F',\r\n    '\\u038E': '\\u03A5',\r\n    '\\u03AB': '\\u03A5',\r\n    '\\u038F': '\\u03A9',\r\n    '\\u03AC': '\\u03B1',\r\n    '\\u03AD': '\\u03B5',\r\n    '\\u03AE': '\\u03B7',\r\n    '\\u03AF': '\\u03B9',\r\n    '\\u03CA': '\\u03B9',\r\n    '\\u0390': '\\u03B9',\r\n    '\\u03CC': '\\u03BF',\r\n    '\\u03CD': '\\u03C5',\r\n    '\\u03CB': '\\u03C5',\r\n    '\\u03B0': '\\u03C5',\r\n    '\\u03C9': '\\u03C9',\r\n    '\\u03C2': '\\u03C3'\r\n};\r\nfunction stripSpecialChars(text) {\r\n    var match = function (a) {\r\n        return diacritics[a] || a;\r\n    };\r\n    return text.replace(/[^\\u0000-\\u007E]/g, match);\r\n}\r\nexports.stripSpecialChars = stripSpecialChars;\r\n\n\n/***/ }),\n\n/***/ 116:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(4);\r\n/* tslint:disable:max-line-length */\r\nvar SpinnerComponent = /** @class */ (function () {\r\n    function SpinnerComponent() {\r\n    }\r\n    SpinnerComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'spinner',\r\n            template: \"\\n        <svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n     width=\\\"20px\\\" height=\\\"20px\\\" viewBox=\\\"0 0 50 50\\\" style=\\\"enable-background:new 0 0 50 50;\\\" xml:space=\\\"preserve\\\">\\n  <path fill=\\\"#777\\\" d=\\\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\\\">\\n    <animateTransform attributeType=\\\"xml\\\"\\n      attributeName=\\\"transform\\\"\\n      type=\\\"rotate\\\"\\n      from=\\\"0 25 25\\\"\\n      to=\\\"360 25 25\\\"\\n      dur=\\\"0.6s\\\"\\n      repeatCount=\\\"indefinite\\\"/>\\n    </path>\\n  </svg>\"\r\n        })\r\n    ], SpinnerComponent);\r\n    return SpinnerComponent;\r\n}());\r\nexports.SpinnerComponent = SpinnerComponent;\r\n/* tslint:enable:max-line-length */\r\n\n\n/***/ }),\n\n/***/ 117:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 118:\n/***/ (function(module, exports) {\n\nmodule.exports = \"ng-select {\\n  position: relative;\\n  display: block;\\n  box-sizing: border-box; }\\n  ng-select div, ng-select input, ng-select span, ng-select virtual-scroll {\\n    box-sizing: border-box; }\\n  ng-select virtual-scroll {\\n    display: block;\\n    height: auto; }\\n  ng-select.opened > .as-control {\\n    border-bottom-right-radius: 0;\\n    border-bottom-left-radius: 0;\\n    background: #fff;\\n    border-color: #b3b3b3 #ccc #d9d9d9; }\\n  ng-select.opened > .as-control .as-arrow {\\n    top: -2px;\\n    border-color: transparent transparent #999;\\n    border-width: 0 5px 5px; }\\n    ng-select.opened > .as-control .as-arrow:hover {\\n      border-color: transparent transparent #666; }\\n  ng-select.opened .as-menu-outer {\\n    visibility: visible; }\\n  ng-select.focused:not(.opened) > .as-control {\\n    border-color: #007eff;\\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 0 3px rgba(0, 126, 255, 0.1); }\\n  ng-select.disabled > .as-control {\\n    background-color: #f9f9f9; }\\n  ng-select .as-control {\\n    background-color: #fff;\\n    border-radius: 4px;\\n    border: 1px solid #ccc;\\n    color: #333;\\n    cursor: default;\\n    display: table;\\n    border-spacing: 0;\\n    border-collapse: separate;\\n    height: 36px;\\n    outline: none;\\n    overflow: hidden;\\n    position: relative;\\n    width: 100%; }\\n    ng-select .as-control:hover {\\n      box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06); }\\n  ng-select .as-placeholder, ng-select.as-single > .as-control .as-value {\\n    bottom: 0;\\n    color: #aaa;\\n    left: 0;\\n    line-height: 34px;\\n    padding-left: 10px;\\n    padding-right: 10px;\\n    position: absolute;\\n    right: 0;\\n    top: 0;\\n    max-width: 100%;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap; }\\n    ng-select .as-placeholder .as-value-label, ng-select.as-single > .as-control .as-value .as-value-label {\\n      color: #333; }\\n  ng-select.as-multiple.disabled > .as-control .as-value {\\n    background-color: #f9f9f9;\\n    border: 1px solid #e3e3e3; }\\n    ng-select.as-multiple.disabled > .as-control .as-value .as-clear {\\n      display: none; }\\n  ng-select.as-multiple > .as-control .as-value {\\n    background-color: #f5faff;\\n    border-radius: 2px;\\n    border: 1px solid #c2e0ff;\\n    display: inline-block;\\n    font-size: 0.9em;\\n    line-height: 1.4;\\n    margin-left: 5px;\\n    margin-top: 5px;\\n    vertical-align: top; }\\n    ng-select.as-multiple > .as-control .as-value .as-clear {\\n      cursor: pointer;\\n      border-bottom-right-radius: 2px;\\n      border-top-right-radius: 2px;\\n      border-right: 1px solid #c2e0ff;\\n      padding: 1px 5px 3px; }\\n      ng-select.as-multiple > .as-control .as-value .as-clear:hover {\\n        background-color: #d8eafd; }\\n    ng-select.as-multiple > .as-control .as-value .as-value-label {\\n      border-bottom-right-radius: 2px;\\n      border-top-right-radius: 2px;\\n      cursor: default;\\n      padding: 2px 5px; }\\n  ng-select .as-input {\\n    height: 34px;\\n    padding-left: 10px;\\n    padding-right: 10px;\\n    vertical-align: middle;\\n    display: inline-block; }\\n    ng-select .as-input > input {\\n      min-width: 5px;\\n      box-sizing: content-box;\\n      background: none transparent;\\n      border: 0 none;\\n      box-shadow: none;\\n      cursor: default;\\n      display: inline-block;\\n      font-family: inherit;\\n      font-size: inherit;\\n      margin: 0;\\n      outline: none;\\n      line-height: 14px;\\n      /* For IE 8 compatibility */\\n      padding: 8px 0 12px;\\n      /* For IE 8 compatibility */\\n      -webkit-appearance: none; }\\n  ng-select .as-menu-outer {\\n    visibility: hidden;\\n    border-bottom-right-radius: 4px;\\n    border-bottom-left-radius: 4px;\\n    background-color: #fff;\\n    border: 1px solid #ccc;\\n    border-top-color: #e6e6e6;\\n    box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);\\n    box-sizing: border-box;\\n    margin-top: -1px;\\n    max-height: 242px;\\n    position: absolute;\\n    top: 100%;\\n    width: 100%;\\n    z-index: 1;\\n    -webkit-overflow-scrolling: touch; }\\n  ng-select .as-menu {\\n    max-height: 240px;\\n    overflow-y: auto; }\\n  ng-select .as-option {\\n    box-sizing: border-box;\\n    background-color: #fff;\\n    color: #666666;\\n    cursor: pointer;\\n    display: block;\\n    padding: 8px 10px; }\\n    ng-select .as-option:last-child {\\n      border-bottom-right-radius: 4px;\\n      border-bottom-left-radius: 4px; }\\n    ng-select .as-option.selected {\\n      background-color: #f5faff;\\n      color: #333; }\\n    ng-select .as-option.marked {\\n      background-color: #ebf5ff;\\n      color: #333; }\\n    ng-select .as-option.disabled {\\n      color: #cccccc;\\n      cursor: default; }\\n  ng-select .as-clear-zone {\\n    animation: Select-animation-fadeIn 200ms;\\n    color: #999;\\n    cursor: pointer;\\n    display: table-cell;\\n    position: relative;\\n    text-align: center;\\n    vertical-align: middle;\\n    width: 17px; }\\n    ng-select .as-clear-zone .as-clear {\\n      display: inline-block;\\n      font-size: 18px;\\n      line-height: 1; }\\n      ng-select .as-clear-zone .as-clear:hover {\\n        color: #D0021B; }\\n  ng-select .as-spinner-zone {\\n    cursor: pointer;\\n    display: table-cell;\\n    position: relative;\\n    text-align: center;\\n    vertical-align: middle;\\n    width: 25px;\\n    padding-right: 5px;\\n    padding-top: 5px; }\\n  ng-select .as-arrow-zone {\\n    cursor: pointer;\\n    display: table-cell;\\n    position: relative;\\n    text-align: center;\\n    vertical-align: middle;\\n    width: 25px;\\n    padding-right: 5px; }\\n    ng-select .as-arrow-zone .as-arrow {\\n      border-color: #999 transparent transparent;\\n      border-style: solid;\\n      border-width: 5px 5px 2.5px;\\n      display: inline-block;\\n      height: 0;\\n      width: 0;\\n      position: relative; }\\n      ng-select .as-arrow-zone .as-arrow:hover {\\n        border-top-color: #666; }\\n\"\n\n/***/ }),\n\n/***/ 119:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <h3 class=\\\"title\\\">\\r\\n                Angular select component demos\\r\\n                <small class=\\\"text-muted pull-right\\\">ng-select on <a href=\\\"https://github.com/anjmao/ng-select\\\">Github</a></small>\\r\\n            </h3>\\r\\n\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <ul class=\\\"nav nav-tabs card-header-tabs\\\">\\r\\n                        <li class=\\\"nav-item\\\">\\r\\n                            <a class=\\\"nav-link\\\" routerLink=\\\"/forms\\\" routerLinkActive=\\\"active\\\">Reactive forms</a>\\r\\n                        </li>\\r\\n                        <li class=\\\"nav-item\\\">\\r\\n                            <a class=\\\"nav-link\\\" routerLink=\\\"/filter-client\\\" routerLinkActive=\\\"active\\\">Filter <small>(client side)</small></a>\\r\\n                        </li>\\r\\n                        <li class=\\\"nav-item\\\">\\r\\n                            <a class=\\\"nav-link\\\" routerLink=\\\"/filter-server\\\" routerLinkActive=\\\"active\\\">Filter <small>(server side)</small></a>\\r\\n                        </li>\\r\\n                        <li class=\\\"nav-item\\\">\\r\\n                            <a class=\\\"nav-link\\\" routerLink=\\\"/multiselect\\\" routerLinkActive=\\\"active\\\">Multiselect</a>\\r\\n                        </li>\\r\\n                        <li class=\\\"nav-item\\\">\\r\\n                            <a class=\\\"nav-link\\\" routerLink=\\\"/bindings\\\" routerLinkActive=\\\"active\\\">Custom bindings</a>\\r\\n                        </li>\\r\\n                        <li class=\\\"nav-item\\\">\\r\\n                            <a class=\\\"nav-link\\\" routerLink=\\\"/templates\\\" routerLinkActive=\\\"active\\\">Custom templates</a>\\r\\n                        </li>\\r\\n                        <li class=\\\"nav-item\\\">\\r\\n                            <a class=\\\"nav-link\\\" routerLink=\\\"/events\\\" routerLinkActive=\\\"active\\\">Events</a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <router-outlet></router-outlet>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n/***/ }),\n\n/***/ 120:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div (click)=\\\"handleSelectClick($event)\\\" class=\\\"as-control\\\">\\n    <span class=\\\"as-multi-value-wrapper\\\">\\n\\n        <span class=\\\"as-placeholder\\\" *ngIf=\\\"showPlaceholder()\\\">{{placeholder}}</span>\\n\\n        <ng-container *ngIf=\\\"!multiple;else multipleValue\\\">\\n            <div class=\\\"as-value\\\" *ngIf=\\\"showValue()\\\">\\n                    <span class=\\\"as-value-label\\\" role=\\\"option\\\" aria-selected=\\\"true\\\">\\n                            <ng-template \\n                                *ngIf=\\\"labelTemplate\\\" \\n                                [ngTemplateOutlet]=\\\"labelTemplate\\\"\\n                                [ngTemplateOutletContext]=\\\"getDisplayTemplateContext()\\\">\\n                            </ng-template>\\n                            <span *ngIf=\\\"!labelTemplate\\\">{{getLabelValue(value)}}</span>\\n                    </span>\\n            </div>\\n        </ng-container>\\n\\n        <ng-template #multipleValue>\\n            <div class=\\\"as-value\\\" *ngFor=\\\"let item of value\\\">\\n                <span class=\\\"as-clear\\\" (click)=\\\"unselect(item)\\\" aria-hidden=\\\"true\\\">×</span>\\n                <span class=\\\"as-value-label\\\" aria-selected=\\\"true\\\">{{getLabelValue(item)}}</span>\\n            </div>\\n        </ng-template>\\n\\n        <div *ngIf=\\\"showFilter()\\\" class=\\\"as-input\\\">\\n            <input #filterInput\\n                   [value]=\\\"filterValue\\\"\\n                   (input)=\\\"onFilter($event)\\\"\\n                   (focus)=\\\"onInputFocus($event)\\\"\\n                   (blur)=\\\"onInputBlur($event)\\\"\\n                   role=\\\"combobox\\\"\\n                   aria-expanded=\\\"false\\\"\\n                   aria-owns=\\\"\\\"\\n                   aria-haspopup=\\\"false\\\">\\n        </div>\\n    </span>\\n\\n    <spinner class=\\\"as-spinner-zone\\\" *ngIf=\\\"isLoading\\\"></spinner>\\n\\n    <span *ngIf=\\\"showClear()\\\" (click)=\\\"handleClearClick($event)\\\" class=\\\"as-clear-zone\\\" title=\\\"Clear all\\\" aria-label=\\\"Clear all\\\">\\n        <span class=\\\"as-clear\\\" aria-hidden=\\\"true\\\">×</span>\\n    </span>\\n\\n    <span (click)=\\\"handleArrowClick($event)\\\" class=\\\"as-arrow-zone\\\">\\n        <span class=\\\"as-arrow\\\"></span>\\n    </span>\\n</div>\\n\\n<div class=\\\"as-menu-outer\\\">\\n    <virtual-scroll role=\\\"listbox\\\" class=\\\"as-menu\\\" [bufferAmount]=\\\"4\\\" [items]=\\\"itemsList.filteredItems\\\" (update)=\\\"viewPortItems = $event\\\">\\n        <div class=\\\"as-option\\\" role=\\\"option\\\" (click)=\\\"toggle(item)\\\" (mouseover)=\\\"onItemHover(item)\\\"\\n             *ngFor=\\\"let item of viewPortItems\\\"\\n             [class.disabled]=\\\"item.disabled\\\"\\n             [class.selected]=\\\"item.selected\\\"\\n             [class.marked]=\\\"item === itemsList.markedItem\\\">\\n\\n            <span *ngIf=\\\"!optionTemplate\\\">{{item[bindLabel]}}</span>\\n\\n            <ng-template  *ngIf=\\\"optionTemplate\\\"\\n                          [ngTemplateOutlet]=\\\"optionTemplate\\\"\\n                          [ngTemplateOutletContext]=\\\"{ item: item, index: item.index }\\\">\\n            </ng-template>\\n        </div>\\n    </virtual-scroll>\\n\\n    <div class=\\\"as-menu\\\" *ngIf=\\\"showNoItemsFound()\\\">\\n        <div class=\\\"as-option disabled\\\">\\n            {{notFoundText}}\\n        </div>\\n    </div>\\n\\n    <div class=\\\"as-menu\\\" *ngIf=\\\"showTypeToSearch()\\\">\\n        <div class=\\\"as-option disabled\\\">\\n            {{typeToSearchText}}\\n        </div>\\n    </div>\\n</div>\\n\"\n\n/***/ }),\n\n/***/ 28:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_observable_forkJoin__ = __webpack_require__(63);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_observable_forkJoin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_forkJoin__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_observable_fromPromise__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_observable_fromPromise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_platform_browser__ = __webpack_require__(20);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractControlDirective\", function() { return AbstractControlDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractFormGroupDirective\", function() { return AbstractFormGroupDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CheckboxControlValueAccessor\", function() { return CheckboxControlValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ControlContainer\", function() { return ControlContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NG_VALUE_ACCESSOR\", function() { return NG_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COMPOSITION_BUFFER_MODE\", function() { return COMPOSITION_BUFFER_MODE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultValueAccessor\", function() { return DefaultValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgControl\", function() { return NgControl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgControlStatus\", function() { return NgControlStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgControlStatusGroup\", function() { return NgControlStatusGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgForm\", function() { return NgForm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgModel\", function() { return NgModel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgModelGroup\", function() { return NgModelGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RadioControlValueAccessor\", function() { return RadioControlValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormControlDirective\", function() { return FormControlDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormControlName\", function() { return FormControlName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormGroupDirective\", function() { return FormGroupDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormArrayName\", function() { return FormArrayName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormGroupName\", function() { return FormGroupName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgSelectOption\", function() { return NgSelectOption; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelectControlValueAccessor\", function() { return SelectControlValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelectMultipleControlValueAccessor\", function() { return SelectMultipleControlValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CheckboxRequiredValidator\", function() { return CheckboxRequiredValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EmailValidator\", function() { return EmailValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MaxLengthValidator\", function() { return MaxLengthValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MinLengthValidator\", function() { return MinLengthValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PatternValidator\", function() { return PatternValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RequiredValidator\", function() { return RequiredValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormBuilder\", function() { return FormBuilder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractControl\", function() { return AbstractControl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormArray\", function() { return FormArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormControl\", function() { return FormControl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormGroup\", function() { return FormGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NG_ASYNC_VALIDATORS\", function() { return NG_ASYNC_VALIDATORS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NG_VALIDATORS\", function() { return NG_VALIDATORS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Validators\", function() { return Validators; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VERSION\", function() { return VERSION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormsModule\", function() { return FormsModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReactiveFormsModule\", function() { return ReactiveFormsModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵba\", function() { return InternalFormsSharedModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵz\", function() { return REACTIVE_DRIVEN_DIRECTIVES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵx\", function() { return SHARED_FORM_DIRECTIVES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵy\", function() { return TEMPLATE_DRIVEN_DIRECTIVES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵa\", function() { return CHECKBOX_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵb\", function() { return DEFAULT_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵc\", function() { return AbstractControlStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵd\", function() { return ngControlStatusHost; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵe\", function() { return formDirectiveProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵf\", function() { return formControlBinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵg\", function() { return modelGroupProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbf\", function() { return NgNoValidate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbb\", function() { return NUMBER_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbc\", function() { return NumberValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵh\", function() { return RADIO_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵi\", function() { return RadioControlRegistry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbd\", function() { return RANGE_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbe\", function() { return RangeValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵj\", function() { return formControlBinding$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵk\", function() { return controlNameBinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵl\", function() { return formDirectiveProvider$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵn\", function() { return formArrayNameProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵm\", function() { return formGroupNameProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵo\", function() { return SELECT_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵq\", function() { return NgSelectMultipleOption; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵp\", function() { return SELECT_MULTIPLE_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵs\", function() { return CHECKBOX_REQUIRED_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵt\", function() { return EMAIL_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵv\", function() { return MAX_LENGTH_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵu\", function() { return MIN_LENGTH_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵw\", function() { return PATTERN_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵr\", function() { return REQUIRED_VALIDATOR; });\n\n/**\n * @license Angular v4.3.5\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for control directives.\n *\n * Only used internally in the forms module.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControlDirective = (function () {\n    function AbstractControlDirective() {\n    }\n    /**\n     * The {\\@link FormControl}, {\\@link FormGroup}, or {\\@link FormArray}\n     * that backs this directive. Most properties fall through to that\n     * instance.\n     * @abstract\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.control = function () { };\n    Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n        /**\n         * The value of the control.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.value : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n        /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.valid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n        /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.invalid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n        /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.pending : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n        /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.disabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n        /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.enabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n        /**\n         * Returns any errors generated by failing validation. If there\n         * are no errors, it will return null.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.errors : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.pristine : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n        /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.dirty : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n        /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.touched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n        /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.untouched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n        /**\n         * Emits an event every time the validation status of the control\n         * is re-calculated.\n         * @return {?}\n         */\n        get: function () {\n            return this.control ? this.control.statusChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n        /**\n         * Emits an event every time the value of the control changes, in\n         * the UI or programmatically.\n         * @return {?}\n         */\n        get: function () {\n            return this.control ? this.control.valueChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n        /**\n         * Returns an array that represents the path from the top-level form\n         * to this control. Each index is the string name of the control on\n         * that level.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * For more information, see {\\@link AbstractControl}.\n     * @param {?=} value\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.reset = function (value) {\n        if (value === void 0) { value = undefined; }\n        if (this.control)\n            this.control.reset(value);\n    };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    };\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.getError = function (errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    };\n    return AbstractControlDirective;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A directive that contains multiple {\\@link NgControl}s.\n *\n * Only used by the forms module.\n *\n * \\@stable\n * @abstract\n */\nvar ControlContainer = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](ControlContainer, _super);\n    function ControlContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n        /**\n         * Get the form to which this container belongs.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ControlContainer.prototype, \"path\", {\n        /**\n         * Get the path to this container.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    return ControlContainer;\n}(AbstractControlDirective));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\n/**\n * Providers for validators to be used for {\\@link FormControl}s in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * \\@stable\n */\nvar NG_VALIDATORS = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('NgValidators');\n/**\n * Providers for asynchronous validators to be used for {\\@link FormControl}s\n * in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * See {\\@link NG_VALIDATORS} for more details.\n *\n * \\@stable\n */\nvar NG_ASYNC_VALIDATORS = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('NgAsyncValidators');\nvar EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n/**\n * Provides a set of validators used by form controls.\n *\n * A validator is a function that processes a {\\@link FormControl} or collection of\n * controls and returns a map of errors. A null map means that validation has passed.\n *\n * ### Example\n *\n * ```typescript\n * var loginControl = new FormControl(\"\", Validators.required)\n * ```\n *\n * \\@stable\n */\nvar Validators = (function () {\n    function Validators() {\n    }\n    /**\n     * Validator that requires controls to have a value greater than a number.\n     * @param {?} min\n     * @return {?}\n     */\n    Validators.min = function (min) {\n        return function (control) {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n            return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value less than a number.\n     * @param {?} max\n     * @return {?}\n     */\n    Validators.max = function (max) {\n        return function (control) {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n            return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a non-empty value.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.required = function (control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    };\n    /**\n     * Validator that requires control value to be true.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.requiredTrue = function (control) {\n        return control.value === true ? null : { 'required': true };\n    };\n    /**\n     * Validator that performs email validation.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.email = function (control) {\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    };\n    /**\n     * Validator that requires controls to have a value of a minimum length.\n     * @param {?} minLength\n     * @return {?}\n     */\n    Validators.minLength = function (minLength) {\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value of a maximum length.\n     * @param {?} maxLength\n     * @return {?}\n     */\n    Validators.maxLength = function (maxLength) {\n        return function (control) {\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires a control to match a regex to its value.\n     * @param {?} pattern\n     * @return {?}\n     */\n    Validators.pattern = function (pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        var /** @type {?} */ regex;\n        var /** @type {?} */ regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = \"^\" + pattern + \"$\";\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        };\n    };\n    /**\n     * No-op validator.\n     * @param {?} c\n     * @return {?}\n     */\n    Validators.nullValidator = function (c) { return null; };\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.compose = function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = (validators.filter(isPresent));\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        };\n    };\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.composeAsync = function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = (validators.filter(isPresent));\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            var /** @type {?} */ observables = _executeAsyncValidators(control, presentValidators).map(toObservable);\n            return __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__[\"map\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_forkJoin__[\"forkJoin\"])(observables), _mergeErrors);\n        };\n    };\n    return Validators;\n}());\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPresent(o) {\n    return o != null;\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction toObservable(r) {\n    var /** @type {?} */ obs = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ɵisPromise\"])(r) ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_rxjs_observable_fromPromise__[\"fromPromise\"])(r) : r;\n    if (!(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ɵisObservable\"])(obs))) {\n        throw new Error(\"Expected validator to return Promise or Observable.\");\n    }\n    return obs;\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} arrayOfErrors\n * @return {?}\n */\nfunction _mergeErrors(arrayOfErrors) {\n    var /** @type {?} */ res = arrayOfErrors.reduce(function (res, errors) {\n        return errors != null ? Object.assign({}, /** @type {?} */ ((res)), errors) : ((res));\n    }, {});\n    return Object.keys(res).length === 0 ? null : res;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a {\\@link ControlValueAccessor} for form controls.\n *\n * See {\\@link DefaultValueAccessor} for how to implement one.\n * \\@stable\n */\nvar NG_VALUE_ACCESSOR = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('NgValueAccessor');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return CheckboxControlValueAccessor; }),\n    multi: true,\n};\n/**\n * The accessor for writing a value and listening to changes on a checkbox input element.\n *\n *  ### Example\n *  ```\n *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar CheckboxControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function CheckboxControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return CheckboxControlValueAccessor;\n}());\nCheckboxControlValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                providers: [CHECKBOX_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nCheckboxControlValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return DefaultValueAccessor; }),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n * @return {?}\n */\nfunction _isAndroid() {\n    var /** @type {?} */ userAgent = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__angular_platform_browser__[\"ɵgetDOM\"])() ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__angular_platform_browser__[\"ɵgetDOM\"])().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * Turn this mode on if you want form directives to buffer IME input until compositionend\n * \\@experimental\n */\nvar COMPOSITION_BUFFER_MODE = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('CompositionEventMode');\n/**\n * The default accessor for writing a value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"text\" name=\"searchQuery\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar DefaultValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _compositionMode\n     */\n    function DefaultValueAccessor(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        /**\n         * Whether the user is creating a composition string (IME events).\n         */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.writeValue = function (value) {\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._handleInput = function (value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionStart = function () { this._composing = true; };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionEnd = function (value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    };\n    return DefaultValueAccessor;\n}());\nDefaultValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                // TODO: vsavkin replace the above selector with the one below it once\n                // https://github.com/angular/angular/issues/3011 is implemented\n                // selector: '[ngModel],[formControl],[formControlName]',\n                host: {\n                    '(input)': '_handleInput($event.target.value)',\n                    '(blur)': 'onTouched()',\n                    '(compositionstart)': '_compositionStart()',\n                    '(compositionend)': '_compositionEnd($event.target.value)'\n                },\n                providers: [DEFAULT_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nDefaultValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [COMPOSITION_BUFFER_MODE,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeValidator(validator) {\n    if (((validator)).validate) {\n        return function (c) { return ((validator)).validate(c); };\n    }\n    else {\n        return (validator);\n    }\n}\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeAsyncValidator(validator) {\n    if (((validator)).validate) {\n        return function (c) { return ((validator)).validate(c); };\n    }\n    else {\n        return (validator);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return NumberValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a number value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"number\" [(ngModel)]=\"age\">\n *  ```\n */\nvar NumberValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function NumberValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.writeValue = function (value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return NumberValueAccessor;\n}());\nNumberValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [NUMBER_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nNumberValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction unimplemented() {\n    throw new Error('unimplemented');\n}\n/**\n * A base class that all control directive extend.\n * It binds a {\\@link FormControl} object to a DOM element.\n *\n * Used internally by Angular forms.\n *\n * \\@stable\n * @abstract\n */\nvar NgControl = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](NgControl, _super);\n    function NgControl() {\n        var _this = _super.apply(this, arguments) || this;\n        /**\n         * \\@internal\n         */\n        _this._parent = null;\n        _this.name = null;\n        _this.valueAccessor = null;\n        /**\n         * \\@internal\n         */\n        _this._rawValidators = [];\n        /**\n         * \\@internal\n         */\n        _this._rawAsyncValidators = [];\n        return _this;\n    }\n    Object.defineProperty(NgControl.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @abstract\n     * @param {?} newValue\n     * @return {?}\n     */\n    NgControl.prototype.viewToModelUpdate = function (newValue) { };\n    return NgControl;\n}(AbstractControlDirective));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return RadioControlValueAccessor; }),\n    multi: true\n};\n/**\n * Internal class used by Angular to uncheck radio buttons with the matching name.\n */\nvar RadioControlRegistry = (function () {\n    function RadioControlRegistry() {\n        this._accessors = [];\n    }\n    /**\n     * @param {?} control\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.add = function (control, accessor) {\n        this._accessors.push([control, accessor]);\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.remove = function (accessor) {\n        for (var /** @type {?} */ i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.select = function (accessor) {\n        var _this = this;\n        this._accessors.forEach(function (c) {\n            if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    };\n    /**\n     * @param {?} controlPair\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    };\n    return RadioControlRegistry;\n}());\nRadioControlRegistry.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nRadioControlRegistry.ctorParameters = function () { return []; };\n/**\n * \\@whatItDoes Writes radio control values and listens to radio control changes.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any radio control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use radio buttons with form directives\n *\n * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n * in the same group have the same `name` attribute.  Radio buttons with different `name`\n * attributes do not affect each other.\n *\n * {\\@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n *\n * When using radio buttons in a reactive form, radio buttons in the same group should have the\n * same `formControlName`. You can also add a `name` attribute, but it's optional.\n *\n * {\\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  \\@stable\n */\nvar RadioControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _registry\n     * @param {?} _injector\n     */\n    function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        this.onChange = function () { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnInit = function () {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.writeValue = function (value) {\n        this._state = value === this.value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this._fn = fn;\n        this.onChange = function () {\n            fn(_this.value);\n            _this._registry.select(_this);\n        };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._checkName = function () {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this._throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._throwNameError = function () {\n        throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n    };\n    return RadioControlValueAccessor;\n}());\nRadioControlValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                providers: [RADIO_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nRadioControlValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n    { type: RadioControlRegistry, },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injector\"], },\n]; };\nRadioControlValueAccessor.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n    'formControlName': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return RangeValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a range value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"range\" [(ngModel)]=\"age\" >\n *  ```\n */\nvar RangeValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function RangeValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return RangeValueAccessor;\n}());\nRangeValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [RANGE_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nRangeValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return SelectControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * \\@whatItDoes Writes values and listens to changes on a select element.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any select control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use select controls with form directives\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * If your option values are simple strings, you can bind to the normal `value` property\n * on the option.  If your option values happen to be objects (and you'd like to save the\n * selection in your form as an object), use `ngValue` instead:\n *\n * {\\@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * In reactive forms, you'll also want to add your form directive (`formControlName` or\n * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n * choice of binding to the  `value` or `ngValue` property on the select's options.\n *\n * {\\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Caveat: Option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * Note: We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar SelectControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function SelectControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ɵlooseIdentical\"];\n    }\n    Object.defineProperty(SelectControlValueAccessor.prototype, \"compareWith\", {\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        set: function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.writeValue = function (value) {\n        this.value = value;\n        var /** @type {?} */ id = this._getOptionId(value);\n        if (id == null) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        var /** @type {?} */ valueString = _buildValueString(id, value);\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (valueString) {\n            _this.value = _this._getOptionValue(valueString);\n            fn(_this.value);\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    };\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var /** @type {?} */ id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    };\n    return SelectControlValueAccessor;\n}());\nSelectControlValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [SELECT_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nSelectControlValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n]; };\nSelectControlValueAccessor.propDecorators = {\n    'compareWith': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n};\n/**\n * \\@whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * \\@howToUse\n *\n * See docs for {\\@link SelectControlValueAccessor} for usage examples.\n *\n * \\@stable\n */\nvar NgSelectOption = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    function NgSelectOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._select._optionMap.set(this.id, value);\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectOption.prototype, \"value\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._setElementValue(value);\n            if (this._select)\n                this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectOption.prototype._setElementValue = function (value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectOption.prototype.ngOnDestroy = function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    return NgSelectOption;\n}());\nNgSelectOption.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: 'option' },] },\n];\n/**\n * @nocollapse\n */\nNgSelectOption.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: SelectControlValueAccessor, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] },] },\n]; };\nNgSelectOption.propDecorators = {\n    'ngValue': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngValue',] },],\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['value',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return SelectMultipleControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (typeof value === 'string')\n        value = \"'\" + value + \"'\";\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * The accessor for writing a value and listening to changes on a select element.\n *\n *  ### Caveat: Options selection\n *\n * Angular uses object identity to select options. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`\n * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects options by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select multiple [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * \\@stable\n */\nvar SelectMultipleControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ɵlooseIdentical\"];\n    }\n    Object.defineProperty(SelectMultipleControlValueAccessor.prototype, \"compareWith\", {\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        set: function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n        var _this = this;\n        this.value = value;\n        var /** @type {?} */ optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            var /** @type {?} */ ids_1 = value.map(function (v) { return _this._getOptionId(v); });\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(ids_1.indexOf(o.toString()) > -1); };\n        }\n        else {\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(false); };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (_) {\n            var /** @type {?} */ selected = [];\n            if (_.hasOwnProperty('selectedOptions')) {\n                var /** @type {?} */ options = _.selectedOptions;\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            else {\n                var /** @type {?} */ options = (_.options);\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    if (opt.selected) {\n                        var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            _this.value = selected;\n            fn(selected);\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n        var /** @type {?} */ id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(/** @type {?} */ ((this._optionMap.get(id)))._value, value))\n                return id;\n        }\n        return null;\n    };\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var /** @type {?} */ id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? ((this._optionMap.get(id)))._value : valueString;\n    };\n    return SelectMultipleControlValueAccessor;\n}());\nSelectMultipleControlValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nSelectMultipleControlValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n]; };\nSelectMultipleControlValueAccessor.propDecorators = {\n    'compareWith': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n};\n/**\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * ### Example\n *\n * ```\n * <select multiple name=\"city\" ngModel>\n *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n * </select>\n * ```\n */\nvar NgSelectMultipleOption = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    function NgSelectMultipleOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select) {\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            }\n            else {\n                this._setElementValue(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setElementValue = function (value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    };\n    /**\n     * \\@internal\n     * @param {?} selected\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setSelected = function (selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    return NgSelectMultipleOption;\n}());\nNgSelectMultipleOption.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: 'option' },] },\n];\n/**\n * @nocollapse\n */\nNgSelectMultipleOption.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    { type: SelectMultipleControlValueAccessor, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] },] },\n]; };\nNgSelectMultipleOption.propDecorators = {\n    'ngValue': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngValue',] },],\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['value',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} name\n * @param {?} parent\n * @return {?}\n */\nfunction controlPath(name, parent) {\n    return ((parent.path)).concat([name]);\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpControl(control, dir) {\n    if (!control)\n        _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor)\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = Validators.compose([/** @type {?} */ ((control.validator)), dir.validator]);\n    control.asyncValidator = Validators.composeAsync([/** @type {?} */ ((control.asyncValidator)), dir.asyncValidator]); /** @type {?} */\n    ((dir.valueAccessor)).writeValue(control.value); /** @type {?} */\n    ((\n    // view -> model\n    dir.valueAccessor)).registerOnChange(function (newValue) {\n        dir.viewToModelUpdate(newValue);\n        control.markAsDirty();\n        control.setValue(newValue, { emitModelToViewChange: false });\n    }); /** @type {?} */\n    ((\n    // touched\n    dir.valueAccessor)).registerOnTouched(function () { return control.markAsTouched(); });\n    control.registerOnChange(function (newValue, emitModelEvent) {\n        ((\n        // control -> view\n        dir.valueAccessor)).writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n    if (((dir.valueAccessor)).setDisabledState) {\n        control.registerOnDisabledChange(function (isDisabled) { /** @type {?} */ ((((dir.valueAccessor)).setDisabledState))(isDisabled); });\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach(function (validator) {\n        if (((validator)).registerOnValidatorChange)\n            ((((validator)).registerOnValidatorChange))(function () { return control.updateValueAndValidity(); });\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (((validator)).registerOnValidatorChange)\n            ((((validator)).registerOnValidatorChange))(function () { return control.updateValueAndValidity(); });\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction cleanUpControl(control, dir) {\n    ((dir.valueAccessor)).registerOnChange(function () { return _noControlError(dir); }); /** @type {?} */\n    ((dir.valueAccessor)).registerOnTouched(function () { return _noControlError(dir); });\n    dir._rawValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    if (control)\n        control._clearChangeFns();\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null)\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n/**\n * @param {?} dir\n * @return {?}\n */\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n/**\n * @param {?} dir\n * @param {?} message\n * @return {?}\n */\nfunction _throwError(dir, message) {\n    var /** @type {?} */ messageEnd;\n    if (((dir.path)).length > 1) {\n        messageEnd = \"path: '\" + ((dir.path)).join(' -> ') + \"'\";\n    }\n    else if (((dir.path))[0]) {\n        messageEnd = \"name: '\" + dir.path + \"'\";\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(message + \" \" + messageEnd);\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n        null;\n}\n/**\n * @param {?} changes\n * @param {?} viewModel\n * @return {?}\n */\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    var /** @type {?} */ change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ɵlooseIdentical\"])(viewModel, change.currentValue);\n}\nvar BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\n/**\n * @param {?} valueAccessor\n * @return {?}\n */\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n}\n/**\n * @param {?} dir\n * @param {?} valueAccessors\n * @return {?}\n */\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    var /** @type {?} */ defaultAccessor = undefined;\n    var /** @type {?} */ builtinAccessor = undefined;\n    var /** @type {?} */ customAccessor = undefined;\n    valueAccessors.forEach(function (v) {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor)\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor)\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This is a base class for code shared between {\\@link NgModelGroup} and {\\@link FormGroupName}.\n *\n * \\@stable\n */\nvar AbstractFormGroupDirective = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](AbstractFormGroupDirective, _super);\n    function AbstractFormGroupDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnInit = function () {\n        this._checkParentType(); /** @type {?} */\n        ((this.formDirective)).addFormGroup(this);\n    };\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormGroup(this);\n        }\n    };\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n        /**\n         * Get the {\\@link FormGroup} backing this binding.\n         * @return {?}\n         */\n        get: function () { return ((this.formDirective)).getFormGroup(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n        /**\n         * Get the path to this control group.\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * Get the {\\@link Form} to which this group belongs.\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype._checkParentType = function () { };\n    return AbstractFormGroupDirective;\n}(ControlContainer));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AbstractControlStatus = (function () {\n    /**\n     * @param {?} cd\n     */\n    function AbstractControlStatus(cd) {\n        this._cd = cd;\n    }\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.touched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.valid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.pending : false; },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractControlStatus;\n}());\nvar ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status. The following classes are applied as the properties\n * become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * \\@stable\n */\nvar NgControlStatus = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](NgControlStatus, _super);\n    /**\n     * @param {?} cd\n     */\n    function NgControlStatus(cd) {\n        return _super.call(this, cd) || this;\n    }\n    return NgControlStatus;\n}(AbstractControlStatus));\nNgControlStatus.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n];\n/**\n * @nocollapse\n */\nNgControlStatus.ctorParameters = function () { return [\n    { type: NgControl, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] },] },\n]; };\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * \\@stable\n */\nvar NgControlStatusGroup = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](NgControlStatusGroup, _super);\n    /**\n     * @param {?} cd\n     */\n    function NgControlStatusGroup(cd) {\n        return _super.call(this, cd) || this;\n    }\n    return NgControlStatusGroup;\n}(AbstractControlStatus));\nNgControlStatusGroup.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                host: ngControlStatusHost\n            },] },\n];\n/**\n * @nocollapse\n */\nNgControlStatusGroup.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n */\nvar VALID = 'VALID';\n/**\n * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n */\nvar INVALID = 'INVALID';\n/**\n * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n * errors are not yet available for the input value.\n */\nvar PENDING = 'PENDING';\n/**\n * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n * calculations of validity or value.\n */\nvar DISABLED = 'DISABLED';\n/**\n * @param {?} control\n * @param {?} path\n * @param {?} delimiter\n * @return {?}\n */\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!(path instanceof Array)) {\n        path = ((path)).split(delimiter);\n    }\n    if (path instanceof Array && (path.length === 0))\n        return null;\n    return ((path)).reduce(function (v, name) {\n        if (v instanceof FormGroup) {\n            return v.controls[name] || null;\n        }\n        if (v instanceof FormArray) {\n            return v.at(/** @type {?} */ (name)) || null;\n        }\n        return null;\n    }, control);\n}\n/**\n * @param {?=} validator\n * @return {?}\n */\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * @param {?=} asyncValidator\n * @return {?}\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) :\n        asyncValidator || null;\n}\n/**\n * \\@whatItDoes This is the base class for {\\@link FormControl}, {\\@link FormGroup}, and\n * {\\@link FormArray}.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControl = (function () {\n    /**\n     * @param {?} validator\n     * @param {?} asyncValidator\n     */\n    function AbstractControl(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        /**\n         * \\@internal\n         */\n        this._onCollectionChange = function () { };\n        this._pristine = true;\n        this._touched = false;\n        /**\n         * \\@internal\n         */\n        this._onDisabledChange = [];\n    }\n    Object.defineProperty(AbstractControl.prototype, \"value\", {\n        /**\n         * The value of the control.\n         * @return {?}\n         */\n        get: function () { return this._value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"parent\", {\n        /**\n         * The parent control.\n         * @return {?}\n         */\n        get: function () { return this._parent; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"status\", {\n        /**\n         * The validation status of the control. There are four possible\n         * validation statuses:\n         *\n         * * **VALID**:  control has passed all validation checks\n         * * **INVALID**: control has failed at least one validation check\n         * * **PENDING**: control is in the midst of conducting a validation check\n         * * **DISABLED**: control is exempt from validation checks\n         *\n         * These statuses are mutually exclusive, so a control cannot be\n         * both valid AND invalid or invalid AND disabled.\n         * @return {?}\n         */\n        get: function () { return this._status; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valid\", {\n        /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         * @return {?}\n         */\n        get: function () { return this._status === VALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n        /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         * @return {?}\n         */\n        get: function () { return this._status === INVALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pending\", {\n        /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         * @return {?}\n         */\n        get: function () { return this._status == PENDING; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n        /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         * @return {?}\n         */\n        get: function () { return this._status === DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n        /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         * @return {?}\n         */\n        get: function () { return this._status !== DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"errors\", {\n        /**\n         * Returns any errors generated by failing validation. If there\n         * are no errors, it will return null.\n         * @return {?}\n         */\n        get: function () { return this._errors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return this._pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n        /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return !this.pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"touched\", {\n        /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n        /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return !this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n        /**\n         * Emits an event every time the value of the control changes, in\n         * the UI or programmatically.\n         * @return {?}\n         */\n        get: function () { return this._valueChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n        /**\n         * Emits an event every time the validation status of the control\n         * is re-calculated.\n         * @return {?}\n         */\n        get: function () { return this._statusChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this will overwrite any existing sync validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setValidators = function (newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    };\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * will overwrite any existing async validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    };\n    /**\n     * Empties out the sync validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n    /**\n     * Empties out the async validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n    /**\n     * Marks the control as `touched`.\n     *\n     * This will also mark all direct ancestors as `touched` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsTouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    };\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, it will also mark all children as `untouched`\n     * to maintain the model, and re-calculate the `touched` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsUntouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._touched = false;\n        this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    };\n    /**\n     * Marks the control as `dirty`.\n     *\n     * This will also mark all direct ancestors as `dirty` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsDirty = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    };\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, it will also mark all children as `pristine`\n     * to maintain the model, and re-calculate the `pristine` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPristine = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._pristine = true;\n        this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    };\n    /**\n     * Marks the control as `pending`.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPending = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._status = PENDING;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    };\n    /**\n     * Disables the control. This means the control will be exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children will be disabled to maintain the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.disable = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._status = DISABLED;\n        this._errors = null;\n        this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            this._valueChanges.emit(this._value);\n            this._statusChanges.emit(this._status);\n        }\n        this._updateAncestors(!!opts.onlySelf);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n    };\n    /**\n     * Enables the control. This means the control will be included in validation checks and\n     * the aggregate value of its parent. Its status is re-calculated based on its value and\n     * its validators.\n     *\n     * If the control has children, all children will be enabled.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.enable = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._status = VALID;\n        this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(!!opts.onlySelf);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n    };\n    /**\n     * @param {?} onlySelf\n     * @return {?}\n     */\n    AbstractControl.prototype._updateAncestors = function (onlySelf) {\n        if (this._parent && !onlySelf) {\n            this._parent.updateValueAndValidity();\n            this._parent._updatePristine();\n            this._parent._updateTouched();\n        }\n    };\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n    /**\n     * Sets the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.setValue = function (value, options) { };\n    /**\n     * Patches the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.patchValue = function (value, options) { };\n    /**\n     * Resets the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.reset = function (value, options) { };\n    /**\n     * Re-calculates the value and validation status of the control.\n     *\n     * By default, it will also update the value and validity of its ancestors.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.updateValueAndValidity = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            this._errors = this._runValidator();\n            this._status = this._calculateStatus();\n            if (this._status === VALID || this._status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            this._valueChanges.emit(this._value);\n            this._statusChanges.emit(this._status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTreeValidity = function (opts) {\n        if (opts === void 0) { opts = { emitEvent: true }; }\n        this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity(opts); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._runValidator = function () {\n        return this.validator ? this.validator(this) : null;\n    };\n    /**\n     * @param {?=} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n        var _this = this;\n        if (this.asyncValidator) {\n            this._status = PENDING;\n            var /** @type {?} */ obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription =\n                obs.subscribe(function (errors) { return _this.setErrors(errors, { emitEvent: emitEvent }); });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._cancelExistingSubscription = function () {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    };\n    /**\n     * Sets errors on a form control.\n     *\n     * This is used when validations are run manually by the user, rather than automatically.\n     *\n     * Calling `setErrors` will also update the validity of the parent control.\n     *\n     * ### Example\n     *\n     * ```\n     * const login = new FormControl(\"someLogin\");\n     * login.setErrors({\n     *   \"notUnique\": true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({\"notUnique\": true});\n     *\n     * login.setValue(\"someOtherLogin\");\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.setErrors = function (errors, opts) {\n        if (opts === void 0) { opts = {}; }\n        this._errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    };\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * Paths can be passed in as an array or a string delimited by a dot.\n     *\n     * To get a control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     * @param {?} path\n     * @return {?}\n     */\n    AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.getError = function (errorCode, path) {\n        var /** @type {?} */ control = path ? this.get(path) : this;\n        return control && control._errors ? control._errors[errorCode] : null;\n    };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.hasError = function (errorCode, path) { return !!this.getError(errorCode, path); };\n    Object.defineProperty(AbstractControl.prototype, \"root\", {\n        /**\n         * Retrieves the top-level ancestor of this control.\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ x = this;\n            while (x._parent) {\n                x = x._parent;\n            }\n            return x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n        this._status = this._calculateStatus();\n        if (emitEvent) {\n            this._statusChanges.emit(this._status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._initObservables = function () {\n        this._valueChanges = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        this._statusChanges = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._calculateStatus = function () {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this._errors)\n            return INVALID;\n        if (this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._updateValue = function () { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} cb\n     * @return {?}\n     */\n    AbstractControl.prototype._forEachChild = function (cb) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} condition\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControls = function (condition) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._allControlsDisabled = function () { };\n    /**\n     * \\@internal\n     * @param {?} status\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n        return this._anyControls(function (control) { return control.status === status; });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsDirty = function () {\n        return this._anyControls(function (control) { return control.dirty; });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsTouched = function () {\n        return this._anyControls(function (control) { return control.touched; });\n    };\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updatePristine = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} formState\n     * @return {?}\n     */\n    AbstractControl.prototype._isBoxedValue = function (formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    };\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n    return AbstractControl;\n}());\n/**\n * \\@whatItDoes Tracks the value and validation status of an individual form control.\n *\n * It is one of the three fundamental building blocks of Angular forms, along with\n * {\\@link FormGroup} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormControl}, you can pass in an initial value as the\n * first argument. Example:\n *\n * ```ts\n * const ctrl = new FormControl('some value');\n * console.log(ctrl.value);     // 'some value'\n * ```\n *\n * You can also initialize the control with a form state object on instantiation,\n * which includes both the value and whether or not the control is disabled.\n * You can't use the value key without the disabled key; both are required\n * to use this way of initialization.\n *\n * ```ts\n * const ctrl = new FormControl({value: 'n/a', disabled: true});\n * console.log(ctrl.value);     // 'n/a'\n * console.log(ctrl.status);   // 'DISABLED'\n * ```\n *\n * To include a sync validator (or an array of sync validators) with the control,\n * pass it in as the second argument. Async validators are also supported, but\n * have to be passed in separately as the third arg.\n *\n * ```ts\n * const ctrl = new FormControl('', Validators.required);\n * console.log(ctrl.value);     // ''\n * console.log(ctrl.status);   // 'INVALID'\n * ```\n *\n * See its superclass, {\\@link AbstractControl}, for more properties and methods.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormControl = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](FormControl, _super);\n    /**\n     * @param {?=} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormControl(formState, validator, asyncValidator) {\n        if (formState === void 0) { formState = null; }\n        var _this = _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator)) || this;\n        /**\n         * \\@internal\n         */\n        _this._onChange = [];\n        _this._applyFormState(formState);\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        _this._initObservables();\n        return _this;\n    }\n    /**\n     * Set the value of the form control to `value`.\n     *\n     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n     * and not its parent component. This defaults to false.\n     *\n     * If `emitEvent` is `true`, this\n     * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n     * to true (as it falls through to `updateValueAndValidity`).\n     *\n     * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n     * specified.\n     *\n     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n     * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._value = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach(function (changeFn) { return changeFn(_this._value, options.emitViewToModelChange !== false); });\n        }\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {\\@link FormControl#setValue} at this level.\n     * It exists for symmetry with {\\@link FormGroup#patchValue} on `FormGroups` and `FormArrays`,\n     * where it does behave differently.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.patchValue = function (value, options) {\n        if (options === void 0) { options = {}; }\n        this.setValue(value, options);\n    };\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * You can also reset to a specific form state by passing through a standalone\n     * value or a form state object that contains both a value and a disabled state\n     * (these are the only two properties that cannot be calculated).\n     *\n     * Ex:\n     *\n     * ```ts\n     * this.control.reset('Nancy');\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * ```\n     *\n     * OR\n     *\n     * ```\n     * this.control.reset({value: 'Nancy', disabled: true});\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * console.log(this.control.status);  // 'DISABLED'\n     * ```\n     * @param {?=} formState\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.reset = function (formState, options) {\n        if (formState === void 0) { formState = null; }\n        if (options === void 0) { options = {}; }\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this._value, options);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._updateValue = function () { };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormControl.prototype._anyControls = function (condition) { return false; };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n    /**\n     * Register a listener for change events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._clearChangeFns = function () {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = function () { };\n    };\n    /**\n     * Register a listener for disabled events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnDisabledChange = function (fn) {\n        this._onDisabledChange.push(fn);\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormControl.prototype._forEachChild = function (cb) { };\n    /**\n     * @param {?} formState\n     * @return {?}\n     */\n    FormControl.prototype._applyFormState = function (formState) {\n        if (this._isBoxedValue(formState)) {\n            this._value = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this._value = formState;\n        }\n    };\n    return FormControl;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of a group of {\\@link FormControl}\n * instances.\n *\n * A `FormGroup` aggregates the values of each child {\\@link FormControl} into one object,\n * with each control name as the key.  It calculates its status by reducing the statuses\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormGroup}, pass in a collection of child controls as the first\n * argument. The key for each child will be the name under which it is registered.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * You can also include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormGroup = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](FormGroup, _super);\n    /**\n     * @param {?} controls\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormGroup(controls, validator, asyncValidator) {\n        var _this = _super.call(this, validator || null, asyncValidator || null) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update value or validity of the control, so for\n     * most cases you'll want to use {\\@link FormGroup#addControl} instead.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.registerControl = function (name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    };\n    /**\n     * Add a control to this group.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.addControl = function (name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Remove a control from this group.\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype.removeControl = function (name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Replace an existing control.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.setControl = function (name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * It will return false for disabled controls. If you'd like to check for\n     * existence in the group only, use {\\@link AbstractControl#get} instead.\n     * @param {?} controlName\n     * @return {?}\n     */\n    FormGroup.prototype.contains = function (controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    };\n    /**\n     *  Sets the value of the {\\@link FormGroup}. It accepts an object that matches\n     *  the structure of the group, with control names as keys.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.setValue({first: 'Nancy', last: 'Drew'});\n     *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(function (name) {\n            _this._throwIfControlMissing(name);\n            _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     *  Patches the value of the {\\@link FormGroup}. It accepts an object with control\n     *  names as keys, and will do its best to match the values to the correct controls\n     *  in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.patchValue({first: 'Nancy'});\n     *  console.log(form.value);   // {first: 'Nancy', last: null}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.patchValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        Object.keys(value).forEach(function (name) {\n            if (_this.controls[name]) {\n                _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Resets the {\\@link FormGroup}. This means by default:\n     *\n     * * The group and all descendants are marked `pristine`\n     * * The group and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * can be a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.form.reset({first: 'name', last: 'last name'});\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.reset = function (value, options) {\n        if (value === void 0) { value = {}; }\n        if (options === void 0) { options = {}; }\n        this._forEachChild(function (control, name) {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n        this._updatePristine(options);\n        this._updateTouched(options);\n    };\n    /**\n     * The aggregate value of the {\\@link FormGroup}, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the group.\n     * @return {?}\n     */\n    FormGroup.prototype.getRawValue = function () {\n        return this._reduceChildren({}, function (acc, control, name) {\n            acc[name] = control instanceof FormControl ? control.value : ((control)).getRawValue();\n            return acc;\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype._throwIfControlMissing = function (name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.controls[name]) {\n            throw new Error(\"Cannot find form control with name: \" + name + \".\");\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormGroup.prototype._forEachChild = function (cb) {\n        var _this = this;\n        Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._setUpControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) {\n            control.setParent(_this);\n            control._registerOnCollectionChange(_this._onCollectionChange);\n        });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormGroup.prototype._anyControls = function (condition) {\n        var _this = this;\n        var /** @type {?} */ res = false;\n        this._forEachChild(function (control, name) {\n            res = res || (_this.contains(name) && condition(control));\n        });\n        return res;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._reduceValue = function () {\n        var _this = this;\n        return this._reduceChildren({}, function (acc, control, name) {\n            if (control.enabled || _this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} initValue\n     * @param {?} fn\n     * @return {?}\n     */\n    FormGroup.prototype._reduceChildren = function (initValue, fn) {\n        var /** @type {?} */ res = initValue;\n        this._forEachChild(function (control, name) { res = fn(res, control, name); });\n        return res;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._allControlsDisabled = function () {\n        for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n            var controlName = _a[_i];\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroup.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, name) {\n            if (value[name] === undefined) {\n                throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n            }\n        });\n    };\n    return FormGroup;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of an array of {\\@link FormControl},\n * {\\@link FormGroup} or {\\@link FormArray} instances.\n *\n * A `FormArray` aggregates the values of each child {\\@link FormControl} into an array.\n * It calculates its status by reducing the statuses of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormGroup}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormArray}, pass in an array of child controls as the first\n * argument.\n *\n * ### Example\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * You can also include array-level validators as the second arg, or array-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ### Adding or removing controls\n *\n * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that will result in strange and unexpected behavior such\n * as broken change detection.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormArray = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](FormArray, _super);\n    /**\n     * @param {?} controls\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormArray(controls, validator, asyncValidator) {\n        var _this = _super.call(this, validator || null, asyncValidator || null) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Get the {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.at = function (index) { return this.controls[index]; };\n    /**\n     * Insert a new {\\@link AbstractControl} at the end of the array.\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.push = function (control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Insert a new {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.insert = function (index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Remove the control at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.removeAt = function (index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Replace an existing control.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.setControl = function (index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    Object.defineProperty(FormArray.prototype, \"length\", {\n        /**\n         * Length of the control array.\n         * @return {?}\n         */\n        get: function () { return this.controls.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Sets the value of the {\\@link FormArray}. It accepts an array that matches\n     *  the structure of the control.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.setValue(['Nancy', 'Drew']);\n     *  console.log(arr.value);   // ['Nancy', 'Drew']\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._checkAllValuesPresent(value);\n        value.forEach(function (newValue, index) {\n            _this._throwIfControlMissing(index);\n            _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     *  Patches the value of the {\\@link FormArray}. It accepts an array that matches the\n     *  structure of the control, and will do its best to match the values to the correct\n     *  controls in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.patchValue(['Nancy']);\n     *  console.log(arr.value);   // ['Nancy', null]\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.patchValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        value.forEach(function (newValue, index) {\n            if (_this.at(index)) {\n                _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Resets the {\\@link FormArray}. This means by default:\n     *\n     * * The array and all descendants are marked `pristine`\n     * * The array and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state can be a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.reset = function (value, options) {\n        if (value === void 0) { value = []; }\n        if (options === void 0) { options = {}; }\n        this._forEachChild(function (control, index) {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n        this._updatePristine(options);\n        this._updateTouched(options);\n    };\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the array.\n     * @return {?}\n     */\n    FormArray.prototype.getRawValue = function () {\n        return this.controls.map(function (control) {\n            return control instanceof FormControl ? control.value : ((control)).getRawValue();\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype._throwIfControlMissing = function (index) {\n        if (!this.controls.length) {\n            throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.at(index)) {\n            throw new Error(\"Cannot find form control at index \" + index);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormArray.prototype._forEachChild = function (cb) {\n        this.controls.forEach(function (control, index) { cb(control, index); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._updateValue = function () {\n        var _this = this;\n        this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n            .map(function (control) { return control.value; });\n    };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormArray.prototype._anyControls = function (condition) {\n        return this.controls.some(function (control) { return control.enabled && condition(control); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._setUpControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) { return _this._registerControl(control); });\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormArray.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, i) {\n            if (value[i] === undefined) {\n                throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n            }\n        });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._allControlsDisabled = function () {\n        for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n            var control = _a[_i];\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    };\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype._registerControl = function (control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    };\n    return FormArray;\n}(AbstractControl));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return NgForm; })\n};\nvar resolvedPromise = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a top-level {\\@link FormGroup} instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * \\@howToUse\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You can export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * {\\@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n * will give you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, you'll want to use {\\@link NgModel} with a\n * `name` attribute.  You can also use {\\@link NgModelGroup} if you'd like to create\n * sub-groups within the form.\n *\n * You can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgForm = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](NgForm, _super);\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function NgForm(validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._submitted = false;\n        _this.ngSubmit = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        _this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        return _this;\n    }\n    Object.defineProperty(NgForm.prototype, \"submitted\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"controls\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form.controls; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            dir._control = (container.registerControl(dir.name, dir.control));\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            var /** @type {?} */ group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.updateModel = function (dir, value) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ ctrl = (_this.form.get(/** @type {?} */ ((dir.path))));\n            ctrl.setValue(value);\n        });\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NgForm.prototype.onSubmit = function ($event) {\n        this._submitted = true;\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    NgForm.prototype.onReset = function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    NgForm.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this._submitted = false;\n    };\n    /**\n     * \\@internal\n     * @param {?} path\n     * @return {?}\n     */\n    NgForm.prototype._findContainer = function (path) {\n        path.pop();\n        return path.length ? (this.form.get(path)) : this.form;\n    };\n    return NgForm;\n}(ControlContainer));\nNgForm.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                providers: [formDirectiveProvider],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                outputs: ['ngSubmit'],\n                exportAs: 'ngForm'\n            },] },\n];\n/**\n * @nocollapse\n */\nNgForm.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar FormErrorExamples = {\n    formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n    formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n    formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; index as i\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n    ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n    ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TemplateDrivenErrors = (function () {\n    function TemplateDrivenErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelParentException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + FormErrorExamples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + FormErrorExamples.ngModelWithFormGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.formGroupNameException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.missingNameException = function () {\n        throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelGroupParentException = function () {\n        throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    return TemplateDrivenErrors;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return NgModelGroup; })\n};\n/**\n * \\@whatItDoes Creates and binds a {\\@link FormGroup} instance to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used as a child of {\\@link NgForm} (or in other words,\n * within `<form>` tags).\n *\n * Use this directive if you'd like to create a sub-group within a form. This can\n * come in handy if you want to validate a sub-group of your form separately from\n * the rest of your form, or if some values in your domain model make more sense to\n * consume together in a nested object.\n *\n * Pass in the name you'd like this sub-group to have and it will become the key\n * for the sub-group in the form's full value. You can also export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * {\\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n * \\@stable\n */\nvar NgModelGroup = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](NgModelGroup, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function NgModelGroup(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    NgModelGroup.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    };\n    return NgModelGroup;\n}(AbstractFormGroupDirective));\nNgModelGroup.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n];\n/**\n * @nocollapse\n */\nNgModelGroup.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"SkipSelf\"] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nNgModelGroup.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngModelGroup',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding = {\n    provide: NgControl,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return NgModel; })\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nvar resolvedPromise$1 = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a {\\@link FormControl} instance from a domain model and binds it\n * to a form control element.\n *\n * The {\\@link FormControl} instance will track the value, user interaction, and\n * validation status of the control and keep the view synced with the model. If used\n * within a parent form, the directive will also register itself with the form as a child\n * control.\n *\n * \\@howToUse\n *\n * This directive can be used by itself or as part of a larger form. All you need is the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional {\\@link Input}. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n * the domain model in your class as well.\n *\n * If you wish to inspect the properties of the associated {\\@link FormControl} (like\n * validity state), you can also export the directive into a local template variable using\n * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n * will fall through to the control anyway, so you can access them directly. You can see a\n * full list of properties directly available in {\\@link AbstractControlDirective}.\n *\n * The following is an example of a simple standalone control using `ngModel`:\n *\n * {\\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * It's worth noting that in the context of a parent form, you often can skip one-way or\n * two-way binding because the parent form will sync the value for you. You can access\n * its properties by exporting it into a local template variable using `ngForm` (ex:\n * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * Take a look at an example of using `ngModel` within a form:\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * To see `ngModel` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgModel = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](NgModel, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function NgModel(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        /**\n         * \\@internal\n         */\n        _this._control = new FormControl();\n        /**\n         * \\@internal\n         */\n        _this._registered = false;\n        _this.update = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype.ngOnChanges = function (changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n    Object.defineProperty(NgModel.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._control; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._parent ? controlPath(this.name, this._parent) : [this.name];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    NgModel.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpControl = function () {\n        this._isStandalone() ? this._setUpStandalone() :\n            this.formDirective.addControl(this);\n        this._registered = true;\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._isStandalone = function () {\n        return !this._parent || !!(this.options && this.options.standalone);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpStandalone = function () {\n        setUpControl(this._control, this);\n        this._control.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkForErrors = function () {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            TemplateDrivenErrors.formGroupNameException();\n        }\n        else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkName = function () {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgModel.prototype._updateValue = function (value) {\n        var _this = this;\n        resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype._updateDisabled = function (changes) {\n        var _this = this;\n        var /** @type {?} */ disabledValue = changes['isDisabled'].currentValue;\n        var /** @type {?} */ isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise$1.then(function () {\n            if (isDisabled && !_this.control.disabled) {\n                _this.control.disable();\n            }\n            else if (!isDisabled && _this.control.disabled) {\n                _this.control.enable();\n            }\n        });\n    };\n    return NgModel;\n}(NgControl));\nNgModel.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: '[ngModel]:not([formControlName]):not([formControl])',\n                providers: [formControlBinding],\n                exportAs: 'ngModel'\n            },] },\n];\n/**\n * @nocollapse\n */\nNgModel.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nNgModel.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n    'isDisabled': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['disabled',] },],\n    'model': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngModel',] },],\n    'options': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngModelOptions',] },],\n    'update': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Output\"], args: ['ngModelChange',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ReactiveErrors = (function () {\n    function ReactiveErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.controlParentException = function () {\n        throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.ngModelGroupException = function () {\n        throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + FormErrorExamples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.missingFormException = function () {\n        throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.groupParentException = function () {\n        throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formGroupName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.arrayParentException = function () {\n        throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + FormErrorExamples.formArrayName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.disabledAttrWarning = function () {\n        console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n    };\n    return ReactiveErrors;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return FormControlDirective; })\n};\n/**\n * \\@whatItDoes Syncs a standalone {\\@link FormControl} instance to a form control element.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * Use this directive if you'd like to create and manage a {\\@link FormControl} instance directly.\n * Simply create a {\\@link FormControl}, save it to your component class, and pass it into the\n * {\\@link FormControlDirective}.\n *\n * This directive is designed to be used as a standalone control.  Unlike {\\@link FormControlName},\n * it does not require that your {\\@link FormControl} instance be part of any parent\n * {\\@link FormGroup}, and it won't be registered to any {\\@link FormGroupDirective} that\n * exists above it.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormControl} instance. See a full list of available properties in\n * {\\@link AbstractControl}.\n *\n * **Set the value**: You can pass in an initial value when instantiating the {\\@link FormControl},\n * or you can set it programmatically later using {\\@link AbstractControl#setValue} or\n * {\\@link AbstractControl#patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n *  \\@stable\n */\nvar FormControlDirective = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](FormControlDirective, _super);\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function FormControlDirective(validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this.update = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype.ngOnChanges = function (changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled && ((this.valueAccessor)).setDisabledState) {\n                ((((this.valueAccessor)).setDisabledState))(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    Object.defineProperty(FormControlDirective.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype._isControlChanged = function (changes) {\n        return changes.hasOwnProperty('form');\n    };\n    return FormControlDirective;\n}(NgControl));\nFormControlDirective.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n];\n/**\n * @nocollapse\n */\nFormControlDirective.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nFormControlDirective.propDecorators = {\n    'form': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['formControl',] },],\n    'model': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngModel',] },],\n    'update': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Output\"], args: ['ngModelChange',] },],\n    'isDisabled': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['disabled',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return FormGroupDirective; })\n};\n/**\n * \\@whatItDoes Binds an existing {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive accepts an existing {\\@link FormGroup} instance. It will then use this\n * {\\@link FormGroup} instance to match any child {\\@link FormControl}, {\\@link FormGroup},\n * and {\\@link FormArray} instances to child {\\@link FormControlName}, {\\@link FormGroupName},\n * and {\\@link FormArrayName} directives.\n *\n * **Set value**: You can set the form's initial value when instantiating the\n * {\\@link FormGroup}, or you can set it programmatically later using the {\\@link FormGroup}'s\n * {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue} methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n * to the {\\@link FormGroup}'s {\\@link AbstractControl#valueChanges} event.  You can also listen to\n * its {\\@link AbstractControl#statusChanges} event to be notified when the validation status is\n * re-calculated.\n *\n * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormGroupDirective = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](FormGroupDirective, _super);\n    /**\n     * @param {?} _validators\n     * @param {?} _asyncValidators\n     */\n    function FormGroupDirective(_validators, _asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._validators = _validators;\n        _this._asyncValidators = _asyncValidators;\n        _this._submitted = false;\n        _this.directives = [];\n        _this.form = ((null));\n        _this.ngSubmit = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormGroupDirective.prototype.ngOnChanges = function (changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n        }\n    };\n    Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addControl = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeControl = function (dir) { remove(this.directives, dir); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormGroup = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormArray = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormArray = function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormArray = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.updateModel = function (dir, value) {\n        var /** @type {?} */ ctrl = (this.form.get(dir.path));\n        ctrl.setValue(value);\n    };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onSubmit = function ($event) {\n        this._submitted = true;\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this._submitted = false;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateDomValue = function () {\n        var _this = this;\n        this.directives.forEach(function (dir) {\n            var /** @type {?} */ newCtrl = _this.form.get(dir.path);\n            if (dir._control !== newCtrl) {\n                cleanUpControl(dir._control, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n                dir._control = newCtrl;\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateRegistrations = function () {\n        var _this = this;\n        this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n        if (this._oldForm)\n            this._oldForm._registerOnCollectionChange(function () { });\n        this._oldForm = this.form;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateValidators = function () {\n        var /** @type {?} */ sync = composeValidators(this._validators);\n        this.form.validator = Validators.compose([/** @type {?} */ ((this.form.validator)), /** @type {?} */ ((sync))]);\n        var /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n        this.form.asyncValidator = Validators.composeAsync([/** @type {?} */ ((this.form.asyncValidator)), /** @type {?} */ ((async))]);\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._checkFormPresent = function () {\n        if (!this.form) {\n            ReactiveErrors.missingFormException();\n        }\n    };\n    return FormGroupDirective;\n}(ControlContainer));\nFormGroupDirective.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: '[formGroup]',\n                providers: [formDirectiveProvider$1],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                exportAs: 'ngForm'\n            },] },\n];\n/**\n * @nocollapse\n */\nFormGroupDirective.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormGroupDirective.propDecorators = {\n    'form': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['formGroup',] },],\n    'ngSubmit': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Output\"] },],\n};\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return FormGroupName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormGroup} you want to link, and\n * will look for a {\\@link FormGroup} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form groups can come in handy when you want to validate a sub-group of a\n * form separately from the rest or when you'd like to group the values of certain\n * controls into their own nested object.\n *\n * **Access the group**: You can access the associated {\\@link FormGroup} using the\n * {\\@link AbstractControl#get} method. Ex: `this.form.get('name')`.\n *\n * You can also access individual controls within the group using dot syntax.\n * Ex: `this.form.get('name.first')`\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormGroup}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormGroup}, or you can set it programmatically later using\n * {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the group, you can\n * subscribe to the {\\@link AbstractControl#valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormGroupName = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](FormGroupName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function FormGroupName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.groupParentException();\n        }\n    };\n    return FormGroupName;\n}(AbstractFormGroupDirective));\nFormGroupName.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n];\n/**\n * @nocollapse\n */\nFormGroupName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"SkipSelf\"] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormGroupName.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['formGroupName',] },],\n};\nvar formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return FormArrayName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormArray} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormArray} you want to link, and\n * will look for a {\\@link FormArray} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form arrays can come in handy when you have a group of form controls but\n * you're not sure how many there will be. Form arrays allow you to create new\n * form controls dynamically.\n *\n * **Access the array**: You can access the associated {\\@link FormArray} using the\n * {\\@link AbstractControl#get} method on the parent {\\@link FormGroup}.\n * Ex: `this.form.get('cities')`.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormArray}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormArray}, or you can set the value programmatically later using the\n * {\\@link FormArray}'s {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue}\n * methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the array, you can\n * subscribe to the {\\@link FormArray}'s {\\@link AbstractControl#valueChanges} event.  You can also\n * listen to its {\\@link AbstractControl#statusChanges} event to be notified when the validation\n * status is re-calculated.\n *\n * **Add new controls**: You can add new controls to the {\\@link FormArray} dynamically by\n * calling its {\\@link FormArray#push} method.\n *  Ex: `this.form.get('cities').push(new FormControl());`\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormArrayName = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](FormArrayName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function FormArrayName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnInit = function () {\n        this._checkParentType(); /** @type {?} */\n        ((this.formDirective)).addFormArray(this);\n    };\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    };\n    Object.defineProperty(FormArrayName.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return ((this.formDirective)).getFormArray(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._parent ? (this._parent.formDirective) : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.arrayParentException();\n        }\n    };\n    return FormArrayName;\n}(ControlContainer));\nFormArrayName.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n];\n/**\n * @nocollapse\n */\nFormArrayName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"SkipSelf\"] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormArrayName.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['formArrayName',] },],\n};\n/**\n * @param {?} parent\n * @return {?}\n */\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar controlNameBinding = {\n    provide: NgControl,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return FormControlName; })\n};\n/**\n * \\@whatItDoes Syncs a {\\@link FormControl} in an existing {\\@link FormGroup} to a form control\n * element by name.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the {\\@link FormControl} instance you want to\n * link, and will look for a {\\@link FormControl} registered with that name in the\n * closest {\\@link FormGroup} or {\\@link FormArray} above it.\n *\n * **Access the control**: You can access the {\\@link FormControl} associated with\n * this directive by using the {\\@link AbstractControl#get} method.\n * Ex: `this.form.get('first');`\n *\n * **Get value**: the `value` property is always synced and available on the {\\@link FormControl}.\n * See a full list of available properties in {\\@link AbstractControl}.\n *\n *  **Set value**: You can set an initial value for the control when instantiating the\n *  {\\@link FormControl}, or you can set it programmatically later using\n *  {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormControlName = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](FormControlName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this._added = false;\n        _this.update = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnChanges = function (changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    };\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlName.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    Object.defineProperty(FormControlName.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, /** @type {?} */ ((this._parent))); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return ((composeAsyncValidators(this._rawAsyncValidators)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._control; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._checkParentType = function () {\n        if (!(this._parent instanceof FormGroupName) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            ReactiveErrors.ngModelGroupException();\n        }\n        else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n            !(this._parent instanceof FormArrayName)) {\n            ReactiveErrors.controlParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._setUpControl = function () {\n        this._checkParentType();\n        this._control = this.formDirective.addControl(this);\n        if (this.control.disabled && ((this.valueAccessor)).setDisabledState) {\n            ((((this.valueAccessor)).setDisabledState))(true);\n        }\n        this._added = true;\n    };\n    return FormControlName;\n}(NgControl));\nFormControlName.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n];\n/**\n * @nocollapse\n */\nFormControlName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"SkipSelf\"] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nFormControlName.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['formControlName',] },],\n    'model': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngModel',] },],\n    'update': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Output\"], args: ['ngModelChange',] },],\n    'isDisabled': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['disabled',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return RequiredValidator; }),\n    multi: true\n};\nvar CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return CheckboxRequiredValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `required` validator to any controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * \\@stable\n */\nvar RequiredValidator = (function () {\n    function RequiredValidator() {\n    }\n    Object.defineProperty(RequiredValidator.prototype, \"required\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._required; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._required = value != null && value !== false && \"\" + value !== 'false';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    RequiredValidator.prototype.validate = function (c) {\n        return this.required ? Validators.required(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    return RequiredValidator;\n}());\nRequiredValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                providers: [REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nRequiredValidator.ctorParameters = function () { return []; };\nRequiredValidator.propDecorators = {\n    'required': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n};\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * \\@experimental\n */\nvar CheckboxRequiredValidator = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](CheckboxRequiredValidator, _super);\n    function CheckboxRequiredValidator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    CheckboxRequiredValidator.prototype.validate = function (c) {\n        return this.required ? Validators.requiredTrue(c) : null;\n    };\n    return CheckboxRequiredValidator;\n}(RequiredValidator));\nCheckboxRequiredValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nCheckboxRequiredValidator.ctorParameters = function () { return []; };\n/**\n * Provider which adds {\\@link EmailValidator} to {\\@link NG_VALIDATORS}.\n */\nvar EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return EmailValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `email` validator to controls marked with the\n * `email` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * \\@experimental\n */\nvar EmailValidator = (function () {\n    function EmailValidator() {\n    }\n    Object.defineProperty(EmailValidator.prototype, \"email\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._enabled = value === '' || value === true || value === 'true';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    EmailValidator.prototype.validate = function (c) {\n        return this._enabled ? Validators.email(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    EmailValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    return EmailValidator;\n}());\nEmailValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                providers: [EMAIL_VALIDATOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nEmailValidator.ctorParameters = function () { return []; };\nEmailValidator.propDecorators = {\n    'email': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n};\n/**\n * Provider which adds {\\@link MinLengthValidator} to {\\@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {\\@example common/forms/ts/validators/validators.ts region='min'}\n */\nvar MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return MinLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MinLengthValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n *\n * \\@stable\n */\nvar MinLengthValidator = (function () {\n    function MinLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MinLengthValidator.prototype.ngOnChanges = function (changes) {\n        if ('minlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MinLengthValidator.prototype.validate = function (c) {\n        return this.minlength == null ? null : this._validator(c);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MinLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.minLength(parseInt(this.minlength, 10));\n    };\n    return MinLengthValidator;\n}());\nMinLengthValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                providers: [MIN_LENGTH_VALIDATOR],\n                host: { '[attr.minlength]': 'minlength ? minlength : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMinLengthValidator.ctorParameters = function () { return []; };\nMinLengthValidator.propDecorators = {\n    'minlength': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n};\n/**\n * Provider which adds {\\@link MaxLengthValidator} to {\\@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {\\@example common/forms/ts/validators/validators.ts region='max'}\n */\nvar MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return MaxLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MaxLengthValidator} for any `formControlName,\n * `formControl`,\n * or control with `ngModel` that also has a `maxlength` attribute.\n *\n * \\@stable\n */\nvar MaxLengthValidator = (function () {\n    function MaxLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n        if ('maxlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.validate = function (c) {\n        return this.maxlength != null ? this._validator(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MaxLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n    };\n    return MaxLengthValidator;\n}());\nMaxLengthValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                providers: [MAX_LENGTH_VALIDATOR],\n                host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMaxLengthValidator.ctorParameters = function () { return []; };\nMaxLengthValidator.propDecorators = {\n    'maxlength': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n};\nvar PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return PatternValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `pattern` validator to any controls marked with the\n * `pattern` attribute, via the {\\@link NG_VALIDATORS} binding. Uses attribute value\n * as the regex to validate Control value against.  Follows pattern attribute\n * semantics; i.e. regex must match entire Control value.\n *\n * ### Example\n *\n * ```\n * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n * ```\n * \\@stable\n */\nvar PatternValidator = (function () {\n    function PatternValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    PatternValidator.prototype.ngOnChanges = function (changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n    return PatternValidator;\n}());\nPatternValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                providers: [PATTERN_VALIDATOR],\n                host: { '[attr.pattern]': 'pattern ? pattern : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nPatternValidator.ctorParameters = function () { return []; };\nPatternValidator.propDecorators = {\n    'pattern': [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Creates an {\\@link AbstractControl} from a user-specified configuration.\n *\n * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n * forms.\n *\n * \\@howToUse\n *\n * To use, inject `FormBuilder` into your component class. You can then call its methods\n * directly.\n *\n * {\\@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  * **NgModule**: {\\@link ReactiveFormsModule}\n *\n * \\@stable\n */\nvar FormBuilder = (function () {\n    function FormBuilder() {\n    }\n    /**\n     * Construct a new {\\@link FormGroup} with the given map of configuration.\n     * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n     *\n     * See the {\\@link FormGroup} constructor for more details.\n     * @param {?} controlsConfig\n     * @param {?=} extra\n     * @return {?}\n     */\n    FormBuilder.prototype.group = function (controlsConfig, extra) {\n        if (extra === void 0) { extra = null; }\n        var /** @type {?} */ controls = this._reduceControls(controlsConfig);\n        var /** @type {?} */ validator = extra != null ? extra['validator'] : null;\n        var /** @type {?} */ asyncValidator = extra != null ? extra['asyncValidator'] : null;\n        return new FormGroup(controls, validator, asyncValidator);\n    };\n    /**\n     * Construct a new {\\@link FormControl} with the given `formState`,`validator`, and\n     * `asyncValidator`.\n     *\n     * `formState` can either be a standalone value for the form control or an object\n     * that contains both a value and a disabled status.\n     *\n     * @param {?} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n        return new FormControl(formState, validator, asyncValidator);\n    };\n    /**\n     * Construct a {\\@link FormArray} from the given `controlsConfig` array of\n     * configuration, with the given optional `validator` and `asyncValidator`.\n     * @param {?} controlsConfig\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n        var _this = this;\n        var /** @type {?} */ controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n        return new FormArray(controls, validator, asyncValidator);\n    };\n    /**\n     * \\@internal\n     * @param {?} controlsConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._reduceControls = function (controlsConfig) {\n        var _this = this;\n        var /** @type {?} */ controls = {};\n        Object.keys(controlsConfig).forEach(function (controlName) {\n            controls[controlName] = _this._createControl(controlsConfig[controlName]);\n        });\n        return controls;\n    };\n    /**\n     * \\@internal\n     * @param {?} controlConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._createControl = function (controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            var /** @type {?} */ value = controlConfig[0];\n            var /** @type {?} */ validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            var /** @type {?} */ asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    };\n    return FormBuilder;\n}());\nFormBuilder.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nFormBuilder.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Version\"]('4.3.5');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * \\@experimental\n */\nvar NgNoValidate = (function () {\n    function NgNoValidate() {\n    }\n    return NgNoValidate;\n}());\nNgNoValidate.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                host: { 'novalidate': '' },\n            },] },\n];\n/**\n * @nocollapse\n */\nNgNoValidate.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SHARED_FORM_DIRECTIVES = [\n    NgNoValidate,\n    NgSelectOption,\n    NgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\nvar TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nvar REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nvar InternalFormsSharedModule = (function () {\n    function InternalFormsSharedModule() {\n    }\n    return InternalFormsSharedModule;\n}());\nInternalFormsSharedModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                declarations: SHARED_FORM_DIRECTIVES,\n                exports: SHARED_FORM_DIRECTIVES,\n            },] },\n];\n/**\n * @nocollapse\n */\nInternalFormsSharedModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The ng module for forms.\n * \\@stable\n */\nvar FormsModule = (function () {\n    function FormsModule() {\n    }\n    return FormsModule;\n}());\nFormsModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                providers: [RadioControlRegistry],\n                exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n            },] },\n];\n/**\n * @nocollapse\n */\nFormsModule.ctorParameters = function () { return []; };\n/**\n * The ng module for reactive forms.\n * \\@stable\n */\nvar ReactiveFormsModule = (function () {\n    function ReactiveFormsModule() {\n    }\n    return ReactiveFormsModule;\n}());\nReactiveFormsModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                providers: [FormBuilder, RadioControlRegistry],\n                exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n            },] },\n];\n/**\n * @nocollapse\n */\nReactiveFormsModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a {@link FormGroup} that\n * consists of {@link FormControl} objects, and mapping them onto the DOM. {@link FormControl}\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=forms.es5.js.map\n\n\n/***/ }),\n\n/***/ 390:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_dynamic_1 = __webpack_require__(39);\r\nvar app_module_1 = __webpack_require__(95);\r\nplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule).then(function (MODULE_REF) { if (false) {\r\n    module[\"hot\"][\"accept\"]();\r\n    if (MODULE_REF.instance[\"hmrOnInit\"]) {\r\n        module[\"hot\"][\"data\"] && MODULE_REF.instance[\"hmrOnInit\"](module[\"hot\"][\"data\"]);\r\n    }\r\n    if (MODULE_REF.instance[\"hmrOnStatus\"]) {\r\n        module[\"hot\"][\"apply\"](function (status) { MODULE_REF.instance[\"hmrOnStatus\"](status); });\r\n    }\r\n    if (MODULE_REF.instance[\"hmrOnCheck\"]) {\r\n        module[\"hot\"][\"check\"](function (err, outdatedModules) { MODULE_REF.instance[\"hmrOnCheck\"](err, outdatedModules); });\r\n    }\r\n    if (MODULE_REF.instance[\"hmrOnDecline\"]) {\r\n        module[\"hot\"][\"decline\"](function (dependencies) { MODULE_REF.instance[\"hmrOnDecline\"](dependencies); });\r\n    }\r\n    module[\"hot\"][\"dispose\"](function (store) { MODULE_REF.instance[\"hmrOnDestroy\"] && MODULE_REF.instance[\"hmrOnDestroy\"](store); MODULE_REF.destroy(); MODULE_REF.instance[\"hmrAfterDestroy\"] && MODULE_REF.instance[\"hmrAfterDestroy\"](store); });\r\n} return MODULE_REF; });\r\n\n\n/***/ }),\n\n/***/ 40:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_observable_of__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_concatMap__ = __webpack_require__(48);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_concatMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_operator_concatMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_filter__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_filter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_operator_filter__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_common__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpBackend\", function() { return HttpBackend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpHandler\", function() { return HttpHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpClient\", function() { return HttpClient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpHeaders\", function() { return HttpHeaders; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HTTP_INTERCEPTORS\", function() { return HTTP_INTERCEPTORS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JsonpClientBackend\", function() { return JsonpClientBackend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JsonpInterceptor\", function() { return JsonpInterceptor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpClientJsonpModule\", function() { return HttpClientJsonpModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpClientModule\", function() { return HttpClientModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpClientXsrfModule\", function() { return HttpClientXsrfModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵinterceptingHandler\", function() { return interceptingHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpParams\", function() { return HttpParams; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpUrlEncodingCodec\", function() { return HttpUrlEncodingCodec; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpRequest\", function() { return HttpRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpErrorResponse\", function() { return HttpErrorResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpEventType\", function() { return HttpEventType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpHeaderResponse\", function() { return HttpHeaderResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpResponse\", function() { return HttpResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpResponseBase\", function() { return HttpResponseBase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpXhrBackend\", function() { return HttpXhrBackend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XhrFactory\", function() { return XhrFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpXsrfTokenExtractor\", function() { return HttpXsrfTokenExtractor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵa\", function() { return NoopInterceptor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵb\", function() { return JsonpCallbackContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵc\", function() { return jsonpCallbackContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵd\", function() { return BrowserXhr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵg\", function() { return HttpXsrfCookieExtractor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵh\", function() { return HttpXsrfInterceptor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵe\", function() { return XSRF_COOKIE_NAME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵf\", function() { return XSRF_HEADER_NAME; });\n\n/**\n * @license Angular v4.3.5\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpHandler = (function () {\n    function HttpHandler() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpHandler.prototype.handle = function (req) { };\n    return HttpHandler;\n}());\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpBackend = (function () {\n    function HttpBackend() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpBackend.prototype.handle = function (req) { };\n    return HttpBackend;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\n * serialize and parse URL parameter keys and values.\n *\n * \\@experimental\n */\nvar HttpUrlEncodingCodec = (function () {\n    function HttpUrlEncodingCodec() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeKey = function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeValue = function (v) { return standardEncoding(v); };\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeKey = function (k) { return decodeURIComponent(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeValue = function (v) { return decodeURIComponent(v); };\n    return HttpUrlEncodingCodec;\n}());\n/**\n * @param {?} rawParams\n * @param {?} codec\n * @return {?}\n */\nfunction paramParser(rawParams, codec) {\n    var /** @type {?} */ map$$1 = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map$$1.get(key) || [];\n            list.push(val);\n            map$$1.set(key, list);\n        });\n    }\n    return map$$1;\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immuatable - all mutation operations return a new instance.\n *\n * \\@experimental\n */\nvar HttpParams = (function () {\n    /**\n     * @param {?=} options\n     */\n    function HttpParams(options) {\n        if (options === void 0) { options = {}; }\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        this.map = !!options.fromString ? paramParser(options.fromString, this.encoder) : null;\n    }\n    /**\n     * Check whether the body has one or more values for the given parameter name.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.has = function (param) {\n        this.init();\n        return ((this.map)).has(param);\n    };\n    /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.get = function (param) {\n        this.init();\n        var /** @type {?} */ res = ((this.map)).get(param);\n        return !!res ? res[0] : null;\n    };\n    /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.getAll = function (param) {\n        this.init();\n        return ((this.map)).get(param) || null;\n    };\n    /**\n     * Get all the parameter names for this body.\n     * @return {?}\n     */\n    HttpParams.prototype.keys = function () {\n        this.init();\n        return Array.from(/** @type {?} */ ((this.map)).keys());\n    };\n    /**\n     * Construct a new body with an appended value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.append = function (param, value) { return this.clone({ param: param, value: value, op: 'a' }); };\n    /**\n     * Construct a new body with a new value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.set = function (param, value) { return this.clone({ param: param, value: value, op: 's' }); };\n    /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     * @param {?} param\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpParams.prototype.delete = function (param, value) { return this.clone({ param: param, value: value, op: 'd' }); };\n    /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    HttpParams.prototype.toString = function () {\n        var _this = this;\n        this.init();\n        return this.keys()\n            .map(function (key) {\n            var /** @type {?} */ eKey = _this.encoder.encodeKey(key);\n            return ((((_this.map)).get(key))).map(function (value) { return eKey + '=' + _this.encoder.encodeValue(value); })\n                .join('&');\n        })\n            .join('&');\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpParams.prototype.clone = function (update) {\n        var /** @type {?} */ clone = new HttpParams({ encoder: this.encoder });\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @return {?}\n     */\n    HttpParams.prototype.init = function () {\n        var _this = this;\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(function (key) { return ((_this.map)).set(key, /** @type {?} */ ((((((_this.cloneFrom)).map)).get(key)))); }); /** @type {?} */\n            ((this.updates)).forEach(function (update) {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        var /** @type {?} */ base = (update.op === 'a' ? ((_this.map)).get(update.param) : undefined) || [];\n                        base.push(/** @type {?} */ ((update.value))); /** @type {?} */\n                        ((_this.map)).set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            var /** @type {?} */ base_1 = ((_this.map)).get(update.param) || [];\n                            var /** @type {?} */ idx = base_1.indexOf(update.value);\n                            if (idx !== -1) {\n                                base_1.splice(idx, 1);\n                            }\n                            if (base_1.length > 0) {\n                                ((_this.map)).set(update.param, base_1);\n                            }\n                            else {\n                                ((_this.map)).delete(update.param);\n                            }\n                        }\n                        else {\n                            ((_this.map)).delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = null;\n        }\n    };\n    return HttpParams;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Immutable set of Http headers, with lazy parsing.\n * \\@experimental\n */\nvar HttpHeaders = (function () {\n    /**\n     * @param {?=} headers\n     */\n    function HttpHeaders(headers) {\n        var _this = this;\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                headers.split('\\n').forEach(function (line) {\n                    var index = line.indexOf(':');\n                    if (index > 0) {\n                        var name = line.slice(0, index);\n                        var key = name.toLowerCase();\n                        var value = line.slice(index + 1).trim();\n                        _this.maybeSetNormalizedName(name, key);\n                        if (_this.headers.has(key)) {\n                            _this.headers.get(key).push(value);\n                        }\n                        else {\n                            _this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                Object.keys(headers).forEach(function (name) {\n                    var values = headers[name];\n                    var key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        _this.headers.set(key, values);\n                        _this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.has = function (name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    };\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.get = function (name) {\n        this.init();\n        var /** @type {?} */ values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    HttpHeaders.prototype.keys = function () {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    };\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.getAll = function (name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.append = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'a' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.set = function (name, value) {\n        return this.clone({ name: name, value: value, op: 's' });\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.delete = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'd' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    HttpHeaders.prototype.maybeSetNormalizedName = function (name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    HttpHeaders.prototype.init = function () {\n        var _this = this;\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(function (update) { return _this.applyUpdate(update); });\n                this.lazyUpdate = null;\n            }\n        }\n    };\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    HttpHeaders.prototype.copyFrom = function (other) {\n        var _this = this;\n        other.init();\n        Array.from(other.headers.keys()).forEach(function (key) {\n            _this.headers.set(key, /** @type {?} */ ((other.headers.get(key))));\n            _this.normalizedNames.set(key, /** @type {?} */ ((other.normalizedNames.get(key))));\n        });\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.clone = function (update) {\n        var /** @type {?} */ clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.applyUpdate = function (update) {\n        var /** @type {?} */ key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                var /** @type {?} */ value = ((update.value));\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                var /** @type {?} */ base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push.apply(base, value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                var /** @type {?} */ toDelete_1 = (update.value);\n                if (!toDelete_1) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    var /** @type {?} */ existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(function (value) { return toDelete_1.indexOf(value) === -1; });\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    HttpHeaders.prototype.forEach = function (fn) {\n        var _this = this;\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(function (key) { return fn(/** @type {?} */ ((_this.normalizedNames.get(key))), /** @type {?} */ ((_this.headers.get(key)))); });\n    };\n    return HttpHeaders;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine whether the given HTTP method may include a body.\n * @param {?} method\n * @return {?}\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * \\@experimental\n */\nvar HttpRequest = (function () {\n    /**\n     * @param {?} method\n     * @param {?} url\n     * @param {?=} third\n     * @param {?=} fourth\n     */\n    function HttpRequest(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        var options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = third || null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = third;\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            var params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                var qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                var sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    HttpRequest.prototype.serializeBody = function () {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return ((this.body)).toString();\n    };\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    HttpRequest.prototype.detectContentTypeHeader = function () {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    };\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpRequest.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        var /** @type {?} */ method = update.method || this.method;\n        var /** @type {?} */ url = update.url || this.url;\n        var /** @type {?} */ responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        var /** @type {?} */ body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        var /** @type {?} */ withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        var /** @type {?} */ reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        var /** @type {?} */ headers = update.headers || this.headers;\n        var /** @type {?} */ params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce(function (headers, name) { return headers.set(name, /** @type {?} */ ((update.setHeaders))[name]); }, headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce(function (params, param) { return params.set(param, /** @type {?} */ ((update.setParams))[param]); }, params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params: params, headers: headers, reportProgress: reportProgress, responseType: responseType, withCredentials: withCredentials,\n        });\n    };\n    return HttpRequest;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HttpEventType = {};\nHttpEventType.Sent = 0;\nHttpEventType.UploadProgress = 1;\nHttpEventType.ResponseHeader = 2;\nHttpEventType.DownloadProgress = 3;\nHttpEventType.Response = 4;\nHttpEventType.User = 5;\nHttpEventType[HttpEventType.Sent] = \"Sent\";\nHttpEventType[HttpEventType.UploadProgress] = \"UploadProgress\";\nHttpEventType[HttpEventType.ResponseHeader] = \"ResponseHeader\";\nHttpEventType[HttpEventType.DownloadProgress] = \"DownloadProgress\";\nHttpEventType[HttpEventType.Response] = \"Response\";\nHttpEventType[HttpEventType.User] = \"User\";\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpResponseBase = (function () {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     * @param {?} init\n     * @param {?=} defaultStatus\n     * @param {?=} defaultStatusText\n     */\n    function HttpResponseBase(init, defaultStatus, defaultStatusText) {\n        if (defaultStatus === void 0) { defaultStatus = 200; }\n        if (defaultStatusText === void 0) { defaultStatusText = 'OK'; }\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n    return HttpResponseBase;\n}());\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * \\@experimental\n */\nvar HttpHeaderResponse = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](HttpHeaderResponse, _super);\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     * @param {?=} init\n     */\n    function HttpHeaderResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.ResponseHeader;\n        return _this;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpHeaderResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpHeaderResponse;\n}(HttpResponseBase));\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * \\@experimental\n */\nvar HttpResponse = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](HttpResponse, _super);\n    /**\n     * Construct a new `HttpResponse`.\n     * @param {?=} init\n     */\n    function HttpResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.Response;\n        _this.body = init.body || null;\n        return _this;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpResponse;\n}(HttpResponseBase));\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * \\@experimental\n */\nvar HttpErrorResponse = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](HttpErrorResponse, _super);\n    /**\n     * @param {?} init\n     */\n    function HttpErrorResponse(init) {\n        var _this = \n        // Initialize with a default status of 0 / Unknown Error.\n        _super.call(this, init, 0, 'Unknown Error') || this;\n        _this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        _this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (_this.status >= 200 && _this.status < 300) {\n            _this.message = \"Http failure during parsing for \" + (init.url || '(unknown url)');\n        }\n        else {\n            _this.message =\n                \"Http failure response for \" + (init.url || '(unknown url)') + \": \" + init.status + \" \" + init.statusText;\n        }\n        _this.error = init.error || null;\n        return _this;\n    }\n    return HttpErrorResponse;\n}(HttpResponseBase));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. Basically, this clones the object and adds the body.\n * @template T\n * @param {?} options\n * @param {?} body\n * @return {?}\n */\nfunction addBody(options, body) {\n    return {\n        body: body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Perform HTTP requests.\n *\n * `HttpClient` is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies according to which\n * signature is called (mainly the values of `observe` and `responseType`).\n *\n * \\@experimental\n */\nvar HttpClient = (function () {\n    /**\n     * @param {?} handler\n     */\n    function HttpClient(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * This method can be called in one of two ways. Either an `HttpRequest`\n     * instance can be passed directly as the only parameter, or a method can be\n     * passed as the first parameter, a string URL as the second, and an\n     * options hash as the third.\n     *\n     * If a `HttpRequest` object is passed directly, an `Observable` of the\n     * raw `HttpEvent` stream will be returned.\n     *\n     * If a request is instead built by providing a URL, the options object\n     * determines the return type of `request()`. In addition to configuring\n     * request parameters such as the outgoing headers and/or the body, the options\n     * hash specifies two key pieces of information about the request: the\n     * `responseType` and what to `observe`.\n     *\n     * The `responseType` value determines how a successful response body will be\n     * parsed. If `responseType` is the default `json`, a type interface for the\n     * resulting object may be passed as a type parameter to `request()`.\n     *\n     * The `observe` value determines the return type of `request()`, based on what\n     * the consumer is interested in observing. A value of `events` will return an\n     * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n     * including progress events by default. A value of `response` will return an\n     * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n     * depends on the `responseType` and any optionally provided type parameter.\n     * A value of `body` will return an `Observable<T>` with the same `T` body type.\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.request = function (first, url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var /** @type {?} */ req;\n        // Firstly, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = (first);\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming GET unless a method is\n            // provided.\n            req = new HttpRequest(first, /** @type {?} */ ((url)), options.body || null, {\n                headers: options.headers,\n                params: options.params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        var /** @type {?} */ events$ = __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_concatMap__[\"concatMap\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_of__[\"of\"])(req), function (req) { return _this.handler.handle(req); });\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        var /** @type {?} */ res$ = __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_filter__[\"filter\"].call(events$, function (event) { return event instanceof HttpResponse; });\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__[\"map\"].call(res$, function (res) {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        });\n                    case 'blob':\n                        return __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__[\"map\"].call(res$, function (res) {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        });\n                    case 'text':\n                        return __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__[\"map\"].call(res$, function (res) {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        });\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__[\"map\"].call(res$, function (res) { return res.body; });\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(\"Unreachable: unhandled observe type \" + options.observe + \"}\");\n        }\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * DELETE request to be executed on the server. See the individual overloads for\n     * details of `delete()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('DELETE', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * GET request to be executed on the server. See the individual overloads for\n     * details of `get()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('GET', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * HEAD request to be executed on the server. See the individual overloads for\n     * details of `head()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.head = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('HEAD', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause a request\n     * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n     *\n     * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n     * If no such interceptor is reached, then the `JSONP` request will likely be\n     * rejected by the configured backend.\n     * @template T\n     * @param {?} url\n     * @param {?} callbackParam\n     * @return {?}\n     */\n    HttpClient.prototype.jsonp = function (url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * OPTIONS request to be executed on the server. See the individual overloads for\n     * details of `options()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.options = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('OPTIONS', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PATCH request to be executed on the server. See the individual overloads for\n     * details of `patch()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.patch = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PATCH', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.post = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('POST', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.put = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PUT', url, addBody(options, body));\n    };\n    return HttpClient;\n}());\nHttpClient.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nHttpClient.ctorParameters = function () { return [\n    { type: HttpHandler, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n * \\@experimental\n */\nvar HttpInterceptorHandler = (function () {\n    /**\n     * @param {?} next\n     * @param {?} interceptor\n     */\n    function HttpInterceptorHandler(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    HttpInterceptorHandler.prototype.handle = function (req) {\n        return this.interceptor.intercept(req, this.next);\n    };\n    return HttpInterceptorHandler;\n}());\n/**\n * A multi-provider token which represents the array of `HttpInterceptor`s that\n * are registered.\n *\n * \\@experimental\n */\nvar HTTP_INTERCEPTORS = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('HTTP_INTERCEPTORS');\nvar NoopInterceptor = (function () {\n    function NoopInterceptor() {\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    NoopInterceptor.prototype.intercept = function (req, next) {\n        return next.handle(req);\n    };\n    return NoopInterceptor;\n}());\nNoopInterceptor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nNoopInterceptor.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nvar nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nvar JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n * \\@experimental\n * @abstract\n */\nvar JsonpCallbackContext = (function () {\n    function JsonpCallbackContext() {\n    }\n    return JsonpCallbackContext;\n}());\n/**\n * `HttpBackend` that only processes `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n *\n * \\@experimental\n */\nvar JsonpClientBackend = (function () {\n    /**\n     * @param {?} callbackMap\n     * @param {?} document\n     */\n    function JsonpClientBackend(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.nextCallback = function () { return \"ng_jsonp_callback_\" + nextRequestId++; };\n    /**\n     * Process a JSONP request and return an event stream of the results.\n     * @param {?} req\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__[\"Observable\"](function (observer) {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            var /** @type {?} */ callback = _this.nextCallback();\n            var /** @type {?} */ url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, \"=\" + callback + \"$1\");\n            // Construct the <script> tag and point it at the URL.\n            var /** @type {?} */ node = _this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            var /** @type {?} */ body = null;\n            // Whether the response callback has been called.\n            var /** @type {?} */ finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            var /** @type {?} */ cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            _this.callbackMap[callback] = function (data) {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete _this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            var /** @type {?} */ cleanup = function () {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete _this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            var /** @type {?} */ onLoad = function (event) {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url: url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body: body,\n                    status: 200,\n                    statusText: 'OK', url: url,\n                }));\n                // Complete the stream, the resposne is over.\n                observer.complete();\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            var /** @type {?} */ onError = function (error) {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error: error,\n                    status: 0,\n                    statusText: 'JSONP Error', url: url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            _this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return function () {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    };\n    return JsonpClientBackend;\n}());\nJsonpClientBackend.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nJsonpClientBackend.ctorParameters = function () { return [\n    { type: JsonpCallbackContext, },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_6__angular_common__[\"DOCUMENT\"],] },] },\n]; };\n/**\n * An `HttpInterceptor` which identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * \\@experimental\n */\nvar JsonpInterceptor = (function () {\n    /**\n     * @param {?} jsonp\n     */\n    function JsonpInterceptor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    JsonpInterceptor.prototype.intercept = function (req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(/** @type {?} */ (req));\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    };\n    return JsonpInterceptor;\n}());\nJsonpInterceptor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nJsonpInterceptor.ctorParameters = function () { return [\n    { type: JsonpClientBackend, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * \\@experimental\n * @abstract\n */\nvar XhrFactory = (function () {\n    function XhrFactory() {\n    }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    XhrFactory.prototype.build = function () { };\n    return XhrFactory;\n}());\n/**\n * A factory for \\@{link HttpXhrBackend} that uses the `XMLHttpRequest` browser API.\n *\n * \\@experimental\n */\nvar BrowserXhr = (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = function () { return ((new XMLHttpRequest())); };\n    return BrowserXhr;\n}());\nBrowserXhr.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nBrowserXhr.ctorParameters = function () { return []; };\n/**\n * An `HttpBackend` which uses the XMLHttpRequest API to send\n * requests to a backend server.\n *\n * \\@experimental\n */\nvar HttpXhrBackend = (function () {\n    /**\n     * @param {?} xhrFactory\n     */\n    function HttpXhrBackend(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Process a request and return a stream of response events.\n     * @param {?} req\n     * @return {?}\n     */\n    HttpXhrBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(\"Attempted to construct Jsonp request without JsonpClientModule installed.\");\n        }\n        // Everything happens on Observable subscription.\n        return new __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__[\"Observable\"](function (observer) {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            var /** @type {?} */ xhr = _this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach(function (name, values) { return xhr.setRequestHeader(name, values.join(',')); });\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                var /** @type {?} */ detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                xhr.responseType = (req.responseType.toLowerCase());\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            var /** @type {?} */ reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            var /** @type {?} */ headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            var /** @type {?} */ partialFromXhr = function () {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                var /** @type {?} */ status = xhr.status === 1223 ? 204 : xhr.status;\n                var /** @type {?} */ statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                var /** @type {?} */ headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                var /** @type {?} */ url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers: headers, status: status, statusText: statusText, url: url });\n                return headerResponse;\n            };\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            var /** @type {?} */ onLoad = function () {\n                // Read response state from the memoized partial data.\n                var _a = partialFromXhr(), headers = _a.headers, status = _a.status, statusText = _a.statusText, url = _a.url;\n                // The body will be read out if present.\n                var /** @type {?} */ body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                    // Strip a common XSSI prefix from string responses.\n                    // TODO: determine if this behavior should be optional and moved to an interceptor.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                var /** @type {?} */ ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (ok && typeof body === 'string' && req.responseType === 'json') {\n                    // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                    try {\n                        body = JSON.parse(body);\n                    }\n                    catch (error) {\n                        // Even though the response status was 2xx, this is still an error.\n                        ok = false;\n                        // The parse error contains the text of the body that failed to parse.\n                        body = ({ error: error, text: body });\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            var /** @type {?} */ onError = function (error) {\n                var /** @type {?} */ res = new HttpErrorResponse({\n                    error: error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                });\n                observer.error(res);\n            };\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            var /** @type {?} */ sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onDownProgress = function (event) {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                var /** @type {?} */ progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onUpProgress = function (event) {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                var /** @type {?} */ progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return function () {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            };\n        });\n    };\n    return HttpXhrBackend;\n}());\nHttpXhrBackend.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nHttpXhrBackend.ctorParameters = function () { return [\n    { type: XhrFactory, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSRF_COOKIE_NAME = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('XSRF_COOKIE_NAME');\nvar XSRF_HEADER_NAME = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpXsrfTokenExtractor = (function () {\n    function HttpXsrfTokenExtractor() {\n    }\n    /**\n     * Get the XSRF token to use with an outgoing request.\n     *\n     * Will be called for every request, so the token may change between requests.\n     * @abstract\n     * @return {?}\n     */\n    HttpXsrfTokenExtractor.prototype.getToken = function () { };\n    return HttpXsrfTokenExtractor;\n}());\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nvar HttpXsrfCookieExtractor = (function () {\n    /**\n     * @param {?} doc\n     * @param {?} platform\n     * @param {?} cookieName\n     */\n    function HttpXsrfCookieExtractor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * \\@internal for testing\n         */\n        this.parseCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    HttpXsrfCookieExtractor.prototype.getToken = function () {\n        if (this.platform === 'server') {\n            return null;\n        }\n        var /** @type {?} */ cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__angular_common__[\"ɵparseCookieValue\"])(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    };\n    return HttpXsrfCookieExtractor;\n}());\nHttpXsrfCookieExtractor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nHttpXsrfCookieExtractor.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_6__angular_common__[\"DOCUMENT\"],] },] },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"PLATFORM_ID\"],] },] },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [XSRF_COOKIE_NAME,] },] },\n]; };\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nvar HttpXsrfInterceptor = (function () {\n    /**\n     * @param {?} tokenService\n     * @param {?} headerName\n     */\n    function HttpXsrfInterceptor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    HttpXsrfInterceptor.prototype.intercept = function (req, next) {\n        var /** @type {?} */ lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        var /** @type {?} */ token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    };\n    return HttpXsrfInterceptor;\n}());\nHttpXsrfInterceptor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nHttpXsrfInterceptor.ctorParameters = function () { return [\n    { type: HttpXsrfTokenExtractor, },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [XSRF_HEADER_NAME,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Constructs an `HttpHandler` that applies a bunch of `HttpInterceptor`s\n * to a request before passing it to the given `HttpBackend`.\n *\n * Meant to be used as a factory function within `HttpClientModule`.\n *\n * \\@experimental\n * @param {?} backend\n * @param {?=} interceptors\n * @return {?}\n */\nfunction interceptingHandler(backend, interceptors) {\n    if (interceptors === void 0) { interceptors = []; }\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight(function (next, interceptor) { return new HttpInterceptorHandler(next, interceptor); }, backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n * \\@experimental\n * @return {?}\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * `NgModule` which adds XSRF protection support to outgoing requests.\n *\n * Provided the server supports a cookie-based XSRF protection system, this\n * module can be used directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no such names are provided, the default is to use `X-XSRF-TOKEN` for\n * the header name and `XSRF-TOKEN` for the cookie name.\n *\n * \\@experimental\n */\nvar HttpClientXsrfModule = (function () {\n    function HttpClientXsrfModule() {\n    }\n    /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    HttpClientXsrfModule.disable = function () {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    };\n    /**\n     * Configure XSRF protection to use the given cookie name or header name,\n     * or the default names (as described above) if not provided.\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClientXsrfModule.withOptions = function (options) {\n        if (options === void 0) { options = {}; }\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    };\n    return HttpClientXsrfModule;\n}());\nHttpClientXsrfModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientXsrfModule.ctorParameters = function () { return []; };\n/**\n * `NgModule` which provides the `HttpClient` and associated services.\n *\n * Interceptors can be added to the chain behind `HttpClient` by binding them\n * to the multiprovider for `HTTP_INTERCEPTORS`.\n *\n * \\@experimental\n */\nvar HttpClientModule = (function () {\n    function HttpClientModule() {\n    }\n    return HttpClientModule;\n}());\nHttpClientModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN',\n                    }),\n                ],\n                providers: [\n                    HttpClient,\n                    // HttpHandler is the backend + interceptors and is constructed\n                    // using the interceptingHandler factory function.\n                    {\n                        provide: HttpHandler,\n                        useFactory: interceptingHandler,\n                        deps: [HttpBackend, [new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"](), new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"](HTTP_INTERCEPTORS)]],\n                    },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientModule.ctorParameters = function () { return []; };\n/**\n * `NgModule` which enables JSONP support in `HttpClient`.\n *\n * Without this module, Jsonp requests will reach the backend\n * with method JSONP, where they'll be rejected.\n *\n * \\@experimental\n */\nvar HttpClientJsonpModule = (function () {\n    function HttpClientJsonpModule() {\n    }\n    return HttpClientJsonpModule;\n}());\nHttpClientJsonpModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientJsonpModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=http.es5.js.map\n\n\n/***/ }),\n\n/***/ 41:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar KeyCode;\r\n(function (KeyCode) {\r\n    KeyCode[KeyCode[\"Tab\"] = 9] = \"Tab\";\r\n    KeyCode[KeyCode[\"Enter\"] = 13] = \"Enter\";\r\n    KeyCode[KeyCode[\"Esc\"] = 27] = \"Esc\";\r\n    KeyCode[KeyCode[\"Space\"] = 32] = \"Space\";\r\n    KeyCode[KeyCode[\"ArrowUp\"] = 38] = \"ArrowUp\";\r\n    KeyCode[KeyCode[\"ArrowDown\"] = 40] = \"ArrowDown\";\r\n    KeyCode[KeyCode[\"Backspace\"] = 8] = \"Backspace\";\r\n})(KeyCode = exports.KeyCode || (exports.KeyCode = {}));\r\nvar NgSelectConfig = /** @class */ (function () {\r\n    function NgSelectConfig() {\r\n        this.notFoundText = '';\r\n        this.typeToSearchText = '';\r\n    }\r\n    return NgSelectConfig;\r\n}());\r\nexports.NgSelectConfig = NgSelectConfig;\r\n\n\n/***/ }),\n\n/***/ 52:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_core__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__ = __webpack_require__(64);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__ = __webpack_require__(48);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__ = __webpack_require__(69);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__ = __webpack_require__(71);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__ = __webpack_require__(72);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__ = __webpack_require__(49);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__ = __webpack_require__(66);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__ = __webpack_require__(67);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__angular_platform_browser__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterLink\", function() { return RouterLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterLinkWithHref\", function() { return RouterLinkWithHref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterLinkActive\", function() { return RouterLinkActive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterOutlet\", function() { return RouterOutlet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GuardsCheckEnd\", function() { return GuardsCheckEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GuardsCheckStart\", function() { return GuardsCheckStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationCancel\", function() { return NavigationCancel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationEnd\", function() { return NavigationEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationError\", function() { return NavigationError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationStart\", function() { return NavigationStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResolveEnd\", function() { return ResolveEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResolveStart\", function() { return ResolveStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouteConfigLoadEnd\", function() { return RouteConfigLoadEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouteConfigLoadStart\", function() { return RouteConfigLoadStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RoutesRecognized\", function() { return RoutesRecognized; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouteReuseStrategy\", function() { return RouteReuseStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Router\", function() { return Router; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROUTES\", function() { return ROUTES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROUTER_CONFIGURATION\", function() { return ROUTER_CONFIGURATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROUTER_INITIALIZER\", function() { return ROUTER_INITIALIZER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterModule\", function() { return RouterModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"provideRoutes\", function() { return provideRoutes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChildrenOutletContexts\", function() { return ChildrenOutletContexts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OutletContext\", function() { return OutletContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoPreloading\", function() { return NoPreloading; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PreloadAllModules\", function() { return PreloadAllModules; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PreloadingStrategy\", function() { return PreloadingStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterPreloader\", function() { return RouterPreloader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActivatedRoute\", function() { return ActivatedRoute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActivatedRouteSnapshot\", function() { return ActivatedRouteSnapshot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterState\", function() { return RouterState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterStateSnapshot\", function() { return RouterStateSnapshot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PRIMARY_OUTLET\", function() { return PRIMARY_OUTLET; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"convertToParamMap\", function() { return convertToParamMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlHandlingStrategy\", function() { return UrlHandlingStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultUrlSerializer\", function() { return DefaultUrlSerializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlSegment\", function() { return UrlSegment; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlSegmentGroup\", function() { return UrlSegmentGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlSerializer\", function() { return UrlSerializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlTree\", function() { return UrlTree; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VERSION\", function() { return VERSION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵROUTER_PROVIDERS\", function() { return ROUTER_PROVIDERS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵflatten\", function() { return flatten; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵa\", function() { return ROUTER_FORROOT_GUARD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵg\", function() { return RouterInitializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵh\", function() { return getAppInitializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵi\", function() { return getBootstrapListener; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵd\", function() { return provideForRootGuard; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵc\", function() { return provideLocationStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵj\", function() { return provideRouterInitializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵf\", function() { return rootRoute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵb\", function() { return routerNgProbeToken; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵe\", function() { return setupRouter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵk\", function() { return Tree; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵl\", function() { return TreeNode; });\n\n/**\n * @license Angular v4.3.5\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents an event triggered when a navigation starts.\n *\n * \\@stable\n */\nvar NavigationStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     */\n    function NavigationStart(id, url) {\n        this.id = id;\n        this.url = url;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation ends successfully.\n *\n * \\@stable\n */\nvar NavigationEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     */\n    function NavigationEnd(id, url, urlAfterRedirects) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationEnd.prototype.toString = function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation is canceled.\n *\n * \\@stable\n */\nvar NavigationCancel = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} reason\n     */\n    function NavigationCancel(id, url, reason) {\n        this.id = id;\n        this.url = url;\n        this.reason = reason;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n *\n * \\@stable\n */\nvar NavigationError = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} error\n     */\n    function NavigationError(id, url, error) {\n        this.id = id;\n        this.url = url;\n        this.error = error;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationError.prototype.toString = function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when routes are recognized.\n *\n * \\@stable\n */\nvar RoutesRecognized = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function RoutesRecognized(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    RoutesRecognized.prototype.toString = function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}());\n/**\n * \\@whatItDoes Represents an event triggered before lazy loading a route config.\n *\n * \\@experimental\n */\nvar RouteConfigLoadStart = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadStart(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a route has been lazy loaded.\n *\n * \\@experimental\n */\nvar RouteConfigLoadEnd = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadEnd(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function GuardsCheckStart(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckStart.prototype.toString = function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}());\n/**\n * \\@whatItDoes Represents the end of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     * @param {?} shouldActivate\n     */\n    function GuardsCheckEnd(id, url, urlAfterRedirects, state, shouldActivate) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n        this.shouldActivate = shouldActivate;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckEnd.prototype.toString = function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * \\@experimental\n */\nvar ResolveStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveStart(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveStart.prototype.toString = function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}());\n/**\n * \\@whatItDoes Represents the end of the Resolve phase of routing. See note on\n * {\\@link ResolveStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ResolveEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveEnd(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveEnd.prototype.toString = function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Name of the primary outlet.\n *\n * \\@stable\n */\nvar PRIMARY_OUTLET = 'primary';\nvar ParamsAsMap = (function () {\n    /**\n     * @param {?} params\n     */\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.get = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.getAll = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a {\\@link Params} instance to a {\\@link ParamMap}.\n *\n * \\@stable\n * @param {?} params\n * @return {?}\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nfunction navigationCancelingError(message) {\n    var /** @type {?} */ error = Error('NavigationCancelingError: ' + message);\n    ((error))[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isNavigationCancelingError(error) {\n    return ((error))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var /** @type {?} */ parts = ((route.path)).split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var /** @type {?} */ posParams = {};\n    // Check each config part against the actual URL\n    for (var /** @type {?} */ index = 0; index < parts.length; index++) {\n        var /** @type {?} */ part = parts[index];\n        var /** @type {?} */ segment = segments[index];\n        var /** @type {?} */ isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LoadedRouterConfig = (function () {\n    /**\n     * @param {?} routes\n     * @param {?} module\n     */\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\n/**\n * @param {?} config\n * @param {?=} parentPath\n * @return {?}\n */\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var /** @type {?} */ i = 0; i < config.length; i++) {\n        var /** @type {?} */ route = config[i];\n        var /** @type {?} */ fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\n/**\n * @param {?} route\n * @param {?} fullPath\n * @return {?}\n */\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var /** @type {?} */ exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\n/**\n * @param {?} parentPath\n * @param {?} currentRoute\n * @return {?}\n */\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqual(a, b) {\n    var /** @type {?} */ k1 = Object.keys(a);\n    var /** @type {?} */ k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var /** @type {?} */ key;\n    for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * @template T\n * @param {?} a\n * @return {?}\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * @param {?} bools\n * @return {?}\n */\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nfunction forEach(map$$1, callback) {\n    for (var /** @type {?} */ prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])({});\n    }\n    var /** @type {?} */ waitHead = [];\n    var /** @type {?} */ waitTail = [];\n    var /** @type {?} */ res = {};\n    forEach(obj, function (a, k) {\n        var /** @type {?} */ mapped = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(fn(k, a), function (r) { return res[k] = r; });\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    var /** @type {?} */ concat$ = __WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__[\"concatAll\"].call(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"].apply(void 0, waitHead.concat(waitTail)));\n    var /** @type {?} */ last$ = __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__[\"last\"].call(concat$);\n    return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(last$, function () { return res; });\n}\n/**\n * @param {?} observables\n * @return {?}\n */\nfunction andObservables(observables) {\n    var /** @type {?} */ merged$ = __WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__[\"mergeAll\"].call(observables);\n    return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__[\"every\"].call(merged$, function (result) { return result === true; });\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction wrapIntoObservable(value) {\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ɵisObservable\"])(value)) {\n        return value;\n    }\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ɵisPromise\"])(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__[\"fromPromise\"])(Promise.resolve(value));\n    }\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(/** @type {?} */ (value));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} exact\n * @return {?}\n */\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalQueryParams(container, containee) {\n    return shallowEqual(container, containee);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var /** @type {?} */ c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} containeePaths\n * @return {?}\n */\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var /** @type {?} */ current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var /** @type {?} */ c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var /** @type {?} */ current = containeePaths.slice(0, container.segments.length);\n        var /** @type {?} */ next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * \\@whatItDoes Represents the parsed URL.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * \\@stable\n */\nvar UrlTree = (function () {\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} queryParams\n     * @param {?} fragment\n     */\n    function UrlTree(root, queryParams, fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * \\@whatItDoes Represents the parsed URL segment group.\n *\n * See {\\@link UrlTree} for more information.\n *\n * \\@stable\n */\nvar UrlSegmentGroup = (function () {\n    /**\n     * @param {?} segments\n     * @param {?} children\n     */\n    function UrlSegmentGroup(segments, children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /**\n         * The parent node in the url tree\n         */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /**\n         * Number of child segments\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * \\@whatItDoes Represents a single URL segment.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * \\@stable\n */\nvar UrlSegment = (function () {\n    /**\n     * @param {?} path\n     * @param {?} parameters\n     */\n    function UrlSegment(path, parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegment.prototype.toString = function () { return serializePath(this); };\n    return UrlSegment;\n}());\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\n/**\n * @template T\n * @param {?} segment\n * @param {?} fn\n * @return {?}\n */\nfunction mapChildrenIntoArray(segment, fn) {\n    var /** @type {?} */ res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * \\@whatItDoes Serializes and deserializes a URL string into a URL tree.\n *\n * \\@description The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See {\\@link DefaultUrlSerializer} for an example of a URL serializer.\n *\n * \\@stable\n * @abstract\n */\nvar UrlSerializer = (function () {\n    function UrlSerializer() {\n    }\n    /**\n     * Parse a url into a {\\@link UrlTree}\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlSerializer.prototype.parse = function (url) { };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @abstract\n     * @param {?} tree\n     * @return {?}\n     */\n    UrlSerializer.prototype.serialize = function (tree) { };\n    return UrlSerializer;\n}());\n/**\n * \\@whatItDoes A default implementation of the {\\@link UrlSerializer}.\n *\n * \\@description\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * \\@stable\n */\nvar DefaultUrlSerializer = (function () {\n    function DefaultUrlSerializer() {\n    }\n    /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.parse = function (url) {\n        var /** @type {?} */ p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.serialize = function (tree) {\n        var /** @type {?} */ segment = \"/\" + serializeSegment(tree.root, true);\n        var /** @type {?} */ query = serializeQueryParams(tree.queryParams);\n        var /** @type {?} */ fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeURI(/** @type {?} */ ((tree.fragment))) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n/**\n * @param {?} segment\n * @return {?}\n */\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\n/**\n * @param {?} segment\n * @param {?} root\n * @return {?}\n */\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var /** @type {?} */ primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var /** @type {?} */ children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var /** @type {?} */ children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query         = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"\\@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * @param {?} s\n * @return {?}\n */\nfunction encode(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';');\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction serializePath(path) {\n    return \"\" + encode(path.path) + serializeParams(path.parameters);\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeParams(params) {\n    return Object.keys(params).map(function (key) { return \";\" + encode(key) + \"=\" + encode(params[key]); }).join('');\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeQueryParams(params) {\n    var /** @type {?} */ strParams = Object.keys(params).map(function (name) {\n        var /** @type {?} */ value = params[name];\n        return Array.isArray(value) ? value.map(function (v) { return encode(name) + \"=\" + encode(v); }).join('&') :\n            encode(name) + \"=\" + encode(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchSegments(str) {\n    var /** @type {?} */ match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchQueryParams(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchUrlQueryParamValue(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = (function () {\n    /**\n     * @param {?} url\n     */\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseRootSegment = function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParams = function () {\n        var /** @type {?} */ params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseFragment = function () {\n        return this.consumeOptional('#') ? decodeURI(this.remaining) : null;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseChildren = function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var /** @type {?} */ segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var /** @type {?} */ children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var /** @type {?} */ res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseSegment = function () {\n        var /** @type {?} */ path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseMatrixParams = function () {\n        var /** @type {?} */ params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseParam = function (params) {\n        var /** @type {?} */ key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParam = function (params) {\n        var /** @type {?} */ key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var /** @type {?} */ decodedKey = decode(key);\n        var /** @type {?} */ decodedVal = decode(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var /** @type {?} */ currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    UrlParser.prototype.parseParens = function (allowPrimary) {\n        var /** @type {?} */ segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var /** @type {?} */ path = matchSegments(this.remaining);\n            var /** @type {?} */ next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var /** @type {?} */ outletName = ((undefined));\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var /** @type {?} */ children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.consumeOptional = function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.capture = function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = (function () {\n    /**\n     * @param {?=} segmentGroup\n     */\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = (function () {\n    /**\n     * @param {?} urlTree\n     */\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction noMatch(segmentGroup) {\n    return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\n/**\n * @param {?} newTree\n * @return {?}\n */\nfunction absoluteRedirect(newTree) {\n    return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\n/**\n * @param {?} redirectTo\n * @return {?}\n */\nfunction namedOutletsRedirect(redirectTo) {\n    return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction canLoadFails(route) {\n    return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n * @return {?}\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = (function () {\n    /**\n     * @param {?} moduleInjector\n     * @param {?} configLoader\n     * @param {?} urlSerializer\n     * @param {?} urlTree\n     * @param {?} config\n     */\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleRef\"]);\n    }\n    /**\n     * @return {?}\n     */\n    ApplyRedirects.prototype.apply = function () {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ urlTrees$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, /** @type {?} */ ((_this.urlTree.fragment))); });\n        return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(urlTrees$, function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} tree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.match = function (tree) {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ mapped$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, tree.queryParams, /** @type {?} */ ((tree.fragment))); });\n        return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(mapped$, function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noMatchError = function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n        var /** @type {?} */ root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.expandChildren(ngModule, routes, segmentGroup), function (children) { return new UrlSegmentGroup([], children); });\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        var /** @type {?} */ routes$ = __WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"].apply(void 0, routes);\n        var /** @type {?} */ processedRoutes$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(routes$, function (r) {\n            var /** @type {?} */ expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(expanded$, function (e) {\n                if (e instanceof NoMatch) {\n                    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null);\n                }\n                throw e;\n            });\n        });\n        var /** @type {?} */ concattedProcessedRoutes$ = __WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__[\"concatAll\"].call(processedRoutes$);\n        var /** @type {?} */ first$ = __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__[\"first\"].call(concattedProcessedRoutes$, function (s) { return !!s; });\n        return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(first$, function (e, _) {\n            if (e instanceof __WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError__[\"EmptyError\"]) {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var /** @type {?} */ newTree = this.applyRedirectCommands([], /** @type {?} */ ((route.redirectTo)), {});\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            var /** @type {?} */ group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var /** @type {?} */ newTree = this.applyRedirectCommands(consumedSegments, /** @type {?} */ ((route.redirectTo)), /** @type {?} */ (positionalParamSegments));\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.configLoader.load(ngModule.injector, route), function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                });\n            }\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig$ = this.getChildConfig(ngModule, route);\n        return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(childConfig$, function (routerConfig) {\n            var /** @type {?} */ childModule = routerConfig.module;\n            var /** @type {?} */ childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var /** @type {?} */ expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(expanded$_1, function (children) { return new UrlSegmentGroup(consumedSegments, children); });\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var /** @type {?} */ expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(expanded$, function (cs) { return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children); });\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(route._loadedConfig);\n            }\n            return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(runCanLoadGuard(ngModule.injector, route), function (shouldLoad) {\n                if (shouldLoad) {\n                    return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(_this.configLoader.load(ngModule.injector, route), function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    });\n                }\n                return canLoadFails(route);\n            });\n        }\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new LoadedRouterConfig([], ngModule));\n    };\n    /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n        var /** @type {?} */ res = [];\n        var /** @type {?} */ c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(/** @type {?} */ ((route.redirectTo)));\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n        var /** @type {?} */ newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n        var /** @type {?} */ res = {};\n        forEach(redirectToParams, function (v, k) {\n            var /** @type {?} */ copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var /** @type {?} */ sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var /** @type {?} */ updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var /** @type {?} */ children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n            _this.findOrReturn(s, actualSegments); });\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n        var /** @type {?} */ pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n        var /** @type {?} */ idx = 0;\n        for (var _i = 0, actualSegments_1 = actualSegments; _i < actualSegments_1.length; _i++) {\n            var s = actualSegments_1[_i];\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    };\n    return ApplyRedirects;\n}());\n/**\n * @param {?} moduleInjector\n * @param {?} route\n * @return {?}\n */\nfunction runCanLoadGuard(moduleInjector, route) {\n    var /** @type {?} */ canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(true);\n    var /** @type {?} */ obs = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(canLoad), function (injectionToken) {\n        var /** @type {?} */ guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    });\n    return andObservables(obs);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: /** @type {?} */ ([]),\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: /** @type {?} */ ((res.consumed)),\n        lastChild: /** @type {?} */ ((res.consumed.length)),\n        positionalParamSegments: /** @type {?} */ ((res.posParams)),\n    };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var /** @type {?} */ c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} routes\n * @param {?} primarySegmentGroup\n * @return {?}\n */\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} r\n * @return {?}\n */\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = (function () {\n    /**\n     * @param {?} root\n     */\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.parent = function (t) {\n        var /** @type {?} */ p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.children = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.firstChild = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.siblings = function (t) {\n        var /** @type {?} */ p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var /** @type {?} */ c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ node_1 = findNode(value, child);\n        if (node_1)\n            return node_1;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\nvar TreeNode = (function () {\n    /**\n     * @param {?} value\n     * @param {?} children\n     */\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @return {?}\n     */\n    TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the state of the router.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * See {\\@link ActivatedRoute} for more information.\n *\n * \\@stable\n */\nvar RouterState = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](RouterState, _super);\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} snapshot\n     */\n    function RouterState(root, snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyState(urlTree, rootComponent) {\n    var /** @type {?} */ snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var /** @type {?} */ emptyUrl = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]([new UrlSegment('', {})]);\n    var /** @type {?} */ emptyParams = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]({});\n    var /** @type {?} */ emptyData = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]({});\n    var /** @type {?} */ emptyQueryParams = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]({});\n    var /** @type {?} */ fragment = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]('');\n    var /** @type {?} */ activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var /** @type {?} */ emptyParams = {};\n    var /** @type {?} */ emptyData = {};\n    var /** @type {?} */ emptyQueryParams = {};\n    var /** @type {?} */ fragment = '';\n    var /** @type {?} */ activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet.\n * An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRoute = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} futureSnapshot\n     */\n    function ActivatedRoute(url, params, queryParams, fragment, data, outlet, component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.params, function (p) { return convertToParamMap(p); });\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.queryParams, function (p) { return convertToParamMap(p); });\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRoute.prototype.toString = function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * \\@internal\n * @param {?} route\n * @return {?}\n */\nfunction inheritedParamsDataResolve(route) {\n    var /** @type {?} */ pathToRoot = route.pathFromRoot;\n    var /** @type {?} */ inhertingStartingFrom = pathToRoot.length - 1;\n    while (inhertingStartingFrom >= 1) {\n        var /** @type {?} */ current = pathToRoot[inhertingStartingFrom];\n        var /** @type {?} */ parent = pathToRoot[inhertingStartingFrom - 1];\n        // current route is an empty path => inherits its parent's params and data\n        if (current.routeConfig && current.routeConfig.path === '') {\n            inhertingStartingFrom--;\n            // parent is componentless => current route should inherit its params and data\n        }\n        else if (!parent.component) {\n            inhertingStartingFrom--;\n        }\n        else {\n            break;\n        }\n    }\n    return pathToRoot.slice(inhertingStartingFrom).reduce(function (res, curr) {\n        var /** @type {?} */ params = Object.assign({}, res.params, curr.params);\n        var /** @type {?} */ data = Object.assign({}, res.data, curr.data);\n        var /** @type {?} */ resolve = Object.assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, /** @type {?} */ ({ params: {}, data: {}, resolve: {} }));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet\n * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router\n * state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRouteSnapshot = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} routeConfig\n     * @param {?} urlSegment\n     * @param {?} lastPathIndex\n     * @param {?} resolve\n     */\n    function ActivatedRouteSnapshot(url, params, queryParams, fragment, data, outlet, component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRouteSnapshot.prototype.toString = function () {\n        var /** @type {?} */ url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var /** @type {?} */ matched = this._routeConfig ? this._routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * \\@whatItDoes Represents the state of the router at a moment in time.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * \\@stable\n */\nvar RouterStateSnapshot = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](RouterStateSnapshot, _super);\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} root\n     */\n    function RouterStateSnapshot(url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\n/**\n * @template U, T\n * @param {?} state\n * @param {?} node\n * @return {?}\n */\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction serializeNode(node) {\n    var /** @type {?} */ c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(\", \") + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n * @param {?} route\n * @return {?}\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var /** @type {?} */ currentSnapshot = route.snapshot;\n        var /** @type {?} */ nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            ((route.queryParams)).next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            ((route.fragment)).next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            ((route.params)).next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            ((route.url)).next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            ((route.data)).next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        ((route.data)).next(route._futureSnapshot.data);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalParamsAndUrlSegments(a, b) {\n    var /** @type {?} */ equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var /** @type {?} */ parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, /** @type {?} */ ((b.parent))));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var /** @type {?} */ root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var /** @type {?} */ value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var /** @type {?} */ children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else if (routeReuseStrategy.retrieve(curr.value)) {\n        var /** @type {?} */ tree_1 = ((routeReuseStrategy.retrieve(curr.value))).route;\n        setFutureSnapshotsOfActivatedRoutes(curr, tree_1);\n        return tree_1;\n    }\n    else {\n        var /** @type {?} */ value = createActivatedRoute(curr.value);\n        var /** @type {?} */ children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n        return new TreeNode(value, children);\n    }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var /** @type {?} */ i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        for (var _i = 0, _a = prevState.children; _i < _a.length; _i++) {\n            var p = _a[_i];\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.url), new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.params), new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.queryParams), new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.fragment), new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.data), c.outlet, c.component, c);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} route\n * @param {?} urlTree\n * @param {?} commands\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ startingPosition = findStartingPosition(nav, urlTree, route);\n    var /** @type {?} */ segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * @param {?} oldSegmentGroup\n * @param {?} newSegmentGroup\n * @param {?} urlTree\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var /** @type {?} */ qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n/**\n * @param {?} current\n * @param {?} oldSegment\n * @param {?} newSegment\n * @return {?}\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var /** @type {?} */ children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = (function () {\n    /**\n     * @param {?} isAbsolute\n     * @param {?} numberOfDoubleDots\n     * @param {?} commands\n     */\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Navigation.prototype.toRoot = function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/**\n * Transforms commands to a normalized `Navigation`\n * @param {?} commands\n * @return {?}\n */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var /** @type {?} */ numberOfDoubleDots = 0;\n    var /** @type {?} */ isAbsolute = false;\n    var /** @type {?} */ res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var /** @type {?} */ outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return res.concat([{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return res.concat([cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return res.concat([cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') {\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') {\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return res.concat([cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = (function () {\n    /**\n     * @param {?} segmentGroup\n     * @param {?} processChildren\n     * @param {?} index\n     */\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\n/**\n * @param {?} nav\n * @param {?} tree\n * @param {?} route\n * @return {?}\n */\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var /** @type {?} */ modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var /** @type {?} */ index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n/**\n * @param {?} group\n * @param {?} index\n * @param {?} numberOfDoubleDots\n * @return {?}\n */\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var /** @type {?} */ g = group;\n    var /** @type {?} */ ci = index;\n    var /** @type {?} */ dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = ((g.parent));\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var /** @type {?} */ m = prefixedWith(segmentGroup, startIndex, commands);\n    var /** @type {?} */ slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var /** @type {?} */ g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var /** @type {?} */ outlets_2 = getOutlets(commands);\n        var /** @type {?} */ children_2 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_2[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_2[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_2);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ currentCommandIndex = 0;\n    var /** @type {?} */ currentPathIndex = startIndex;\n    var /** @type {?} */ noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var /** @type {?} */ path = segmentGroup.segments[currentPathIndex];\n        var /** @type {?} */ curr = getPath(commands[currentCommandIndex]);\n        var /** @type {?} */ next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ paths = segmentGroup.segments.slice(0, startIndex);\n    var /** @type {?} */ i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var /** @type {?} */ children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var /** @type {?} */ p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var /** @type {?} */ curr = getPath(commands[i]);\n        var /** @type {?} */ next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\n/**\n * @param {?} outlets\n * @return {?}\n */\nfunction createNewSegmentChildren(outlets) {\n    var /** @type {?} */ children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction stringify(params) {\n    var /** @type {?} */ res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\n/**\n * @param {?} path\n * @param {?} params\n * @param {?} segment\n * @return {?}\n */\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch$1 = (function () {\n    function NoMatch$1() {\n    }\n    return NoMatch$1;\n}());\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n * @return {?}\n */\nfunction recognize(rootComponentType, config, urlTree, url) {\n    return new Recognizer(rootComponentType, config, urlTree, url).recognize();\n}\nvar Recognizer = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} config\n     * @param {?} urlTree\n     * @param {?} url\n     */\n    function Recognizer(rootComponentType, config, urlTree, url) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n    }\n    /**\n     * @return {?}\n     */\n    Recognizer.prototype.recognize = function () {\n        try {\n            var /** @type {?} */ rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var /** @type {?} */ children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var /** @type {?} */ root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var /** @type {?} */ rootNode = new TreeNode(root, children);\n            var /** @type {?} */ routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(routeState);\n        }\n        catch (e) {\n            return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(e); });\n        }\n    };\n    /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n        var _this = this;\n        var /** @type {?} */ route = routeNode.value;\n        var /** @type {?} */ i = inheritedParamsDataResolve(route);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    Recognizer.prototype.processChildren = function (config, segmentGroup) {\n        var _this = this;\n        var /** @type {?} */ children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n        for (var _i = 0, config_1 = config; _i < config_1.length; _i++) {\n            var r = config_1[_i];\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        if (route.path === '**') {\n            var /** @type {?} */ params = segments.length > 0 ? ((last$1(segments))).parameters : {};\n            var /** @type {?} */ snapshot_1 = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            return [new TreeNode(snapshot_1, [])];\n        }\n        var _a = match$1(rawSegment, route, segments), consumedSegments = _a.consumedSegments, parameters = _a.parameters, lastChild = _a.lastChild;\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig = getChildConfig(route);\n        var _b = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _b.segmentGroup, slicedSegments = _b.slicedSegments;\n        var /** @type {?} */ snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var /** @type {?} */ children_3 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_3)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var /** @type {?} */ children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return ((route._loadedConfig)).routes;\n    }\n    return [];\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var /** @type {?} */ posParams = {};\n    forEach(/** @type {?} */ ((res.posParams)), function (v, k) { posParams[k] = v.path; });\n    var /** @type {?} */ parameters = res.consumed.length > 0 ? Object.assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction checkOutletNameUniqueness(nodes) {\n    var /** @type {?} */ names = {};\n    nodes.forEach(function (n) {\n        var /** @type {?} */ routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var /** @type {?} */ p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var /** @type {?} */ c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getSourceSegmentGroup(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getPathIndexShift(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    var /** @type {?} */ res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_3 = routes; _i < routes_3.length; _i++) {\n        var r = routes_3[_i];\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = segmentGroup.segments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} routes\n * @param {?} primarySegment\n * @return {?}\n */\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (var _i = 0, routes_4 = routes; _i < routes_4.length; _i++) {\n        var r = routes_4[_i];\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} r\n * @return {?}\n */\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getData(route) {\n    return route.data || {};\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to customize when activated routes get reused.\n *\n * \\@experimental\n * @abstract\n */\nvar RouteReuseStrategy = (function () {\n    function RouteReuseStrategy() {\n    }\n    /**\n     * Determines if this route (and its subtree) should be detached to be reused later\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldDetach = function (route) { };\n    /**\n     * Stores the detached route.\n     *\n     * Storing a `null` value should erase the previously stored value.\n     * @abstract\n     * @param {?} route\n     * @param {?} handle\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.store = function (route, handle) { };\n    /**\n     * Determines if this route (and its subtree) should be reattached\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldAttach = function (route) { };\n    /**\n     * Retrieves the previously stored route\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.retrieve = function (route) { };\n    /**\n     * Determines if a route should be reused\n     * @abstract\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) { };\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docsNotRequired\n * \\@experimental\n */\nvar ROUTES = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"InjectionToken\"]('ROUTES');\nvar RouterConfigLoader = (function () {\n    /**\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?=} onLoadStartListener\n     * @param {?=} onLoadEndListener\n     */\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.load = function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var /** @type {?} */ moduleFactory$ = this.loadModuleFactory(/** @type {?} */ ((route.loadChildren)));\n        return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(moduleFactory$, function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var /** @type {?} */ module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)), module);\n        });\n    };\n    /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__[\"fromPromise\"])(this.loader.load(loadChildren));\n        }\n        else {\n            return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(wrapIntoObservable(loadChildren()), function (t) {\n                if (t instanceof __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleFactory\"]) {\n                    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(t);\n                }\n                else {\n                    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__[\"fromPromise\"])(_this.compiler.compileModuleAsync(t));\n                }\n            });\n        }\n    };\n    return RouterConfigLoader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to migrate AngularJS applications to Angular.\n *\n * \\@experimental\n * @abstract\n */\nvar UrlHandlingStrategy = (function () {\n    function UrlHandlingStrategy() {\n    }\n    /**\n     * Tells the router if this URL should be processed.\n     *\n     * When it returns true, the router will execute the regular navigation.\n     * When it returns false, the router will set the router state to an empty state.\n     * As a result, all the active components will be destroyed.\n     *\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { };\n    /**\n     * Extracts the part of the URL that should be handled by the router.\n     * The rest of the URL will remain untouched.\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.extract = function (url) { };\n    /**\n     * Merges the URL fragment with the rest of the URL.\n     * @abstract\n     * @param {?} newUrlPart\n     * @param {?} rawUrl\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.merge = function (newUrlPart, rawUrl) { };\n    return UrlHandlingStrategy;\n}());\n/**\n * \\@experimental\n */\nvar DefaultUrlHandlingStrategy = (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n    /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * \\@internal\n * @param {?} snapshot\n * @return {?}\n */\nfunction defaultRouterHook(snapshot) {\n    return (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null));\n}\n/**\n * \\@whatItDoes Provides the navigation and url manipulation capabilities.\n *\n * See {\\@link Routes} for more details and examples.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar Router = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} urlSerializer\n     * @param {?} rootContexts\n     * @param {?} location\n     * @param {?} injector\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?} config\n     */\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](/** @type {?} */ ((null)));\n        this.routerEvents = new __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__[\"Subject\"]();\n        this.navigationId = 0;\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See {\\@link ErrorHandler} for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * \\@internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleRef\"]);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.currentRouterState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    Router.prototype.resetRootComponentType = function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.currentRouterState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    Router.prototype.initialNavigation = function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    Router.prototype.setUpLocationChangeListener = function () {\n        var _this = this;\n        // Zone.current.wrap is needed because of the issue with RxJS scheduler,\n        // which does not work properly with zone.js in IE and Safari\n        if (!this.locationSubscription) {\n            this.locationSubscription = (this.location.subscribe(Zone.current.wrap(function (change) {\n                var /** @type {?} */ rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var /** @type {?} */ source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, { replaceUrl: true }); }, 0);\n            })));\n        }\n    };\n    Object.defineProperty(Router.prototype, \"routerState\", {\n        /**\n         * The current route state\n         * @return {?}\n         */\n        get: function () { return this.currentRouterState; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"url\", {\n        /**\n         * The current url\n         * @return {?}\n         */\n        get: function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"events\", {\n        /**\n         * An observable of router events\n         * @return {?}\n         */\n        get: function () { return this.routerEvents; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    Router.prototype.triggerEvent = function (e) { this.routerEvents.next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    Router.prototype.resetConfig = function (config) {\n        validateConfig(config);\n        this.config = config;\n        this.navigated = false;\n    };\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    Router.prototype.ngOnDestroy = function () { this.dispose(); };\n    /**\n     * Disposes of the router\n     * @return {?}\n     */\n    Router.prototype.dispose = function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = ((null));\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    Router.prototype.createUrlTree = function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"isDevMode\"])() && preserveQueryParams && (console) && (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var /** @type {?} */ a = relativeTo || this.routerState.root;\n        var /** @type {?} */ f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var /** @type {?} */ q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = Object.assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, /** @type {?} */ ((q)), /** @type {?} */ ((f)));\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigateByUrl = function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var /** @type {?} */ urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        var /** @type {?} */ mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigate = function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        if (typeof extras.queryParams === 'object' && extras.queryParams !== null) {\n            extras.queryParams = this.removeEmptyProps(extras.queryParams);\n        }\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n    /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.parseUrl = function (url) { return this.urlSerializer.parse(url); };\n    /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    Router.prototype.isActive = function (url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var /** @type {?} */ urlTree = this.urlSerializer.parse(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    Router.prototype.removeEmptyProps = function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var /** @type {?} */ value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.processNavigations = function () {\n        var _this = this;\n        __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__[\"concatMap\"]\n            .call(this.navigations, function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null));\n            }\n        })\n            .subscribe(function () { });\n    };\n    /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    Router.prototype.scheduleNavigation = function (rawUrl, source, extras) {\n        var /** @type {?} */ lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var /** @type {?} */ resolve = null;\n        var /** @type {?} */ reject = null;\n        var /** @type {?} */ promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var /** @type {?} */ id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    Router.prototype.executeScheduledNavigation = function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject;\n        var /** @type {?} */ url = this.urlHandlingStrategy.extract(rawUrl);\n        var /** @type {?} */ urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null); })\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} shouldPreventPushState\n     * @param {?} shouldReplaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    Router.prototype.runNavigate = function (url, rawUrl, shouldPreventPushState, shouldReplaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            this.location.go(this.urlSerializer.serialize(this.currentUrlTree));\n            this.routerEvents.next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var /** @type {?} */ urlAndSnapshot$;\n            if (!precreatedState) {\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                var /** @type {?} */ redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(redirectsApplied$, function (appliedUrl) {\n                    return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl)), function (snapshot) {\n                        _this.routerEvents.next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    });\n                });\n            }\n            else {\n                urlAndSnapshot$ = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var /** @type {?} */ beforePreactivationDone$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(urlAndSnapshot$, function (p) {\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(_this.hooks.beforePreactivation(p.snapshot), function () { return p; });\n            });\n            // run preactivation: guards and data resolvers\n            var /** @type {?} */ preActivation;\n            var /** @type {?} */ preactivationTraverse$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(beforePreactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                preActivation =\n                    new PreActivation(snapshot, _this.currentRouterState.snapshot, moduleInjector);\n                preActivation.traverse(_this.rootContexts);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            });\n            var /** @type {?} */ preactivationCheckGuards$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(preactivationTraverse$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                if (_this.navigationId !== id)\n                    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(false);\n                _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), appliedUrl, snapshot));\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(preActivation.checkGuards(), function (shouldActivate) {\n                    _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), appliedUrl, snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                });\n            });\n            var /** @type {?} */ preactivationResolveData$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(preactivationCheckGuards$, function (p) {\n                if (_this.navigationId !== id)\n                    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                    return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(preActivation.resolveData(), function () {\n                        _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                        return p;\n                    });\n                }\n                else {\n                    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(p);\n                }\n            });\n            var /** @type {?} */ preactivationDone$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(preactivationResolveData$, function (p) {\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(_this.hooks.afterPreactivation(p.snapshot), function () { return p; });\n            });\n            // create router state\n            // this operation has side effects => route state is being affected\n            var /** @type {?} */ routerState$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(preactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot, shouldActivate = _a.shouldActivate;\n                if (shouldActivate) {\n                    var /** @type {?} */ state = createRouterState(_this.routeReuseStrategy, snapshot, _this.currentRouterState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            });\n            // applied the new router state\n            // this operation has side effects\n            var /** @type {?} */ navigationIsSuccessful;\n            var /** @type {?} */ storedState = _this.currentRouterState;\n            var /** @type {?} */ storedUrl = _this.currentUrlTree;\n            routerState$\n                .forEach(function (_a) {\n                var appliedUrl = _a.appliedUrl, state = _a.state, shouldActivate = _a.shouldActivate;\n                if (!shouldActivate || id !== _this.navigationId) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.currentRouterState = state;\n                if (!shouldPreventPushState) {\n                    var /** @type {?} */ path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                    if (_this.location.isCurrentPathEqualTo(path) || shouldReplaceUrl) {\n                        _this.location.replaceState(path);\n                    }\n                    else {\n                        _this.location.go(path);\n                    }\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState)\n                    .activate(_this.rootContexts);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    _this.routerEvents.next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        rejectPromise(ee);\n                    }\n                }\n                _this.currentRouterState = storedState;\n                _this.currentUrlTree = storedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.location.replaceState(_this.serializeUrl(_this.rawUrlTree));\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.resetUrlToCurrentUrlTree = function () {\n        var /** @type {?} */ path = this.urlSerializer.serialize(this.rawUrlTree);\n        this.location.replaceState(path);\n    };\n    return Router;\n}());\nvar CanActivate = (function () {\n    /**\n     * @param {?} path\n     */\n    function CanActivate(path) {\n        this.path = path;\n    }\n    Object.defineProperty(CanActivate.prototype, \"route\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    return CanActivate;\n}());\nvar CanDeactivate = (function () {\n    /**\n     * @param {?} component\n     * @param {?} route\n     */\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\nvar PreActivation = (function () {\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @param {?} moduleInjector\n     */\n    function PreActivation(future, curr, moduleInjector) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    PreActivation.prototype.traverse = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.future._root;\n        var /** @type {?} */ currRoot = this.curr ? this.curr._root : null;\n        this.traverseChildRoutes(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.checkGuards = function () {\n        var _this = this;\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(true);\n        }\n        var /** @type {?} */ canDeactivate$ = this.runCanDeactivateChecks();\n        return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(canDeactivate$, function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(false); });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.resolveData = function () {\n        var _this = this;\n        if (!this.isActivating())\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null);\n        var /** @type {?} */ checks$ = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__[\"concatMap\"].call(checks$, function (check) { return _this.runResolve(check.route); });\n        return __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce__[\"reduce\"].call(runningChecks$, function (_, __) { return _; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseChildRoutes = function (futureNode, currNode, contexts, futurePath) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            _this.traverseRoutes(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) { return _this.deactivateRouteAndItsChildren(v, /** @type {?} */ ((contexts)).getContext(k)); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseRoutes = function (futureNode, currNode, parentContexts, futurePath) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        var /** @type {?} */ context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future._routeConfig === curr._routeConfig) {\n            var /** @type {?} */ shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, /** @type {?} */ ((future._routeConfig)).runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.traverseChildRoutes(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                var /** @type {?} */ outlet = ((((context)).outlet));\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.traverseChildRoutes(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    };\n    /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(route);\n        var /** @type {?} */ r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                _this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                _this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(this.canDeactivateChecks);\n        var /** @type {?} */ runningChecks$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(checks$, function (check) { return _this.runCanDeactivate(check.component, check.route); });\n        return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__[\"every\"].call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__[\"concatMap\"].call(checks$, function (check) { return andObservables(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])([_this.runCanActivateChild(check.path), _this.runCanActivate(check.route)])); });\n        return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__[\"every\"].call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivate = function (future) {\n        var _this = this;\n        var /** @type {?} */ canActivate = future._routeConfig ? future._routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(true);\n        var /** @type {?} */ obs = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(canActivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, future);\n            var /** @type {?} */ observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__[\"first\"].call(observable);\n        });\n        return andObservables(obs);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChild = function (path) {\n        var _this = this;\n        var /** @type {?} */ future = path[path.length - 1];\n        var /** @type {?} */ canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(__WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(canActivateChildGuards), function (d) {\n            var /** @type {?} */ obs = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(d.guards), function (c) {\n                var /** @type {?} */ guard = _this.getToken(c, d.node);\n                var /** @type {?} */ observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__[\"first\"].call(observable);\n            });\n            return andObservables(obs);\n        }));\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    PreActivation.prototype.extractCanActivateChild = function (p) {\n        var /** @type {?} */ canActivateChild = p._routeConfig ? p._routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivate = function (component, curr) {\n        var _this = this;\n        var /** @type {?} */ canDeactivate = curr && curr._routeConfig ? curr._routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(true);\n        var /** @type {?} */ canDeactivate$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(canDeactivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, curr);\n            var /** @type {?} */ observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__[\"first\"].call(observable);\n        });\n        return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__[\"every\"].call(canDeactivate$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runResolve = function (future) {\n        var /** @type {?} */ resolve = future._resolve;\n        return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.resolveNode(resolve, future), function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = Object.assign({}, future.data, inheritedParamsDataResolve(future).resolve);\n            return null;\n        });\n    };\n    /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.resolveNode = function (resolve, future) {\n        var _this = this;\n        var /** @type {?} */ keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])({});\n        }\n        if (keys.length === 1) {\n            var /** @type {?} */ key_1 = keys[0];\n            return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.getResolver(resolve[key_1], future), function (value) {\n                return _a = {}, _a[key_1] = value, _a;\n                var _a;\n            });\n        }\n        var /** @type {?} */ data = {};\n        var /** @type {?} */ runningResolvers$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(keys), function (key) {\n            return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(_this.getResolver(resolve[key], future), function (value) {\n                data[key] = value;\n                return value;\n            });\n        });\n        return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__[\"last\"].call(runningResolvers$), function () { return data; });\n    };\n    /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.getResolver = function (injectionToken, future) {\n        var /** @type {?} */ resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    };\n    /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.getToken = function (token, snapshot) {\n        var /** @type {?} */ config = closestLoadedConfig(snapshot);\n        var /** @type {?} */ injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\nvar ActivateRoutes = (function () {\n    /**\n     * @param {?} routeReuseStrategy\n     * @param {?} futureState\n     * @param {?} currState\n     */\n    function ActivateRoutes(routeReuseStrategy, futureState, currState) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activate = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.futureState._root;\n        var /** @type {?} */ currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var /** @type {?} */ childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var /** @type {?} */ componentRef = context.outlet.detach();\n            var /** @type {?} */ contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n        var _this = this;\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var /** @type {?} */ children = nodeChildrenAsMap(route);\n            var /** @type {?} */ contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) { _this.activateRoutes(c, children[c.value.outlet], contexts); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var /** @type {?} */ stored = ((this.routeReuseStrategy.retrieve(future.snapshot)));\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var /** @type {?} */ config = parentLoadedConfig(future.snapshot);\n                    var /** @type {?} */ cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot) {\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap(node) {\n    var /** @type {?} */ map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands) {\n    for (var /** @type {?} */ i = 0; i < commands.length; i++) {\n        var /** @type {?} */ cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * \\@howToUse\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`\n *\n * When linking to this `user/:name` route, you can write:\n * `<a routerLink='/user/bob'>link to user component</a>`\n *\n * \\@description\n *\n * The RouterLink directives let you link to specific parts of your app.\n *\n * When the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - 'merge' merge the queryParams into the current queryParams\n *  - 'preserve' preserve the current queryParams\n *  - default / '' use the queryParams only\n *  same options for {\\@link NavigationExtras#queryParamsHandling}\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * \\@ngModule RouterModule\n *\n * See {\\@link Router#createUrlTree} for more information.\n *\n * \\@stable\n */\nvar RouterLink = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} tabIndex\n     * @param {?} renderer\n     * @param {?} el\n     */\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"isDevMode\"])() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLink.prototype.onClick = function () {\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLink;\n}());\nRouterLink.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Directive\"], args: [{ selector: ':not(a)[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLink.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Attribute\"], args: ['tabindex',] },] },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ElementRef\"], },\n]; };\nRouterLink.propDecorators = {\n    'queryParams': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'fragment': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'queryParamsHandling': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'preserveFragment': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'skipLocationChange': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'replaceUrl': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'routerLink': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'preserveQueryParams': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'onClick': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"HostListener\"], args: ['click',] },],\n};\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * See {\\@link RouterLink} for more information.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkWithHref = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} locationStrategy\n     */\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"isDevMode\"])() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLinkWithHref;\n}());\nRouterLinkWithHref.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Directive\"], args: [{ selector: 'a[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkWithHref.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"LocationStrategy\"], },\n]; };\nRouterLinkWithHref.propDecorators = {\n    'target': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"HostBinding\"], args: ['attr.target',] }, { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'queryParams': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'fragment': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'queryParamsHandling': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'preserveFragment': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'skipLocationChange': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'replaceUrl': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'href': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"HostBinding\"] },],\n    'routerLink': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'preserveQueryParams': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'onClick': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"HostListener\"], args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] },],\n};\n/**\n * @param {?} s\n * @return {?}\n */\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n *\n * \\@howToUse\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * \\@description\n *\n * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkActive = (function () {\n    /**\n     * @param {?} router\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} cdr\n     */\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.active = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkActive.prototype, \"isActive\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.active; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        set: function (data) {\n            var /** @type {?} */ classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.update = function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        var /** @type {?} */ hasActiveLinks = this.hasActiveLinks();\n        // react only when status has changed to prevent unnecessary dom updates\n        if (this.active !== hasActiveLinks) {\n            this.classes.forEach(function (c) {\n                if (hasActiveLinks) {\n                    _this.renderer.addClass(_this.element.nativeElement, c);\n                }\n                else {\n                    _this.renderer.removeClass(_this.element.nativeElement, c);\n                }\n            });\n            Promise.resolve(hasActiveLinks).then(function (active) { return _this.active = active; });\n        }\n    };\n    /**\n     * @param {?} router\n     * @return {?}\n     */\n    RouterLinkActive.prototype.isLinkActive = function (router) {\n        var _this = this;\n        return function (link) { return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact); };\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.hasActiveLinks = function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    return RouterLinkActive;\n}());\nRouterLinkActive.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Directive\"], args: [{\n                selector: '[routerLinkActive]',\n                exportAs: 'routerLinkActive',\n            },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkActive.ctorParameters = function () { return [\n    { type: Router, },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ChangeDetectorRef\"], },\n]; };\nRouterLinkActive.propDecorators = {\n    'links': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ContentChildren\"], args: [RouterLink, { descendants: true },] },],\n    'linksWithHrefs': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ContentChildren\"], args: [RouterLinkWithHref, { descendants: true },] },],\n    'routerLinkActiveOptions': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'routerLinkActive': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar OutletContext = (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar ChildrenOutletContexts = (function () {\n    function ChildrenOutletContexts() {\n        this.contexts = new Map();\n    }\n    /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n        var /** @type {?} */ context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n        var /** @type {?} */ contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n * state.\n *\n * \\@howToUse\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterOutlet = (function () {\n    /**\n     * @param {?} parentContexts\n     * @param {?} location\n     * @param {?} resolver\n     * @param {?} name\n     * @param {?} changeDetector\n     */\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"EventEmitter\"]();\n        this.deactivateEvents = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"EventEmitter\"]();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnInit = function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var /** @type {?} */ context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"locationInjector\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.location.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"locationFactoryResolver\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return (this._activatedRoute);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    RouterOutlet.prototype.detach = function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var /** @type {?} */ cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.deactivate = function () {\n        if (this.activated) {\n            var /** @type {?} */ c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n        var /** @type {?} */ component = (((snapshot._routeConfig)).component);\n        resolver = resolver || this.resolver;\n        var /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n        var /** @type {?} */ childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var /** @type {?} */ injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    return RouterOutlet;\n}());\nRouterOutlet.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Directive\"], args: [{ selector: 'router-outlet', exportAs: 'outlet' },] },\n];\n/**\n * @nocollapse\n */\nRouterOutlet.ctorParameters = function () { return [\n    { type: ChildrenOutletContexts, },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ViewContainerRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ComponentFactoryResolver\"], },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Attribute\"], args: ['name',] },] },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ChangeDetectorRef\"], },\n]; };\nRouterOutlet.propDecorators = {\n    'activateEvents': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Output\"], args: ['activate',] },],\n    'deactivateEvents': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Output\"], args: ['deactivate',] },],\n};\nvar OutletInjector = (function () {\n    /**\n     * @param {?} route\n     * @param {?} childContexts\n     * @param {?} parent\n     */\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    OutletInjector.prototype.get = function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * \\@whatItDoes Provides a preloading strategy.\n *\n * \\@experimental\n * @abstract\n */\nvar PreloadingStrategy = (function () {\n    function PreloadingStrategy() {\n    }\n    /**\n     * @abstract\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadingStrategy.prototype.preload = function (route, fn) { };\n    return PreloadingStrategy;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * \\@howToUse\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * \\@experimental\n */\nvar PreloadAllModules = (function () {\n    function PreloadAllModules() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadAllModules.prototype.preload = function (route, fn) {\n        return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(fn(), function () { return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null); });\n    };\n    return PreloadAllModules;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that does not preload any modules.\n *\n * \\@description\n *\n * This strategy is enabled by default.\n *\n * \\@experimental\n */\nvar NoPreloading = (function () {\n    function NoPreloading() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    NoPreloading.prototype.preload = function (route, fn) { return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * \\@stable\n */\nvar RouterPreloader = (function () {\n    /**\n     * @param {?} router\n     * @param {?} moduleLoader\n     * @param {?} compiler\n     * @param {?} injector\n     * @param {?} preloadingStrategy\n     */\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    ;\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.setUpPreloading = function () {\n        var _this = this;\n        var /** @type {?} */ navigations$ = __WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter__[\"filter\"].call(this.router.events, function (e) { return e instanceof NavigationEnd; });\n        this.subscription = __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__[\"concatMap\"].call(navigations$, function () { return _this.preload(); }).subscribe(function () { });\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.preload = function () {\n        var /** @type {?} */ ngModule = this.injector.get(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleRef\"]);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n        var /** @type {?} */ res = [];\n        for (var _i = 0, routes_5 = routes; _i < routes_5.length; _i++) {\n            var route = routes_5[_i];\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                var /** @type {?} */ childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                // no config loaded, fetch the config\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n                // recurse into children\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return __WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__[\"mergeAll\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(res));\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var /** @type {?} */ loaded$ = _this.loader.load(ngModule.injector, route);\n            return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(loaded$, function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            });\n        });\n    };\n    return RouterPreloader;\n}());\nRouterPreloader.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nRouterPreloader.ctorParameters = function () { return [\n    { type: Router, },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleFactoryLoader\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Compiler\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injector\"], },\n    { type: PreloadingStrategy, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Contains a list of directives\n * \\@stable\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * \\@whatItDoes Is used in DI to configure the router.\n * \\@stable\n */\nvar ROUTER_CONFIGURATION = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"InjectionToken\"]('ROUTER_CONFIGURATION');\n/**\n * \\@docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"InjectionToken\"]('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"Location\"],\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ApplicationRef\"], UrlSerializer, ChildrenOutletContexts, __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"Location\"], __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injector\"],\n            __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleFactoryLoader\"], __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Compiler\"], ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"]()], [RouteReuseStrategy, new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"]()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleFactoryLoader\"], useClass: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"SystemJsNgModuleLoader\"] },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\n/**\n * @return {?}\n */\nfunction routerNgProbeToken() {\n    return new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgProbeToken\"]('Router', Router);\n}\n/**\n * \\@whatItDoes Adds router directives and providers.\n *\n * \\@howToUse\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@description\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n * \\@stable\n */\nvar RouterModule = (function () {\n    /**\n     * @param {?} guard\n     * @param {?} router\n     */\n    function RouterModule(guard, router) {\n    }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options:\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    RouterModule.forRoot = function (routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"](), new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"SkipSelf\"]()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"LocationStrategy\"],\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"PlatformLocation\"], [new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Inject\"](__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"APP_BASE_HREF\"]), new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"]()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgProbeToken\"], multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterModule.forChild = function (routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    };\n    return RouterModule;\n}());\nRouterModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModule\"], args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] },\n];\n/**\n * @nocollapse\n */\nRouterModule.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Inject\"], args: [ROUTER_FORROOT_GUARD,] },] },\n    { type: Router, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"] },] },\n]; };\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"HashLocationStrategy\"](platformLocationStrategy, baseHref) :\n        new __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"PathLocationStrategy\"](platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * \\@whatItDoes Registers routes.\n *\n * \\@howToUse\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@stable\n * @param {?} routes\n * @return {?}\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ANALYZE_FOR_ENTRY_COMPONENTS\"], multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var /** @type {?} */ router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var /** @type {?} */ dom_1 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_20__angular_platform_browser__[\"ɵgetDOM\"])();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + ((e.constructor)).name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = (function () {\n    /**\n     * @param {?} injector\n     */\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__[\"Subject\"]();\n    }\n    /**\n     * @return {?}\n     */\n    RouterInitializer.prototype.appInitializer = function () {\n        var _this = this;\n        var /** @type {?} */ p = this.injector.get(__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"LOCATION_INITIALIZED\"], Promise.resolve(null));\n        return p.then(function () {\n            var /** @type {?} */ resolve = ((null));\n            var /** @type {?} */ res = new Promise(function (r) { return resolve = r; });\n            var /** @type {?} */ router = _this.injector.get(Router);\n            var /** @type {?} */ opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null));\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n        var /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n        var /** @type {?} */ preloader = this.injector.get(RouterPreloader);\n        var /** @type {?} */ router = this.injector.get(Router);\n        var /** @type {?} */ ref = this.injector.get(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ApplicationRef\"]);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(/** @type {?} */ ((null)));\n        this.resultOfPreactivationDone.complete();\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    return RouterInitializer;\n}());\nRouterInitializer.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nRouterInitializer.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injector\"], },\n]; };\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * \\@experimental\n */\nvar ROUTER_INITIALIZER = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"InjectionToken\"]('Router Initializer');\n/**\n * @return {?}\n */\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"APP_INITIALIZER\"],\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"APP_BOOTSTRAP_LISTENER\"], multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Version\"]('4.3.5');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=router.es5.js.map\n\n\n/***/ }),\n\n/***/ 53:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(4);\r\nvar forms_1 = __webpack_require__(28);\r\nvar ng_templates_directive_1 = __webpack_require__(54);\r\nvar virtual_scroll_component_1 = __webpack_require__(55);\r\nvar ng_select_types_1 = __webpack_require__(41);\r\nvar items_list_1 = __webpack_require__(112);\r\nvar Subject_1 = __webpack_require__(5);\r\nvar NGB_ANG_SELECT_VALUE_ACCESSOR = {\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    useExisting: core_1.forwardRef(function () { return NgSelectComponent; }),\r\n    multi: true\r\n};\r\nvar NgSelectComponent = /** @class */ (function () {\r\n    function NgSelectComponent(config, changeDetectorRef, elementRef, renderer) {\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.elementRef = elementRef;\r\n        this.renderer = renderer;\r\n        this.clearable = true;\r\n        this.notFoundText = 'No items found';\r\n        this.typeToSearchText = 'Type to search';\r\n        this.multiple = false;\r\n        // output events\r\n        this.onBlur = new core_1.EventEmitter();\r\n        this.onFocus = new core_1.EventEmitter();\r\n        this.onChange = new core_1.EventEmitter();\r\n        this.onOpen = new core_1.EventEmitter();\r\n        this.onClose = new core_1.EventEmitter();\r\n        this.onSearch = new core_1.EventEmitter();\r\n        this.isOpen = false;\r\n        this.isFocused = false;\r\n        this.isDisabled = false;\r\n        this.itemsList = new items_list_1.ItemsList([], false);\r\n        this.viewPortItems = [];\r\n        this.isLoading = false;\r\n        this.filterValue = null;\r\n        this.propagateChange = function (_) { };\r\n        this.disposeDocumentClickListener = function () { };\r\n        this.mergeConfig(config);\r\n    }\r\n    Object.defineProperty(NgSelectComponent.prototype, \"single\", {\r\n        get: function () {\r\n            return !this.multiple;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NgSelectComponent.prototype, \"items\", {\r\n        get: function () {\r\n            return this.itemsList.items;\r\n        },\r\n        set: function (items) {\r\n            this.itemsList = new items_list_1.ItemsList(items || [], this.multiple);\r\n            if (this.isTypeahead()) {\r\n                this.handleItemsChange();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NgSelectComponent.prototype, \"value\", {\r\n        get: function () {\r\n            return this.itemsList.value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    NgSelectComponent.prototype.ngOnInit = function () {\r\n        this.handleDocumentClick();\r\n        this.bindLabel = this.bindLabel || 'label';\r\n    };\r\n    NgSelectComponent.prototype.ngOnDestroy = function () {\r\n        this.changeDetectorRef.detach();\r\n        this.disposeDocumentClickListener();\r\n    };\r\n    NgSelectComponent.prototype.handleKeyDown = function ($event) {\r\n        if (ng_select_types_1.KeyCode[$event.which]) {\r\n            switch ($event.which) {\r\n                case ng_select_types_1.KeyCode.ArrowDown:\r\n                    this.handleArrowDown($event);\r\n                    break;\r\n                case ng_select_types_1.KeyCode.ArrowUp:\r\n                    this.handleArrowUp($event);\r\n                    break;\r\n                case ng_select_types_1.KeyCode.Space:\r\n                    this.handleSpace($event);\r\n                    break;\r\n                case ng_select_types_1.KeyCode.Enter:\r\n                    this.handleEnter($event);\r\n                    break;\r\n                case ng_select_types_1.KeyCode.Tab:\r\n                    this.handleTab($event);\r\n                    break;\r\n                case ng_select_types_1.KeyCode.Esc:\r\n                    this.close();\r\n                    break;\r\n                case ng_select_types_1.KeyCode.Backspace:\r\n                    this.handleBackspace();\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.handleArrowClick = function ($event) {\r\n        $event.stopPropagation();\r\n        if (this.isOpen) {\r\n            this.close();\r\n        }\r\n        else {\r\n            this.open();\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.handleSelectClick = function ($event) {\r\n        $event.stopPropagation();\r\n        this.open();\r\n    };\r\n    NgSelectComponent.prototype.handleClearClick = function ($event) {\r\n        $event.stopPropagation();\r\n        this.clear();\r\n    };\r\n    NgSelectComponent.prototype.clear = function () {\r\n        if (!this.clearable) {\r\n            return;\r\n        }\r\n        this.itemsList.clearSelected();\r\n        this.clearSearch();\r\n        this.notifyModelChanged();\r\n    };\r\n    NgSelectComponent.prototype.writeValue = function (value) {\r\n        var _this = this;\r\n        this.itemsList.clearSelected();\r\n        if (value) {\r\n            if (this.multiple) {\r\n                value.forEach(function (item) {\r\n                    _this.selectWriteValue(item);\r\n                });\r\n            }\r\n            else {\r\n                this.selectWriteValue(value);\r\n            }\r\n        }\r\n        this.detectChanges();\r\n    };\r\n    NgSelectComponent.prototype.registerOnChange = function (fn) {\r\n        this.propagateChange = fn;\r\n    };\r\n    NgSelectComponent.prototype.registerOnTouched = function (fn) {\r\n        // TODO: touch event\r\n    };\r\n    NgSelectComponent.prototype.setDisabledState = function (isDisabled) {\r\n        this.isDisabled = isDisabled;\r\n    };\r\n    NgSelectComponent.prototype.open = function () {\r\n        if (this.isDisabled || this.isOpen) {\r\n            return;\r\n        }\r\n        this.isOpen = true;\r\n        this.itemsList.markItem();\r\n        this.scrollToMarked();\r\n        this.focusSearchInput();\r\n        this.onOpen.emit();\r\n    };\r\n    NgSelectComponent.prototype.close = function () {\r\n        if (!this.isOpen) {\r\n            return;\r\n        }\r\n        this.isOpen = false;\r\n        this.clearSearch();\r\n        this.onClose.emit();\r\n    };\r\n    NgSelectComponent.prototype.getLabelValue = function (value) {\r\n        return value ? value[this.bindLabel] : '';\r\n    };\r\n    NgSelectComponent.prototype.getDisplayTemplateContext = function () {\r\n        return this.itemsList.value ? { item: this.itemsList.value } : { item: {} };\r\n    };\r\n    NgSelectComponent.prototype.toggle = function (item) {\r\n        if (!item || item.disabled || this.isDisabled) {\r\n            return;\r\n        }\r\n        if (this.multiple && item.selected) {\r\n            this.unselect(item);\r\n        }\r\n        else {\r\n            this.select(item);\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.select = function (item) {\r\n        if (!item.selected) {\r\n            this.itemsList.select(item);\r\n            this.updateModel();\r\n        }\r\n        if (this.single) {\r\n            this.close();\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.unselect = function (item) {\r\n        this.itemsList.unselect(item);\r\n        this.updateModel();\r\n    };\r\n    NgSelectComponent.prototype.showPlaceholder = function () {\r\n        return this.placeholder && !this.isValueSet(this.value) && !this.filterValue;\r\n    };\r\n    NgSelectComponent.prototype.showValue = function () {\r\n        return !this.filterValue && this.isValueSet(this.value);\r\n    };\r\n    NgSelectComponent.prototype.showClear = function () {\r\n        return this.clearable && (this.isValueSet(this.value) || this.filterValue) && !this.isDisabled;\r\n    };\r\n    NgSelectComponent.prototype.showFilter = function () {\r\n        return !this.isDisabled;\r\n    };\r\n    NgSelectComponent.prototype.showNoItemsFound = function () {\r\n        var empty = this.itemsList.filteredItems.length === 0;\r\n        return (empty && !this.isTypeahead()) ||\r\n            (empty && this.isTypeahead() && this.filterValue && !this.isLoading);\r\n    };\r\n    NgSelectComponent.prototype.showTypeToSearch = function () {\r\n        var empty = this.itemsList.filteredItems.length === 0;\r\n        return empty && this.isTypeahead() && !this.filterValue && !this.isLoading;\r\n    };\r\n    NgSelectComponent.prototype.onFilter = function ($event) {\r\n        if (!this.isOpen) {\r\n            this.open();\r\n        }\r\n        this.filterValue = $event.target.value;\r\n        if (this.isTypeahead()) {\r\n            this.isLoading = true;\r\n            this.typeahead.next(this.filterValue);\r\n        }\r\n        else {\r\n            this.itemsList.filter(this.filterValue, this.bindLabel);\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.onInputFocus = function ($event) {\r\n        this.isFocused = true;\r\n        this.onFocus.emit($event);\r\n    };\r\n    NgSelectComponent.prototype.onInputBlur = function ($event) {\r\n        this.isFocused = false;\r\n        this.onBlur.emit($event);\r\n    };\r\n    NgSelectComponent.prototype.onItemHover = function (item) {\r\n        if (item.disabled) {\r\n            return;\r\n        }\r\n        this.itemsList.markItem(item);\r\n    };\r\n    NgSelectComponent.prototype.handleDocumentClick = function () {\r\n        var _this = this;\r\n        var handler = function ($event) {\r\n            // prevent close if clicked on select\r\n            if (_this.elementRef.nativeElement.contains($event.target)) {\r\n                return;\r\n            }\r\n            // prevent close if clicked on dropdown menu\r\n            var dropdown = _this.getDropdownMenu();\r\n            if (dropdown && dropdown.contains($event.target)) {\r\n                return;\r\n            }\r\n            if (_this.isFocused) {\r\n                _this.onInputBlur($event);\r\n            }\r\n            if (_this.isOpen) {\r\n                _this.close();\r\n            }\r\n        };\r\n        this.disposeDocumentClickListener = this.renderer.listen('document', 'click', handler);\r\n    };\r\n    NgSelectComponent.prototype.validateWriteValue = function (value) {\r\n        if (value instanceof Object && this.bindValue) {\r\n            throw new Error('Binding object with bindValue is not allowed.');\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.handleItemsChange = function () {\r\n        this.isLoading = false;\r\n        this.itemsList.markItem();\r\n    };\r\n    NgSelectComponent.prototype.selectWriteValue = function (value) {\r\n        var _this = this;\r\n        this.validateWriteValue(value);\r\n        var index = -1;\r\n        if (this.bindValue) {\r\n            index = this.itemsList.items.findIndex(function (x) { return x[_this.bindValue] === value; });\r\n        }\r\n        else {\r\n            index = this.itemsList.items.indexOf(value);\r\n            index = index > -1 ? index :\r\n                this.itemsList.items.findIndex(function (x) { return x[_this.bindLabel] === value[_this.bindLabel]; });\r\n        }\r\n        if (index > -1) {\r\n            this.itemsList.select(this.itemsList.items[index]);\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.updateModel = function () {\r\n        this.notifyModelChanged();\r\n        this.changeDetectorRef.markForCheck();\r\n    };\r\n    NgSelectComponent.prototype.clearSearch = function () {\r\n        this.filterValue = null;\r\n        this.itemsList.clearFilter();\r\n    };\r\n    NgSelectComponent.prototype.focusSearchInput = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            _this.filterInput.nativeElement.focus(); // TODO: this won't work on mobile\r\n        });\r\n    };\r\n    NgSelectComponent.prototype.scrollToMarked = function () {\r\n        this.dropdownList.scrollInto(this.itemsList.markedItem);\r\n    };\r\n    NgSelectComponent.prototype.handleTab = function ($event) {\r\n        if (this.isOpen) {\r\n            this.select(this.itemsList.markedItem);\r\n            if (this.multiple) {\r\n                this.close();\r\n            }\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.handleEnter = function ($event) {\r\n        if (this.isOpen) {\r\n            this.toggle(this.itemsList.markedItem);\r\n        }\r\n        $event.preventDefault();\r\n    };\r\n    NgSelectComponent.prototype.handleSpace = function ($event) {\r\n        if (this.isOpen) {\r\n            return;\r\n        }\r\n        this.open();\r\n        $event.preventDefault();\r\n    };\r\n    NgSelectComponent.prototype.handleArrowDown = function ($event) {\r\n        if (!this.isOpen) {\r\n            this.open();\r\n        }\r\n        else {\r\n            this.itemsList.markNextItem();\r\n            this.scrollToMarked();\r\n        }\r\n        $event.preventDefault();\r\n    };\r\n    NgSelectComponent.prototype.handleArrowUp = function ($event) {\r\n        this.itemsList.markPreviousItem();\r\n        this.scrollToMarked();\r\n        $event.preventDefault();\r\n    };\r\n    NgSelectComponent.prototype.handleBackspace = function () {\r\n        if (this.multiple) {\r\n            this.itemsList.unselectLastItem();\r\n            this.updateModel();\r\n        }\r\n        else {\r\n            if (this.filterValue) {\r\n                return;\r\n            }\r\n            this.clear();\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.notifyModelChanged = function () {\r\n        var _this = this;\r\n        var value = this.itemsList.value;\r\n        if (!value) {\r\n            this.propagateChange(null);\r\n        }\r\n        else if (this.bindValue) {\r\n            var bindValue = Array.isArray(value) ?\r\n                value.map(function (x) { return x[_this.bindValue]; }) :\r\n                value[this.bindValue];\r\n            this.propagateChange(bindValue);\r\n        }\r\n        else {\r\n            this.propagateChange(value);\r\n        }\r\n        this.onChange.emit(value);\r\n    };\r\n    NgSelectComponent.prototype.getDropdownMenu = function () {\r\n        if (!this.isOpen || !this.dropdownList) {\r\n            return null;\r\n        }\r\n        return this.elementRef.nativeElement.querySelector('.as-menu-outer');\r\n    };\r\n    NgSelectComponent.prototype.isTypeahead = function () {\r\n        return this.typeahead && this.typeahead.observers.length > 0;\r\n    };\r\n    NgSelectComponent.prototype.detectChanges = function () {\r\n        if (!this.changeDetectorRef.destroyed) {\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n    };\r\n    NgSelectComponent.prototype.isValueSet = function (value) {\r\n        if (this.multiple) {\r\n            return !!value && value.length > 0;\r\n        }\r\n        return !!value;\r\n    };\r\n    NgSelectComponent.prototype.mergeConfig = function (config) {\r\n        if (!config) {\r\n            return;\r\n        }\r\n        this.notFoundText = config.notFoundText || this.notFoundText;\r\n        this.typeToSearchText = config.typeToSearchText || this.typeToSearchText;\r\n    };\r\n    __decorate([\r\n        core_1.ContentChild(ng_templates_directive_1.NgOptionTemplateDirective, { read: core_1.TemplateRef }),\r\n        __metadata(\"design:type\", core_1.TemplateRef)\r\n    ], NgSelectComponent.prototype, \"optionTemplate\", void 0);\r\n    __decorate([\r\n        core_1.ContentChild(ng_templates_directive_1.NgLabelTemplateDirective, { read: core_1.TemplateRef }),\r\n        __metadata(\"design:type\", core_1.TemplateRef)\r\n    ], NgSelectComponent.prototype, \"labelTemplate\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild(virtual_scroll_component_1.VirtualScrollComponent),\r\n        __metadata(\"design:type\", virtual_scroll_component_1.VirtualScrollComponent)\r\n    ], NgSelectComponent.prototype, \"dropdownList\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('filterInput'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"filterInput\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], NgSelectComponent.prototype, \"bindLabel\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], NgSelectComponent.prototype, \"bindValue\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"clearable\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], NgSelectComponent.prototype, \"placeholder\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"notFoundText\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"typeToSearchText\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Subject_1.Subject)\r\n    ], NgSelectComponent.prototype, \"typeahead\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        core_1.HostBinding('class.as-multiple'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"multiple\", void 0);\r\n    __decorate([\r\n        core_1.Output('blur'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"onBlur\", void 0);\r\n    __decorate([\r\n        core_1.Output('focus'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"onFocus\", void 0);\r\n    __decorate([\r\n        core_1.Output('change'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"onChange\", void 0);\r\n    __decorate([\r\n        core_1.Output('open'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"onOpen\", void 0);\r\n    __decorate([\r\n        core_1.Output('close'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"onClose\", void 0);\r\n    __decorate([\r\n        core_1.Output('search'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"onSearch\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('class.as-single'),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], NgSelectComponent.prototype, \"single\", null);\r\n    __decorate([\r\n        core_1.HostBinding('class.opened'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"isOpen\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('class.focused'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"isFocused\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('class.disabled'),\r\n        __metadata(\"design:type\", Object)\r\n    ], NgSelectComponent.prototype, \"isDisabled\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array),\r\n        __metadata(\"design:paramtypes\", [Array])\r\n    ], NgSelectComponent.prototype, \"items\", null);\r\n    __decorate([\r\n        core_1.HostListener('keydown', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [KeyboardEvent]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], NgSelectComponent.prototype, \"handleKeyDown\", null);\r\n    NgSelectComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'ng-select',\r\n            template: __webpack_require__(120),\r\n            styles: [__webpack_require__(118)],\r\n            providers: [NGB_ANG_SELECT_VALUE_ACCESSOR],\r\n            encapsulation: core_1.ViewEncapsulation.None,\r\n            changeDetection: core_1.ChangeDetectionStrategy.OnPush,\r\n            host: {\r\n                'role': 'dropdown'\r\n            }\r\n        }),\r\n        __param(0, core_1.Optional()),\r\n        __metadata(\"design:paramtypes\", [ng_select_types_1.NgSelectConfig,\r\n            core_1.ChangeDetectorRef,\r\n            core_1.ElementRef,\r\n            core_1.Renderer2])\r\n    ], NgSelectComponent);\r\n    return NgSelectComponent;\r\n}());\r\nexports.NgSelectComponent = NgSelectComponent;\r\n\n\n/***/ }),\n\n/***/ 54:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(4);\r\nvar NgOptionTemplateDirective = /** @class */ (function () {\r\n    function NgOptionTemplateDirective(template) {\r\n        this.template = template;\r\n    }\r\n    NgOptionTemplateDirective = __decorate([\r\n        core_1.Directive({ selector: '[ng-option-tmp]' }),\r\n        __metadata(\"design:paramtypes\", [core_1.TemplateRef])\r\n    ], NgOptionTemplateDirective);\r\n    return NgOptionTemplateDirective;\r\n}());\r\nexports.NgOptionTemplateDirective = NgOptionTemplateDirective;\r\nvar NgLabelTemplateDirective = /** @class */ (function () {\r\n    function NgLabelTemplateDirective(template) {\r\n        this.template = template;\r\n    }\r\n    NgLabelTemplateDirective = __decorate([\r\n        core_1.Directive({ selector: '[ng-label-tmp]' }),\r\n        __metadata(\"design:paramtypes\", [core_1.TemplateRef])\r\n    ], NgLabelTemplateDirective);\r\n    return NgLabelTemplateDirective;\r\n}());\r\nexports.NgLabelTemplateDirective = NgLabelTemplateDirective;\r\n\n\n/***/ }),\n\n/***/ 55:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * The MIT License (MIT)\r\n * Copyright (c) 2016 Rinto Jose (rintoj)\r\n * Source code https://github.com/rintoj/angular2-virtual-scroll\r\n */\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(4);\r\nvar common_1 = __webpack_require__(14);\r\nvar VirtualScrollComponent = /** @class */ (function () {\r\n    function VirtualScrollComponent(element, zone, renderer) {\r\n        this.element = element;\r\n        this.zone = zone;\r\n        this.renderer = renderer;\r\n        this.items = [];\r\n        this.bufferAmount = 0;\r\n        this.update = new core_1.EventEmitter();\r\n        this.startupLoop = true;\r\n        this.disposeScrollListener = function () { };\r\n    }\r\n    Object.defineProperty(VirtualScrollComponent.prototype, \"enabled\", {\r\n        get: function () {\r\n            return this.items && this.items.length > 20;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    VirtualScrollComponent.prototype.handleScroll = function () {\r\n        var _this = this;\r\n        var handler = function () {\r\n            if (!_this.enabled) {\r\n                _this.update.emit(_this.items);\r\n                return;\r\n            }\r\n            _this.refresh();\r\n        };\r\n        this.disposeScrollListener = this.renderer.listen(this.element.nativeElement, 'scroll', handler);\r\n    };\r\n    VirtualScrollComponent.prototype.ngOnInit = function () {\r\n        this.handleScroll();\r\n        this.scrollbarWidth = 0; // this.element.nativeElement.offsetWidth - this.element.nativeElement.clientWidth;\r\n        this.scrollbarHeight = 0; // this.element.nativeElement.offsetHeight - this.element.nativeElement.clientHeight;\r\n    };\r\n    VirtualScrollComponent.prototype.ngOnDestroy = function () {\r\n        this.disposeScrollListener();\r\n    };\r\n    VirtualScrollComponent.prototype.ngOnChanges = function (changes) {\r\n        this.previousStart = undefined;\r\n        this.previousEnd = undefined;\r\n        var items = changes.items || {};\r\n        if (changes.items !== undefined && items.previousValue === undefined ||\r\n            (items.previousValue !== undefined && items.previousValue.length === 0)) {\r\n            this.startupLoop = true;\r\n        }\r\n        this.items = items.currentValue;\r\n        this.refresh();\r\n    };\r\n    VirtualScrollComponent.prototype.refresh = function () {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            this.update.emit(this.items);\r\n            return;\r\n        }\r\n        this.zone.runOutsideAngular(function () {\r\n            requestAnimationFrame(function () { return _this.calculateItems(); });\r\n        });\r\n    };\r\n    VirtualScrollComponent.prototype.scrollInto = function (item) {\r\n        var el = this.element.nativeElement;\r\n        var index = (this.items || []).indexOf(item);\r\n        if (index < 0 || index >= (this.items || []).length) {\r\n            return;\r\n        }\r\n        var d = this.calculateDimensions();\r\n        var buffer = Math.floor(d.viewHeight / d.childHeight) - 1;\r\n        el.scrollTop = (Math.floor(index / d.itemsPerRow) * d.childHeight)\r\n            - (d.childHeight * Math.min(index, buffer));\r\n        this.refresh();\r\n    };\r\n    VirtualScrollComponent.prototype.countItemsPerRow = function () {\r\n        var offsetTop;\r\n        var itemsPerRow;\r\n        var children = this.contentElementRef.nativeElement.children;\r\n        for (itemsPerRow = 0; itemsPerRow < children.length; itemsPerRow++) {\r\n            if (offsetTop !== undefined && offsetTop !== children[itemsPerRow].offsetTop) {\r\n                break;\r\n            }\r\n            offsetTop = children[itemsPerRow].offsetTop;\r\n        }\r\n        return itemsPerRow;\r\n    };\r\n    VirtualScrollComponent.prototype.getElementsOffset = function () {\r\n        var offsetTop = 0;\r\n        if (this.containerElementRef && this.containerElementRef.nativeElement) {\r\n            offsetTop += this.containerElementRef.nativeElement.offsetTop;\r\n        }\r\n        return offsetTop;\r\n    };\r\n    VirtualScrollComponent.prototype.calculateDimensions = function () {\r\n        var el = this.element.nativeElement;\r\n        var items = this.items || [];\r\n        var itemCount = items.length;\r\n        var viewWidth = el.clientWidth - this.scrollbarWidth;\r\n        var viewHeight = el.clientHeight - this.scrollbarHeight;\r\n        var contentDimensions;\r\n        if (this.childWidth === undefined || this.childHeight === undefined) {\r\n            var content = this.contentElementRef.nativeElement;\r\n            if (this.containerElementRef && this.containerElementRef.nativeElement) {\r\n                content = this.containerElementRef.nativeElement;\r\n            }\r\n            contentDimensions = content.children[0] ? content.children[0].getBoundingClientRect() : {\r\n                width: viewWidth,\r\n                height: viewHeight\r\n            };\r\n        }\r\n        var childWidth = this.childWidth || contentDimensions.width;\r\n        var childHeight = this.childHeight || contentDimensions.height;\r\n        var itemsPerRow = Math.max(1, this.countItemsPerRow());\r\n        var itemsPerRowByCalc = Math.max(1, Math.floor(viewWidth / childWidth));\r\n        var itemsPerCol = Math.max(1, Math.floor(viewHeight / childHeight));\r\n        var scrollTop = Math.max(0, el.scrollTop);\r\n        if (itemsPerCol === 1 && Math.floor(scrollTop / this.scrollHeight * itemCount) + itemsPerRowByCalc >= itemCount) {\r\n            itemsPerRow = itemsPerRowByCalc;\r\n        }\r\n        return {\r\n            itemCount: itemCount,\r\n            viewWidth: viewWidth,\r\n            viewHeight: viewHeight,\r\n            childWidth: childWidth,\r\n            childHeight: childHeight,\r\n            itemsPerRow: itemsPerRow,\r\n            itemsPerCol: itemsPerCol,\r\n            itemsPerRowByCalc: itemsPerRowByCalc\r\n        };\r\n    };\r\n    VirtualScrollComponent.prototype.calculateItems = function () {\r\n        var _this = this;\r\n        core_1.NgZone.assertNotInAngularZone();\r\n        var el = this.element.nativeElement;\r\n        var d = this.calculateDimensions();\r\n        var items = this.items || [];\r\n        var offsetTop = this.getElementsOffset();\r\n        this.scrollHeight = d.childHeight * d.itemCount / d.itemsPerRow;\r\n        if (el.scrollTop > this.scrollHeight) {\r\n            el.scrollTop = this.scrollHeight + offsetTop;\r\n        }\r\n        var scrollTop = Math.max(0, el.scrollTop - offsetTop);\r\n        var indexByScrollTop = scrollTop / this.scrollHeight * d.itemCount / d.itemsPerRow;\r\n        var end = Math.min(d.itemCount, Math.ceil(indexByScrollTop) * d.itemsPerRow + d.itemsPerRow * (d.itemsPerCol + 1));\r\n        var maxStartEnd = end;\r\n        var modEnd = end % d.itemsPerRow;\r\n        if (modEnd) {\r\n            maxStartEnd = end + d.itemsPerRow - modEnd;\r\n        }\r\n        var maxStart = Math.max(0, maxStartEnd - d.itemsPerCol * d.itemsPerRow - d.itemsPerRow);\r\n        var start = Math.min(maxStart, Math.floor(indexByScrollTop) * d.itemsPerRow);\r\n        this.topPadding = d.childHeight * Math.ceil(start / d.itemsPerRow) - (d.childHeight * Math.min(start, this.bufferAmount));\r\n        start = !isNaN(start) ? start : -1;\r\n        end = !isNaN(end) ? end : -1;\r\n        start -= this.bufferAmount;\r\n        start = Math.max(0, start);\r\n        end += this.bufferAmount;\r\n        end = Math.min(items.length, end);\r\n        if (start !== this.previousStart || end !== this.previousEnd) {\r\n            // update the scroll list\r\n            this.zone.run(function () {\r\n                _this.update.emit(items.slice(start, end));\r\n            });\r\n            this.previousStart = start;\r\n            this.previousEnd = end;\r\n            if (this.startupLoop === true) {\r\n                this.refresh();\r\n            }\r\n        }\r\n        else if (this.startupLoop === true) {\r\n            this.startupLoop = false;\r\n            this.refresh();\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array)\r\n    ], VirtualScrollComponent.prototype, \"items\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], VirtualScrollComponent.prototype, \"scrollbarWidth\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], VirtualScrollComponent.prototype, \"scrollbarHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], VirtualScrollComponent.prototype, \"childWidth\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], VirtualScrollComponent.prototype, \"childHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], VirtualScrollComponent.prototype, \"bufferAmount\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], VirtualScrollComponent.prototype, \"update\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('content', { read: core_1.ElementRef }),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], VirtualScrollComponent.prototype, \"contentElementRef\", void 0);\r\n    __decorate([\r\n        core_1.ContentChild('container'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], VirtualScrollComponent.prototype, \"containerElementRef\", void 0);\r\n    VirtualScrollComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'virtual-scroll,[virtualScroll]',\r\n            exportAs: 'virtualScroll',\r\n            template: \"\\n        <div *ngIf=\\\"enabled\\\" class=\\\"total-padding\\\" [style.height]=\\\"scrollHeight + 'px'\\\"></div>\\n        <div #content\\n             [class.scrollable-content]=\\\"enabled\\\"\\n             [style.transform]=\\\"enabled ? 'translateY(' + topPadding + 'px)' : 'none'\\\"\\n             [style.webkitTransform]=\\\"enabled ? 'translateY(' + topPadding + 'px)' : 'none'\\\">\\n            <ng-content></ng-content>\\n        </div>\\n    \",\r\n            host: {\r\n                '[style.overflow-y]': 'parentScroll ? \\'hidden\\' : \\'auto\\''\r\n            },\r\n            styles: [\"\\n        :host {\\n            overflow: hidden;\\n            position: relative;\\n            display: block;\\n            -webkit-overflow-scrolling: touch;\\n        }\\n\\n        .scrollable-content {\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            position: absolute;\\n        }\\n\\n        .total-padding {\\n            width: 1px;\\n            opacity: 0;\\n        }\\n    \"]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, core_1.NgZone, core_1.Renderer2])\r\n    ], VirtualScrollComponent);\r\n    return VirtualScrollComponent;\r\n}());\r\nexports.VirtualScrollComponent = VirtualScrollComponent;\r\nvar VirtualScrollModule = /** @class */ (function () {\r\n    function VirtualScrollModule() {\r\n    }\r\n    VirtualScrollModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule],\r\n            exports: [VirtualScrollComponent],\r\n            declarations: [VirtualScrollComponent]\r\n        })\r\n    ], VirtualScrollModule);\r\n    return VirtualScrollModule;\r\n}());\r\nexports.VirtualScrollModule = VirtualScrollModule;\r\n\n\n/***/ }),\n\n/***/ 95:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(4);\r\nvar common_1 = __webpack_require__(14);\r\nvar http_1 = __webpack_require__(40);\r\nvar forms_1 = __webpack_require__(28);\r\nvar platform_browser_1 = __webpack_require__(20);\r\nvar router_1 = __webpack_require__(52);\r\nvar ng_select_1 = __webpack_require__(111);\r\nvar app_component_1 = __webpack_require__(103);\r\nvar select_with_templates_component_1 = __webpack_require__(110);\r\nvar select_bindings_component_1 = __webpack_require__(106);\r\nvar select_search_component_1 = __webpack_require__(109);\r\nvar reactive_forms_component_1 = __webpack_require__(104);\r\nvar select_events_component_1 = __webpack_require__(107);\r\nvar select_multi_component_1 = __webpack_require__(108);\r\nvar select_autocomplete_component_1 = __webpack_require__(105);\r\nvar appRoutes = [\r\n    {\r\n        path: '',\r\n        redirectTo: '/forms',\r\n        pathMatch: 'full'\r\n    },\r\n    { path: 'forms', component: reactive_forms_component_1.ReactiveFormsComponent, data: { title: 'Reactive forms' } },\r\n    { path: 'bindings', component: select_bindings_component_1.SelectBindingsComponent, data: { title: 'Custom bindings' } },\r\n    { path: 'filter-client', component: select_search_component_1.SelectSearchComponent },\r\n    { path: 'filter-server', component: select_autocomplete_component_1.SelectAutocompleteComponent },\r\n    { path: 'templates', component: select_with_templates_component_1.SelectWithTemplatesComponent },\r\n    { path: 'multiselect', component: select_multi_component_1.SelectMultiComponent },\r\n    { path: 'events', component: select_events_component_1.SelectEventsComponent },\r\n];\r\nvar AppModule = /** @class */ (function () {\r\n    function AppModule() {\r\n    }\r\n    AppModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [\r\n                platform_browser_1.BrowserModule,\r\n                ng_select_1.NgSelectModule.forRoot({ notFoundText: 'No items found', typeToSearchText: 'Type to search' }),\r\n                common_1.CommonModule,\r\n                forms_1.FormsModule,\r\n                forms_1.ReactiveFormsModule,\r\n                http_1.HttpClientModule,\r\n                router_1.RouterModule.forRoot(appRoutes, {\r\n                    useHash: true\r\n                })\r\n            ],\r\n            declarations: [\r\n                app_component_1.AppComponent,\r\n                select_with_templates_component_1.SelectWithTemplatesComponent,\r\n                select_bindings_component_1.SelectBindingsComponent,\r\n                select_search_component_1.SelectSearchComponent,\r\n                reactive_forms_component_1.ReactiveFormsComponent,\r\n                select_events_component_1.SelectEventsComponent,\r\n                select_multi_component_1.SelectMultiComponent,\r\n                select_autocomplete_component_1.SelectAutocompleteComponent\r\n            ],\r\n            bootstrap: [app_component_1.AppComponent]\r\n        })\r\n    ], AppModule);\r\n    return AppModule;\r\n}());\r\nexports.AppModule = AppModule;\r\n\n\n/***/ })\n\n},[390]);\n\n\n// WEBPACK FOOTER //\n// js/app.9b5bf08a71e0788518ef.js","import '../style/styles.scss';\n\nimport {Component} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n    selector: 'demo-app',\n    template: require('./app.component.html')\n})\nexport class AppComponent {\n\n    title: string;\n\n    constructor(private route: ActivatedRoute) {\n        this.route.data.subscribe(d => {\n            this.title = d.title;\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/demo/app/app.component.ts","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {NgOption} from '@ng-select/ng-select';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n    selector: 'reactive-forms',\n    template: `\n        <form [formGroup]=\"heroForm\" novalidate>\n            <div class=\"form-group\">\n                <label for=\"state\">Cities</label>\n                <ng-select *ngIf=\"isCitiesControlVisible\"\n                           [items]=\"cities\"\n                           bindLabel=\"name\"\n                           bindValue=\"id\"\n                           [multiple]=\"true\"\n                           placeholder=\"Select cities\"\n                           formControlName=\"selectedCitiesIds\">\n                </ng-select>\n                <br>\n                <button (click)=\"toggleCitiesControl()\" class=\"btn btn-sm btn-secondary\">Show/Hide</button>\n                <button (click)=\"clearCities()\" class=\"btn btn-sm btn-secondary\">Clear</button>\n            </div>\n            <hr>\n            <div class=\"form-group\">\n                <label for=\"state\">Age</label>\n                <ng-select [items]=\"ages\"\n                           bindValue=\"value\"\n                           placeholder=\"Select age\"\n                           formControlName=\"age\">\n                </ng-select>\n                <br>\n                <button class=\"btn btn-secondary btn-sm\" (click)=\"toggleAgeDisable()\">Toggle disabled</button>\n            </div>\n            <hr>\n            <div class=\"form-group\">\n                <label for=\"album\">Favorite album</label>\n                <ng-select [items]=\"albums\"\n                           bindLabel=\"title\"\n                           bindValue=\"id\"\n                           placeholder=\"Select album\"\n                           formControlName=\"album\">\n                    <ng-template ng-option-tmp let-item=\"item\">\n                        <div>Title: {{item.title}}</div>\n                        <small><b>Id:</b> {{item.id}} | <b>UserId:</b> {{item.userId}}</small>\n                    </ng-template>\n                </ng-select>\n                <small class=\"form-text text-muted\">Albums data from backend using HttpClient.</small>\n            </div>\n            <hr>\n            <div class=\"form-group\">\n                <label for=\"album\">Favorite photo</label>\n                <ng-select [items]=\"photos\"\n                           bindLabel=\"title\"\n                           bindValue=\"thumbnailUrl\"\n                           placeholder=\"Select photo\"\n                           formControlName=\"photo\">\n                    <ng-template ng-label-tmp let-item=\"item\">\n                        <img height=\"15\" width=\"15\" [src]=\"item.thumbnailUrl\"/>\n                        <span>{{item.title}}</span>\n                    </ng-template>\n                    <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\">\n                        <img height=\"15\" width=\"15\" [src]=\"item.thumbnailUrl\"/>\n                        <span>{{item.title}}</span>\n                    </ng-template>\n                </ng-select>\n                <small class=\"form-text text-muted\">5000 items with virtual scroll</small>\n                <br>\n                <button class=\"btn btn-secondary btn-sm\" (click)=\"selectFirstPhoto()\">Select first photo</button>\n            </div>\n        </form>\n\n        <p>Form value: {{ heroForm.value | json }}</p>\n    `\n})\nexport class ReactiveFormsComponent {\n\n    heroForm: FormGroup;\n\n    isCitiesControlVisible = true;\n    cities: NgOption[] = [\n        {id: 1, name: 'Vilnius'},\n        {id: 2, name: 'Kaunas'},\n        {id: 3, name: 'Pavilnys (Disabled)', disabled: true},\n        {id: 4, name: 'Pabradė'},\n    ];\n\n    ages: NgOption[] = [\n        {value: '<18', label: 'Under 18'},\n        {value: '18', label: '18'},\n        {value: '>18', label: 'More than 18'},\n    ];\n\n    albums = [];\n    photos = [];\n\n    constructor(private fb: FormBuilder, private http: HttpClient) {\n    }\n\n    ngOnInit() {\n\n        this.loadAlbums();\n        this.loadPhotos();\n\n        this.heroForm = this.fb.group({\n            selectedCitiesIds: [],\n            age: '',\n            album: '',\n            photo: ''\n        });\n    }\n\n    toggleAgeDisable() {\n        if (this.heroForm.controls.age.disabled) {\n            this.heroForm.controls.age.enable();\n        } else {\n            this.heroForm.controls.age.disable();\n        }\n    }\n\n    toggleCitiesControl() {\n        this.isCitiesControlVisible = !this.isCitiesControlVisible;\n    }\n\n    clearCities() {\n        this.heroForm.get('selectedCitiesIds').patchValue([]);\n    }\n\n    selectFirstPhoto() {\n        this.heroForm.get('photo').patchValue(this.photos[0].thumbnailUrl);\n    }\n\n    private loadAlbums() {\n        this.http.get<any[]>('https://jsonplaceholder.typicode.com/albums').subscribe(rsp => {\n            this.albums = rsp;\n        });\n    }\n\n    private loadPhotos() {\n        this.http.get<any[]>('https://jsonplaceholder.typicode.com/photos').subscribe(rsp => {\n             this.photos = rsp;\n            console.log('loaded photos:', this.photos.length);\n        });\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/demo/app/reactive-forms.component.ts","import { Component, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n    selector: 'select-autocomplete',\n    template: `\n        <label>Search with autocomplete in Github accounts</label>\n        <ng-select [items]=\"items\"\n                   notFoundText=\"No results found\"\n                   typeToSearchText=\"Search for github account\"\n                   bindLabel=\"login\"\n                   [typeahead]=\"typeahead\"\n                   [(ngModel)]=\"githubAccount\">\n\n            <ng-template ng-option-tmp let-item=\"item\">\n                <img [src]=\"item.avatar_url\" width=\"20px\" height=\"20px\"> {{item.login}}\n            </ng-template>\n\n        </ng-select>\n        <p>\n            Selected github account:\n            <span *ngIf=\"githubAccount\">\n                <img [src]=\"githubAccount.avatar_url\" width=\"20px\" height=\"20px\"> {{githubAccount.login}}\n            </span>\n        </p>\n    `\n})\nexport class SelectAutocompleteComponent {\n\n    githubAccount: any;\n    items = [];\n    typeahead = new EventEmitter<string>();\n\n    constructor(private http: HttpClient) {\n        this.typeahead\n            .distinctUntilChanged()\n            .debounceTime(200)\n            .switchMap(term => this.loadGithubUsers(term))\n            .subscribe(items => {\n                this.items = items;\n            }, (err) => {\n                console.log(err);\n                this.items = [];\n            });\n    }\n\n    loadGithubUsers(term: string): Observable<any[]> {\n        return this.http.get<any>(`https://api.github.com/search/users?q=${term}`).map(rsp => rsp.items);\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/demo/app/select-autocomplete.component.ts","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'select-bindings',\n    template: `\n        <label>Bind to default <b>label</b>, <b>object</b> bindings</label>\n        <ng-select [items]=\"defaultBindingsList\"\n                   [(ngModel)]=\"selectedCity2\">\n        </ng-select>\n        <p>\n            Selected city object: {{selectedCity2 | json}}\n        </p>\n        <hr>\n        <label>Bind label to custom property</label>\n        <ng-select [items]=\"cities\"\n                   bindLabel=\"name\"\n                   placeholder=\"Select value\"\n                   [clearable]=\"false\"\n                   [(ngModel)]=\"selectedCity\">\n        </ng-select>\n        <p>\n            Selected city object: {{selectedCity | json}}\n        </p>\n        <hr>\n        <label>Bind label and model to custom properties</label>\n        <ng-select [items]=\"cities\"\n                   bindLabel=\"name\"\n                   bindValue=\"id\"\n                   [(ngModel)]=\"selectedCityId2\">\n        </ng-select>\n        <p>\n            Selected city ID: {{selectedCityId2 | json}}\n        </p>\n    `\n})\nexport class SelectBindingsComponent {\n\n    defaultBindingsList = [\n        {value: 1, label: 'Vilnius'},\n        {value: 2, label: 'Kaunas'},\n        {value: 3, label: 'Pavilnys', disabled: true}\n    ];\n\n    cities = [\n        {id: 1, name: 'Vilnius'},\n        {id: 2, name: 'Kaunas'},\n        {id: 3, name: 'Pavilnys', disabled: true}\n    ];\n\n    selectedCity: any;\n    selectedCity2: number = null;\n    selectedCityId2: number = null;\n\n    ngOnInit() {\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/demo/app/select-bindings.component.ts","import { Component } from '@angular/core';\n\n\ninterface AngSelectEvent {\n    name: string;\n    value: any;\n}\n\n@Component({\n    selector: 'select-events',\n    template: `\n        <label>Open, close, focus, blur, change events</label>\n        <ng-select [items]=\"cities\"\n                   [(ngModel)]=\"selectedCity\"\n                   bindLabel=\"name\"\n                   bindValue=\"id\"\n                   (open)=\"onOpen()\"\n                   (close)=\"onClose()\"\n                   (focus)=\"onFocus($event)\"\n                   (blur)=\"onBlur($event)\"\n                   (change)=\"onChange($event)\">\n        </ng-select>\n\n        <div *ngIf=\"events.length > 0\">\n            <br>\n            <button (click)=\"events = []\" class=\"btn btn-secondary btn-sm\">Clear events</button>\n            <br>\n            <br>\n        </div>\n\n        <div *ngFor=\"let event of events\">\n            <small>{{event.name}} - {{event.value | json}}</small>\n            <hr>\n        </div>\n    `\n})\nexport class SelectEventsComponent {\n\n    selectedCity: any;\n    cities = [\n        {id: 1, name: 'Vilnius'},\n        {id: 2, name: 'Kaunas'},\n        {id: 3, name: 'Pavilnys', disabled: true}\n    ];\n\n    events: AngSelectEvent[] = [];\n\n    onChange($event) {\n        this.events.push({name: '(change)', value: $event});\n    }\n\n    onFocus($event: Event) {\n        this.events.push({name: '(focus)', value: $event});\n    }\n\n    onBlur($event: Event) {\n        this.events.push({name: '(blur)', value: $event});\n    }\n\n    onOpen() {\n        this.events.push({name: '(open)', value: null});\n    }\n\n    onClose() {\n        this.events.push({name: '(close)', value: null});\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/demo/app/select-events.component.ts","import { Component } from '@angular/core';\nimport { NgOption } from '@ng-select/ng-select';\n\n@Component({\n    template: `\n        <label>Select multiple elements</label>\n        <ng-select\n                [items]=\"companies\"\n                bindLabel=\"name\"\n                [multiple]=\"true\"\n                [(ngModel)]=\"selectedCompanies\">\n        </ng-select>\n        <p>\n            Selected value: {{selectedCompanies | json}} <br>\n            <button (click)=\"clearModel()\" class=\"btn btn-secondary btn-sm\">Clear model</button>\n        </p>\n\n        <label>Disabled multiple elements</label>\n        <ng-select\n                [items]=\"companies2\"\n                bindLabel=\"name\"\n                [multiple]=\"true\"\n                [disabled]=\"disable\"\n                [(ngModel)]=\"selectedCompaniesDisabled\">\n        </ng-select>\n        <br>\n        <button class=\"btn btn-secondary btn-sm\" (click)=\"disable = !disable\">Toggle disabled</button>\n    `\n})\nexport class SelectMultiComponent {\n\n    companies: any[] = [];\n    companies2: any[] = [];\n    selectedCompanies: any;\n    selectedCompaniesDisabled: any;\n    disable = true;\n\n    /* tslint:disable */\n    companiesNames = ['Miškas', 'Žalias', 'Flexigen', 'Rooforia', 'Rooblia', 'Tropoli', 'Eargo', 'Gadtron', 'Elentrix', 'Terragen', 'Medalert', 'Xelegyl', 'Bristo', 'Xylar', 'Imperium', 'Kangle', 'Earwax', 'Zanity', 'Portico', 'Tsunamia', 'Kage', 'Comstar', 'Radiantix', 'Bostonic', 'Geekko', 'Eventex', 'Stockpost', 'Silodyne', 'Enersave', 'Perkle', 'Pyramis', 'Accuprint', 'Papricut', 'Pathways', 'Circum', 'Gology', 'Buzzworks', 'Dancerity', 'Zounds', 'Diginetic', 'Snips', 'Chillium', 'Exotechno', 'Accufarm', 'Vidto', 'Signidyne', 'Escenta', 'Sureplex', 'Quarmony', 'Interfind', 'Exoswitch', 'Mondicil', 'Pyramia', 'Digitalus', 'Earthplex', 'Limozen', 'Twiist', 'Tubalum', 'Securia', 'Uni', 'Biospan', 'Zensus', 'Memora'];\n    /* tslint:enable */\n\n    ngOnInit() {\n        this.companiesNames.forEach((c, i) => {\n            this.companies.push({ id: i, name: c });\n            this.companies2.push({ id: i, name: c });\n        });\n\n        this.selectedCompaniesDisabled = [{ id: 0, name: 'Miškas' }, { id: 1, name: 'Žalias' }]\n    }\n\n    clearModel() {\n        this.selectedCompanies = [];\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/demo/app/select-multi.component.ts","import { Component, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'select-search',\n    template: `\n        <label>Search in label text (default)</label>\n        <ng-select [items]=\"companies\"\n                   bindLabel=\"name\"\n                   [(ngModel)]=\"selectedCompany\">\n        </ng-select>\n        <p>\n            Selected value: {{selectedCompany | json}}\n        </p>\n\n        <label>Search using custom filter handler (search for Rooforia)</label>\n        <ng-select [items]=\"filteredCompanies2\"\n                   bindLabel=\"name\"\n                   [typeahead]=\"customFilter\"\n                   [(ngModel)]=\"selectedCompany2\">\n        </ng-select>\n        <p>\n            Selected value: {{selectedCompany2 | json}}\n        </p>\n    `\n})\nexport class SelectSearchComponent {\n\n    companies: any[] = [];\n    companies2: any[] = [];\n    filteredCompanies2 = [];\n    selectedCompany: any;\n    selectedCompany2?: any;\n\n    customFilter = new EventEmitter<string>();\n\n    /* tslint:disable */\n    companiesNames = ['Miškas', 'Žalias', 'Flexigen', 'Rooforia', 'Rooblia', 'Tropoli', 'Eargo', 'Gadtron', 'Elentrix', 'Terragen', 'Medalert', 'Xelegyl', 'Bristo', 'Xylar', 'Imperium', 'Kangle', 'Earwax', 'Zanity', 'Portico', 'Tsunamia', 'Kage', 'Comstar', 'Radiantix', 'Bostonic', 'Geekko', 'Eventex', 'Stockpost', 'Silodyne', 'Enersave', 'Perkle', 'Pyramis', 'Accuprint', 'Papricut', 'Pathways', 'Circum', 'Gology', 'Buzzworks', 'Dancerity', 'Zounds', 'Diginetic', 'Snips', 'Chillium', 'Exotechno', 'Accufarm', 'Vidto', 'Signidyne', 'Escenta', 'Sureplex', 'Quarmony', 'Interfind', 'Exoswitch', 'Mondicil', 'Pyramia', 'Digitalus', 'Earthplex', 'Limozen', 'Twiist', 'Tubalum', 'Securia', 'Uni', 'Biospan', 'Zensus', 'Memora'];\n    /* tslint:enable */\n\n    ngOnInit() {\n        this.companiesNames.forEach((c, i) => {\n            this.companies.push({id: i, name: c});\n            this.companies2.push({id: i, name: c});\n        });\n\n        this.filteredCompanies2 = [...this.companies2];\n\n        this.customFilter.subscribe(term => {\n            this.filteredCompanies2 = term ? this.companies2.filter(x => term === 'Rooforia' && x.name === term) : this.companies2;\n        });\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/demo/app/select-search.component.ts","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'select-with-templates',\n    template: `\n        <label>Custom label</label>\n        <ng-select [items]=\"cities\" [(ngModel)]=\"selectedCity\" bindLabel=\"name\" bindValue=\"name\">\n            <ng-template ng-label-tmp let-item=\"item\">\n                <img height=\"15\" width=\"15\" [src]=\"item.avatar\"/>\n                {{item.name}}\n            </ng-template>\n        </ng-select>\n        <p>\n            Selected city name: {{selectedCity}}\n        </p>\n        <hr>\n\n        <label>Custom option</label>\n        <ng-select [items]=\"cities2\" [(ngModel)]=\"selectedCity2\" bindLabel=\"name\" bindValue=\"name\">\n            <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\">\n                <img height=\"15\" width=\"15\" [src]=\"item.avatar\"/>\n                <b>{{item.name}}</b>\n            </ng-template>\n        </ng-select>\n        <p>\n            Selected city name: {{selectedCity2}}\n        </p>\n        <hr>\n\n        <label>Custom label and option</label>\n        <ng-select [items]=\"cities3\" [(ngModel)]=\"selectedCity3\" bindLabel=\"name\" bindValue=\"name\">\n            <ng-template ng-label-tmp let-item=\"item\">\n                <img height=\"15\" width=\"15\" [src]=\"item.avatar\"/>\n                <b>{{item.name}}</b>\n            </ng-template>\n            <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\">\n                <img height=\"15\" width=\"15\" [src]=\"item.avatar\"/>\n                <b>{{item.name}}</b>\n            </ng-template>\n        </ng-select>\n        <p>\n            Selected city name: {{selectedCity3}}\n        </p>\n    `\n})\nexport class SelectWithTemplatesComponent {\n\n    cities = [\n        {id: 1, name: 'Vilnius', avatar: '//www.gravatar.com/avatar/b0d8c6e5ea589e6fc3d3e08afb1873bb?d=retro&r=g&s=30 2x'},\n        {id: 2, name: 'Kaunas', avatar: '//www.gravatar.com/avatar/ddac2aa63ce82315b513be9dc93336e5?d=retro&r=g&s=15'},\n        {id: 3, name: 'Pavilnys', avatar: '//www.gravatar.com/avatar/6acb7abf486516ab7fb0a6efa372042b?d=retro&r=g&s=15'}\n    ];\n\n    cities2 = JSON.parse(JSON.stringify(this.cities));\n    cities3 = JSON.parse(JSON.stringify(this.cities));\n\n    selectedCity = this.cities[0].name;\n    selectedCity2 = this.cities2[1].name;\n    selectedCity3 = this.cities3[2].name;\n\n    ngOnInit() {\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/demo/app/select-with-templates.component.ts","export { NgSelectComponent } from './src/ng-select.component';\nexport { NgSelectModule } from './src/ng-select.module';\nexport { NgOption, NgSelectConfig } from './src/ng-select.types';\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/lib/index.ts","import { NgOption } from './ng-select.types';\nimport * as searchHelper from './search-helper';\n\nexport class ItemsList {\n\n    items: NgOption[] = [];\n    filteredItems: NgOption[] = [];\n\n    private _markedIndex = -1;\n    private _selected: NgOption[] = [];\n    private _multiple: boolean;\n\n    constructor(items: NgOption[], multiple: boolean) {\n        this.items = this.mapItems(items);\n        this.filteredItems = [...this.items];\n        this._multiple = multiple;\n    }\n\n    get value(): NgOption | NgOption[] {\n        if (this._multiple) {\n            return this._selected;\n        }\n        return this._selected[0] || null;\n    }\n\n    get markedItem(): NgOption {\n        return this.filteredItems[this._markedIndex];\n    }\n\n    select(item: NgOption) {\n        if (!this._multiple) {\n            this.clearSelected();\n        }\n        this._selected.push(item);\n        item.selected = true;\n    }\n\n    unselect(item: NgOption) {\n        this._selected = this._selected.filter(x => x !== item);\n        item.selected = false;\n    }\n\n    unselectLastItem() {\n        if (this._selected.length === 0) {\n            return;\n        }\n\n        this._selected[this._selected.length - 1].selected = false;\n        this._selected.splice(this._selected.length - 1, 1);\n    }\n\n    clearSelected() {\n        this._selected.forEach((item) => {\n            item.selected = false;\n            item.marked = false;\n        });\n        this._selected = [];\n    }\n\n    filter(term: string, bindLabel: string) {\n        const filterFuncVal = this.getDefaultFilterFunc(term, bindLabel);\n        this.filteredItems = term ? this.items.filter(val => filterFuncVal(val)) : this.items;\n        this._markedIndex = 0;\n    }\n\n    clearFilter() {\n        this.filteredItems = [...this.items];\n    }\n\n    markNextItem() {\n        this.stepToItem(+1);\n    }\n\n    markPreviousItem() {\n        this.stepToItem(-1);\n    }\n\n    markItem(item: NgOption = null) {\n        if (this.filteredItems.length === 0) {\n            return;\n        }\n\n        item = item || this.lastSelectedItem;\n        if (item) {\n            this._markedIndex = this.filteredItems.indexOf(item);\n        } else {\n            this._markedIndex = 0;\n        }\n    }\n\n    private getNextItemIndex(steps: number) {\n        if (steps > 0) {\n            return (this._markedIndex === this.filteredItems.length - 1) ? 0 : (this._markedIndex + 1);\n        } else {\n            return (this._markedIndex === 0) ? (this.filteredItems.length - 1) : (this._markedIndex - 1);\n        }\n    }\n\n    private stepToItem(steps: number) {\n        if (this.filteredItems.length === 0) {\n            return;\n        }\n\n        this._markedIndex = this.getNextItemIndex(steps);\n        while (this.markedItem.disabled) {\n            this.stepToItem(steps);\n        }\n    }\n\n    private getDefaultFilterFunc(term, bindLabel: string) {\n        return (val: NgOption) => {\n            return searchHelper.stripSpecialChars(val[bindLabel])\n                .toUpperCase()\n                .indexOf(searchHelper.stripSpecialChars(term).toUpperCase()) > -1;\n        };\n    }\n\n    private get lastSelectedItem() {\n        return this._selected[this._selected.length - 1];\n    }\n\n    private mapItems(items: NgOption[]) {\n        return items.map((item, index) => {\n            return {\n                index: index,\n                ...item\n            };\n        })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/lib/src/items-list.ts","import { Directive, OnInit, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[angSearchFocus]'\n})\nexport class AngSearchFocusDirective implements OnInit {\n\n  constructor(private elementRef: ElementRef) { };\n\n  ngOnInit(): void {\n    this.elementRef.nativeElement.onFocus();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/lib/src/ng-search-focus.directive.ts","import { NgModule, Optional, SkipSelf, ModuleWithProviders } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { NgSelectComponent } from './ng-select.component';\nimport { NgOptionTemplateDirective, NgLabelTemplateDirective } from './ng-templates.directive';\nimport { AngSearchFocusDirective } from './ng-search-focus.directive';\nimport { VirtualScrollModule } from './virtual-scroll.component';\nimport { SpinnerComponent } from './spinner.component';\nimport { NgSelectConfig } from './ng-select.types';\n\n@NgModule({\n    declarations: [\n        NgSelectComponent,\n        NgOptionTemplateDirective,\n        NgLabelTemplateDirective,\n        AngSearchFocusDirective,\n        SpinnerComponent\n    ],\n    imports: [\n        FormsModule,\n        CommonModule,\n        VirtualScrollModule\n    ],\n    exports: [\n        NgSelectComponent,\n        NgOptionTemplateDirective,\n        NgLabelTemplateDirective\n    ]\n})\nexport class NgSelectModule {\n    static forRoot(config: NgSelectConfig): ModuleWithProviders {\n        return {\n            ngModule: NgSelectModule,\n            providers: [\n                {provide: NgSelectConfig, useValue: config}\n            ]\n        };\n    }\n\n    constructor(@Optional() @SkipSelf() parentModule: NgSelectModule) {\n        if (parentModule) {\n            throw new Error(\n                'NgSelectModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/lib/src/ng-select.module.ts","const diacritics = {\n    '\\u24B6': 'A',\n    '\\uFF21': 'A',\n    '\\u00C0': 'A',\n    '\\u00C1': 'A',\n    '\\u00C2': 'A',\n    '\\u1EA6': 'A',\n    '\\u1EA4': 'A',\n    '\\u1EAA': 'A',\n    '\\u1EA8': 'A',\n    '\\u00C3': 'A',\n    '\\u0100': 'A',\n    '\\u0102': 'A',\n    '\\u1EB0': 'A',\n    '\\u1EAE': 'A',\n    '\\u1EB4': 'A',\n    '\\u1EB2': 'A',\n    '\\u0226': 'A',\n    '\\u01E0': 'A',\n    '\\u00C4': 'A',\n    '\\u01DE': 'A',\n    '\\u1EA2': 'A',\n    '\\u00C5': 'A',\n    '\\u01FA': 'A',\n    '\\u01CD': 'A',\n    '\\u0200': 'A',\n    '\\u0202': 'A',\n    '\\u1EA0': 'A',\n    '\\u1EAC': 'A',\n    '\\u1EB6': 'A',\n    '\\u1E00': 'A',\n    '\\u0104': 'A',\n    '\\u023A': 'A',\n    '\\u2C6F': 'A',\n    '\\uA732': 'AA',\n    '\\u00C6': 'AE',\n    '\\u01FC': 'AE',\n    '\\u01E2': 'AE',\n    '\\uA734': 'AO',\n    '\\uA736': 'AU',\n    '\\uA738': 'AV',\n    '\\uA73A': 'AV',\n    '\\uA73C': 'AY',\n    '\\u24B7': 'B',\n    '\\uFF22': 'B',\n    '\\u1E02': 'B',\n    '\\u1E04': 'B',\n    '\\u1E06': 'B',\n    '\\u0243': 'B',\n    '\\u0182': 'B',\n    '\\u0181': 'B',\n    '\\u24B8': 'C',\n    '\\uFF23': 'C',\n    '\\u0106': 'C',\n    '\\u0108': 'C',\n    '\\u010A': 'C',\n    '\\u010C': 'C',\n    '\\u00C7': 'C',\n    '\\u1E08': 'C',\n    '\\u0187': 'C',\n    '\\u023B': 'C',\n    '\\uA73E': 'C',\n    '\\u24B9': 'D',\n    '\\uFF24': 'D',\n    '\\u1E0A': 'D',\n    '\\u010E': 'D',\n    '\\u1E0C': 'D',\n    '\\u1E10': 'D',\n    '\\u1E12': 'D',\n    '\\u1E0E': 'D',\n    '\\u0110': 'D',\n    '\\u018B': 'D',\n    '\\u018A': 'D',\n    '\\u0189': 'D',\n    '\\uA779': 'D',\n    '\\u01F1': 'DZ',\n    '\\u01C4': 'DZ',\n    '\\u01F2': 'Dz',\n    '\\u01C5': 'Dz',\n    '\\u24BA': 'E',\n    '\\uFF25': 'E',\n    '\\u00C8': 'E',\n    '\\u00C9': 'E',\n    '\\u00CA': 'E',\n    '\\u1EC0': 'E',\n    '\\u1EBE': 'E',\n    '\\u1EC4': 'E',\n    '\\u1EC2': 'E',\n    '\\u1EBC': 'E',\n    '\\u0112': 'E',\n    '\\u1E14': 'E',\n    '\\u1E16': 'E',\n    '\\u0114': 'E',\n    '\\u0116': 'E',\n    '\\u00CB': 'E',\n    '\\u1EBA': 'E',\n    '\\u011A': 'E',\n    '\\u0204': 'E',\n    '\\u0206': 'E',\n    '\\u1EB8': 'E',\n    '\\u1EC6': 'E',\n    '\\u0228': 'E',\n    '\\u1E1C': 'E',\n    '\\u0118': 'E',\n    '\\u1E18': 'E',\n    '\\u1E1A': 'E',\n    '\\u0190': 'E',\n    '\\u018E': 'E',\n    '\\u24BB': 'F',\n    '\\uFF26': 'F',\n    '\\u1E1E': 'F',\n    '\\u0191': 'F',\n    '\\uA77B': 'F',\n    '\\u24BC': 'G',\n    '\\uFF27': 'G',\n    '\\u01F4': 'G',\n    '\\u011C': 'G',\n    '\\u1E20': 'G',\n    '\\u011E': 'G',\n    '\\u0120': 'G',\n    '\\u01E6': 'G',\n    '\\u0122': 'G',\n    '\\u01E4': 'G',\n    '\\u0193': 'G',\n    '\\uA7A0': 'G',\n    '\\uA77D': 'G',\n    '\\uA77E': 'G',\n    '\\u24BD': 'H',\n    '\\uFF28': 'H',\n    '\\u0124': 'H',\n    '\\u1E22': 'H',\n    '\\u1E26': 'H',\n    '\\u021E': 'H',\n    '\\u1E24': 'H',\n    '\\u1E28': 'H',\n    '\\u1E2A': 'H',\n    '\\u0126': 'H',\n    '\\u2C67': 'H',\n    '\\u2C75': 'H',\n    '\\uA78D': 'H',\n    '\\u24BE': 'I',\n    '\\uFF29': 'I',\n    '\\u00CC': 'I',\n    '\\u00CD': 'I',\n    '\\u00CE': 'I',\n    '\\u0128': 'I',\n    '\\u012A': 'I',\n    '\\u012C': 'I',\n    '\\u0130': 'I',\n    '\\u00CF': 'I',\n    '\\u1E2E': 'I',\n    '\\u1EC8': 'I',\n    '\\u01CF': 'I',\n    '\\u0208': 'I',\n    '\\u020A': 'I',\n    '\\u1ECA': 'I',\n    '\\u012E': 'I',\n    '\\u1E2C': 'I',\n    '\\u0197': 'I',\n    '\\u24BF': 'J',\n    '\\uFF2A': 'J',\n    '\\u0134': 'J',\n    '\\u0248': 'J',\n    '\\u24C0': 'K',\n    '\\uFF2B': 'K',\n    '\\u1E30': 'K',\n    '\\u01E8': 'K',\n    '\\u1E32': 'K',\n    '\\u0136': 'K',\n    '\\u1E34': 'K',\n    '\\u0198': 'K',\n    '\\u2C69': 'K',\n    '\\uA740': 'K',\n    '\\uA742': 'K',\n    '\\uA744': 'K',\n    '\\uA7A2': 'K',\n    '\\u24C1': 'L',\n    '\\uFF2C': 'L',\n    '\\u013F': 'L',\n    '\\u0139': 'L',\n    '\\u013D': 'L',\n    '\\u1E36': 'L',\n    '\\u1E38': 'L',\n    '\\u013B': 'L',\n    '\\u1E3C': 'L',\n    '\\u1E3A': 'L',\n    '\\u0141': 'L',\n    '\\u023D': 'L',\n    '\\u2C62': 'L',\n    '\\u2C60': 'L',\n    '\\uA748': 'L',\n    '\\uA746': 'L',\n    '\\uA780': 'L',\n    '\\u01C7': 'LJ',\n    '\\u01C8': 'Lj',\n    '\\u24C2': 'M',\n    '\\uFF2D': 'M',\n    '\\u1E3E': 'M',\n    '\\u1E40': 'M',\n    '\\u1E42': 'M',\n    '\\u2C6E': 'M',\n    '\\u019C': 'M',\n    '\\u24C3': 'N',\n    '\\uFF2E': 'N',\n    '\\u01F8': 'N',\n    '\\u0143': 'N',\n    '\\u00D1': 'N',\n    '\\u1E44': 'N',\n    '\\u0147': 'N',\n    '\\u1E46': 'N',\n    '\\u0145': 'N',\n    '\\u1E4A': 'N',\n    '\\u1E48': 'N',\n    '\\u0220': 'N',\n    '\\u019D': 'N',\n    '\\uA790': 'N',\n    '\\uA7A4': 'N',\n    '\\u01CA': 'NJ',\n    '\\u01CB': 'Nj',\n    '\\u24C4': 'O',\n    '\\uFF2F': 'O',\n    '\\u00D2': 'O',\n    '\\u00D3': 'O',\n    '\\u00D4': 'O',\n    '\\u1ED2': 'O',\n    '\\u1ED0': 'O',\n    '\\u1ED6': 'O',\n    '\\u1ED4': 'O',\n    '\\u00D5': 'O',\n    '\\u1E4C': 'O',\n    '\\u022C': 'O',\n    '\\u1E4E': 'O',\n    '\\u014C': 'O',\n    '\\u1E50': 'O',\n    '\\u1E52': 'O',\n    '\\u014E': 'O',\n    '\\u022E': 'O',\n    '\\u0230': 'O',\n    '\\u00D6': 'O',\n    '\\u022A': 'O',\n    '\\u1ECE': 'O',\n    '\\u0150': 'O',\n    '\\u01D1': 'O',\n    '\\u020C': 'O',\n    '\\u020E': 'O',\n    '\\u01A0': 'O',\n    '\\u1EDC': 'O',\n    '\\u1EDA': 'O',\n    '\\u1EE0': 'O',\n    '\\u1EDE': 'O',\n    '\\u1EE2': 'O',\n    '\\u1ECC': 'O',\n    '\\u1ED8': 'O',\n    '\\u01EA': 'O',\n    '\\u01EC': 'O',\n    '\\u00D8': 'O',\n    '\\u01FE': 'O',\n    '\\u0186': 'O',\n    '\\u019F': 'O',\n    '\\uA74A': 'O',\n    '\\uA74C': 'O',\n    '\\u01A2': 'OI',\n    '\\uA74E': 'OO',\n    '\\u0222': 'OU',\n    '\\u24C5': 'P',\n    '\\uFF30': 'P',\n    '\\u1E54': 'P',\n    '\\u1E56': 'P',\n    '\\u01A4': 'P',\n    '\\u2C63': 'P',\n    '\\uA750': 'P',\n    '\\uA752': 'P',\n    '\\uA754': 'P',\n    '\\u24C6': 'Q',\n    '\\uFF31': 'Q',\n    '\\uA756': 'Q',\n    '\\uA758': 'Q',\n    '\\u024A': 'Q',\n    '\\u24C7': 'R',\n    '\\uFF32': 'R',\n    '\\u0154': 'R',\n    '\\u1E58': 'R',\n    '\\u0158': 'R',\n    '\\u0210': 'R',\n    '\\u0212': 'R',\n    '\\u1E5A': 'R',\n    '\\u1E5C': 'R',\n    '\\u0156': 'R',\n    '\\u1E5E': 'R',\n    '\\u024C': 'R',\n    '\\u2C64': 'R',\n    '\\uA75A': 'R',\n    '\\uA7A6': 'R',\n    '\\uA782': 'R',\n    '\\u24C8': 'S',\n    '\\uFF33': 'S',\n    '\\u1E9E': 'S',\n    '\\u015A': 'S',\n    '\\u1E64': 'S',\n    '\\u015C': 'S',\n    '\\u1E60': 'S',\n    '\\u0160': 'S',\n    '\\u1E66': 'S',\n    '\\u1E62': 'S',\n    '\\u1E68': 'S',\n    '\\u0218': 'S',\n    '\\u015E': 'S',\n    '\\u2C7E': 'S',\n    '\\uA7A8': 'S',\n    '\\uA784': 'S',\n    '\\u24C9': 'T',\n    '\\uFF34': 'T',\n    '\\u1E6A': 'T',\n    '\\u0164': 'T',\n    '\\u1E6C': 'T',\n    '\\u021A': 'T',\n    '\\u0162': 'T',\n    '\\u1E70': 'T',\n    '\\u1E6E': 'T',\n    '\\u0166': 'T',\n    '\\u01AC': 'T',\n    '\\u01AE': 'T',\n    '\\u023E': 'T',\n    '\\uA786': 'T',\n    '\\uA728': 'TZ',\n    '\\u24CA': 'U',\n    '\\uFF35': 'U',\n    '\\u00D9': 'U',\n    '\\u00DA': 'U',\n    '\\u00DB': 'U',\n    '\\u0168': 'U',\n    '\\u1E78': 'U',\n    '\\u016A': 'U',\n    '\\u1E7A': 'U',\n    '\\u016C': 'U',\n    '\\u00DC': 'U',\n    '\\u01DB': 'U',\n    '\\u01D7': 'U',\n    '\\u01D5': 'U',\n    '\\u01D9': 'U',\n    '\\u1EE6': 'U',\n    '\\u016E': 'U',\n    '\\u0170': 'U',\n    '\\u01D3': 'U',\n    '\\u0214': 'U',\n    '\\u0216': 'U',\n    '\\u01AF': 'U',\n    '\\u1EEA': 'U',\n    '\\u1EE8': 'U',\n    '\\u1EEE': 'U',\n    '\\u1EEC': 'U',\n    '\\u1EF0': 'U',\n    '\\u1EE4': 'U',\n    '\\u1E72': 'U',\n    '\\u0172': 'U',\n    '\\u1E76': 'U',\n    '\\u1E74': 'U',\n    '\\u0244': 'U',\n    '\\u24CB': 'V',\n    '\\uFF36': 'V',\n    '\\u1E7C': 'V',\n    '\\u1E7E': 'V',\n    '\\u01B2': 'V',\n    '\\uA75E': 'V',\n    '\\u0245': 'V',\n    '\\uA760': 'VY',\n    '\\u24CC': 'W',\n    '\\uFF37': 'W',\n    '\\u1E80': 'W',\n    '\\u1E82': 'W',\n    '\\u0174': 'W',\n    '\\u1E86': 'W',\n    '\\u1E84': 'W',\n    '\\u1E88': 'W',\n    '\\u2C72': 'W',\n    '\\u24CD': 'X',\n    '\\uFF38': 'X',\n    '\\u1E8A': 'X',\n    '\\u1E8C': 'X',\n    '\\u24CE': 'Y',\n    '\\uFF39': 'Y',\n    '\\u1EF2': 'Y',\n    '\\u00DD': 'Y',\n    '\\u0176': 'Y',\n    '\\u1EF8': 'Y',\n    '\\u0232': 'Y',\n    '\\u1E8E': 'Y',\n    '\\u0178': 'Y',\n    '\\u1EF6': 'Y',\n    '\\u1EF4': 'Y',\n    '\\u01B3': 'Y',\n    '\\u024E': 'Y',\n    '\\u1EFE': 'Y',\n    '\\u24CF': 'Z',\n    '\\uFF3A': 'Z',\n    '\\u0179': 'Z',\n    '\\u1E90': 'Z',\n    '\\u017B': 'Z',\n    '\\u017D': 'Z',\n    '\\u1E92': 'Z',\n    '\\u1E94': 'Z',\n    '\\u01B5': 'Z',\n    '\\u0224': 'Z',\n    '\\u2C7F': 'Z',\n    '\\u2C6B': 'Z',\n    '\\uA762': 'Z',\n    '\\u24D0': 'a',\n    '\\uFF41': 'a',\n    '\\u1E9A': 'a',\n    '\\u00E0': 'a',\n    '\\u00E1': 'a',\n    '\\u00E2': 'a',\n    '\\u1EA7': 'a',\n    '\\u1EA5': 'a',\n    '\\u1EAB': 'a',\n    '\\u1EA9': 'a',\n    '\\u00E3': 'a',\n    '\\u0101': 'a',\n    '\\u0103': 'a',\n    '\\u1EB1': 'a',\n    '\\u1EAF': 'a',\n    '\\u1EB5': 'a',\n    '\\u1EB3': 'a',\n    '\\u0227': 'a',\n    '\\u01E1': 'a',\n    '\\u00E4': 'a',\n    '\\u01DF': 'a',\n    '\\u1EA3': 'a',\n    '\\u00E5': 'a',\n    '\\u01FB': 'a',\n    '\\u01CE': 'a',\n    '\\u0201': 'a',\n    '\\u0203': 'a',\n    '\\u1EA1': 'a',\n    '\\u1EAD': 'a',\n    '\\u1EB7': 'a',\n    '\\u1E01': 'a',\n    '\\u0105': 'a',\n    '\\u2C65': 'a',\n    '\\u0250': 'a',\n    '\\uA733': 'aa',\n    '\\u00E6': 'ae',\n    '\\u01FD': 'ae',\n    '\\u01E3': 'ae',\n    '\\uA735': 'ao',\n    '\\uA737': 'au',\n    '\\uA739': 'av',\n    '\\uA73B': 'av',\n    '\\uA73D': 'ay',\n    '\\u24D1': 'b',\n    '\\uFF42': 'b',\n    '\\u1E03': 'b',\n    '\\u1E05': 'b',\n    '\\u1E07': 'b',\n    '\\u0180': 'b',\n    '\\u0183': 'b',\n    '\\u0253': 'b',\n    '\\u24D2': 'c',\n    '\\uFF43': 'c',\n    '\\u0107': 'c',\n    '\\u0109': 'c',\n    '\\u010B': 'c',\n    '\\u010D': 'c',\n    '\\u00E7': 'c',\n    '\\u1E09': 'c',\n    '\\u0188': 'c',\n    '\\u023C': 'c',\n    '\\uA73F': 'c',\n    '\\u2184': 'c',\n    '\\u24D3': 'd',\n    '\\uFF44': 'd',\n    '\\u1E0B': 'd',\n    '\\u010F': 'd',\n    '\\u1E0D': 'd',\n    '\\u1E11': 'd',\n    '\\u1E13': 'd',\n    '\\u1E0F': 'd',\n    '\\u0111': 'd',\n    '\\u018C': 'd',\n    '\\u0256': 'd',\n    '\\u0257': 'd',\n    '\\uA77A': 'd',\n    '\\u01F3': 'dz',\n    '\\u01C6': 'dz',\n    '\\u24D4': 'e',\n    '\\uFF45': 'e',\n    '\\u00E8': 'e',\n    '\\u00E9': 'e',\n    '\\u00EA': 'e',\n    '\\u1EC1': 'e',\n    '\\u1EBF': 'e',\n    '\\u1EC5': 'e',\n    '\\u1EC3': 'e',\n    '\\u1EBD': 'e',\n    '\\u0113': 'e',\n    '\\u1E15': 'e',\n    '\\u1E17': 'e',\n    '\\u0115': 'e',\n    '\\u0117': 'e',\n    '\\u00EB': 'e',\n    '\\u1EBB': 'e',\n    '\\u011B': 'e',\n    '\\u0205': 'e',\n    '\\u0207': 'e',\n    '\\u1EB9': 'e',\n    '\\u1EC7': 'e',\n    '\\u0229': 'e',\n    '\\u1E1D': 'e',\n    '\\u0119': 'e',\n    '\\u1E19': 'e',\n    '\\u1E1B': 'e',\n    '\\u0247': 'e',\n    '\\u025B': 'e',\n    '\\u01DD': 'e',\n    '\\u24D5': 'f',\n    '\\uFF46': 'f',\n    '\\u1E1F': 'f',\n    '\\u0192': 'f',\n    '\\uA77C': 'f',\n    '\\u24D6': 'g',\n    '\\uFF47': 'g',\n    '\\u01F5': 'g',\n    '\\u011D': 'g',\n    '\\u1E21': 'g',\n    '\\u011F': 'g',\n    '\\u0121': 'g',\n    '\\u01E7': 'g',\n    '\\u0123': 'g',\n    '\\u01E5': 'g',\n    '\\u0260': 'g',\n    '\\uA7A1': 'g',\n    '\\u1D79': 'g',\n    '\\uA77F': 'g',\n    '\\u24D7': 'h',\n    '\\uFF48': 'h',\n    '\\u0125': 'h',\n    '\\u1E23': 'h',\n    '\\u1E27': 'h',\n    '\\u021F': 'h',\n    '\\u1E25': 'h',\n    '\\u1E29': 'h',\n    '\\u1E2B': 'h',\n    '\\u1E96': 'h',\n    '\\u0127': 'h',\n    '\\u2C68': 'h',\n    '\\u2C76': 'h',\n    '\\u0265': 'h',\n    '\\u0195': 'hv',\n    '\\u24D8': 'i',\n    '\\uFF49': 'i',\n    '\\u00EC': 'i',\n    '\\u00ED': 'i',\n    '\\u00EE': 'i',\n    '\\u0129': 'i',\n    '\\u012B': 'i',\n    '\\u012D': 'i',\n    '\\u00EF': 'i',\n    '\\u1E2F': 'i',\n    '\\u1EC9': 'i',\n    '\\u01D0': 'i',\n    '\\u0209': 'i',\n    '\\u020B': 'i',\n    '\\u1ECB': 'i',\n    '\\u012F': 'i',\n    '\\u1E2D': 'i',\n    '\\u0268': 'i',\n    '\\u0131': 'i',\n    '\\u24D9': 'j',\n    '\\uFF4A': 'j',\n    '\\u0135': 'j',\n    '\\u01F0': 'j',\n    '\\u0249': 'j',\n    '\\u24DA': 'k',\n    '\\uFF4B': 'k',\n    '\\u1E31': 'k',\n    '\\u01E9': 'k',\n    '\\u1E33': 'k',\n    '\\u0137': 'k',\n    '\\u1E35': 'k',\n    '\\u0199': 'k',\n    '\\u2C6A': 'k',\n    '\\uA741': 'k',\n    '\\uA743': 'k',\n    '\\uA745': 'k',\n    '\\uA7A3': 'k',\n    '\\u24DB': 'l',\n    '\\uFF4C': 'l',\n    '\\u0140': 'l',\n    '\\u013A': 'l',\n    '\\u013E': 'l',\n    '\\u1E37': 'l',\n    '\\u1E39': 'l',\n    '\\u013C': 'l',\n    '\\u1E3D': 'l',\n    '\\u1E3B': 'l',\n    '\\u017F': 'l',\n    '\\u0142': 'l',\n    '\\u019A': 'l',\n    '\\u026B': 'l',\n    '\\u2C61': 'l',\n    '\\uA749': 'l',\n    '\\uA781': 'l',\n    '\\uA747': 'l',\n    '\\u01C9': 'lj',\n    '\\u24DC': 'm',\n    '\\uFF4D': 'm',\n    '\\u1E3F': 'm',\n    '\\u1E41': 'm',\n    '\\u1E43': 'm',\n    '\\u0271': 'm',\n    '\\u026F': 'm',\n    '\\u24DD': 'n',\n    '\\uFF4E': 'n',\n    '\\u01F9': 'n',\n    '\\u0144': 'n',\n    '\\u00F1': 'n',\n    '\\u1E45': 'n',\n    '\\u0148': 'n',\n    '\\u1E47': 'n',\n    '\\u0146': 'n',\n    '\\u1E4B': 'n',\n    '\\u1E49': 'n',\n    '\\u019E': 'n',\n    '\\u0272': 'n',\n    '\\u0149': 'n',\n    '\\uA791': 'n',\n    '\\uA7A5': 'n',\n    '\\u01CC': 'nj',\n    '\\u24DE': 'o',\n    '\\uFF4F': 'o',\n    '\\u00F2': 'o',\n    '\\u00F3': 'o',\n    '\\u00F4': 'o',\n    '\\u1ED3': 'o',\n    '\\u1ED1': 'o',\n    '\\u1ED7': 'o',\n    '\\u1ED5': 'o',\n    '\\u00F5': 'o',\n    '\\u1E4D': 'o',\n    '\\u022D': 'o',\n    '\\u1E4F': 'o',\n    '\\u014D': 'o',\n    '\\u1E51': 'o',\n    '\\u1E53': 'o',\n    '\\u014F': 'o',\n    '\\u022F': 'o',\n    '\\u0231': 'o',\n    '\\u00F6': 'o',\n    '\\u022B': 'o',\n    '\\u1ECF': 'o',\n    '\\u0151': 'o',\n    '\\u01D2': 'o',\n    '\\u020D': 'o',\n    '\\u020F': 'o',\n    '\\u01A1': 'o',\n    '\\u1EDD': 'o',\n    '\\u1EDB': 'o',\n    '\\u1EE1': 'o',\n    '\\u1EDF': 'o',\n    '\\u1EE3': 'o',\n    '\\u1ECD': 'o',\n    '\\u1ED9': 'o',\n    '\\u01EB': 'o',\n    '\\u01ED': 'o',\n    '\\u00F8': 'o',\n    '\\u01FF': 'o',\n    '\\u0254': 'o',\n    '\\uA74B': 'o',\n    '\\uA74D': 'o',\n    '\\u0275': 'o',\n    '\\u01A3': 'oi',\n    '\\u0223': 'ou',\n    '\\uA74F': 'oo',\n    '\\u24DF': 'p',\n    '\\uFF50': 'p',\n    '\\u1E55': 'p',\n    '\\u1E57': 'p',\n    '\\u01A5': 'p',\n    '\\u1D7D': 'p',\n    '\\uA751': 'p',\n    '\\uA753': 'p',\n    '\\uA755': 'p',\n    '\\u24E0': 'q',\n    '\\uFF51': 'q',\n    '\\u024B': 'q',\n    '\\uA757': 'q',\n    '\\uA759': 'q',\n    '\\u24E1': 'r',\n    '\\uFF52': 'r',\n    '\\u0155': 'r',\n    '\\u1E59': 'r',\n    '\\u0159': 'r',\n    '\\u0211': 'r',\n    '\\u0213': 'r',\n    '\\u1E5B': 'r',\n    '\\u1E5D': 'r',\n    '\\u0157': 'r',\n    '\\u1E5F': 'r',\n    '\\u024D': 'r',\n    '\\u027D': 'r',\n    '\\uA75B': 'r',\n    '\\uA7A7': 'r',\n    '\\uA783': 'r',\n    '\\u24E2': 's',\n    '\\uFF53': 's',\n    '\\u00DF': 's',\n    '\\u015B': 's',\n    '\\u1E65': 's',\n    '\\u015D': 's',\n    '\\u1E61': 's',\n    '\\u0161': 's',\n    '\\u1E67': 's',\n    '\\u1E63': 's',\n    '\\u1E69': 's',\n    '\\u0219': 's',\n    '\\u015F': 's',\n    '\\u023F': 's',\n    '\\uA7A9': 's',\n    '\\uA785': 's',\n    '\\u1E9B': 's',\n    '\\u24E3': 't',\n    '\\uFF54': 't',\n    '\\u1E6B': 't',\n    '\\u1E97': 't',\n    '\\u0165': 't',\n    '\\u1E6D': 't',\n    '\\u021B': 't',\n    '\\u0163': 't',\n    '\\u1E71': 't',\n    '\\u1E6F': 't',\n    '\\u0167': 't',\n    '\\u01AD': 't',\n    '\\u0288': 't',\n    '\\u2C66': 't',\n    '\\uA787': 't',\n    '\\uA729': 'tz',\n    '\\u24E4': 'u',\n    '\\uFF55': 'u',\n    '\\u00F9': 'u',\n    '\\u00FA': 'u',\n    '\\u00FB': 'u',\n    '\\u0169': 'u',\n    '\\u1E79': 'u',\n    '\\u016B': 'u',\n    '\\u1E7B': 'u',\n    '\\u016D': 'u',\n    '\\u00FC': 'u',\n    '\\u01DC': 'u',\n    '\\u01D8': 'u',\n    '\\u01D6': 'u',\n    '\\u01DA': 'u',\n    '\\u1EE7': 'u',\n    '\\u016F': 'u',\n    '\\u0171': 'u',\n    '\\u01D4': 'u',\n    '\\u0215': 'u',\n    '\\u0217': 'u',\n    '\\u01B0': 'u',\n    '\\u1EEB': 'u',\n    '\\u1EE9': 'u',\n    '\\u1EEF': 'u',\n    '\\u1EED': 'u',\n    '\\u1EF1': 'u',\n    '\\u1EE5': 'u',\n    '\\u1E73': 'u',\n    '\\u0173': 'u',\n    '\\u1E77': 'u',\n    '\\u1E75': 'u',\n    '\\u0289': 'u',\n    '\\u24E5': 'v',\n    '\\uFF56': 'v',\n    '\\u1E7D': 'v',\n    '\\u1E7F': 'v',\n    '\\u028B': 'v',\n    '\\uA75F': 'v',\n    '\\u028C': 'v',\n    '\\uA761': 'vy',\n    '\\u24E6': 'w',\n    '\\uFF57': 'w',\n    '\\u1E81': 'w',\n    '\\u1E83': 'w',\n    '\\u0175': 'w',\n    '\\u1E87': 'w',\n    '\\u1E85': 'w',\n    '\\u1E98': 'w',\n    '\\u1E89': 'w',\n    '\\u2C73': 'w',\n    '\\u24E7': 'x',\n    '\\uFF58': 'x',\n    '\\u1E8B': 'x',\n    '\\u1E8D': 'x',\n    '\\u24E8': 'y',\n    '\\uFF59': 'y',\n    '\\u1EF3': 'y',\n    '\\u00FD': 'y',\n    '\\u0177': 'y',\n    '\\u1EF9': 'y',\n    '\\u0233': 'y',\n    '\\u1E8F': 'y',\n    '\\u00FF': 'y',\n    '\\u1EF7': 'y',\n    '\\u1E99': 'y',\n    '\\u1EF5': 'y',\n    '\\u01B4': 'y',\n    '\\u024F': 'y',\n    '\\u1EFF': 'y',\n    '\\u24E9': 'z',\n    '\\uFF5A': 'z',\n    '\\u017A': 'z',\n    '\\u1E91': 'z',\n    '\\u017C': 'z',\n    '\\u017E': 'z',\n    '\\u1E93': 'z',\n    '\\u1E95': 'z',\n    '\\u01B6': 'z',\n    '\\u0225': 'z',\n    '\\u0240': 'z',\n    '\\u2C6C': 'z',\n    '\\uA763': 'z',\n    '\\u0386': '\\u0391',\n    '\\u0388': '\\u0395',\n    '\\u0389': '\\u0397',\n    '\\u038A': '\\u0399',\n    '\\u03AA': '\\u0399',\n    '\\u038C': '\\u039F',\n    '\\u038E': '\\u03A5',\n    '\\u03AB': '\\u03A5',\n    '\\u038F': '\\u03A9',\n    '\\u03AC': '\\u03B1',\n    '\\u03AD': '\\u03B5',\n    '\\u03AE': '\\u03B7',\n    '\\u03AF': '\\u03B9',\n    '\\u03CA': '\\u03B9',\n    '\\u0390': '\\u03B9',\n    '\\u03CC': '\\u03BF',\n    '\\u03CD': '\\u03C5',\n    '\\u03CB': '\\u03C5',\n    '\\u03B0': '\\u03C5',\n    '\\u03C9': '\\u03C9',\n    '\\u03C2': '\\u03C3'\n};\n\nexport function stripSpecialChars(text: string): string {\n    const match = (a: string): string => {\n        return diacritics[a] || a;\n    };\n    return text.replace(/[^\\u0000-\\u007E]/g, match);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/lib/src/search-helper.ts","import { Component } from '@angular/core';\n\n\n/* tslint:disable:max-line-length */\n@Component({\n    selector: 'spinner',\n    template: `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n     width=\"20px\" height=\"20px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\n  <path fill=\"#777\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\n    <animateTransform attributeType=\"xml\"\n      attributeName=\"transform\"\n      type=\"rotate\"\n      from=\"0 25 25\"\n      to=\"360 25 25\"\n      dur=\"0.6s\"\n      repeatCount=\"indefinite\"/>\n    </path>\n  </svg>`\n})\nexport class SpinnerComponent {\n\n}\n/* tslint:enable:max-line-length */\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/lib/src/spinner.component.ts","module.exports = \"ng-select {\\n  position: relative;\\n  display: block;\\n  box-sizing: border-box; }\\n  ng-select div, ng-select input, ng-select span, ng-select virtual-scroll {\\n    box-sizing: border-box; }\\n  ng-select virtual-scroll {\\n    display: block;\\n    height: auto; }\\n  ng-select.opened > .as-control {\\n    border-bottom-right-radius: 0;\\n    border-bottom-left-radius: 0;\\n    background: #fff;\\n    border-color: #b3b3b3 #ccc #d9d9d9; }\\n  ng-select.opened > .as-control .as-arrow {\\n    top: -2px;\\n    border-color: transparent transparent #999;\\n    border-width: 0 5px 5px; }\\n    ng-select.opened > .as-control .as-arrow:hover {\\n      border-color: transparent transparent #666; }\\n  ng-select.opened .as-menu-outer {\\n    visibility: visible; }\\n  ng-select.focused:not(.opened) > .as-control {\\n    border-color: #007eff;\\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 0 3px rgba(0, 126, 255, 0.1); }\\n  ng-select.disabled > .as-control {\\n    background-color: #f9f9f9; }\\n  ng-select .as-control {\\n    background-color: #fff;\\n    border-radius: 4px;\\n    border: 1px solid #ccc;\\n    color: #333;\\n    cursor: default;\\n    display: table;\\n    border-spacing: 0;\\n    border-collapse: separate;\\n    height: 36px;\\n    outline: none;\\n    overflow: hidden;\\n    position: relative;\\n    width: 100%; }\\n    ng-select .as-control:hover {\\n      box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06); }\\n  ng-select .as-placeholder, ng-select.as-single > .as-control .as-value {\\n    bottom: 0;\\n    color: #aaa;\\n    left: 0;\\n    line-height: 34px;\\n    padding-left: 10px;\\n    padding-right: 10px;\\n    position: absolute;\\n    right: 0;\\n    top: 0;\\n    max-width: 100%;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap; }\\n    ng-select .as-placeholder .as-value-label, ng-select.as-single > .as-control .as-value .as-value-label {\\n      color: #333; }\\n  ng-select.as-multiple.disabled > .as-control .as-value {\\n    background-color: #f9f9f9;\\n    border: 1px solid #e3e3e3; }\\n    ng-select.as-multiple.disabled > .as-control .as-value .as-clear {\\n      display: none; }\\n  ng-select.as-multiple > .as-control .as-value {\\n    background-color: #f5faff;\\n    border-radius: 2px;\\n    border: 1px solid #c2e0ff;\\n    display: inline-block;\\n    font-size: 0.9em;\\n    line-height: 1.4;\\n    margin-left: 5px;\\n    margin-top: 5px;\\n    vertical-align: top; }\\n    ng-select.as-multiple > .as-control .as-value .as-clear {\\n      cursor: pointer;\\n      border-bottom-right-radius: 2px;\\n      border-top-right-radius: 2px;\\n      border-right: 1px solid #c2e0ff;\\n      padding: 1px 5px 3px; }\\n      ng-select.as-multiple > .as-control .as-value .as-clear:hover {\\n        background-color: #d8eafd; }\\n    ng-select.as-multiple > .as-control .as-value .as-value-label {\\n      border-bottom-right-radius: 2px;\\n      border-top-right-radius: 2px;\\n      cursor: default;\\n      padding: 2px 5px; }\\n  ng-select .as-input {\\n    height: 34px;\\n    padding-left: 10px;\\n    padding-right: 10px;\\n    vertical-align: middle;\\n    display: inline-block; }\\n    ng-select .as-input > input {\\n      min-width: 5px;\\n      box-sizing: content-box;\\n      background: none transparent;\\n      border: 0 none;\\n      box-shadow: none;\\n      cursor: default;\\n      display: inline-block;\\n      font-family: inherit;\\n      font-size: inherit;\\n      margin: 0;\\n      outline: none;\\n      line-height: 14px;\\n      /* For IE 8 compatibility */\\n      padding: 8px 0 12px;\\n      /* For IE 8 compatibility */\\n      -webkit-appearance: none; }\\n  ng-select .as-menu-outer {\\n    visibility: hidden;\\n    border-bottom-right-radius: 4px;\\n    border-bottom-left-radius: 4px;\\n    background-color: #fff;\\n    border: 1px solid #ccc;\\n    border-top-color: #e6e6e6;\\n    box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);\\n    box-sizing: border-box;\\n    margin-top: -1px;\\n    max-height: 242px;\\n    position: absolute;\\n    top: 100%;\\n    width: 100%;\\n    z-index: 1;\\n    -webkit-overflow-scrolling: touch; }\\n  ng-select .as-menu {\\n    max-height: 240px;\\n    overflow-y: auto; }\\n  ng-select .as-option {\\n    box-sizing: border-box;\\n    background-color: #fff;\\n    color: #666666;\\n    cursor: pointer;\\n    display: block;\\n    padding: 8px 10px; }\\n    ng-select .as-option:last-child {\\n      border-bottom-right-radius: 4px;\\n      border-bottom-left-radius: 4px; }\\n    ng-select .as-option.selected {\\n      background-color: #f5faff;\\n      color: #333; }\\n    ng-select .as-option.marked {\\n      background-color: #ebf5ff;\\n      color: #333; }\\n    ng-select .as-option.disabled {\\n      color: #cccccc;\\n      cursor: default; }\\n  ng-select .as-clear-zone {\\n    animation: Select-animation-fadeIn 200ms;\\n    color: #999;\\n    cursor: pointer;\\n    display: table-cell;\\n    position: relative;\\n    text-align: center;\\n    vertical-align: middle;\\n    width: 17px; }\\n    ng-select .as-clear-zone .as-clear {\\n      display: inline-block;\\n      font-size: 18px;\\n      line-height: 1; }\\n      ng-select .as-clear-zone .as-clear:hover {\\n        color: #D0021B; }\\n  ng-select .as-spinner-zone {\\n    cursor: pointer;\\n    display: table-cell;\\n    position: relative;\\n    text-align: center;\\n    vertical-align: middle;\\n    width: 25px;\\n    padding-right: 5px;\\n    padding-top: 5px; }\\n  ng-select .as-arrow-zone {\\n    cursor: pointer;\\n    display: table-cell;\\n    position: relative;\\n    text-align: center;\\n    vertical-align: middle;\\n    width: 25px;\\n    padding-right: 5px; }\\n    ng-select .as-arrow-zone .as-arrow {\\n      border-color: #999 transparent transparent;\\n      border-style: solid;\\n      border-width: 5px 5px 2.5px;\\n      display: inline-block;\\n      height: 0;\\n      width: 0;\\n      position: relative; }\\n      ng-select .as-arrow-zone .as-arrow:hover {\\n        border-top-color: #666; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/src/ng-select.component.scss\n// module id = 118\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <h3 class=\\\"title\\\">\\r\\n                Angular select component demos\\r\\n                <small class=\\\"text-muted pull-right\\\">ng-select on <a href=\\\"https://github.com/anjmao/ng-select\\\">Github</a></small>\\r\\n            </h3>\\r\\n\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <ul class=\\\"nav nav-tabs card-header-tabs\\\">\\r\\n                        <li class=\\\"nav-item\\\">\\r\\n                            <a class=\\\"nav-link\\\" routerLink=\\\"/forms\\\" routerLinkActive=\\\"active\\\">Reactive forms</a>\\r\\n                        </li>\\r\\n                        <li class=\\\"nav-item\\\">\\r\\n                            <a class=\\\"nav-link\\\" routerLink=\\\"/filter-client\\\" routerLinkActive=\\\"active\\\">Filter <small>(client side)</small></a>\\r\\n                        </li>\\r\\n                        <li class=\\\"nav-item\\\">\\r\\n                            <a class=\\\"nav-link\\\" routerLink=\\\"/filter-server\\\" routerLinkActive=\\\"active\\\">Filter <small>(server side)</small></a>\\r\\n                        </li>\\r\\n                        <li class=\\\"nav-item\\\">\\r\\n                            <a class=\\\"nav-link\\\" routerLink=\\\"/multiselect\\\" routerLinkActive=\\\"active\\\">Multiselect</a>\\r\\n                        </li>\\r\\n                        <li class=\\\"nav-item\\\">\\r\\n                            <a class=\\\"nav-link\\\" routerLink=\\\"/bindings\\\" routerLinkActive=\\\"active\\\">Custom bindings</a>\\r\\n                        </li>\\r\\n                        <li class=\\\"nav-item\\\">\\r\\n                            <a class=\\\"nav-link\\\" routerLink=\\\"/templates\\\" routerLinkActive=\\\"active\\\">Custom templates</a>\\r\\n                        </li>\\r\\n                        <li class=\\\"nav-item\\\">\\r\\n                            <a class=\\\"nav-link\\\" routerLink=\\\"/events\\\" routerLinkActive=\\\"active\\\">Events</a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <router-outlet></router-outlet>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/demo/app/app.component.html\n// module id = 119\n// module chunks = 1","module.exports = \"<div (click)=\\\"handleSelectClick($event)\\\" class=\\\"as-control\\\">\\n    <span class=\\\"as-multi-value-wrapper\\\">\\n\\n        <span class=\\\"as-placeholder\\\" *ngIf=\\\"showPlaceholder()\\\">{{placeholder}}</span>\\n\\n        <ng-container *ngIf=\\\"!multiple;else multipleValue\\\">\\n            <div class=\\\"as-value\\\" *ngIf=\\\"showValue()\\\">\\n                    <span class=\\\"as-value-label\\\" role=\\\"option\\\" aria-selected=\\\"true\\\">\\n                            <ng-template \\n                                *ngIf=\\\"labelTemplate\\\" \\n                                [ngTemplateOutlet]=\\\"labelTemplate\\\"\\n                                [ngTemplateOutletContext]=\\\"getDisplayTemplateContext()\\\">\\n                            </ng-template>\\n                            <span *ngIf=\\\"!labelTemplate\\\">{{getLabelValue(value)}}</span>\\n                    </span>\\n            </div>\\n        </ng-container>\\n\\n        <ng-template #multipleValue>\\n            <div class=\\\"as-value\\\" *ngFor=\\\"let item of value\\\">\\n                <span class=\\\"as-clear\\\" (click)=\\\"unselect(item)\\\" aria-hidden=\\\"true\\\">×</span>\\n                <span class=\\\"as-value-label\\\" aria-selected=\\\"true\\\">{{getLabelValue(item)}}</span>\\n            </div>\\n        </ng-template>\\n\\n        <div *ngIf=\\\"showFilter()\\\" class=\\\"as-input\\\">\\n            <input #filterInput\\n                   [value]=\\\"filterValue\\\"\\n                   (input)=\\\"onFilter($event)\\\"\\n                   (focus)=\\\"onInputFocus($event)\\\"\\n                   (blur)=\\\"onInputBlur($event)\\\"\\n                   role=\\\"combobox\\\"\\n                   aria-expanded=\\\"false\\\"\\n                   aria-owns=\\\"\\\"\\n                   aria-haspopup=\\\"false\\\">\\n        </div>\\n    </span>\\n\\n    <spinner class=\\\"as-spinner-zone\\\" *ngIf=\\\"isLoading\\\"></spinner>\\n\\n    <span *ngIf=\\\"showClear()\\\" (click)=\\\"handleClearClick($event)\\\" class=\\\"as-clear-zone\\\" title=\\\"Clear all\\\" aria-label=\\\"Clear all\\\">\\n        <span class=\\\"as-clear\\\" aria-hidden=\\\"true\\\">×</span>\\n    </span>\\n\\n    <span (click)=\\\"handleArrowClick($event)\\\" class=\\\"as-arrow-zone\\\">\\n        <span class=\\\"as-arrow\\\"></span>\\n    </span>\\n</div>\\n\\n<div class=\\\"as-menu-outer\\\">\\n    <virtual-scroll role=\\\"listbox\\\" class=\\\"as-menu\\\" [bufferAmount]=\\\"4\\\" [items]=\\\"itemsList.filteredItems\\\" (update)=\\\"viewPortItems = $event\\\">\\n        <div class=\\\"as-option\\\" role=\\\"option\\\" (click)=\\\"toggle(item)\\\" (mouseover)=\\\"onItemHover(item)\\\"\\n             *ngFor=\\\"let item of viewPortItems\\\"\\n             [class.disabled]=\\\"item.disabled\\\"\\n             [class.selected]=\\\"item.selected\\\"\\n             [class.marked]=\\\"item === itemsList.markedItem\\\">\\n\\n            <span *ngIf=\\\"!optionTemplate\\\">{{item[bindLabel]}}</span>\\n\\n            <ng-template  *ngIf=\\\"optionTemplate\\\"\\n                          [ngTemplateOutlet]=\\\"optionTemplate\\\"\\n                          [ngTemplateOutletContext]=\\\"{ item: item, index: item.index }\\\">\\n            </ng-template>\\n        </div>\\n    </virtual-scroll>\\n\\n    <div class=\\\"as-menu\\\" *ngIf=\\\"showNoItemsFound()\\\">\\n        <div class=\\\"as-option disabled\\\">\\n            {{notFoundText}}\\n        </div>\\n    </div>\\n\\n    <div class=\\\"as-menu\\\" *ngIf=\\\"showTypeToSearch()\\\">\\n        <div class=\\\"as-option disabled\\\">\\n            {{typeToSearchText}}\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/src/ng-select.component.html\n// module id = 120\n// module chunks = 1","import * as tslib_1 from \"tslib\";\n/**\n * @license Angular v4.3.5\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Directive, ElementRef, EventEmitter, Host, Inject, Injectable, InjectionToken, Injector, Input, NgModule, Optional, Output, Renderer2, Self, SkipSelf, Version, forwardRef, ɵisObservable, ɵisPromise, ɵlooseIdentical } from '@angular/core';\nimport { forkJoin } from 'rxjs/observable/forkJoin';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { map } from 'rxjs/operator/map';\nimport { ɵgetDOM } from '@angular/platform-browser';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for control directives.\n *\n * Only used internally in the forms module.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControlDirective = (function () {\n    function AbstractControlDirective() {\n    }\n    /**\n     * The {\\@link FormControl}, {\\@link FormGroup}, or {\\@link FormArray}\n     * that backs this directive. Most properties fall through to that\n     * instance.\n     * @abstract\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.control = function () { };\n    Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n        /**\n         * The value of the control.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.value : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n        /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.valid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n        /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.invalid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n        /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.pending : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n        /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.disabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n        /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.enabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n        /**\n         * Returns any errors generated by failing validation. If there\n         * are no errors, it will return null.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.errors : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.pristine : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n        /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.dirty : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n        /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.touched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n        /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.untouched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n        /**\n         * Emits an event every time the validation status of the control\n         * is re-calculated.\n         * @return {?}\n         */\n        get: function () {\n            return this.control ? this.control.statusChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n        /**\n         * Emits an event every time the value of the control changes, in\n         * the UI or programmatically.\n         * @return {?}\n         */\n        get: function () {\n            return this.control ? this.control.valueChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n        /**\n         * Returns an array that represents the path from the top-level form\n         * to this control. Each index is the string name of the control on\n         * that level.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * For more information, see {\\@link AbstractControl}.\n     * @param {?=} value\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.reset = function (value) {\n        if (value === void 0) { value = undefined; }\n        if (this.control)\n            this.control.reset(value);\n    };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    };\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.getError = function (errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    };\n    return AbstractControlDirective;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A directive that contains multiple {\\@link NgControl}s.\n *\n * Only used by the forms module.\n *\n * \\@stable\n * @abstract\n */\nvar ControlContainer = (function (_super) {\n    tslib_1.__extends(ControlContainer, _super);\n    function ControlContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n        /**\n         * Get the form to which this container belongs.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ControlContainer.prototype, \"path\", {\n        /**\n         * Get the path to this container.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    return ControlContainer;\n}(AbstractControlDirective));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\n/**\n * Providers for validators to be used for {\\@link FormControl}s in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * \\@stable\n */\nvar NG_VALIDATORS = new InjectionToken('NgValidators');\n/**\n * Providers for asynchronous validators to be used for {\\@link FormControl}s\n * in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * See {\\@link NG_VALIDATORS} for more details.\n *\n * \\@stable\n */\nvar NG_ASYNC_VALIDATORS = new InjectionToken('NgAsyncValidators');\nvar EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n/**\n * Provides a set of validators used by form controls.\n *\n * A validator is a function that processes a {\\@link FormControl} or collection of\n * controls and returns a map of errors. A null map means that validation has passed.\n *\n * ### Example\n *\n * ```typescript\n * var loginControl = new FormControl(\"\", Validators.required)\n * ```\n *\n * \\@stable\n */\nvar Validators = (function () {\n    function Validators() {\n    }\n    /**\n     * Validator that requires controls to have a value greater than a number.\n     * @param {?} min\n     * @return {?}\n     */\n    Validators.min = function (min) {\n        return function (control) {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n            return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value less than a number.\n     * @param {?} max\n     * @return {?}\n     */\n    Validators.max = function (max) {\n        return function (control) {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n            return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a non-empty value.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.required = function (control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    };\n    /**\n     * Validator that requires control value to be true.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.requiredTrue = function (control) {\n        return control.value === true ? null : { 'required': true };\n    };\n    /**\n     * Validator that performs email validation.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.email = function (control) {\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    };\n    /**\n     * Validator that requires controls to have a value of a minimum length.\n     * @param {?} minLength\n     * @return {?}\n     */\n    Validators.minLength = function (minLength) {\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value of a maximum length.\n     * @param {?} maxLength\n     * @return {?}\n     */\n    Validators.maxLength = function (maxLength) {\n        return function (control) {\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires a control to match a regex to its value.\n     * @param {?} pattern\n     * @return {?}\n     */\n    Validators.pattern = function (pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        var /** @type {?} */ regex;\n        var /** @type {?} */ regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = \"^\" + pattern + \"$\";\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        };\n    };\n    /**\n     * No-op validator.\n     * @param {?} c\n     * @return {?}\n     */\n    Validators.nullValidator = function (c) { return null; };\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.compose = function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = (validators.filter(isPresent));\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        };\n    };\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.composeAsync = function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = (validators.filter(isPresent));\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            var /** @type {?} */ observables = _executeAsyncValidators(control, presentValidators).map(toObservable);\n            return map.call(forkJoin(observables), _mergeErrors);\n        };\n    };\n    return Validators;\n}());\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPresent(o) {\n    return o != null;\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction toObservable(r) {\n    var /** @type {?} */ obs = ɵisPromise(r) ? fromPromise(r) : r;\n    if (!(ɵisObservable(obs))) {\n        throw new Error(\"Expected validator to return Promise or Observable.\");\n    }\n    return obs;\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} arrayOfErrors\n * @return {?}\n */\nfunction _mergeErrors(arrayOfErrors) {\n    var /** @type {?} */ res = arrayOfErrors.reduce(function (res, errors) {\n        return errors != null ? Object.assign({}, /** @type {?} */ ((res)), errors) : ((res));\n    }, {});\n    return Object.keys(res).length === 0 ? null : res;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a {\\@link ControlValueAccessor} for form controls.\n *\n * See {\\@link DefaultValueAccessor} for how to implement one.\n * \\@stable\n */\nvar NG_VALUE_ACCESSOR = new InjectionToken('NgValueAccessor');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return CheckboxControlValueAccessor; }),\n    multi: true,\n};\n/**\n * The accessor for writing a value and listening to changes on a checkbox input element.\n *\n *  ### Example\n *  ```\n *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar CheckboxControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function CheckboxControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return CheckboxControlValueAccessor;\n}());\nCheckboxControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                providers: [CHECKBOX_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nCheckboxControlValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return DefaultValueAccessor; }),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n * @return {?}\n */\nfunction _isAndroid() {\n    var /** @type {?} */ userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * Turn this mode on if you want form directives to buffer IME input until compositionend\n * \\@experimental\n */\nvar COMPOSITION_BUFFER_MODE = new InjectionToken('CompositionEventMode');\n/**\n * The default accessor for writing a value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"text\" name=\"searchQuery\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar DefaultValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _compositionMode\n     */\n    function DefaultValueAccessor(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        /**\n         * Whether the user is creating a composition string (IME events).\n         */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.writeValue = function (value) {\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._handleInput = function (value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionStart = function () { this._composing = true; };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionEnd = function (value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    };\n    return DefaultValueAccessor;\n}());\nDefaultValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                // TODO: vsavkin replace the above selector with the one below it once\n                // https://github.com/angular/angular/issues/3011 is implemented\n                // selector: '[ngModel],[formControl],[formControlName]',\n                host: {\n                    '(input)': '_handleInput($event.target.value)',\n                    '(blur)': 'onTouched()',\n                    '(compositionstart)': '_compositionStart()',\n                    '(compositionend)': '_compositionEnd($event.target.value)'\n                },\n                providers: [DEFAULT_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nDefaultValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeValidator(validator) {\n    if (((validator)).validate) {\n        return function (c) { return ((validator)).validate(c); };\n    }\n    else {\n        return (validator);\n    }\n}\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeAsyncValidator(validator) {\n    if (((validator)).validate) {\n        return function (c) { return ((validator)).validate(c); };\n    }\n    else {\n        return (validator);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return NumberValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a number value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"number\" [(ngModel)]=\"age\">\n *  ```\n */\nvar NumberValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function NumberValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.writeValue = function (value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return NumberValueAccessor;\n}());\nNumberValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [NUMBER_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nNumberValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction unimplemented() {\n    throw new Error('unimplemented');\n}\n/**\n * A base class that all control directive extend.\n * It binds a {\\@link FormControl} object to a DOM element.\n *\n * Used internally by Angular forms.\n *\n * \\@stable\n * @abstract\n */\nvar NgControl = (function (_super) {\n    tslib_1.__extends(NgControl, _super);\n    function NgControl() {\n        var _this = _super.apply(this, arguments) || this;\n        /**\n         * \\@internal\n         */\n        _this._parent = null;\n        _this.name = null;\n        _this.valueAccessor = null;\n        /**\n         * \\@internal\n         */\n        _this._rawValidators = [];\n        /**\n         * \\@internal\n         */\n        _this._rawAsyncValidators = [];\n        return _this;\n    }\n    Object.defineProperty(NgControl.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @abstract\n     * @param {?} newValue\n     * @return {?}\n     */\n    NgControl.prototype.viewToModelUpdate = function (newValue) { };\n    return NgControl;\n}(AbstractControlDirective));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return RadioControlValueAccessor; }),\n    multi: true\n};\n/**\n * Internal class used by Angular to uncheck radio buttons with the matching name.\n */\nvar RadioControlRegistry = (function () {\n    function RadioControlRegistry() {\n        this._accessors = [];\n    }\n    /**\n     * @param {?} control\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.add = function (control, accessor) {\n        this._accessors.push([control, accessor]);\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.remove = function (accessor) {\n        for (var /** @type {?} */ i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.select = function (accessor) {\n        var _this = this;\n        this._accessors.forEach(function (c) {\n            if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    };\n    /**\n     * @param {?} controlPair\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    };\n    return RadioControlRegistry;\n}());\nRadioControlRegistry.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nRadioControlRegistry.ctorParameters = function () { return []; };\n/**\n * \\@whatItDoes Writes radio control values and listens to radio control changes.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any radio control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use radio buttons with form directives\n *\n * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n * in the same group have the same `name` attribute.  Radio buttons with different `name`\n * attributes do not affect each other.\n *\n * {\\@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n *\n * When using radio buttons in a reactive form, radio buttons in the same group should have the\n * same `formControlName`. You can also add a `name` attribute, but it's optional.\n *\n * {\\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  \\@stable\n */\nvar RadioControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _registry\n     * @param {?} _injector\n     */\n    function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        this.onChange = function () { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnInit = function () {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.writeValue = function (value) {\n        this._state = value === this.value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this._fn = fn;\n        this.onChange = function () {\n            fn(_this.value);\n            _this._registry.select(_this);\n        };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._checkName = function () {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this._throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._throwNameError = function () {\n        throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n    };\n    return RadioControlValueAccessor;\n}());\nRadioControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                providers: [RADIO_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nRadioControlValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n    { type: RadioControlRegistry, },\n    { type: Injector, },\n]; };\nRadioControlValueAccessor.propDecorators = {\n    'name': [{ type: Input },],\n    'formControlName': [{ type: Input },],\n    'value': [{ type: Input },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return RangeValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a range value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"range\" [(ngModel)]=\"age\" >\n *  ```\n */\nvar RangeValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function RangeValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return RangeValueAccessor;\n}());\nRangeValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [RANGE_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nRangeValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return SelectControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * \\@whatItDoes Writes values and listens to changes on a select element.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any select control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use select controls with form directives\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * If your option values are simple strings, you can bind to the normal `value` property\n * on the option.  If your option values happen to be objects (and you'd like to save the\n * selection in your form as an object), use `ngValue` instead:\n *\n * {\\@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * In reactive forms, you'll also want to add your form directive (`formControlName` or\n * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n * choice of binding to the  `value` or `ngValue` property on the select's options.\n *\n * {\\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Caveat: Option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * Note: We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar SelectControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function SelectControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = ɵlooseIdentical;\n    }\n    Object.defineProperty(SelectControlValueAccessor.prototype, \"compareWith\", {\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        set: function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.writeValue = function (value) {\n        this.value = value;\n        var /** @type {?} */ id = this._getOptionId(value);\n        if (id == null) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        var /** @type {?} */ valueString = _buildValueString(id, value);\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (valueString) {\n            _this.value = _this._getOptionValue(valueString);\n            fn(_this.value);\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    };\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var /** @type {?} */ id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    };\n    return SelectControlValueAccessor;\n}());\nSelectControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [SELECT_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nSelectControlValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\nSelectControlValueAccessor.propDecorators = {\n    'compareWith': [{ type: Input },],\n};\n/**\n * \\@whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * \\@howToUse\n *\n * See docs for {\\@link SelectControlValueAccessor} for usage examples.\n *\n * \\@stable\n */\nvar NgSelectOption = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    function NgSelectOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._select._optionMap.set(this.id, value);\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectOption.prototype, \"value\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._setElementValue(value);\n            if (this._select)\n                this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectOption.prototype._setElementValue = function (value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectOption.prototype.ngOnDestroy = function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    return NgSelectOption;\n}());\nNgSelectOption.decorators = [\n    { type: Directive, args: [{ selector: 'option' },] },\n];\n/**\n * @nocollapse\n */\nNgSelectOption.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer2, },\n    { type: SelectControlValueAccessor, decorators: [{ type: Optional }, { type: Host },] },\n]; };\nNgSelectOption.propDecorators = {\n    'ngValue': [{ type: Input, args: ['ngValue',] },],\n    'value': [{ type: Input, args: ['value',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (typeof value === 'string')\n        value = \"'\" + value + \"'\";\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * The accessor for writing a value and listening to changes on a select element.\n *\n *  ### Caveat: Options selection\n *\n * Angular uses object identity to select options. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`\n * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects options by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select multiple [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * \\@stable\n */\nvar SelectMultipleControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = ɵlooseIdentical;\n    }\n    Object.defineProperty(SelectMultipleControlValueAccessor.prototype, \"compareWith\", {\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        set: function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n        var _this = this;\n        this.value = value;\n        var /** @type {?} */ optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            var /** @type {?} */ ids_1 = value.map(function (v) { return _this._getOptionId(v); });\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(ids_1.indexOf(o.toString()) > -1); };\n        }\n        else {\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(false); };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (_) {\n            var /** @type {?} */ selected = [];\n            if (_.hasOwnProperty('selectedOptions')) {\n                var /** @type {?} */ options = _.selectedOptions;\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            else {\n                var /** @type {?} */ options = (_.options);\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    if (opt.selected) {\n                        var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            _this.value = selected;\n            fn(selected);\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n        var /** @type {?} */ id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(/** @type {?} */ ((this._optionMap.get(id)))._value, value))\n                return id;\n        }\n        return null;\n    };\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var /** @type {?} */ id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? ((this._optionMap.get(id)))._value : valueString;\n    };\n    return SelectMultipleControlValueAccessor;\n}());\nSelectMultipleControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nSelectMultipleControlValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\nSelectMultipleControlValueAccessor.propDecorators = {\n    'compareWith': [{ type: Input },],\n};\n/**\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * ### Example\n *\n * ```\n * <select multiple name=\"city\" ngModel>\n *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n * </select>\n * ```\n */\nvar NgSelectMultipleOption = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    function NgSelectMultipleOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select) {\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            }\n            else {\n                this._setElementValue(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setElementValue = function (value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    };\n    /**\n     * \\@internal\n     * @param {?} selected\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setSelected = function (selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    return NgSelectMultipleOption;\n}());\nNgSelectMultipleOption.decorators = [\n    { type: Directive, args: [{ selector: 'option' },] },\n];\n/**\n * @nocollapse\n */\nNgSelectMultipleOption.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer2, },\n    { type: SelectMultipleControlValueAccessor, decorators: [{ type: Optional }, { type: Host },] },\n]; };\nNgSelectMultipleOption.propDecorators = {\n    'ngValue': [{ type: Input, args: ['ngValue',] },],\n    'value': [{ type: Input, args: ['value',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} name\n * @param {?} parent\n * @return {?}\n */\nfunction controlPath(name, parent) {\n    return ((parent.path)).concat([name]);\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpControl(control, dir) {\n    if (!control)\n        _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor)\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = Validators.compose([/** @type {?} */ ((control.validator)), dir.validator]);\n    control.asyncValidator = Validators.composeAsync([/** @type {?} */ ((control.asyncValidator)), dir.asyncValidator]); /** @type {?} */\n    ((dir.valueAccessor)).writeValue(control.value); /** @type {?} */\n    ((\n    // view -> model\n    dir.valueAccessor)).registerOnChange(function (newValue) {\n        dir.viewToModelUpdate(newValue);\n        control.markAsDirty();\n        control.setValue(newValue, { emitModelToViewChange: false });\n    }); /** @type {?} */\n    ((\n    // touched\n    dir.valueAccessor)).registerOnTouched(function () { return control.markAsTouched(); });\n    control.registerOnChange(function (newValue, emitModelEvent) {\n        ((\n        // control -> view\n        dir.valueAccessor)).writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n    if (((dir.valueAccessor)).setDisabledState) {\n        control.registerOnDisabledChange(function (isDisabled) { /** @type {?} */ ((((dir.valueAccessor)).setDisabledState))(isDisabled); });\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach(function (validator) {\n        if (((validator)).registerOnValidatorChange)\n            ((((validator)).registerOnValidatorChange))(function () { return control.updateValueAndValidity(); });\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (((validator)).registerOnValidatorChange)\n            ((((validator)).registerOnValidatorChange))(function () { return control.updateValueAndValidity(); });\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction cleanUpControl(control, dir) {\n    ((dir.valueAccessor)).registerOnChange(function () { return _noControlError(dir); }); /** @type {?} */\n    ((dir.valueAccessor)).registerOnTouched(function () { return _noControlError(dir); });\n    dir._rawValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    if (control)\n        control._clearChangeFns();\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null)\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n/**\n * @param {?} dir\n * @return {?}\n */\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n/**\n * @param {?} dir\n * @param {?} message\n * @return {?}\n */\nfunction _throwError(dir, message) {\n    var /** @type {?} */ messageEnd;\n    if (((dir.path)).length > 1) {\n        messageEnd = \"path: '\" + ((dir.path)).join(' -> ') + \"'\";\n    }\n    else if (((dir.path))[0]) {\n        messageEnd = \"name: '\" + dir.path + \"'\";\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(message + \" \" + messageEnd);\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n        null;\n}\n/**\n * @param {?} changes\n * @param {?} viewModel\n * @return {?}\n */\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    var /** @type {?} */ change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !ɵlooseIdentical(viewModel, change.currentValue);\n}\nvar BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\n/**\n * @param {?} valueAccessor\n * @return {?}\n */\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n}\n/**\n * @param {?} dir\n * @param {?} valueAccessors\n * @return {?}\n */\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    var /** @type {?} */ defaultAccessor = undefined;\n    var /** @type {?} */ builtinAccessor = undefined;\n    var /** @type {?} */ customAccessor = undefined;\n    valueAccessors.forEach(function (v) {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor)\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor)\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This is a base class for code shared between {\\@link NgModelGroup} and {\\@link FormGroupName}.\n *\n * \\@stable\n */\nvar AbstractFormGroupDirective = (function (_super) {\n    tslib_1.__extends(AbstractFormGroupDirective, _super);\n    function AbstractFormGroupDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnInit = function () {\n        this._checkParentType(); /** @type {?} */\n        ((this.formDirective)).addFormGroup(this);\n    };\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormGroup(this);\n        }\n    };\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n        /**\n         * Get the {\\@link FormGroup} backing this binding.\n         * @return {?}\n         */\n        get: function () { return ((this.formDirective)).getFormGroup(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n        /**\n         * Get the path to this control group.\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * Get the {\\@link Form} to which this group belongs.\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype._checkParentType = function () { };\n    return AbstractFormGroupDirective;\n}(ControlContainer));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AbstractControlStatus = (function () {\n    /**\n     * @param {?} cd\n     */\n    function AbstractControlStatus(cd) {\n        this._cd = cd;\n    }\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.touched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.valid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.pending : false; },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractControlStatus;\n}());\nvar ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status. The following classes are applied as the properties\n * become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * \\@stable\n */\nvar NgControlStatus = (function (_super) {\n    tslib_1.__extends(NgControlStatus, _super);\n    /**\n     * @param {?} cd\n     */\n    function NgControlStatus(cd) {\n        return _super.call(this, cd) || this;\n    }\n    return NgControlStatus;\n}(AbstractControlStatus));\nNgControlStatus.decorators = [\n    { type: Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n];\n/**\n * @nocollapse\n */\nNgControlStatus.ctorParameters = function () { return [\n    { type: NgControl, decorators: [{ type: Self },] },\n]; };\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * \\@stable\n */\nvar NgControlStatusGroup = (function (_super) {\n    tslib_1.__extends(NgControlStatusGroup, _super);\n    /**\n     * @param {?} cd\n     */\n    function NgControlStatusGroup(cd) {\n        return _super.call(this, cd) || this;\n    }\n    return NgControlStatusGroup;\n}(AbstractControlStatus));\nNgControlStatusGroup.decorators = [\n    { type: Directive, args: [{\n                selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                host: ngControlStatusHost\n            },] },\n];\n/**\n * @nocollapse\n */\nNgControlStatusGroup.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Self },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n */\nvar VALID = 'VALID';\n/**\n * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n */\nvar INVALID = 'INVALID';\n/**\n * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n * errors are not yet available for the input value.\n */\nvar PENDING = 'PENDING';\n/**\n * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n * calculations of validity or value.\n */\nvar DISABLED = 'DISABLED';\n/**\n * @param {?} control\n * @param {?} path\n * @param {?} delimiter\n * @return {?}\n */\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!(path instanceof Array)) {\n        path = ((path)).split(delimiter);\n    }\n    if (path instanceof Array && (path.length === 0))\n        return null;\n    return ((path)).reduce(function (v, name) {\n        if (v instanceof FormGroup) {\n            return v.controls[name] || null;\n        }\n        if (v instanceof FormArray) {\n            return v.at(/** @type {?} */ (name)) || null;\n        }\n        return null;\n    }, control);\n}\n/**\n * @param {?=} validator\n * @return {?}\n */\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * @param {?=} asyncValidator\n * @return {?}\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) :\n        asyncValidator || null;\n}\n/**\n * \\@whatItDoes This is the base class for {\\@link FormControl}, {\\@link FormGroup}, and\n * {\\@link FormArray}.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControl = (function () {\n    /**\n     * @param {?} validator\n     * @param {?} asyncValidator\n     */\n    function AbstractControl(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        /**\n         * \\@internal\n         */\n        this._onCollectionChange = function () { };\n        this._pristine = true;\n        this._touched = false;\n        /**\n         * \\@internal\n         */\n        this._onDisabledChange = [];\n    }\n    Object.defineProperty(AbstractControl.prototype, \"value\", {\n        /**\n         * The value of the control.\n         * @return {?}\n         */\n        get: function () { return this._value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"parent\", {\n        /**\n         * The parent control.\n         * @return {?}\n         */\n        get: function () { return this._parent; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"status\", {\n        /**\n         * The validation status of the control. There are four possible\n         * validation statuses:\n         *\n         * * **VALID**:  control has passed all validation checks\n         * * **INVALID**: control has failed at least one validation check\n         * * **PENDING**: control is in the midst of conducting a validation check\n         * * **DISABLED**: control is exempt from validation checks\n         *\n         * These statuses are mutually exclusive, so a control cannot be\n         * both valid AND invalid or invalid AND disabled.\n         * @return {?}\n         */\n        get: function () { return this._status; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valid\", {\n        /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         * @return {?}\n         */\n        get: function () { return this._status === VALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n        /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         * @return {?}\n         */\n        get: function () { return this._status === INVALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pending\", {\n        /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         * @return {?}\n         */\n        get: function () { return this._status == PENDING; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n        /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         * @return {?}\n         */\n        get: function () { return this._status === DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n        /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         * @return {?}\n         */\n        get: function () { return this._status !== DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"errors\", {\n        /**\n         * Returns any errors generated by failing validation. If there\n         * are no errors, it will return null.\n         * @return {?}\n         */\n        get: function () { return this._errors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return this._pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n        /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return !this.pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"touched\", {\n        /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n        /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return !this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n        /**\n         * Emits an event every time the value of the control changes, in\n         * the UI or programmatically.\n         * @return {?}\n         */\n        get: function () { return this._valueChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n        /**\n         * Emits an event every time the validation status of the control\n         * is re-calculated.\n         * @return {?}\n         */\n        get: function () { return this._statusChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this will overwrite any existing sync validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setValidators = function (newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    };\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * will overwrite any existing async validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    };\n    /**\n     * Empties out the sync validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n    /**\n     * Empties out the async validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n    /**\n     * Marks the control as `touched`.\n     *\n     * This will also mark all direct ancestors as `touched` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsTouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    };\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, it will also mark all children as `untouched`\n     * to maintain the model, and re-calculate the `touched` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsUntouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._touched = false;\n        this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    };\n    /**\n     * Marks the control as `dirty`.\n     *\n     * This will also mark all direct ancestors as `dirty` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsDirty = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    };\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, it will also mark all children as `pristine`\n     * to maintain the model, and re-calculate the `pristine` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPristine = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._pristine = true;\n        this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    };\n    /**\n     * Marks the control as `pending`.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPending = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._status = PENDING;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    };\n    /**\n     * Disables the control. This means the control will be exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children will be disabled to maintain the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.disable = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._status = DISABLED;\n        this._errors = null;\n        this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            this._valueChanges.emit(this._value);\n            this._statusChanges.emit(this._status);\n        }\n        this._updateAncestors(!!opts.onlySelf);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n    };\n    /**\n     * Enables the control. This means the control will be included in validation checks and\n     * the aggregate value of its parent. Its status is re-calculated based on its value and\n     * its validators.\n     *\n     * If the control has children, all children will be enabled.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.enable = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._status = VALID;\n        this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(!!opts.onlySelf);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n    };\n    /**\n     * @param {?} onlySelf\n     * @return {?}\n     */\n    AbstractControl.prototype._updateAncestors = function (onlySelf) {\n        if (this._parent && !onlySelf) {\n            this._parent.updateValueAndValidity();\n            this._parent._updatePristine();\n            this._parent._updateTouched();\n        }\n    };\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n    /**\n     * Sets the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.setValue = function (value, options) { };\n    /**\n     * Patches the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.patchValue = function (value, options) { };\n    /**\n     * Resets the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.reset = function (value, options) { };\n    /**\n     * Re-calculates the value and validation status of the control.\n     *\n     * By default, it will also update the value and validity of its ancestors.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.updateValueAndValidity = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            this._errors = this._runValidator();\n            this._status = this._calculateStatus();\n            if (this._status === VALID || this._status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            this._valueChanges.emit(this._value);\n            this._statusChanges.emit(this._status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTreeValidity = function (opts) {\n        if (opts === void 0) { opts = { emitEvent: true }; }\n        this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity(opts); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._runValidator = function () {\n        return this.validator ? this.validator(this) : null;\n    };\n    /**\n     * @param {?=} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n        var _this = this;\n        if (this.asyncValidator) {\n            this._status = PENDING;\n            var /** @type {?} */ obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription =\n                obs.subscribe(function (errors) { return _this.setErrors(errors, { emitEvent: emitEvent }); });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._cancelExistingSubscription = function () {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    };\n    /**\n     * Sets errors on a form control.\n     *\n     * This is used when validations are run manually by the user, rather than automatically.\n     *\n     * Calling `setErrors` will also update the validity of the parent control.\n     *\n     * ### Example\n     *\n     * ```\n     * const login = new FormControl(\"someLogin\");\n     * login.setErrors({\n     *   \"notUnique\": true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({\"notUnique\": true});\n     *\n     * login.setValue(\"someOtherLogin\");\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.setErrors = function (errors, opts) {\n        if (opts === void 0) { opts = {}; }\n        this._errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    };\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * Paths can be passed in as an array or a string delimited by a dot.\n     *\n     * To get a control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     * @param {?} path\n     * @return {?}\n     */\n    AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.getError = function (errorCode, path) {\n        var /** @type {?} */ control = path ? this.get(path) : this;\n        return control && control._errors ? control._errors[errorCode] : null;\n    };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.hasError = function (errorCode, path) { return !!this.getError(errorCode, path); };\n    Object.defineProperty(AbstractControl.prototype, \"root\", {\n        /**\n         * Retrieves the top-level ancestor of this control.\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ x = this;\n            while (x._parent) {\n                x = x._parent;\n            }\n            return x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n        this._status = this._calculateStatus();\n        if (emitEvent) {\n            this._statusChanges.emit(this._status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._initObservables = function () {\n        this._valueChanges = new EventEmitter();\n        this._statusChanges = new EventEmitter();\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._calculateStatus = function () {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this._errors)\n            return INVALID;\n        if (this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._updateValue = function () { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} cb\n     * @return {?}\n     */\n    AbstractControl.prototype._forEachChild = function (cb) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} condition\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControls = function (condition) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._allControlsDisabled = function () { };\n    /**\n     * \\@internal\n     * @param {?} status\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n        return this._anyControls(function (control) { return control.status === status; });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsDirty = function () {\n        return this._anyControls(function (control) { return control.dirty; });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsTouched = function () {\n        return this._anyControls(function (control) { return control.touched; });\n    };\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updatePristine = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} formState\n     * @return {?}\n     */\n    AbstractControl.prototype._isBoxedValue = function (formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    };\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n    return AbstractControl;\n}());\n/**\n * \\@whatItDoes Tracks the value and validation status of an individual form control.\n *\n * It is one of the three fundamental building blocks of Angular forms, along with\n * {\\@link FormGroup} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormControl}, you can pass in an initial value as the\n * first argument. Example:\n *\n * ```ts\n * const ctrl = new FormControl('some value');\n * console.log(ctrl.value);     // 'some value'\n * ```\n *\n * You can also initialize the control with a form state object on instantiation,\n * which includes both the value and whether or not the control is disabled.\n * You can't use the value key without the disabled key; both are required\n * to use this way of initialization.\n *\n * ```ts\n * const ctrl = new FormControl({value: 'n/a', disabled: true});\n * console.log(ctrl.value);     // 'n/a'\n * console.log(ctrl.status);   // 'DISABLED'\n * ```\n *\n * To include a sync validator (or an array of sync validators) with the control,\n * pass it in as the second argument. Async validators are also supported, but\n * have to be passed in separately as the third arg.\n *\n * ```ts\n * const ctrl = new FormControl('', Validators.required);\n * console.log(ctrl.value);     // ''\n * console.log(ctrl.status);   // 'INVALID'\n * ```\n *\n * See its superclass, {\\@link AbstractControl}, for more properties and methods.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormControl = (function (_super) {\n    tslib_1.__extends(FormControl, _super);\n    /**\n     * @param {?=} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormControl(formState, validator, asyncValidator) {\n        if (formState === void 0) { formState = null; }\n        var _this = _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator)) || this;\n        /**\n         * \\@internal\n         */\n        _this._onChange = [];\n        _this._applyFormState(formState);\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        _this._initObservables();\n        return _this;\n    }\n    /**\n     * Set the value of the form control to `value`.\n     *\n     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n     * and not its parent component. This defaults to false.\n     *\n     * If `emitEvent` is `true`, this\n     * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n     * to true (as it falls through to `updateValueAndValidity`).\n     *\n     * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n     * specified.\n     *\n     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n     * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._value = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach(function (changeFn) { return changeFn(_this._value, options.emitViewToModelChange !== false); });\n        }\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {\\@link FormControl#setValue} at this level.\n     * It exists for symmetry with {\\@link FormGroup#patchValue} on `FormGroups` and `FormArrays`,\n     * where it does behave differently.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.patchValue = function (value, options) {\n        if (options === void 0) { options = {}; }\n        this.setValue(value, options);\n    };\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * You can also reset to a specific form state by passing through a standalone\n     * value or a form state object that contains both a value and a disabled state\n     * (these are the only two properties that cannot be calculated).\n     *\n     * Ex:\n     *\n     * ```ts\n     * this.control.reset('Nancy');\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * ```\n     *\n     * OR\n     *\n     * ```\n     * this.control.reset({value: 'Nancy', disabled: true});\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * console.log(this.control.status);  // 'DISABLED'\n     * ```\n     * @param {?=} formState\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.reset = function (formState, options) {\n        if (formState === void 0) { formState = null; }\n        if (options === void 0) { options = {}; }\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this._value, options);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._updateValue = function () { };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormControl.prototype._anyControls = function (condition) { return false; };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n    /**\n     * Register a listener for change events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._clearChangeFns = function () {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = function () { };\n    };\n    /**\n     * Register a listener for disabled events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnDisabledChange = function (fn) {\n        this._onDisabledChange.push(fn);\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormControl.prototype._forEachChild = function (cb) { };\n    /**\n     * @param {?} formState\n     * @return {?}\n     */\n    FormControl.prototype._applyFormState = function (formState) {\n        if (this._isBoxedValue(formState)) {\n            this._value = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this._value = formState;\n        }\n    };\n    return FormControl;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of a group of {\\@link FormControl}\n * instances.\n *\n * A `FormGroup` aggregates the values of each child {\\@link FormControl} into one object,\n * with each control name as the key.  It calculates its status by reducing the statuses\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormGroup}, pass in a collection of child controls as the first\n * argument. The key for each child will be the name under which it is registered.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * You can also include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormGroup = (function (_super) {\n    tslib_1.__extends(FormGroup, _super);\n    /**\n     * @param {?} controls\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormGroup(controls, validator, asyncValidator) {\n        var _this = _super.call(this, validator || null, asyncValidator || null) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update value or validity of the control, so for\n     * most cases you'll want to use {\\@link FormGroup#addControl} instead.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.registerControl = function (name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    };\n    /**\n     * Add a control to this group.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.addControl = function (name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Remove a control from this group.\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype.removeControl = function (name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Replace an existing control.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.setControl = function (name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * It will return false for disabled controls. If you'd like to check for\n     * existence in the group only, use {\\@link AbstractControl#get} instead.\n     * @param {?} controlName\n     * @return {?}\n     */\n    FormGroup.prototype.contains = function (controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    };\n    /**\n     *  Sets the value of the {\\@link FormGroup}. It accepts an object that matches\n     *  the structure of the group, with control names as keys.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.setValue({first: 'Nancy', last: 'Drew'});\n     *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(function (name) {\n            _this._throwIfControlMissing(name);\n            _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     *  Patches the value of the {\\@link FormGroup}. It accepts an object with control\n     *  names as keys, and will do its best to match the values to the correct controls\n     *  in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.patchValue({first: 'Nancy'});\n     *  console.log(form.value);   // {first: 'Nancy', last: null}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.patchValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        Object.keys(value).forEach(function (name) {\n            if (_this.controls[name]) {\n                _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Resets the {\\@link FormGroup}. This means by default:\n     *\n     * * The group and all descendants are marked `pristine`\n     * * The group and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * can be a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.form.reset({first: 'name', last: 'last name'});\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.reset = function (value, options) {\n        if (value === void 0) { value = {}; }\n        if (options === void 0) { options = {}; }\n        this._forEachChild(function (control, name) {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n        this._updatePristine(options);\n        this._updateTouched(options);\n    };\n    /**\n     * The aggregate value of the {\\@link FormGroup}, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the group.\n     * @return {?}\n     */\n    FormGroup.prototype.getRawValue = function () {\n        return this._reduceChildren({}, function (acc, control, name) {\n            acc[name] = control instanceof FormControl ? control.value : ((control)).getRawValue();\n            return acc;\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype._throwIfControlMissing = function (name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.controls[name]) {\n            throw new Error(\"Cannot find form control with name: \" + name + \".\");\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormGroup.prototype._forEachChild = function (cb) {\n        var _this = this;\n        Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._setUpControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) {\n            control.setParent(_this);\n            control._registerOnCollectionChange(_this._onCollectionChange);\n        });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormGroup.prototype._anyControls = function (condition) {\n        var _this = this;\n        var /** @type {?} */ res = false;\n        this._forEachChild(function (control, name) {\n            res = res || (_this.contains(name) && condition(control));\n        });\n        return res;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._reduceValue = function () {\n        var _this = this;\n        return this._reduceChildren({}, function (acc, control, name) {\n            if (control.enabled || _this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} initValue\n     * @param {?} fn\n     * @return {?}\n     */\n    FormGroup.prototype._reduceChildren = function (initValue, fn) {\n        var /** @type {?} */ res = initValue;\n        this._forEachChild(function (control, name) { res = fn(res, control, name); });\n        return res;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._allControlsDisabled = function () {\n        for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n            var controlName = _a[_i];\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroup.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, name) {\n            if (value[name] === undefined) {\n                throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n            }\n        });\n    };\n    return FormGroup;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of an array of {\\@link FormControl},\n * {\\@link FormGroup} or {\\@link FormArray} instances.\n *\n * A `FormArray` aggregates the values of each child {\\@link FormControl} into an array.\n * It calculates its status by reducing the statuses of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormGroup}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormArray}, pass in an array of child controls as the first\n * argument.\n *\n * ### Example\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * You can also include array-level validators as the second arg, or array-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ### Adding or removing controls\n *\n * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that will result in strange and unexpected behavior such\n * as broken change detection.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormArray = (function (_super) {\n    tslib_1.__extends(FormArray, _super);\n    /**\n     * @param {?} controls\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormArray(controls, validator, asyncValidator) {\n        var _this = _super.call(this, validator || null, asyncValidator || null) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Get the {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.at = function (index) { return this.controls[index]; };\n    /**\n     * Insert a new {\\@link AbstractControl} at the end of the array.\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.push = function (control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Insert a new {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.insert = function (index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Remove the control at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.removeAt = function (index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Replace an existing control.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.setControl = function (index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    Object.defineProperty(FormArray.prototype, \"length\", {\n        /**\n         * Length of the control array.\n         * @return {?}\n         */\n        get: function () { return this.controls.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Sets the value of the {\\@link FormArray}. It accepts an array that matches\n     *  the structure of the control.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.setValue(['Nancy', 'Drew']);\n     *  console.log(arr.value);   // ['Nancy', 'Drew']\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._checkAllValuesPresent(value);\n        value.forEach(function (newValue, index) {\n            _this._throwIfControlMissing(index);\n            _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     *  Patches the value of the {\\@link FormArray}. It accepts an array that matches the\n     *  structure of the control, and will do its best to match the values to the correct\n     *  controls in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.patchValue(['Nancy']);\n     *  console.log(arr.value);   // ['Nancy', null]\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.patchValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        value.forEach(function (newValue, index) {\n            if (_this.at(index)) {\n                _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Resets the {\\@link FormArray}. This means by default:\n     *\n     * * The array and all descendants are marked `pristine`\n     * * The array and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state can be a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.reset = function (value, options) {\n        if (value === void 0) { value = []; }\n        if (options === void 0) { options = {}; }\n        this._forEachChild(function (control, index) {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n        this._updatePristine(options);\n        this._updateTouched(options);\n    };\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the array.\n     * @return {?}\n     */\n    FormArray.prototype.getRawValue = function () {\n        return this.controls.map(function (control) {\n            return control instanceof FormControl ? control.value : ((control)).getRawValue();\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype._throwIfControlMissing = function (index) {\n        if (!this.controls.length) {\n            throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.at(index)) {\n            throw new Error(\"Cannot find form control at index \" + index);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormArray.prototype._forEachChild = function (cb) {\n        this.controls.forEach(function (control, index) { cb(control, index); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._updateValue = function () {\n        var _this = this;\n        this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n            .map(function (control) { return control.value; });\n    };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormArray.prototype._anyControls = function (condition) {\n        return this.controls.some(function (control) { return control.enabled && condition(control); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._setUpControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) { return _this._registerControl(control); });\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormArray.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, i) {\n            if (value[i] === undefined) {\n                throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n            }\n        });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._allControlsDisabled = function () {\n        for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n            var control = _a[_i];\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    };\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype._registerControl = function (control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    };\n    return FormArray;\n}(AbstractControl));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return NgForm; })\n};\nvar resolvedPromise = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a top-level {\\@link FormGroup} instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * \\@howToUse\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You can export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * {\\@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n * will give you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, you'll want to use {\\@link NgModel} with a\n * `name` attribute.  You can also use {\\@link NgModelGroup} if you'd like to create\n * sub-groups within the form.\n *\n * You can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgForm = (function (_super) {\n    tslib_1.__extends(NgForm, _super);\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function NgForm(validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._submitted = false;\n        _this.ngSubmit = new EventEmitter();\n        _this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        return _this;\n    }\n    Object.defineProperty(NgForm.prototype, \"submitted\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"controls\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form.controls; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            dir._control = (container.registerControl(dir.name, dir.control));\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            var /** @type {?} */ group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.updateModel = function (dir, value) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ ctrl = (_this.form.get(/** @type {?} */ ((dir.path))));\n            ctrl.setValue(value);\n        });\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NgForm.prototype.onSubmit = function ($event) {\n        this._submitted = true;\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    NgForm.prototype.onReset = function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    NgForm.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this._submitted = false;\n    };\n    /**\n     * \\@internal\n     * @param {?} path\n     * @return {?}\n     */\n    NgForm.prototype._findContainer = function (path) {\n        path.pop();\n        return path.length ? (this.form.get(path)) : this.form;\n    };\n    return NgForm;\n}(ControlContainer));\nNgForm.decorators = [\n    { type: Directive, args: [{\n                selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                providers: [formDirectiveProvider],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                outputs: ['ngSubmit'],\n                exportAs: 'ngForm'\n            },] },\n];\n/**\n * @nocollapse\n */\nNgForm.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar FormErrorExamples = {\n    formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n    formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n    formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; index as i\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n    ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n    ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TemplateDrivenErrors = (function () {\n    function TemplateDrivenErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelParentException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + FormErrorExamples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + FormErrorExamples.ngModelWithFormGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.formGroupNameException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.missingNameException = function () {\n        throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelGroupParentException = function () {\n        throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    return TemplateDrivenErrors;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return NgModelGroup; })\n};\n/**\n * \\@whatItDoes Creates and binds a {\\@link FormGroup} instance to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used as a child of {\\@link NgForm} (or in other words,\n * within `<form>` tags).\n *\n * Use this directive if you'd like to create a sub-group within a form. This can\n * come in handy if you want to validate a sub-group of your form separately from\n * the rest of your form, or if some values in your domain model make more sense to\n * consume together in a nested object.\n *\n * Pass in the name you'd like this sub-group to have and it will become the key\n * for the sub-group in the form's full value. You can also export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * {\\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n * \\@stable\n */\nvar NgModelGroup = (function (_super) {\n    tslib_1.__extends(NgModelGroup, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function NgModelGroup(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    NgModelGroup.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    };\n    return NgModelGroup;\n}(AbstractFormGroupDirective));\nNgModelGroup.decorators = [\n    { type: Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n];\n/**\n * @nocollapse\n */\nNgModelGroup.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nNgModelGroup.propDecorators = {\n    'name': [{ type: Input, args: ['ngModelGroup',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return NgModel; })\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nvar resolvedPromise$1 = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a {\\@link FormControl} instance from a domain model and binds it\n * to a form control element.\n *\n * The {\\@link FormControl} instance will track the value, user interaction, and\n * validation status of the control and keep the view synced with the model. If used\n * within a parent form, the directive will also register itself with the form as a child\n * control.\n *\n * \\@howToUse\n *\n * This directive can be used by itself or as part of a larger form. All you need is the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional {\\@link Input}. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n * the domain model in your class as well.\n *\n * If you wish to inspect the properties of the associated {\\@link FormControl} (like\n * validity state), you can also export the directive into a local template variable using\n * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n * will fall through to the control anyway, so you can access them directly. You can see a\n * full list of properties directly available in {\\@link AbstractControlDirective}.\n *\n * The following is an example of a simple standalone control using `ngModel`:\n *\n * {\\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * It's worth noting that in the context of a parent form, you often can skip one-way or\n * two-way binding because the parent form will sync the value for you. You can access\n * its properties by exporting it into a local template variable using `ngForm` (ex:\n * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * Take a look at an example of using `ngModel` within a form:\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * To see `ngModel` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgModel = (function (_super) {\n    tslib_1.__extends(NgModel, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function NgModel(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        /**\n         * \\@internal\n         */\n        _this._control = new FormControl();\n        /**\n         * \\@internal\n         */\n        _this._registered = false;\n        _this.update = new EventEmitter();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype.ngOnChanges = function (changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n    Object.defineProperty(NgModel.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._control; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._parent ? controlPath(this.name, this._parent) : [this.name];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    NgModel.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpControl = function () {\n        this._isStandalone() ? this._setUpStandalone() :\n            this.formDirective.addControl(this);\n        this._registered = true;\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._isStandalone = function () {\n        return !this._parent || !!(this.options && this.options.standalone);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpStandalone = function () {\n        setUpControl(this._control, this);\n        this._control.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkForErrors = function () {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            TemplateDrivenErrors.formGroupNameException();\n        }\n        else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkName = function () {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgModel.prototype._updateValue = function (value) {\n        var _this = this;\n        resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype._updateDisabled = function (changes) {\n        var _this = this;\n        var /** @type {?} */ disabledValue = changes['isDisabled'].currentValue;\n        var /** @type {?} */ isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise$1.then(function () {\n            if (isDisabled && !_this.control.disabled) {\n                _this.control.disable();\n            }\n            else if (!isDisabled && _this.control.disabled) {\n                _this.control.enable();\n            }\n        });\n    };\n    return NgModel;\n}(NgControl));\nNgModel.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngModel]:not([formControlName]):not([formControl])',\n                providers: [formControlBinding],\n                exportAs: 'ngModel'\n            },] },\n];\n/**\n * @nocollapse\n */\nNgModel.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nNgModel.propDecorators = {\n    'name': [{ type: Input },],\n    'isDisabled': [{ type: Input, args: ['disabled',] },],\n    'model': [{ type: Input, args: ['ngModel',] },],\n    'options': [{ type: Input, args: ['ngModelOptions',] },],\n    'update': [{ type: Output, args: ['ngModelChange',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ReactiveErrors = (function () {\n    function ReactiveErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.controlParentException = function () {\n        throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.ngModelGroupException = function () {\n        throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + FormErrorExamples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.missingFormException = function () {\n        throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.groupParentException = function () {\n        throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formGroupName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.arrayParentException = function () {\n        throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + FormErrorExamples.formArrayName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.disabledAttrWarning = function () {\n        console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n    };\n    return ReactiveErrors;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return FormControlDirective; })\n};\n/**\n * \\@whatItDoes Syncs a standalone {\\@link FormControl} instance to a form control element.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * Use this directive if you'd like to create and manage a {\\@link FormControl} instance directly.\n * Simply create a {\\@link FormControl}, save it to your component class, and pass it into the\n * {\\@link FormControlDirective}.\n *\n * This directive is designed to be used as a standalone control.  Unlike {\\@link FormControlName},\n * it does not require that your {\\@link FormControl} instance be part of any parent\n * {\\@link FormGroup}, and it won't be registered to any {\\@link FormGroupDirective} that\n * exists above it.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormControl} instance. See a full list of available properties in\n * {\\@link AbstractControl}.\n *\n * **Set the value**: You can pass in an initial value when instantiating the {\\@link FormControl},\n * or you can set it programmatically later using {\\@link AbstractControl#setValue} or\n * {\\@link AbstractControl#patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n *  \\@stable\n */\nvar FormControlDirective = (function (_super) {\n    tslib_1.__extends(FormControlDirective, _super);\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function FormControlDirective(validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this.update = new EventEmitter();\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype.ngOnChanges = function (changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled && ((this.valueAccessor)).setDisabledState) {\n                ((((this.valueAccessor)).setDisabledState))(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    Object.defineProperty(FormControlDirective.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype._isControlChanged = function (changes) {\n        return changes.hasOwnProperty('form');\n    };\n    return FormControlDirective;\n}(NgControl));\nFormControlDirective.decorators = [\n    { type: Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n];\n/**\n * @nocollapse\n */\nFormControlDirective.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nFormControlDirective.propDecorators = {\n    'form': [{ type: Input, args: ['formControl',] },],\n    'model': [{ type: Input, args: ['ngModel',] },],\n    'update': [{ type: Output, args: ['ngModelChange',] },],\n    'isDisabled': [{ type: Input, args: ['disabled',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormGroupDirective; })\n};\n/**\n * \\@whatItDoes Binds an existing {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive accepts an existing {\\@link FormGroup} instance. It will then use this\n * {\\@link FormGroup} instance to match any child {\\@link FormControl}, {\\@link FormGroup},\n * and {\\@link FormArray} instances to child {\\@link FormControlName}, {\\@link FormGroupName},\n * and {\\@link FormArrayName} directives.\n *\n * **Set value**: You can set the form's initial value when instantiating the\n * {\\@link FormGroup}, or you can set it programmatically later using the {\\@link FormGroup}'s\n * {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue} methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n * to the {\\@link FormGroup}'s {\\@link AbstractControl#valueChanges} event.  You can also listen to\n * its {\\@link AbstractControl#statusChanges} event to be notified when the validation status is\n * re-calculated.\n *\n * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormGroupDirective = (function (_super) {\n    tslib_1.__extends(FormGroupDirective, _super);\n    /**\n     * @param {?} _validators\n     * @param {?} _asyncValidators\n     */\n    function FormGroupDirective(_validators, _asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._validators = _validators;\n        _this._asyncValidators = _asyncValidators;\n        _this._submitted = false;\n        _this.directives = [];\n        _this.form = ((null));\n        _this.ngSubmit = new EventEmitter();\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormGroupDirective.prototype.ngOnChanges = function (changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n        }\n    };\n    Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addControl = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeControl = function (dir) { remove(this.directives, dir); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormGroup = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormArray = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormArray = function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormArray = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.updateModel = function (dir, value) {\n        var /** @type {?} */ ctrl = (this.form.get(dir.path));\n        ctrl.setValue(value);\n    };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onSubmit = function ($event) {\n        this._submitted = true;\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this._submitted = false;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateDomValue = function () {\n        var _this = this;\n        this.directives.forEach(function (dir) {\n            var /** @type {?} */ newCtrl = _this.form.get(dir.path);\n            if (dir._control !== newCtrl) {\n                cleanUpControl(dir._control, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n                dir._control = newCtrl;\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateRegistrations = function () {\n        var _this = this;\n        this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n        if (this._oldForm)\n            this._oldForm._registerOnCollectionChange(function () { });\n        this._oldForm = this.form;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateValidators = function () {\n        var /** @type {?} */ sync = composeValidators(this._validators);\n        this.form.validator = Validators.compose([/** @type {?} */ ((this.form.validator)), /** @type {?} */ ((sync))]);\n        var /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n        this.form.asyncValidator = Validators.composeAsync([/** @type {?} */ ((this.form.asyncValidator)), /** @type {?} */ ((async))]);\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._checkFormPresent = function () {\n        if (!this.form) {\n            ReactiveErrors.missingFormException();\n        }\n    };\n    return FormGroupDirective;\n}(ControlContainer));\nFormGroupDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[formGroup]',\n                providers: [formDirectiveProvider$1],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                exportAs: 'ngForm'\n            },] },\n];\n/**\n * @nocollapse\n */\nFormGroupDirective.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormGroupDirective.propDecorators = {\n    'form': [{ type: Input, args: ['formGroup',] },],\n    'ngSubmit': [{ type: Output },],\n};\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormGroupName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormGroup} you want to link, and\n * will look for a {\\@link FormGroup} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form groups can come in handy when you want to validate a sub-group of a\n * form separately from the rest or when you'd like to group the values of certain\n * controls into their own nested object.\n *\n * **Access the group**: You can access the associated {\\@link FormGroup} using the\n * {\\@link AbstractControl#get} method. Ex: `this.form.get('name')`.\n *\n * You can also access individual controls within the group using dot syntax.\n * Ex: `this.form.get('name.first')`\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormGroup}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormGroup}, or you can set it programmatically later using\n * {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the group, you can\n * subscribe to the {\\@link AbstractControl#valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormGroupName = (function (_super) {\n    tslib_1.__extends(FormGroupName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function FormGroupName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.groupParentException();\n        }\n    };\n    return FormGroupName;\n}(AbstractFormGroupDirective));\nFormGroupName.decorators = [\n    { type: Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n];\n/**\n * @nocollapse\n */\nFormGroupName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormGroupName.propDecorators = {\n    'name': [{ type: Input, args: ['formGroupName',] },],\n};\nvar formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormArrayName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormArray} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormArray} you want to link, and\n * will look for a {\\@link FormArray} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form arrays can come in handy when you have a group of form controls but\n * you're not sure how many there will be. Form arrays allow you to create new\n * form controls dynamically.\n *\n * **Access the array**: You can access the associated {\\@link FormArray} using the\n * {\\@link AbstractControl#get} method on the parent {\\@link FormGroup}.\n * Ex: `this.form.get('cities')`.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormArray}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormArray}, or you can set the value programmatically later using the\n * {\\@link FormArray}'s {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue}\n * methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the array, you can\n * subscribe to the {\\@link FormArray}'s {\\@link AbstractControl#valueChanges} event.  You can also\n * listen to its {\\@link AbstractControl#statusChanges} event to be notified when the validation\n * status is re-calculated.\n *\n * **Add new controls**: You can add new controls to the {\\@link FormArray} dynamically by\n * calling its {\\@link FormArray#push} method.\n *  Ex: `this.form.get('cities').push(new FormControl());`\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormArrayName = (function (_super) {\n    tslib_1.__extends(FormArrayName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function FormArrayName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnInit = function () {\n        this._checkParentType(); /** @type {?} */\n        ((this.formDirective)).addFormArray(this);\n    };\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    };\n    Object.defineProperty(FormArrayName.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return ((this.formDirective)).getFormArray(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._parent ? (this._parent.formDirective) : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.arrayParentException();\n        }\n    };\n    return FormArrayName;\n}(ControlContainer));\nFormArrayName.decorators = [\n    { type: Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n];\n/**\n * @nocollapse\n */\nFormArrayName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormArrayName.propDecorators = {\n    'name': [{ type: Input, args: ['formArrayName',] },],\n};\n/**\n * @param {?} parent\n * @return {?}\n */\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return FormControlName; })\n};\n/**\n * \\@whatItDoes Syncs a {\\@link FormControl} in an existing {\\@link FormGroup} to a form control\n * element by name.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the {\\@link FormControl} instance you want to\n * link, and will look for a {\\@link FormControl} registered with that name in the\n * closest {\\@link FormGroup} or {\\@link FormArray} above it.\n *\n * **Access the control**: You can access the {\\@link FormControl} associated with\n * this directive by using the {\\@link AbstractControl#get} method.\n * Ex: `this.form.get('first');`\n *\n * **Get value**: the `value` property is always synced and available on the {\\@link FormControl}.\n * See a full list of available properties in {\\@link AbstractControl}.\n *\n *  **Set value**: You can set an initial value for the control when instantiating the\n *  {\\@link FormControl}, or you can set it programmatically later using\n *  {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormControlName = (function (_super) {\n    tslib_1.__extends(FormControlName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this._added = false;\n        _this.update = new EventEmitter();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnChanges = function (changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    };\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlName.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    Object.defineProperty(FormControlName.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, /** @type {?} */ ((this._parent))); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return ((composeAsyncValidators(this._rawAsyncValidators)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._control; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._checkParentType = function () {\n        if (!(this._parent instanceof FormGroupName) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            ReactiveErrors.ngModelGroupException();\n        }\n        else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n            !(this._parent instanceof FormArrayName)) {\n            ReactiveErrors.controlParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._setUpControl = function () {\n        this._checkParentType();\n        this._control = this.formDirective.addControl(this);\n        if (this.control.disabled && ((this.valueAccessor)).setDisabledState) {\n            ((((this.valueAccessor)).setDisabledState))(true);\n        }\n        this._added = true;\n    };\n    return FormControlName;\n}(NgControl));\nFormControlName.decorators = [\n    { type: Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n];\n/**\n * @nocollapse\n */\nFormControlName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nFormControlName.propDecorators = {\n    'name': [{ type: Input, args: ['formControlName',] },],\n    'model': [{ type: Input, args: ['ngModel',] },],\n    'update': [{ type: Output, args: ['ngModelChange',] },],\n    'isDisabled': [{ type: Input, args: ['disabled',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return RequiredValidator; }),\n    multi: true\n};\nvar CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return CheckboxRequiredValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `required` validator to any controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * \\@stable\n */\nvar RequiredValidator = (function () {\n    function RequiredValidator() {\n    }\n    Object.defineProperty(RequiredValidator.prototype, \"required\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._required; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._required = value != null && value !== false && \"\" + value !== 'false';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    RequiredValidator.prototype.validate = function (c) {\n        return this.required ? Validators.required(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    return RequiredValidator;\n}());\nRequiredValidator.decorators = [\n    { type: Directive, args: [{\n                selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                providers: [REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nRequiredValidator.ctorParameters = function () { return []; };\nRequiredValidator.propDecorators = {\n    'required': [{ type: Input },],\n};\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * \\@experimental\n */\nvar CheckboxRequiredValidator = (function (_super) {\n    tslib_1.__extends(CheckboxRequiredValidator, _super);\n    function CheckboxRequiredValidator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    CheckboxRequiredValidator.prototype.validate = function (c) {\n        return this.required ? Validators.requiredTrue(c) : null;\n    };\n    return CheckboxRequiredValidator;\n}(RequiredValidator));\nCheckboxRequiredValidator.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nCheckboxRequiredValidator.ctorParameters = function () { return []; };\n/**\n * Provider which adds {\\@link EmailValidator} to {\\@link NG_VALIDATORS}.\n */\nvar EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return EmailValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `email` validator to controls marked with the\n * `email` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * \\@experimental\n */\nvar EmailValidator = (function () {\n    function EmailValidator() {\n    }\n    Object.defineProperty(EmailValidator.prototype, \"email\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._enabled = value === '' || value === true || value === 'true';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    EmailValidator.prototype.validate = function (c) {\n        return this._enabled ? Validators.email(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    EmailValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    return EmailValidator;\n}());\nEmailValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                providers: [EMAIL_VALIDATOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nEmailValidator.ctorParameters = function () { return []; };\nEmailValidator.propDecorators = {\n    'email': [{ type: Input },],\n};\n/**\n * Provider which adds {\\@link MinLengthValidator} to {\\@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {\\@example common/forms/ts/validators/validators.ts region='min'}\n */\nvar MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MinLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MinLengthValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n *\n * \\@stable\n */\nvar MinLengthValidator = (function () {\n    function MinLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MinLengthValidator.prototype.ngOnChanges = function (changes) {\n        if ('minlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MinLengthValidator.prototype.validate = function (c) {\n        return this.minlength == null ? null : this._validator(c);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MinLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.minLength(parseInt(this.minlength, 10));\n    };\n    return MinLengthValidator;\n}());\nMinLengthValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                providers: [MIN_LENGTH_VALIDATOR],\n                host: { '[attr.minlength]': 'minlength ? minlength : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMinLengthValidator.ctorParameters = function () { return []; };\nMinLengthValidator.propDecorators = {\n    'minlength': [{ type: Input },],\n};\n/**\n * Provider which adds {\\@link MaxLengthValidator} to {\\@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {\\@example common/forms/ts/validators/validators.ts region='max'}\n */\nvar MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MaxLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MaxLengthValidator} for any `formControlName,\n * `formControl`,\n * or control with `ngModel` that also has a `maxlength` attribute.\n *\n * \\@stable\n */\nvar MaxLengthValidator = (function () {\n    function MaxLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n        if ('maxlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.validate = function (c) {\n        return this.maxlength != null ? this._validator(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MaxLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n    };\n    return MaxLengthValidator;\n}());\nMaxLengthValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                providers: [MAX_LENGTH_VALIDATOR],\n                host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMaxLengthValidator.ctorParameters = function () { return []; };\nMaxLengthValidator.propDecorators = {\n    'maxlength': [{ type: Input },],\n};\nvar PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return PatternValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `pattern` validator to any controls marked with the\n * `pattern` attribute, via the {\\@link NG_VALIDATORS} binding. Uses attribute value\n * as the regex to validate Control value against.  Follows pattern attribute\n * semantics; i.e. regex must match entire Control value.\n *\n * ### Example\n *\n * ```\n * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n * ```\n * \\@stable\n */\nvar PatternValidator = (function () {\n    function PatternValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    PatternValidator.prototype.ngOnChanges = function (changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n    return PatternValidator;\n}());\nPatternValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                providers: [PATTERN_VALIDATOR],\n                host: { '[attr.pattern]': 'pattern ? pattern : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nPatternValidator.ctorParameters = function () { return []; };\nPatternValidator.propDecorators = {\n    'pattern': [{ type: Input },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Creates an {\\@link AbstractControl} from a user-specified configuration.\n *\n * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n * forms.\n *\n * \\@howToUse\n *\n * To use, inject `FormBuilder` into your component class. You can then call its methods\n * directly.\n *\n * {\\@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  * **NgModule**: {\\@link ReactiveFormsModule}\n *\n * \\@stable\n */\nvar FormBuilder = (function () {\n    function FormBuilder() {\n    }\n    /**\n     * Construct a new {\\@link FormGroup} with the given map of configuration.\n     * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n     *\n     * See the {\\@link FormGroup} constructor for more details.\n     * @param {?} controlsConfig\n     * @param {?=} extra\n     * @return {?}\n     */\n    FormBuilder.prototype.group = function (controlsConfig, extra) {\n        if (extra === void 0) { extra = null; }\n        var /** @type {?} */ controls = this._reduceControls(controlsConfig);\n        var /** @type {?} */ validator = extra != null ? extra['validator'] : null;\n        var /** @type {?} */ asyncValidator = extra != null ? extra['asyncValidator'] : null;\n        return new FormGroup(controls, validator, asyncValidator);\n    };\n    /**\n     * Construct a new {\\@link FormControl} with the given `formState`,`validator`, and\n     * `asyncValidator`.\n     *\n     * `formState` can either be a standalone value for the form control or an object\n     * that contains both a value and a disabled status.\n     *\n     * @param {?} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n        return new FormControl(formState, validator, asyncValidator);\n    };\n    /**\n     * Construct a {\\@link FormArray} from the given `controlsConfig` array of\n     * configuration, with the given optional `validator` and `asyncValidator`.\n     * @param {?} controlsConfig\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n        var _this = this;\n        var /** @type {?} */ controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n        return new FormArray(controls, validator, asyncValidator);\n    };\n    /**\n     * \\@internal\n     * @param {?} controlsConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._reduceControls = function (controlsConfig) {\n        var _this = this;\n        var /** @type {?} */ controls = {};\n        Object.keys(controlsConfig).forEach(function (controlName) {\n            controls[controlName] = _this._createControl(controlsConfig[controlName]);\n        });\n        return controls;\n    };\n    /**\n     * \\@internal\n     * @param {?} controlConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._createControl = function (controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            var /** @type {?} */ value = controlConfig[0];\n            var /** @type {?} */ validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            var /** @type {?} */ asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    };\n    return FormBuilder;\n}());\nFormBuilder.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nFormBuilder.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('4.3.5');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * \\@experimental\n */\nvar NgNoValidate = (function () {\n    function NgNoValidate() {\n    }\n    return NgNoValidate;\n}());\nNgNoValidate.decorators = [\n    { type: Directive, args: [{\n                selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                host: { 'novalidate': '' },\n            },] },\n];\n/**\n * @nocollapse\n */\nNgNoValidate.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SHARED_FORM_DIRECTIVES = [\n    NgNoValidate,\n    NgSelectOption,\n    NgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\nvar TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nvar REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nvar InternalFormsSharedModule = (function () {\n    function InternalFormsSharedModule() {\n    }\n    return InternalFormsSharedModule;\n}());\nInternalFormsSharedModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: SHARED_FORM_DIRECTIVES,\n                exports: SHARED_FORM_DIRECTIVES,\n            },] },\n];\n/**\n * @nocollapse\n */\nInternalFormsSharedModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The ng module for forms.\n * \\@stable\n */\nvar FormsModule = (function () {\n    function FormsModule() {\n    }\n    return FormsModule;\n}());\nFormsModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                providers: [RadioControlRegistry],\n                exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n            },] },\n];\n/**\n * @nocollapse\n */\nFormsModule.ctorParameters = function () { return []; };\n/**\n * The ng module for reactive forms.\n * \\@stable\n */\nvar ReactiveFormsModule = (function () {\n    function ReactiveFormsModule() {\n    }\n    return ReactiveFormsModule;\n}());\nReactiveFormsModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                providers: [FormBuilder, RadioControlRegistry],\n                exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n            },] },\n];\n/**\n * @nocollapse\n */\nReactiveFormsModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a {@link FormGroup} that\n * consists of {@link FormControl} objects, and mapping them onto the DOM. {@link FormControl}\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\nexport { AbstractControlDirective, AbstractFormGroupDirective, CheckboxControlValueAccessor, ControlContainer, NG_VALUE_ACCESSOR, COMPOSITION_BUFFER_MODE, DefaultValueAccessor, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, RadioControlValueAccessor, FormControlDirective, FormControlName, FormGroupDirective, FormArrayName, FormGroupName, NgSelectOption, SelectControlValueAccessor, SelectMultipleControlValueAccessor, CheckboxRequiredValidator, EmailValidator, MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator, FormBuilder, AbstractControl, FormArray, FormControl, FormGroup, NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators, VERSION, FormsModule, ReactiveFormsModule, InternalFormsSharedModule as ɵba, REACTIVE_DRIVEN_DIRECTIVES as ɵz, SHARED_FORM_DIRECTIVES as ɵx, TEMPLATE_DRIVEN_DIRECTIVES as ɵy, CHECKBOX_VALUE_ACCESSOR as ɵa, DEFAULT_VALUE_ACCESSOR as ɵb, AbstractControlStatus as ɵc, ngControlStatusHost as ɵd, formDirectiveProvider as ɵe, formControlBinding as ɵf, modelGroupProvider as ɵg, NgNoValidate as ɵbf, NUMBER_VALUE_ACCESSOR as ɵbb, NumberValueAccessor as ɵbc, RADIO_VALUE_ACCESSOR as ɵh, RadioControlRegistry as ɵi, RANGE_VALUE_ACCESSOR as ɵbd, RangeValueAccessor as ɵbe, formControlBinding$1 as ɵj, controlNameBinding as ɵk, formDirectiveProvider$1 as ɵl, formArrayNameProvider as ɵn, formGroupNameProvider as ɵm, SELECT_VALUE_ACCESSOR as ɵo, NgSelectMultipleOption as ɵq, SELECT_MULTIPLE_VALUE_ACCESSOR as ɵp, CHECKBOX_REQUIRED_VALIDATOR as ɵs, EMAIL_VALIDATOR as ɵt, MAX_LENGTH_VALIDATOR as ɵv, MIN_LENGTH_VALIDATOR as ɵu, PATTERN_VALIDATOR as ɵw, REQUIRED_VALIDATOR as ɵr };\n//# sourceMappingURL=forms.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/@angular/forms.es5.js\n// module id = 28\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule).then(function(MODULE_REF) {   if (module[\"hot\"]) {     module[\"hot\"][\"accept\"]();          if (MODULE_REF.instance[\"hmrOnInit\"]) {       module[\"hot\"][\"data\"] && MODULE_REF.instance[\"hmrOnInit\"](module[\"hot\"][\"data\"]);     }     if (MODULE_REF.instance[\"hmrOnStatus\"]) {       module[\"hot\"][\"apply\"](function(status) {         MODULE_REF.instance[\"hmrOnStatus\"](status);       });     }     if (MODULE_REF.instance[\"hmrOnCheck\"]) {       module[\"hot\"][\"check\"](function(err, outdatedModules) {         MODULE_REF.instance[\"hmrOnCheck\"](err, outdatedModules);       });     }     if (MODULE_REF.instance[\"hmrOnDecline\"]) {       module[\"hot\"][\"decline\"](function(dependencies) {         MODULE_REF.instance[\"hmrOnDecline\"](dependencies);       });     }     module[\"hot\"][\"dispose\"](function(store) {       MODULE_REF.instance[\"hmrOnDestroy\"] && MODULE_REF.instance[\"hmrOnDestroy\"](store);       MODULE_REF.destroy();       MODULE_REF.instance[\"hmrAfterDestroy\"] && MODULE_REF.instance[\"hmrAfterDestroy\"](store);     });   }   return MODULE_REF; });\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/demo/main.ts","import * as tslib_1 from \"tslib\";\n/**\n * @license Angular v4.3.5\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Inject, Injectable, InjectionToken, NgModule, Optional, PLATFORM_ID } from '@angular/core';\nimport { of } from 'rxjs/observable/of';\nimport { concatMap } from 'rxjs/operator/concatMap';\nimport { filter } from 'rxjs/operator/filter';\nimport { map } from 'rxjs/operator/map';\nimport { DOCUMENT, ɵparseCookieValue } from '@angular/common';\nimport { Observable } from 'rxjs/Observable';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpHandler = (function () {\n    function HttpHandler() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpHandler.prototype.handle = function (req) { };\n    return HttpHandler;\n}());\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpBackend = (function () {\n    function HttpBackend() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpBackend.prototype.handle = function (req) { };\n    return HttpBackend;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\n * serialize and parse URL parameter keys and values.\n *\n * \\@experimental\n */\nvar HttpUrlEncodingCodec = (function () {\n    function HttpUrlEncodingCodec() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeKey = function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeValue = function (v) { return standardEncoding(v); };\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeKey = function (k) { return decodeURIComponent(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeValue = function (v) { return decodeURIComponent(v); };\n    return HttpUrlEncodingCodec;\n}());\n/**\n * @param {?} rawParams\n * @param {?} codec\n * @return {?}\n */\nfunction paramParser(rawParams, codec) {\n    var /** @type {?} */ map$$1 = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map$$1.get(key) || [];\n            list.push(val);\n            map$$1.set(key, list);\n        });\n    }\n    return map$$1;\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immuatable - all mutation operations return a new instance.\n *\n * \\@experimental\n */\nvar HttpParams = (function () {\n    /**\n     * @param {?=} options\n     */\n    function HttpParams(options) {\n        if (options === void 0) { options = {}; }\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        this.map = !!options.fromString ? paramParser(options.fromString, this.encoder) : null;\n    }\n    /**\n     * Check whether the body has one or more values for the given parameter name.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.has = function (param) {\n        this.init();\n        return ((this.map)).has(param);\n    };\n    /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.get = function (param) {\n        this.init();\n        var /** @type {?} */ res = ((this.map)).get(param);\n        return !!res ? res[0] : null;\n    };\n    /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.getAll = function (param) {\n        this.init();\n        return ((this.map)).get(param) || null;\n    };\n    /**\n     * Get all the parameter names for this body.\n     * @return {?}\n     */\n    HttpParams.prototype.keys = function () {\n        this.init();\n        return Array.from(/** @type {?} */ ((this.map)).keys());\n    };\n    /**\n     * Construct a new body with an appended value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.append = function (param, value) { return this.clone({ param: param, value: value, op: 'a' }); };\n    /**\n     * Construct a new body with a new value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.set = function (param, value) { return this.clone({ param: param, value: value, op: 's' }); };\n    /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     * @param {?} param\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpParams.prototype.delete = function (param, value) { return this.clone({ param: param, value: value, op: 'd' }); };\n    /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    HttpParams.prototype.toString = function () {\n        var _this = this;\n        this.init();\n        return this.keys()\n            .map(function (key) {\n            var /** @type {?} */ eKey = _this.encoder.encodeKey(key);\n            return ((((_this.map)).get(key))).map(function (value) { return eKey + '=' + _this.encoder.encodeValue(value); })\n                .join('&');\n        })\n            .join('&');\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpParams.prototype.clone = function (update) {\n        var /** @type {?} */ clone = new HttpParams({ encoder: this.encoder });\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @return {?}\n     */\n    HttpParams.prototype.init = function () {\n        var _this = this;\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(function (key) { return ((_this.map)).set(key, /** @type {?} */ ((((((_this.cloneFrom)).map)).get(key)))); }); /** @type {?} */\n            ((this.updates)).forEach(function (update) {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        var /** @type {?} */ base = (update.op === 'a' ? ((_this.map)).get(update.param) : undefined) || [];\n                        base.push(/** @type {?} */ ((update.value))); /** @type {?} */\n                        ((_this.map)).set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            var /** @type {?} */ base_1 = ((_this.map)).get(update.param) || [];\n                            var /** @type {?} */ idx = base_1.indexOf(update.value);\n                            if (idx !== -1) {\n                                base_1.splice(idx, 1);\n                            }\n                            if (base_1.length > 0) {\n                                ((_this.map)).set(update.param, base_1);\n                            }\n                            else {\n                                ((_this.map)).delete(update.param);\n                            }\n                        }\n                        else {\n                            ((_this.map)).delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = null;\n        }\n    };\n    return HttpParams;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Immutable set of Http headers, with lazy parsing.\n * \\@experimental\n */\nvar HttpHeaders = (function () {\n    /**\n     * @param {?=} headers\n     */\n    function HttpHeaders(headers) {\n        var _this = this;\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                headers.split('\\n').forEach(function (line) {\n                    var index = line.indexOf(':');\n                    if (index > 0) {\n                        var name = line.slice(0, index);\n                        var key = name.toLowerCase();\n                        var value = line.slice(index + 1).trim();\n                        _this.maybeSetNormalizedName(name, key);\n                        if (_this.headers.has(key)) {\n                            _this.headers.get(key).push(value);\n                        }\n                        else {\n                            _this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                Object.keys(headers).forEach(function (name) {\n                    var values = headers[name];\n                    var key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        _this.headers.set(key, values);\n                        _this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.has = function (name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    };\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.get = function (name) {\n        this.init();\n        var /** @type {?} */ values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    HttpHeaders.prototype.keys = function () {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    };\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.getAll = function (name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.append = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'a' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.set = function (name, value) {\n        return this.clone({ name: name, value: value, op: 's' });\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.delete = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'd' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    HttpHeaders.prototype.maybeSetNormalizedName = function (name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    HttpHeaders.prototype.init = function () {\n        var _this = this;\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(function (update) { return _this.applyUpdate(update); });\n                this.lazyUpdate = null;\n            }\n        }\n    };\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    HttpHeaders.prototype.copyFrom = function (other) {\n        var _this = this;\n        other.init();\n        Array.from(other.headers.keys()).forEach(function (key) {\n            _this.headers.set(key, /** @type {?} */ ((other.headers.get(key))));\n            _this.normalizedNames.set(key, /** @type {?} */ ((other.normalizedNames.get(key))));\n        });\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.clone = function (update) {\n        var /** @type {?} */ clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.applyUpdate = function (update) {\n        var /** @type {?} */ key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                var /** @type {?} */ value = ((update.value));\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                var /** @type {?} */ base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push.apply(base, value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                var /** @type {?} */ toDelete_1 = (update.value);\n                if (!toDelete_1) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    var /** @type {?} */ existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(function (value) { return toDelete_1.indexOf(value) === -1; });\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    HttpHeaders.prototype.forEach = function (fn) {\n        var _this = this;\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(function (key) { return fn(/** @type {?} */ ((_this.normalizedNames.get(key))), /** @type {?} */ ((_this.headers.get(key)))); });\n    };\n    return HttpHeaders;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine whether the given HTTP method may include a body.\n * @param {?} method\n * @return {?}\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * \\@experimental\n */\nvar HttpRequest = (function () {\n    /**\n     * @param {?} method\n     * @param {?} url\n     * @param {?=} third\n     * @param {?=} fourth\n     */\n    function HttpRequest(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        var options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = third || null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = third;\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            var params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                var qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                var sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    HttpRequest.prototype.serializeBody = function () {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return ((this.body)).toString();\n    };\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    HttpRequest.prototype.detectContentTypeHeader = function () {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    };\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpRequest.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        var /** @type {?} */ method = update.method || this.method;\n        var /** @type {?} */ url = update.url || this.url;\n        var /** @type {?} */ responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        var /** @type {?} */ body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        var /** @type {?} */ withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        var /** @type {?} */ reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        var /** @type {?} */ headers = update.headers || this.headers;\n        var /** @type {?} */ params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce(function (headers, name) { return headers.set(name, /** @type {?} */ ((update.setHeaders))[name]); }, headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce(function (params, param) { return params.set(param, /** @type {?} */ ((update.setParams))[param]); }, params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params: params, headers: headers, reportProgress: reportProgress, responseType: responseType, withCredentials: withCredentials,\n        });\n    };\n    return HttpRequest;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HttpEventType = {};\nHttpEventType.Sent = 0;\nHttpEventType.UploadProgress = 1;\nHttpEventType.ResponseHeader = 2;\nHttpEventType.DownloadProgress = 3;\nHttpEventType.Response = 4;\nHttpEventType.User = 5;\nHttpEventType[HttpEventType.Sent] = \"Sent\";\nHttpEventType[HttpEventType.UploadProgress] = \"UploadProgress\";\nHttpEventType[HttpEventType.ResponseHeader] = \"ResponseHeader\";\nHttpEventType[HttpEventType.DownloadProgress] = \"DownloadProgress\";\nHttpEventType[HttpEventType.Response] = \"Response\";\nHttpEventType[HttpEventType.User] = \"User\";\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpResponseBase = (function () {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     * @param {?} init\n     * @param {?=} defaultStatus\n     * @param {?=} defaultStatusText\n     */\n    function HttpResponseBase(init, defaultStatus, defaultStatusText) {\n        if (defaultStatus === void 0) { defaultStatus = 200; }\n        if (defaultStatusText === void 0) { defaultStatusText = 'OK'; }\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n    return HttpResponseBase;\n}());\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * \\@experimental\n */\nvar HttpHeaderResponse = (function (_super) {\n    tslib_1.__extends(HttpHeaderResponse, _super);\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     * @param {?=} init\n     */\n    function HttpHeaderResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.ResponseHeader;\n        return _this;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpHeaderResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpHeaderResponse;\n}(HttpResponseBase));\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * \\@experimental\n */\nvar HttpResponse = (function (_super) {\n    tslib_1.__extends(HttpResponse, _super);\n    /**\n     * Construct a new `HttpResponse`.\n     * @param {?=} init\n     */\n    function HttpResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.Response;\n        _this.body = init.body || null;\n        return _this;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpResponse;\n}(HttpResponseBase));\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * \\@experimental\n */\nvar HttpErrorResponse = (function (_super) {\n    tslib_1.__extends(HttpErrorResponse, _super);\n    /**\n     * @param {?} init\n     */\n    function HttpErrorResponse(init) {\n        var _this = \n        // Initialize with a default status of 0 / Unknown Error.\n        _super.call(this, init, 0, 'Unknown Error') || this;\n        _this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        _this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (_this.status >= 200 && _this.status < 300) {\n            _this.message = \"Http failure during parsing for \" + (init.url || '(unknown url)');\n        }\n        else {\n            _this.message =\n                \"Http failure response for \" + (init.url || '(unknown url)') + \": \" + init.status + \" \" + init.statusText;\n        }\n        _this.error = init.error || null;\n        return _this;\n    }\n    return HttpErrorResponse;\n}(HttpResponseBase));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. Basically, this clones the object and adds the body.\n * @template T\n * @param {?} options\n * @param {?} body\n * @return {?}\n */\nfunction addBody(options, body) {\n    return {\n        body: body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Perform HTTP requests.\n *\n * `HttpClient` is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies according to which\n * signature is called (mainly the values of `observe` and `responseType`).\n *\n * \\@experimental\n */\nvar HttpClient = (function () {\n    /**\n     * @param {?} handler\n     */\n    function HttpClient(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * This method can be called in one of two ways. Either an `HttpRequest`\n     * instance can be passed directly as the only parameter, or a method can be\n     * passed as the first parameter, a string URL as the second, and an\n     * options hash as the third.\n     *\n     * If a `HttpRequest` object is passed directly, an `Observable` of the\n     * raw `HttpEvent` stream will be returned.\n     *\n     * If a request is instead built by providing a URL, the options object\n     * determines the return type of `request()`. In addition to configuring\n     * request parameters such as the outgoing headers and/or the body, the options\n     * hash specifies two key pieces of information about the request: the\n     * `responseType` and what to `observe`.\n     *\n     * The `responseType` value determines how a successful response body will be\n     * parsed. If `responseType` is the default `json`, a type interface for the\n     * resulting object may be passed as a type parameter to `request()`.\n     *\n     * The `observe` value determines the return type of `request()`, based on what\n     * the consumer is interested in observing. A value of `events` will return an\n     * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n     * including progress events by default. A value of `response` will return an\n     * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n     * depends on the `responseType` and any optionally provided type parameter.\n     * A value of `body` will return an `Observable<T>` with the same `T` body type.\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.request = function (first, url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var /** @type {?} */ req;\n        // Firstly, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = (first);\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming GET unless a method is\n            // provided.\n            req = new HttpRequest(first, /** @type {?} */ ((url)), options.body || null, {\n                headers: options.headers,\n                params: options.params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        var /** @type {?} */ events$ = concatMap.call(of(req), function (req) { return _this.handler.handle(req); });\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        var /** @type {?} */ res$ = filter.call(events$, function (event) { return event instanceof HttpResponse; });\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return map.call(res$, function (res) {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        });\n                    case 'blob':\n                        return map.call(res$, function (res) {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        });\n                    case 'text':\n                        return map.call(res$, function (res) {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        });\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return map.call(res$, function (res) { return res.body; });\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(\"Unreachable: unhandled observe type \" + options.observe + \"}\");\n        }\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * DELETE request to be executed on the server. See the individual overloads for\n     * details of `delete()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('DELETE', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * GET request to be executed on the server. See the individual overloads for\n     * details of `get()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('GET', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * HEAD request to be executed on the server. See the individual overloads for\n     * details of `head()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.head = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('HEAD', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause a request\n     * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n     *\n     * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n     * If no such interceptor is reached, then the `JSONP` request will likely be\n     * rejected by the configured backend.\n     * @template T\n     * @param {?} url\n     * @param {?} callbackParam\n     * @return {?}\n     */\n    HttpClient.prototype.jsonp = function (url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * OPTIONS request to be executed on the server. See the individual overloads for\n     * details of `options()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.options = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('OPTIONS', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PATCH request to be executed on the server. See the individual overloads for\n     * details of `patch()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.patch = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PATCH', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.post = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('POST', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.put = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PUT', url, addBody(options, body));\n    };\n    return HttpClient;\n}());\nHttpClient.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttpClient.ctorParameters = function () { return [\n    { type: HttpHandler, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n * \\@experimental\n */\nvar HttpInterceptorHandler = (function () {\n    /**\n     * @param {?} next\n     * @param {?} interceptor\n     */\n    function HttpInterceptorHandler(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    HttpInterceptorHandler.prototype.handle = function (req) {\n        return this.interceptor.intercept(req, this.next);\n    };\n    return HttpInterceptorHandler;\n}());\n/**\n * A multi-provider token which represents the array of `HttpInterceptor`s that\n * are registered.\n *\n * \\@experimental\n */\nvar HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nvar NoopInterceptor = (function () {\n    function NoopInterceptor() {\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    NoopInterceptor.prototype.intercept = function (req, next) {\n        return next.handle(req);\n    };\n    return NoopInterceptor;\n}());\nNoopInterceptor.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nNoopInterceptor.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nvar nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nvar JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n * \\@experimental\n * @abstract\n */\nvar JsonpCallbackContext = (function () {\n    function JsonpCallbackContext() {\n    }\n    return JsonpCallbackContext;\n}());\n/**\n * `HttpBackend` that only processes `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n *\n * \\@experimental\n */\nvar JsonpClientBackend = (function () {\n    /**\n     * @param {?} callbackMap\n     * @param {?} document\n     */\n    function JsonpClientBackend(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.nextCallback = function () { return \"ng_jsonp_callback_\" + nextRequestId++; };\n    /**\n     * Process a JSONP request and return an event stream of the results.\n     * @param {?} req\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable(function (observer) {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            var /** @type {?} */ callback = _this.nextCallback();\n            var /** @type {?} */ url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, \"=\" + callback + \"$1\");\n            // Construct the <script> tag and point it at the URL.\n            var /** @type {?} */ node = _this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            var /** @type {?} */ body = null;\n            // Whether the response callback has been called.\n            var /** @type {?} */ finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            var /** @type {?} */ cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            _this.callbackMap[callback] = function (data) {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete _this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            var /** @type {?} */ cleanup = function () {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete _this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            var /** @type {?} */ onLoad = function (event) {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url: url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body: body,\n                    status: 200,\n                    statusText: 'OK', url: url,\n                }));\n                // Complete the stream, the resposne is over.\n                observer.complete();\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            var /** @type {?} */ onError = function (error) {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error: error,\n                    status: 0,\n                    statusText: 'JSONP Error', url: url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            _this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return function () {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    };\n    return JsonpClientBackend;\n}());\nJsonpClientBackend.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nJsonpClientBackend.ctorParameters = function () { return [\n    { type: JsonpCallbackContext, },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n]; };\n/**\n * An `HttpInterceptor` which identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * \\@experimental\n */\nvar JsonpInterceptor = (function () {\n    /**\n     * @param {?} jsonp\n     */\n    function JsonpInterceptor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    JsonpInterceptor.prototype.intercept = function (req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(/** @type {?} */ (req));\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    };\n    return JsonpInterceptor;\n}());\nJsonpInterceptor.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nJsonpInterceptor.ctorParameters = function () { return [\n    { type: JsonpClientBackend, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * \\@experimental\n * @abstract\n */\nvar XhrFactory = (function () {\n    function XhrFactory() {\n    }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    XhrFactory.prototype.build = function () { };\n    return XhrFactory;\n}());\n/**\n * A factory for \\@{link HttpXhrBackend} that uses the `XMLHttpRequest` browser API.\n *\n * \\@experimental\n */\nvar BrowserXhr = (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = function () { return ((new XMLHttpRequest())); };\n    return BrowserXhr;\n}());\nBrowserXhr.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBrowserXhr.ctorParameters = function () { return []; };\n/**\n * An `HttpBackend` which uses the XMLHttpRequest API to send\n * requests to a backend server.\n *\n * \\@experimental\n */\nvar HttpXhrBackend = (function () {\n    /**\n     * @param {?} xhrFactory\n     */\n    function HttpXhrBackend(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Process a request and return a stream of response events.\n     * @param {?} req\n     * @return {?}\n     */\n    HttpXhrBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(\"Attempted to construct Jsonp request without JsonpClientModule installed.\");\n        }\n        // Everything happens on Observable subscription.\n        return new Observable(function (observer) {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            var /** @type {?} */ xhr = _this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach(function (name, values) { return xhr.setRequestHeader(name, values.join(',')); });\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                var /** @type {?} */ detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                xhr.responseType = (req.responseType.toLowerCase());\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            var /** @type {?} */ reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            var /** @type {?} */ headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            var /** @type {?} */ partialFromXhr = function () {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                var /** @type {?} */ status = xhr.status === 1223 ? 204 : xhr.status;\n                var /** @type {?} */ statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                var /** @type {?} */ headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                var /** @type {?} */ url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers: headers, status: status, statusText: statusText, url: url });\n                return headerResponse;\n            };\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            var /** @type {?} */ onLoad = function () {\n                // Read response state from the memoized partial data.\n                var _a = partialFromXhr(), headers = _a.headers, status = _a.status, statusText = _a.statusText, url = _a.url;\n                // The body will be read out if present.\n                var /** @type {?} */ body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                    // Strip a common XSSI prefix from string responses.\n                    // TODO: determine if this behavior should be optional and moved to an interceptor.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                var /** @type {?} */ ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (ok && typeof body === 'string' && req.responseType === 'json') {\n                    // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                    try {\n                        body = JSON.parse(body);\n                    }\n                    catch (error) {\n                        // Even though the response status was 2xx, this is still an error.\n                        ok = false;\n                        // The parse error contains the text of the body that failed to parse.\n                        body = ({ error: error, text: body });\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            var /** @type {?} */ onError = function (error) {\n                var /** @type {?} */ res = new HttpErrorResponse({\n                    error: error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                });\n                observer.error(res);\n            };\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            var /** @type {?} */ sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onDownProgress = function (event) {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                var /** @type {?} */ progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onUpProgress = function (event) {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                var /** @type {?} */ progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return function () {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            };\n        });\n    };\n    return HttpXhrBackend;\n}());\nHttpXhrBackend.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttpXhrBackend.ctorParameters = function () { return [\n    { type: XhrFactory, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\nvar XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpXsrfTokenExtractor = (function () {\n    function HttpXsrfTokenExtractor() {\n    }\n    /**\n     * Get the XSRF token to use with an outgoing request.\n     *\n     * Will be called for every request, so the token may change between requests.\n     * @abstract\n     * @return {?}\n     */\n    HttpXsrfTokenExtractor.prototype.getToken = function () { };\n    return HttpXsrfTokenExtractor;\n}());\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nvar HttpXsrfCookieExtractor = (function () {\n    /**\n     * @param {?} doc\n     * @param {?} platform\n     * @param {?} cookieName\n     */\n    function HttpXsrfCookieExtractor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * \\@internal for testing\n         */\n        this.parseCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    HttpXsrfCookieExtractor.prototype.getToken = function () {\n        if (this.platform === 'server') {\n            return null;\n        }\n        var /** @type {?} */ cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    };\n    return HttpXsrfCookieExtractor;\n}());\nHttpXsrfCookieExtractor.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttpXsrfCookieExtractor.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n    { type: undefined, decorators: [{ type: Inject, args: [XSRF_COOKIE_NAME,] },] },\n]; };\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nvar HttpXsrfInterceptor = (function () {\n    /**\n     * @param {?} tokenService\n     * @param {?} headerName\n     */\n    function HttpXsrfInterceptor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    HttpXsrfInterceptor.prototype.intercept = function (req, next) {\n        var /** @type {?} */ lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        var /** @type {?} */ token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    };\n    return HttpXsrfInterceptor;\n}());\nHttpXsrfInterceptor.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttpXsrfInterceptor.ctorParameters = function () { return [\n    { type: HttpXsrfTokenExtractor, },\n    { type: undefined, decorators: [{ type: Inject, args: [XSRF_HEADER_NAME,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Constructs an `HttpHandler` that applies a bunch of `HttpInterceptor`s\n * to a request before passing it to the given `HttpBackend`.\n *\n * Meant to be used as a factory function within `HttpClientModule`.\n *\n * \\@experimental\n * @param {?} backend\n * @param {?=} interceptors\n * @return {?}\n */\nfunction interceptingHandler(backend, interceptors) {\n    if (interceptors === void 0) { interceptors = []; }\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight(function (next, interceptor) { return new HttpInterceptorHandler(next, interceptor); }, backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n * \\@experimental\n * @return {?}\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * `NgModule` which adds XSRF protection support to outgoing requests.\n *\n * Provided the server supports a cookie-based XSRF protection system, this\n * module can be used directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no such names are provided, the default is to use `X-XSRF-TOKEN` for\n * the header name and `XSRF-TOKEN` for the cookie name.\n *\n * \\@experimental\n */\nvar HttpClientXsrfModule = (function () {\n    function HttpClientXsrfModule() {\n    }\n    /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    HttpClientXsrfModule.disable = function () {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    };\n    /**\n     * Configure XSRF protection to use the given cookie name or header name,\n     * or the default names (as described above) if not provided.\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClientXsrfModule.withOptions = function (options) {\n        if (options === void 0) { options = {}; }\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    };\n    return HttpClientXsrfModule;\n}());\nHttpClientXsrfModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientXsrfModule.ctorParameters = function () { return []; };\n/**\n * `NgModule` which provides the `HttpClient` and associated services.\n *\n * Interceptors can be added to the chain behind `HttpClient` by binding them\n * to the multiprovider for `HTTP_INTERCEPTORS`.\n *\n * \\@experimental\n */\nvar HttpClientModule = (function () {\n    function HttpClientModule() {\n    }\n    return HttpClientModule;\n}());\nHttpClientModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN',\n                    }),\n                ],\n                providers: [\n                    HttpClient,\n                    // HttpHandler is the backend + interceptors and is constructed\n                    // using the interceptingHandler factory function.\n                    {\n                        provide: HttpHandler,\n                        useFactory: interceptingHandler,\n                        deps: [HttpBackend, [new Optional(), new Inject(HTTP_INTERCEPTORS)]],\n                    },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientModule.ctorParameters = function () { return []; };\n/**\n * `NgModule` which enables JSONP support in `HttpClient`.\n *\n * Without this module, Jsonp requests will reach the backend\n * with method JSONP, where they'll be rejected.\n *\n * \\@experimental\n */\nvar HttpClientJsonpModule = (function () {\n    function HttpClientJsonpModule() {\n    }\n    return HttpClientJsonpModule;\n}());\nHttpClientJsonpModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientJsonpModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { HttpBackend, HttpHandler, HttpClient, HttpHeaders, HTTP_INTERCEPTORS, JsonpClientBackend, JsonpInterceptor, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, interceptingHandler as ɵinterceptingHandler, HttpParams, HttpUrlEncodingCodec, HttpRequest, HttpErrorResponse, HttpEventType, HttpHeaderResponse, HttpResponse, HttpResponseBase, HttpXhrBackend, XhrFactory, HttpXsrfTokenExtractor, NoopInterceptor as ɵa, JsonpCallbackContext as ɵb, jsonpCallbackContext as ɵc, BrowserXhr as ɵd, HttpXsrfCookieExtractor as ɵg, HttpXsrfInterceptor as ɵh, XSRF_COOKIE_NAME as ɵe, XSRF_HEADER_NAME as ɵf };\n//# sourceMappingURL=http.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/common/@angular/common/http.es5.js\n// module id = 40\n// module chunks = 1","export interface NgOption {\n    [name: string]: any;\n    index?: number;\n    selected?: boolean;\n    disabled?: boolean;\n    marked?: boolean;\n    label?: string;\n    value?: string;\n}\n\nexport enum KeyCode {\n    Tab = 9,\n    Enter = 13,\n    Esc = 27,\n    Space = 32,\n    ArrowUp = 38,\n    ArrowDown = 40,\n    Backspace = 8\n}\n\nexport class NgSelectConfig {\n    notFoundText = '';\n    typeToSearchText = '';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/lib/src/ng-select.types.ts","import * as tslib_1 from \"tslib\";\n/**\n * @license Angular v4.3.5\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { APP_BASE_HREF, HashLocationStrategy, LOCATION_INITIALIZED, Location, LocationStrategy, PathLocationStrategy, PlatformLocation } from '@angular/common';\nimport { ANALYZE_FOR_ENTRY_COMPONENTS, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationRef, Attribute, ChangeDetectorRef, Compiler, ComponentFactoryResolver, ContentChildren, Directive, ElementRef, EventEmitter, HostBinding, HostListener, Inject, Injectable, InjectionToken, Injector, Input, NgModule, NgModuleFactory, NgModuleFactoryLoader, NgModuleRef, NgProbeToken, Optional, Output, Renderer2, SkipSelf, SystemJsNgModuleLoader, Version, ViewContainerRef, isDevMode, ɵisObservable, ɵisPromise } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\nimport { from } from 'rxjs/observable/from';\nimport { of } from 'rxjs/observable/of';\nimport { concatMap } from 'rxjs/operator/concatMap';\nimport { every } from 'rxjs/operator/every';\nimport { first } from 'rxjs/operator/first';\nimport { last } from 'rxjs/operator/last';\nimport { map } from 'rxjs/operator/map';\nimport { mergeMap } from 'rxjs/operator/mergeMap';\nimport { reduce } from 'rxjs/operator/reduce';\nimport { Observable } from 'rxjs/Observable';\nimport { _catch } from 'rxjs/operator/catch';\nimport { concatAll } from 'rxjs/operator/concatAll';\nimport { EmptyError } from 'rxjs/util/EmptyError';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { mergeAll } from 'rxjs/operator/mergeAll';\nimport { ɵgetDOM } from '@angular/platform-browser';\nimport { filter } from 'rxjs/operator/filter';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents an event triggered when a navigation starts.\n *\n * \\@stable\n */\nvar NavigationStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     */\n    function NavigationStart(id, url) {\n        this.id = id;\n        this.url = url;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation ends successfully.\n *\n * \\@stable\n */\nvar NavigationEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     */\n    function NavigationEnd(id, url, urlAfterRedirects) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationEnd.prototype.toString = function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation is canceled.\n *\n * \\@stable\n */\nvar NavigationCancel = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} reason\n     */\n    function NavigationCancel(id, url, reason) {\n        this.id = id;\n        this.url = url;\n        this.reason = reason;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n *\n * \\@stable\n */\nvar NavigationError = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} error\n     */\n    function NavigationError(id, url, error) {\n        this.id = id;\n        this.url = url;\n        this.error = error;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationError.prototype.toString = function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when routes are recognized.\n *\n * \\@stable\n */\nvar RoutesRecognized = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function RoutesRecognized(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    RoutesRecognized.prototype.toString = function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}());\n/**\n * \\@whatItDoes Represents an event triggered before lazy loading a route config.\n *\n * \\@experimental\n */\nvar RouteConfigLoadStart = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadStart(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a route has been lazy loaded.\n *\n * \\@experimental\n */\nvar RouteConfigLoadEnd = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadEnd(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function GuardsCheckStart(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckStart.prototype.toString = function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}());\n/**\n * \\@whatItDoes Represents the end of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     * @param {?} shouldActivate\n     */\n    function GuardsCheckEnd(id, url, urlAfterRedirects, state, shouldActivate) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n        this.shouldActivate = shouldActivate;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckEnd.prototype.toString = function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * \\@experimental\n */\nvar ResolveStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveStart(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveStart.prototype.toString = function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}());\n/**\n * \\@whatItDoes Represents the end of the Resolve phase of routing. See note on\n * {\\@link ResolveStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ResolveEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveEnd(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveEnd.prototype.toString = function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Name of the primary outlet.\n *\n * \\@stable\n */\nvar PRIMARY_OUTLET = 'primary';\nvar ParamsAsMap = (function () {\n    /**\n     * @param {?} params\n     */\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.get = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.getAll = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a {\\@link Params} instance to a {\\@link ParamMap}.\n *\n * \\@stable\n * @param {?} params\n * @return {?}\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nfunction navigationCancelingError(message) {\n    var /** @type {?} */ error = Error('NavigationCancelingError: ' + message);\n    ((error))[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isNavigationCancelingError(error) {\n    return ((error))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var /** @type {?} */ parts = ((route.path)).split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var /** @type {?} */ posParams = {};\n    // Check each config part against the actual URL\n    for (var /** @type {?} */ index = 0; index < parts.length; index++) {\n        var /** @type {?} */ part = parts[index];\n        var /** @type {?} */ segment = segments[index];\n        var /** @type {?} */ isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LoadedRouterConfig = (function () {\n    /**\n     * @param {?} routes\n     * @param {?} module\n     */\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\n/**\n * @param {?} config\n * @param {?=} parentPath\n * @return {?}\n */\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var /** @type {?} */ i = 0; i < config.length; i++) {\n        var /** @type {?} */ route = config[i];\n        var /** @type {?} */ fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\n/**\n * @param {?} route\n * @param {?} fullPath\n * @return {?}\n */\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var /** @type {?} */ exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\n/**\n * @param {?} parentPath\n * @param {?} currentRoute\n * @return {?}\n */\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqual(a, b) {\n    var /** @type {?} */ k1 = Object.keys(a);\n    var /** @type {?} */ k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var /** @type {?} */ key;\n    for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * @template T\n * @param {?} a\n * @return {?}\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * @param {?} bools\n * @return {?}\n */\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nfunction forEach(map$$1, callback) {\n    for (var /** @type {?} */ prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return of({});\n    }\n    var /** @type {?} */ waitHead = [];\n    var /** @type {?} */ waitTail = [];\n    var /** @type {?} */ res = {};\n    forEach(obj, function (a, k) {\n        var /** @type {?} */ mapped = map.call(fn(k, a), function (r) { return res[k] = r; });\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    var /** @type {?} */ concat$ = concatAll.call(of.apply(void 0, waitHead.concat(waitTail)));\n    var /** @type {?} */ last$ = last.call(concat$);\n    return map.call(last$, function () { return res; });\n}\n/**\n * @param {?} observables\n * @return {?}\n */\nfunction andObservables(observables) {\n    var /** @type {?} */ merged$ = mergeAll.call(observables);\n    return every.call(merged$, function (result) { return result === true; });\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction wrapIntoObservable(value) {\n    if (ɵisObservable(value)) {\n        return value;\n    }\n    if (ɵisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return fromPromise(Promise.resolve(value));\n    }\n    return of(/** @type {?} */ (value));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} exact\n * @return {?}\n */\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalQueryParams(container, containee) {\n    return shallowEqual(container, containee);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var /** @type {?} */ c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} containeePaths\n * @return {?}\n */\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var /** @type {?} */ current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var /** @type {?} */ c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var /** @type {?} */ current = containeePaths.slice(0, container.segments.length);\n        var /** @type {?} */ next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * \\@whatItDoes Represents the parsed URL.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * \\@stable\n */\nvar UrlTree = (function () {\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} queryParams\n     * @param {?} fragment\n     */\n    function UrlTree(root, queryParams, fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * \\@whatItDoes Represents the parsed URL segment group.\n *\n * See {\\@link UrlTree} for more information.\n *\n * \\@stable\n */\nvar UrlSegmentGroup = (function () {\n    /**\n     * @param {?} segments\n     * @param {?} children\n     */\n    function UrlSegmentGroup(segments, children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /**\n         * The parent node in the url tree\n         */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /**\n         * Number of child segments\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * \\@whatItDoes Represents a single URL segment.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * \\@stable\n */\nvar UrlSegment = (function () {\n    /**\n     * @param {?} path\n     * @param {?} parameters\n     */\n    function UrlSegment(path, parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegment.prototype.toString = function () { return serializePath(this); };\n    return UrlSegment;\n}());\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\n/**\n * @template T\n * @param {?} segment\n * @param {?} fn\n * @return {?}\n */\nfunction mapChildrenIntoArray(segment, fn) {\n    var /** @type {?} */ res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * \\@whatItDoes Serializes and deserializes a URL string into a URL tree.\n *\n * \\@description The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See {\\@link DefaultUrlSerializer} for an example of a URL serializer.\n *\n * \\@stable\n * @abstract\n */\nvar UrlSerializer = (function () {\n    function UrlSerializer() {\n    }\n    /**\n     * Parse a url into a {\\@link UrlTree}\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlSerializer.prototype.parse = function (url) { };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @abstract\n     * @param {?} tree\n     * @return {?}\n     */\n    UrlSerializer.prototype.serialize = function (tree) { };\n    return UrlSerializer;\n}());\n/**\n * \\@whatItDoes A default implementation of the {\\@link UrlSerializer}.\n *\n * \\@description\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * \\@stable\n */\nvar DefaultUrlSerializer = (function () {\n    function DefaultUrlSerializer() {\n    }\n    /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.parse = function (url) {\n        var /** @type {?} */ p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.serialize = function (tree) {\n        var /** @type {?} */ segment = \"/\" + serializeSegment(tree.root, true);\n        var /** @type {?} */ query = serializeQueryParams(tree.queryParams);\n        var /** @type {?} */ fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeURI(/** @type {?} */ ((tree.fragment))) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n/**\n * @param {?} segment\n * @return {?}\n */\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\n/**\n * @param {?} segment\n * @param {?} root\n * @return {?}\n */\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var /** @type {?} */ primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var /** @type {?} */ children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var /** @type {?} */ children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query         = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"\\@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * @param {?} s\n * @return {?}\n */\nfunction encode(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';');\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction serializePath(path) {\n    return \"\" + encode(path.path) + serializeParams(path.parameters);\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeParams(params) {\n    return Object.keys(params).map(function (key) { return \";\" + encode(key) + \"=\" + encode(params[key]); }).join('');\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeQueryParams(params) {\n    var /** @type {?} */ strParams = Object.keys(params).map(function (name) {\n        var /** @type {?} */ value = params[name];\n        return Array.isArray(value) ? value.map(function (v) { return encode(name) + \"=\" + encode(v); }).join('&') :\n            encode(name) + \"=\" + encode(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchSegments(str) {\n    var /** @type {?} */ match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchQueryParams(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchUrlQueryParamValue(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = (function () {\n    /**\n     * @param {?} url\n     */\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseRootSegment = function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParams = function () {\n        var /** @type {?} */ params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseFragment = function () {\n        return this.consumeOptional('#') ? decodeURI(this.remaining) : null;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseChildren = function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var /** @type {?} */ segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var /** @type {?} */ children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var /** @type {?} */ res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseSegment = function () {\n        var /** @type {?} */ path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseMatrixParams = function () {\n        var /** @type {?} */ params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseParam = function (params) {\n        var /** @type {?} */ key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParam = function (params) {\n        var /** @type {?} */ key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var /** @type {?} */ decodedKey = decode(key);\n        var /** @type {?} */ decodedVal = decode(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var /** @type {?} */ currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    UrlParser.prototype.parseParens = function (allowPrimary) {\n        var /** @type {?} */ segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var /** @type {?} */ path = matchSegments(this.remaining);\n            var /** @type {?} */ next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var /** @type {?} */ outletName = ((undefined));\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var /** @type {?} */ children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.consumeOptional = function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.capture = function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = (function () {\n    /**\n     * @param {?=} segmentGroup\n     */\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = (function () {\n    /**\n     * @param {?} urlTree\n     */\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction noMatch(segmentGroup) {\n    return new Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\n/**\n * @param {?} newTree\n * @return {?}\n */\nfunction absoluteRedirect(newTree) {\n    return new Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\n/**\n * @param {?} redirectTo\n * @return {?}\n */\nfunction namedOutletsRedirect(redirectTo) {\n    return new Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction canLoadFails(route) {\n    return new Observable(function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n * @return {?}\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = (function () {\n    /**\n     * @param {?} moduleInjector\n     * @param {?} configLoader\n     * @param {?} urlSerializer\n     * @param {?} urlTree\n     * @param {?} config\n     */\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(NgModuleRef);\n    }\n    /**\n     * @return {?}\n     */\n    ApplyRedirects.prototype.apply = function () {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ urlTrees$ = map.call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, /** @type {?} */ ((_this.urlTree.fragment))); });\n        return _catch.call(urlTrees$, function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} tree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.match = function (tree) {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ mapped$ = map.call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, tree.queryParams, /** @type {?} */ ((tree.fragment))); });\n        return _catch.call(mapped$, function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noMatchError = function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n        var /** @type {?} */ root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return map.call(this.expandChildren(ngModule, routes, segmentGroup), function (children) { return new UrlSegmentGroup([], children); });\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        var /** @type {?} */ routes$ = of.apply(void 0, routes);\n        var /** @type {?} */ processedRoutes$ = map.call(routes$, function (r) {\n            var /** @type {?} */ expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return _catch.call(expanded$, function (e) {\n                if (e instanceof NoMatch) {\n                    return of(null);\n                }\n                throw e;\n            });\n        });\n        var /** @type {?} */ concattedProcessedRoutes$ = concatAll.call(processedRoutes$);\n        var /** @type {?} */ first$ = first.call(concattedProcessedRoutes$, function (s) { return !!s; });\n        return _catch.call(first$, function (e, _) {\n            if (e instanceof EmptyError) {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var /** @type {?} */ newTree = this.applyRedirectCommands([], /** @type {?} */ ((route.redirectTo)), {});\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            var /** @type {?} */ group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var /** @type {?} */ newTree = this.applyRedirectCommands(consumedSegments, /** @type {?} */ ((route.redirectTo)), /** @type {?} */ (positionalParamSegments));\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return map.call(this.configLoader.load(ngModule.injector, route), function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                });\n            }\n            return of(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig$ = this.getChildConfig(ngModule, route);\n        return mergeMap.call(childConfig$, function (routerConfig) {\n            var /** @type {?} */ childModule = routerConfig.module;\n            var /** @type {?} */ childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var /** @type {?} */ expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return map.call(expanded$_1, function (children) { return new UrlSegmentGroup(consumedSegments, children); });\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var /** @type {?} */ expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return map.call(expanded$, function (cs) { return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children); });\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return of(route._loadedConfig);\n            }\n            return mergeMap.call(runCanLoadGuard(ngModule.injector, route), function (shouldLoad) {\n                if (shouldLoad) {\n                    return map.call(_this.configLoader.load(ngModule.injector, route), function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    });\n                }\n                return canLoadFails(route);\n            });\n        }\n        return of(new LoadedRouterConfig([], ngModule));\n    };\n    /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n        var /** @type {?} */ res = [];\n        var /** @type {?} */ c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(/** @type {?} */ ((route.redirectTo)));\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n        var /** @type {?} */ newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n        var /** @type {?} */ res = {};\n        forEach(redirectToParams, function (v, k) {\n            var /** @type {?} */ copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var /** @type {?} */ sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var /** @type {?} */ updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var /** @type {?} */ children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n            _this.findOrReturn(s, actualSegments); });\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n        var /** @type {?} */ pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n        var /** @type {?} */ idx = 0;\n        for (var _i = 0, actualSegments_1 = actualSegments; _i < actualSegments_1.length; _i++) {\n            var s = actualSegments_1[_i];\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    };\n    return ApplyRedirects;\n}());\n/**\n * @param {?} moduleInjector\n * @param {?} route\n * @return {?}\n */\nfunction runCanLoadGuard(moduleInjector, route) {\n    var /** @type {?} */ canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return of(true);\n    var /** @type {?} */ obs = map.call(from(canLoad), function (injectionToken) {\n        var /** @type {?} */ guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    });\n    return andObservables(obs);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: /** @type {?} */ ([]),\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: /** @type {?} */ ((res.consumed)),\n        lastChild: /** @type {?} */ ((res.consumed.length)),\n        positionalParamSegments: /** @type {?} */ ((res.posParams)),\n    };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var /** @type {?} */ c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} routes\n * @param {?} primarySegmentGroup\n * @return {?}\n */\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} r\n * @return {?}\n */\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = (function () {\n    /**\n     * @param {?} root\n     */\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.parent = function (t) {\n        var /** @type {?} */ p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.children = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.firstChild = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.siblings = function (t) {\n        var /** @type {?} */ p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var /** @type {?} */ c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ node_1 = findNode(value, child);\n        if (node_1)\n            return node_1;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\nvar TreeNode = (function () {\n    /**\n     * @param {?} value\n     * @param {?} children\n     */\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @return {?}\n     */\n    TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the state of the router.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * See {\\@link ActivatedRoute} for more information.\n *\n * \\@stable\n */\nvar RouterState = (function (_super) {\n    tslib_1.__extends(RouterState, _super);\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} snapshot\n     */\n    function RouterState(root, snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyState(urlTree, rootComponent) {\n    var /** @type {?} */ snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var /** @type {?} */ emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n    var /** @type {?} */ emptyParams = new BehaviorSubject({});\n    var /** @type {?} */ emptyData = new BehaviorSubject({});\n    var /** @type {?} */ emptyQueryParams = new BehaviorSubject({});\n    var /** @type {?} */ fragment = new BehaviorSubject('');\n    var /** @type {?} */ activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var /** @type {?} */ emptyParams = {};\n    var /** @type {?} */ emptyData = {};\n    var /** @type {?} */ emptyQueryParams = {};\n    var /** @type {?} */ fragment = '';\n    var /** @type {?} */ activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet.\n * An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRoute = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} futureSnapshot\n     */\n    function ActivatedRoute(url, params, queryParams, fragment, data, outlet, component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = map.call(this.params, function (p) { return convertToParamMap(p); });\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    map.call(this.queryParams, function (p) { return convertToParamMap(p); });\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRoute.prototype.toString = function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * \\@internal\n * @param {?} route\n * @return {?}\n */\nfunction inheritedParamsDataResolve(route) {\n    var /** @type {?} */ pathToRoot = route.pathFromRoot;\n    var /** @type {?} */ inhertingStartingFrom = pathToRoot.length - 1;\n    while (inhertingStartingFrom >= 1) {\n        var /** @type {?} */ current = pathToRoot[inhertingStartingFrom];\n        var /** @type {?} */ parent = pathToRoot[inhertingStartingFrom - 1];\n        // current route is an empty path => inherits its parent's params and data\n        if (current.routeConfig && current.routeConfig.path === '') {\n            inhertingStartingFrom--;\n            // parent is componentless => current route should inherit its params and data\n        }\n        else if (!parent.component) {\n            inhertingStartingFrom--;\n        }\n        else {\n            break;\n        }\n    }\n    return pathToRoot.slice(inhertingStartingFrom).reduce(function (res, curr) {\n        var /** @type {?} */ params = Object.assign({}, res.params, curr.params);\n        var /** @type {?} */ data = Object.assign({}, res.data, curr.data);\n        var /** @type {?} */ resolve = Object.assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, /** @type {?} */ ({ params: {}, data: {}, resolve: {} }));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet\n * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router\n * state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRouteSnapshot = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} routeConfig\n     * @param {?} urlSegment\n     * @param {?} lastPathIndex\n     * @param {?} resolve\n     */\n    function ActivatedRouteSnapshot(url, params, queryParams, fragment, data, outlet, component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRouteSnapshot.prototype.toString = function () {\n        var /** @type {?} */ url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var /** @type {?} */ matched = this._routeConfig ? this._routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * \\@whatItDoes Represents the state of the router at a moment in time.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * \\@stable\n */\nvar RouterStateSnapshot = (function (_super) {\n    tslib_1.__extends(RouterStateSnapshot, _super);\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} root\n     */\n    function RouterStateSnapshot(url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\n/**\n * @template U, T\n * @param {?} state\n * @param {?} node\n * @return {?}\n */\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction serializeNode(node) {\n    var /** @type {?} */ c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(\", \") + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n * @param {?} route\n * @return {?}\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var /** @type {?} */ currentSnapshot = route.snapshot;\n        var /** @type {?} */ nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            ((route.queryParams)).next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            ((route.fragment)).next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            ((route.params)).next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            ((route.url)).next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            ((route.data)).next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        ((route.data)).next(route._futureSnapshot.data);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalParamsAndUrlSegments(a, b) {\n    var /** @type {?} */ equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var /** @type {?} */ parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, /** @type {?} */ ((b.parent))));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var /** @type {?} */ root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var /** @type {?} */ value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var /** @type {?} */ children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else if (routeReuseStrategy.retrieve(curr.value)) {\n        var /** @type {?} */ tree_1 = ((routeReuseStrategy.retrieve(curr.value))).route;\n        setFutureSnapshotsOfActivatedRoutes(curr, tree_1);\n        return tree_1;\n    }\n    else {\n        var /** @type {?} */ value = createActivatedRoute(curr.value);\n        var /** @type {?} */ children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n        return new TreeNode(value, children);\n    }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var /** @type {?} */ i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        for (var _i = 0, _a = prevState.children; _i < _a.length; _i++) {\n            var p = _a[_i];\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} route\n * @param {?} urlTree\n * @param {?} commands\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ startingPosition = findStartingPosition(nav, urlTree, route);\n    var /** @type {?} */ segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * @param {?} oldSegmentGroup\n * @param {?} newSegmentGroup\n * @param {?} urlTree\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var /** @type {?} */ qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n/**\n * @param {?} current\n * @param {?} oldSegment\n * @param {?} newSegment\n * @return {?}\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var /** @type {?} */ children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = (function () {\n    /**\n     * @param {?} isAbsolute\n     * @param {?} numberOfDoubleDots\n     * @param {?} commands\n     */\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Navigation.prototype.toRoot = function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/**\n * Transforms commands to a normalized `Navigation`\n * @param {?} commands\n * @return {?}\n */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var /** @type {?} */ numberOfDoubleDots = 0;\n    var /** @type {?} */ isAbsolute = false;\n    var /** @type {?} */ res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var /** @type {?} */ outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return res.concat([{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return res.concat([cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return res.concat([cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') {\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') {\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return res.concat([cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = (function () {\n    /**\n     * @param {?} segmentGroup\n     * @param {?} processChildren\n     * @param {?} index\n     */\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\n/**\n * @param {?} nav\n * @param {?} tree\n * @param {?} route\n * @return {?}\n */\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var /** @type {?} */ modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var /** @type {?} */ index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n/**\n * @param {?} group\n * @param {?} index\n * @param {?} numberOfDoubleDots\n * @return {?}\n */\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var /** @type {?} */ g = group;\n    var /** @type {?} */ ci = index;\n    var /** @type {?} */ dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = ((g.parent));\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var /** @type {?} */ m = prefixedWith(segmentGroup, startIndex, commands);\n    var /** @type {?} */ slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var /** @type {?} */ g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var /** @type {?} */ outlets_2 = getOutlets(commands);\n        var /** @type {?} */ children_2 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_2[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_2[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_2);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ currentCommandIndex = 0;\n    var /** @type {?} */ currentPathIndex = startIndex;\n    var /** @type {?} */ noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var /** @type {?} */ path = segmentGroup.segments[currentPathIndex];\n        var /** @type {?} */ curr = getPath(commands[currentCommandIndex]);\n        var /** @type {?} */ next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ paths = segmentGroup.segments.slice(0, startIndex);\n    var /** @type {?} */ i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var /** @type {?} */ children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var /** @type {?} */ p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var /** @type {?} */ curr = getPath(commands[i]);\n        var /** @type {?} */ next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\n/**\n * @param {?} outlets\n * @return {?}\n */\nfunction createNewSegmentChildren(outlets) {\n    var /** @type {?} */ children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction stringify(params) {\n    var /** @type {?} */ res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\n/**\n * @param {?} path\n * @param {?} params\n * @param {?} segment\n * @return {?}\n */\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch$1 = (function () {\n    function NoMatch$1() {\n    }\n    return NoMatch$1;\n}());\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n * @return {?}\n */\nfunction recognize(rootComponentType, config, urlTree, url) {\n    return new Recognizer(rootComponentType, config, urlTree, url).recognize();\n}\nvar Recognizer = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} config\n     * @param {?} urlTree\n     * @param {?} url\n     */\n    function Recognizer(rootComponentType, config, urlTree, url) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n    }\n    /**\n     * @return {?}\n     */\n    Recognizer.prototype.recognize = function () {\n        try {\n            var /** @type {?} */ rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var /** @type {?} */ children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var /** @type {?} */ root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var /** @type {?} */ rootNode = new TreeNode(root, children);\n            var /** @type {?} */ routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return of(routeState);\n        }\n        catch (e) {\n            return new Observable(function (obs) { return obs.error(e); });\n        }\n    };\n    /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n        var _this = this;\n        var /** @type {?} */ route = routeNode.value;\n        var /** @type {?} */ i = inheritedParamsDataResolve(route);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    Recognizer.prototype.processChildren = function (config, segmentGroup) {\n        var _this = this;\n        var /** @type {?} */ children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n        for (var _i = 0, config_1 = config; _i < config_1.length; _i++) {\n            var r = config_1[_i];\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        if (route.path === '**') {\n            var /** @type {?} */ params = segments.length > 0 ? ((last$1(segments))).parameters : {};\n            var /** @type {?} */ snapshot_1 = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            return [new TreeNode(snapshot_1, [])];\n        }\n        var _a = match$1(rawSegment, route, segments), consumedSegments = _a.consumedSegments, parameters = _a.parameters, lastChild = _a.lastChild;\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig = getChildConfig(route);\n        var _b = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _b.segmentGroup, slicedSegments = _b.slicedSegments;\n        var /** @type {?} */ snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var /** @type {?} */ children_3 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_3)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var /** @type {?} */ children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return ((route._loadedConfig)).routes;\n    }\n    return [];\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var /** @type {?} */ posParams = {};\n    forEach(/** @type {?} */ ((res.posParams)), function (v, k) { posParams[k] = v.path; });\n    var /** @type {?} */ parameters = res.consumed.length > 0 ? Object.assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction checkOutletNameUniqueness(nodes) {\n    var /** @type {?} */ names = {};\n    nodes.forEach(function (n) {\n        var /** @type {?} */ routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var /** @type {?} */ p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var /** @type {?} */ c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getSourceSegmentGroup(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getPathIndexShift(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    var /** @type {?} */ res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_3 = routes; _i < routes_3.length; _i++) {\n        var r = routes_3[_i];\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = segmentGroup.segments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} routes\n * @param {?} primarySegment\n * @return {?}\n */\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (var _i = 0, routes_4 = routes; _i < routes_4.length; _i++) {\n        var r = routes_4[_i];\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} r\n * @return {?}\n */\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getData(route) {\n    return route.data || {};\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to customize when activated routes get reused.\n *\n * \\@experimental\n * @abstract\n */\nvar RouteReuseStrategy = (function () {\n    function RouteReuseStrategy() {\n    }\n    /**\n     * Determines if this route (and its subtree) should be detached to be reused later\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldDetach = function (route) { };\n    /**\n     * Stores the detached route.\n     *\n     * Storing a `null` value should erase the previously stored value.\n     * @abstract\n     * @param {?} route\n     * @param {?} handle\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.store = function (route, handle) { };\n    /**\n     * Determines if this route (and its subtree) should be reattached\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldAttach = function (route) { };\n    /**\n     * Retrieves the previously stored route\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.retrieve = function (route) { };\n    /**\n     * Determines if a route should be reused\n     * @abstract\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) { };\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docsNotRequired\n * \\@experimental\n */\nvar ROUTES = new InjectionToken('ROUTES');\nvar RouterConfigLoader = (function () {\n    /**\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?=} onLoadStartListener\n     * @param {?=} onLoadEndListener\n     */\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.load = function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var /** @type {?} */ moduleFactory$ = this.loadModuleFactory(/** @type {?} */ ((route.loadChildren)));\n        return map.call(moduleFactory$, function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var /** @type {?} */ module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)), module);\n        });\n    };\n    /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return fromPromise(this.loader.load(loadChildren));\n        }\n        else {\n            return mergeMap.call(wrapIntoObservable(loadChildren()), function (t) {\n                if (t instanceof NgModuleFactory) {\n                    return of(t);\n                }\n                else {\n                    return fromPromise(_this.compiler.compileModuleAsync(t));\n                }\n            });\n        }\n    };\n    return RouterConfigLoader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to migrate AngularJS applications to Angular.\n *\n * \\@experimental\n * @abstract\n */\nvar UrlHandlingStrategy = (function () {\n    function UrlHandlingStrategy() {\n    }\n    /**\n     * Tells the router if this URL should be processed.\n     *\n     * When it returns true, the router will execute the regular navigation.\n     * When it returns false, the router will set the router state to an empty state.\n     * As a result, all the active components will be destroyed.\n     *\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { };\n    /**\n     * Extracts the part of the URL that should be handled by the router.\n     * The rest of the URL will remain untouched.\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.extract = function (url) { };\n    /**\n     * Merges the URL fragment with the rest of the URL.\n     * @abstract\n     * @param {?} newUrlPart\n     * @param {?} rawUrl\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.merge = function (newUrlPart, rawUrl) { };\n    return UrlHandlingStrategy;\n}());\n/**\n * \\@experimental\n */\nvar DefaultUrlHandlingStrategy = (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n    /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * \\@internal\n * @param {?} snapshot\n * @return {?}\n */\nfunction defaultRouterHook(snapshot) {\n    return (of(null));\n}\n/**\n * \\@whatItDoes Provides the navigation and url manipulation capabilities.\n *\n * See {\\@link Routes} for more details and examples.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar Router = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} urlSerializer\n     * @param {?} rootContexts\n     * @param {?} location\n     * @param {?} injector\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?} config\n     */\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new BehaviorSubject(/** @type {?} */ ((null)));\n        this.routerEvents = new Subject();\n        this.navigationId = 0;\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See {\\@link ErrorHandler} for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * \\@internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(NgModuleRef);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.currentRouterState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    Router.prototype.resetRootComponentType = function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.currentRouterState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    Router.prototype.initialNavigation = function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    Router.prototype.setUpLocationChangeListener = function () {\n        var _this = this;\n        // Zone.current.wrap is needed because of the issue with RxJS scheduler,\n        // which does not work properly with zone.js in IE and Safari\n        if (!this.locationSubscription) {\n            this.locationSubscription = (this.location.subscribe(Zone.current.wrap(function (change) {\n                var /** @type {?} */ rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var /** @type {?} */ source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, { replaceUrl: true }); }, 0);\n            })));\n        }\n    };\n    Object.defineProperty(Router.prototype, \"routerState\", {\n        /**\n         * The current route state\n         * @return {?}\n         */\n        get: function () { return this.currentRouterState; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"url\", {\n        /**\n         * The current url\n         * @return {?}\n         */\n        get: function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"events\", {\n        /**\n         * An observable of router events\n         * @return {?}\n         */\n        get: function () { return this.routerEvents; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    Router.prototype.triggerEvent = function (e) { this.routerEvents.next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    Router.prototype.resetConfig = function (config) {\n        validateConfig(config);\n        this.config = config;\n        this.navigated = false;\n    };\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    Router.prototype.ngOnDestroy = function () { this.dispose(); };\n    /**\n     * Disposes of the router\n     * @return {?}\n     */\n    Router.prototype.dispose = function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = ((null));\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    Router.prototype.createUrlTree = function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (isDevMode() && preserveQueryParams && (console) && (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var /** @type {?} */ a = relativeTo || this.routerState.root;\n        var /** @type {?} */ f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var /** @type {?} */ q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = Object.assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, /** @type {?} */ ((q)), /** @type {?} */ ((f)));\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigateByUrl = function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var /** @type {?} */ urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        var /** @type {?} */ mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigate = function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        if (typeof extras.queryParams === 'object' && extras.queryParams !== null) {\n            extras.queryParams = this.removeEmptyProps(extras.queryParams);\n        }\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n    /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.parseUrl = function (url) { return this.urlSerializer.parse(url); };\n    /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    Router.prototype.isActive = function (url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var /** @type {?} */ urlTree = this.urlSerializer.parse(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    Router.prototype.removeEmptyProps = function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var /** @type {?} */ value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.processNavigations = function () {\n        var _this = this;\n        concatMap\n            .call(this.navigations, function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return (of(null));\n            }\n        })\n            .subscribe(function () { });\n    };\n    /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    Router.prototype.scheduleNavigation = function (rawUrl, source, extras) {\n        var /** @type {?} */ lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var /** @type {?} */ resolve = null;\n        var /** @type {?} */ reject = null;\n        var /** @type {?} */ promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var /** @type {?} */ id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    Router.prototype.executeScheduledNavigation = function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject;\n        var /** @type {?} */ url = this.urlHandlingStrategy.extract(rawUrl);\n        var /** @type {?} */ urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null); })\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} shouldPreventPushState\n     * @param {?} shouldReplaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    Router.prototype.runNavigate = function (url, rawUrl, shouldPreventPushState, shouldReplaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            this.location.go(this.urlSerializer.serialize(this.currentUrlTree));\n            this.routerEvents.next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var /** @type {?} */ urlAndSnapshot$;\n            if (!precreatedState) {\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                var /** @type {?} */ redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = mergeMap.call(redirectsApplied$, function (appliedUrl) {\n                    return map.call(recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl)), function (snapshot) {\n                        _this.routerEvents.next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    });\n                });\n            }\n            else {\n                urlAndSnapshot$ = of({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var /** @type {?} */ beforePreactivationDone$ = mergeMap.call(urlAndSnapshot$, function (p) {\n                return map.call(_this.hooks.beforePreactivation(p.snapshot), function () { return p; });\n            });\n            // run preactivation: guards and data resolvers\n            var /** @type {?} */ preActivation;\n            var /** @type {?} */ preactivationTraverse$ = map.call(beforePreactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                preActivation =\n                    new PreActivation(snapshot, _this.currentRouterState.snapshot, moduleInjector);\n                preActivation.traverse(_this.rootContexts);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            });\n            var /** @type {?} */ preactivationCheckGuards$ = mergeMap.call(preactivationTraverse$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                if (_this.navigationId !== id)\n                    return of(false);\n                _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), appliedUrl, snapshot));\n                return map.call(preActivation.checkGuards(), function (shouldActivate) {\n                    _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), appliedUrl, snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                });\n            });\n            var /** @type {?} */ preactivationResolveData$ = mergeMap.call(preactivationCheckGuards$, function (p) {\n                if (_this.navigationId !== id)\n                    return of(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                    return map.call(preActivation.resolveData(), function () {\n                        _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                        return p;\n                    });\n                }\n                else {\n                    return of(p);\n                }\n            });\n            var /** @type {?} */ preactivationDone$ = mergeMap.call(preactivationResolveData$, function (p) {\n                return map.call(_this.hooks.afterPreactivation(p.snapshot), function () { return p; });\n            });\n            // create router state\n            // this operation has side effects => route state is being affected\n            var /** @type {?} */ routerState$ = map.call(preactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot, shouldActivate = _a.shouldActivate;\n                if (shouldActivate) {\n                    var /** @type {?} */ state = createRouterState(_this.routeReuseStrategy, snapshot, _this.currentRouterState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            });\n            // applied the new router state\n            // this operation has side effects\n            var /** @type {?} */ navigationIsSuccessful;\n            var /** @type {?} */ storedState = _this.currentRouterState;\n            var /** @type {?} */ storedUrl = _this.currentUrlTree;\n            routerState$\n                .forEach(function (_a) {\n                var appliedUrl = _a.appliedUrl, state = _a.state, shouldActivate = _a.shouldActivate;\n                if (!shouldActivate || id !== _this.navigationId) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.currentRouterState = state;\n                if (!shouldPreventPushState) {\n                    var /** @type {?} */ path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                    if (_this.location.isCurrentPathEqualTo(path) || shouldReplaceUrl) {\n                        _this.location.replaceState(path);\n                    }\n                    else {\n                        _this.location.go(path);\n                    }\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState)\n                    .activate(_this.rootContexts);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    _this.routerEvents.next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        rejectPromise(ee);\n                    }\n                }\n                _this.currentRouterState = storedState;\n                _this.currentUrlTree = storedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.location.replaceState(_this.serializeUrl(_this.rawUrlTree));\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.resetUrlToCurrentUrlTree = function () {\n        var /** @type {?} */ path = this.urlSerializer.serialize(this.rawUrlTree);\n        this.location.replaceState(path);\n    };\n    return Router;\n}());\nvar CanActivate = (function () {\n    /**\n     * @param {?} path\n     */\n    function CanActivate(path) {\n        this.path = path;\n    }\n    Object.defineProperty(CanActivate.prototype, \"route\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    return CanActivate;\n}());\nvar CanDeactivate = (function () {\n    /**\n     * @param {?} component\n     * @param {?} route\n     */\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\nvar PreActivation = (function () {\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @param {?} moduleInjector\n     */\n    function PreActivation(future, curr, moduleInjector) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    PreActivation.prototype.traverse = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.future._root;\n        var /** @type {?} */ currRoot = this.curr ? this.curr._root : null;\n        this.traverseChildRoutes(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.checkGuards = function () {\n        var _this = this;\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return of(true);\n        }\n        var /** @type {?} */ canDeactivate$ = this.runCanDeactivateChecks();\n        return mergeMap.call(canDeactivate$, function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : of(false); });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.resolveData = function () {\n        var _this = this;\n        if (!this.isActivating())\n            return of(null);\n        var /** @type {?} */ checks$ = from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = concatMap.call(checks$, function (check) { return _this.runResolve(check.route); });\n        return reduce.call(runningChecks$, function (_, __) { return _; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseChildRoutes = function (futureNode, currNode, contexts, futurePath) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            _this.traverseRoutes(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) { return _this.deactivateRouteAndItsChildren(v, /** @type {?} */ ((contexts)).getContext(k)); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseRoutes = function (futureNode, currNode, parentContexts, futurePath) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        var /** @type {?} */ context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future._routeConfig === curr._routeConfig) {\n            var /** @type {?} */ shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, /** @type {?} */ ((future._routeConfig)).runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.traverseChildRoutes(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                var /** @type {?} */ outlet = ((((context)).outlet));\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.traverseChildRoutes(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    };\n    /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(route);\n        var /** @type {?} */ r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                _this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                _this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = from(this.canDeactivateChecks);\n        var /** @type {?} */ runningChecks$ = mergeMap.call(checks$, function (check) { return _this.runCanDeactivate(check.component, check.route); });\n        return every.call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = concatMap.call(checks$, function (check) { return andObservables(from([_this.runCanActivateChild(check.path), _this.runCanActivate(check.route)])); });\n        return every.call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivate = function (future) {\n        var _this = this;\n        var /** @type {?} */ canActivate = future._routeConfig ? future._routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return of(true);\n        var /** @type {?} */ obs = map.call(from(canActivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, future);\n            var /** @type {?} */ observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return first.call(observable);\n        });\n        return andObservables(obs);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChild = function (path) {\n        var _this = this;\n        var /** @type {?} */ future = path[path.length - 1];\n        var /** @type {?} */ canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(map.call(from(canActivateChildGuards), function (d) {\n            var /** @type {?} */ obs = map.call(from(d.guards), function (c) {\n                var /** @type {?} */ guard = _this.getToken(c, d.node);\n                var /** @type {?} */ observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return first.call(observable);\n            });\n            return andObservables(obs);\n        }));\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    PreActivation.prototype.extractCanActivateChild = function (p) {\n        var /** @type {?} */ canActivateChild = p._routeConfig ? p._routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivate = function (component, curr) {\n        var _this = this;\n        var /** @type {?} */ canDeactivate = curr && curr._routeConfig ? curr._routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return of(true);\n        var /** @type {?} */ canDeactivate$ = mergeMap.call(from(canDeactivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, curr);\n            var /** @type {?} */ observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return first.call(observable);\n        });\n        return every.call(canDeactivate$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runResolve = function (future) {\n        var /** @type {?} */ resolve = future._resolve;\n        return map.call(this.resolveNode(resolve, future), function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = Object.assign({}, future.data, inheritedParamsDataResolve(future).resolve);\n            return null;\n        });\n    };\n    /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.resolveNode = function (resolve, future) {\n        var _this = this;\n        var /** @type {?} */ keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return of({});\n        }\n        if (keys.length === 1) {\n            var /** @type {?} */ key_1 = keys[0];\n            return map.call(this.getResolver(resolve[key_1], future), function (value) {\n                return _a = {}, _a[key_1] = value, _a;\n                var _a;\n            });\n        }\n        var /** @type {?} */ data = {};\n        var /** @type {?} */ runningResolvers$ = mergeMap.call(from(keys), function (key) {\n            return map.call(_this.getResolver(resolve[key], future), function (value) {\n                data[key] = value;\n                return value;\n            });\n        });\n        return map.call(last.call(runningResolvers$), function () { return data; });\n    };\n    /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.getResolver = function (injectionToken, future) {\n        var /** @type {?} */ resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    };\n    /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.getToken = function (token, snapshot) {\n        var /** @type {?} */ config = closestLoadedConfig(snapshot);\n        var /** @type {?} */ injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\nvar ActivateRoutes = (function () {\n    /**\n     * @param {?} routeReuseStrategy\n     * @param {?} futureState\n     * @param {?} currState\n     */\n    function ActivateRoutes(routeReuseStrategy, futureState, currState) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activate = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.futureState._root;\n        var /** @type {?} */ currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var /** @type {?} */ childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var /** @type {?} */ componentRef = context.outlet.detach();\n            var /** @type {?} */ contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n        var _this = this;\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var /** @type {?} */ children = nodeChildrenAsMap(route);\n            var /** @type {?} */ contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) { _this.activateRoutes(c, children[c.value.outlet], contexts); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var /** @type {?} */ stored = ((this.routeReuseStrategy.retrieve(future.snapshot)));\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var /** @type {?} */ config = parentLoadedConfig(future.snapshot);\n                    var /** @type {?} */ cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot) {\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap(node) {\n    var /** @type {?} */ map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands) {\n    for (var /** @type {?} */ i = 0; i < commands.length; i++) {\n        var /** @type {?} */ cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * \\@howToUse\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`\n *\n * When linking to this `user/:name` route, you can write:\n * `<a routerLink='/user/bob'>link to user component</a>`\n *\n * \\@description\n *\n * The RouterLink directives let you link to specific parts of your app.\n *\n * When the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - 'merge' merge the queryParams into the current queryParams\n *  - 'preserve' preserve the current queryParams\n *  - default / '' use the queryParams only\n *  same options for {\\@link NavigationExtras#queryParamsHandling}\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * \\@ngModule RouterModule\n *\n * See {\\@link Router#createUrlTree} for more information.\n *\n * \\@stable\n */\nvar RouterLink = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} tabIndex\n     * @param {?} renderer\n     * @param {?} el\n     */\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (isDevMode() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLink.prototype.onClick = function () {\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLink;\n}());\nRouterLink.decorators = [\n    { type: Directive, args: [{ selector: ':not(a)[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLink.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: undefined, decorators: [{ type: Attribute, args: ['tabindex',] },] },\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\nRouterLink.propDecorators = {\n    'queryParams': [{ type: Input },],\n    'fragment': [{ type: Input },],\n    'queryParamsHandling': [{ type: Input },],\n    'preserveFragment': [{ type: Input },],\n    'skipLocationChange': [{ type: Input },],\n    'replaceUrl': [{ type: Input },],\n    'routerLink': [{ type: Input },],\n    'preserveQueryParams': [{ type: Input },],\n    'onClick': [{ type: HostListener, args: ['click',] },],\n};\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * See {\\@link RouterLink} for more information.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkWithHref = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} locationStrategy\n     */\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (isDevMode() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLinkWithHref;\n}());\nRouterLinkWithHref.decorators = [\n    { type: Directive, args: [{ selector: 'a[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkWithHref.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: LocationStrategy, },\n]; };\nRouterLinkWithHref.propDecorators = {\n    'target': [{ type: HostBinding, args: ['attr.target',] }, { type: Input },],\n    'queryParams': [{ type: Input },],\n    'fragment': [{ type: Input },],\n    'queryParamsHandling': [{ type: Input },],\n    'preserveFragment': [{ type: Input },],\n    'skipLocationChange': [{ type: Input },],\n    'replaceUrl': [{ type: Input },],\n    'href': [{ type: HostBinding },],\n    'routerLink': [{ type: Input },],\n    'preserveQueryParams': [{ type: Input },],\n    'onClick': [{ type: HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] },],\n};\n/**\n * @param {?} s\n * @return {?}\n */\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n *\n * \\@howToUse\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * \\@description\n *\n * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkActive = (function () {\n    /**\n     * @param {?} router\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} cdr\n     */\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.active = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkActive.prototype, \"isActive\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.active; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        set: function (data) {\n            var /** @type {?} */ classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.update = function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        var /** @type {?} */ hasActiveLinks = this.hasActiveLinks();\n        // react only when status has changed to prevent unnecessary dom updates\n        if (this.active !== hasActiveLinks) {\n            this.classes.forEach(function (c) {\n                if (hasActiveLinks) {\n                    _this.renderer.addClass(_this.element.nativeElement, c);\n                }\n                else {\n                    _this.renderer.removeClass(_this.element.nativeElement, c);\n                }\n            });\n            Promise.resolve(hasActiveLinks).then(function (active) { return _this.active = active; });\n        }\n    };\n    /**\n     * @param {?} router\n     * @return {?}\n     */\n    RouterLinkActive.prototype.isLinkActive = function (router) {\n        var _this = this;\n        return function (link) { return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact); };\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.hasActiveLinks = function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    return RouterLinkActive;\n}());\nRouterLinkActive.decorators = [\n    { type: Directive, args: [{\n                selector: '[routerLinkActive]',\n                exportAs: 'routerLinkActive',\n            },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkActive.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ElementRef, },\n    { type: Renderer2, },\n    { type: ChangeDetectorRef, },\n]; };\nRouterLinkActive.propDecorators = {\n    'links': [{ type: ContentChildren, args: [RouterLink, { descendants: true },] },],\n    'linksWithHrefs': [{ type: ContentChildren, args: [RouterLinkWithHref, { descendants: true },] },],\n    'routerLinkActiveOptions': [{ type: Input },],\n    'routerLinkActive': [{ type: Input },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar OutletContext = (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar ChildrenOutletContexts = (function () {\n    function ChildrenOutletContexts() {\n        this.contexts = new Map();\n    }\n    /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n        var /** @type {?} */ context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n        var /** @type {?} */ contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n * state.\n *\n * \\@howToUse\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterOutlet = (function () {\n    /**\n     * @param {?} parentContexts\n     * @param {?} location\n     * @param {?} resolver\n     * @param {?} name\n     * @param {?} changeDetector\n     */\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new EventEmitter();\n        this.deactivateEvents = new EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnInit = function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var /** @type {?} */ context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"locationInjector\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.location.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"locationFactoryResolver\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return (this._activatedRoute);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    RouterOutlet.prototype.detach = function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var /** @type {?} */ cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.deactivate = function () {\n        if (this.activated) {\n            var /** @type {?} */ c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n        var /** @type {?} */ component = (((snapshot._routeConfig)).component);\n        resolver = resolver || this.resolver;\n        var /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n        var /** @type {?} */ childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var /** @type {?} */ injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    return RouterOutlet;\n}());\nRouterOutlet.decorators = [\n    { type: Directive, args: [{ selector: 'router-outlet', exportAs: 'outlet' },] },\n];\n/**\n * @nocollapse\n */\nRouterOutlet.ctorParameters = function () { return [\n    { type: ChildrenOutletContexts, },\n    { type: ViewContainerRef, },\n    { type: ComponentFactoryResolver, },\n    { type: undefined, decorators: [{ type: Attribute, args: ['name',] },] },\n    { type: ChangeDetectorRef, },\n]; };\nRouterOutlet.propDecorators = {\n    'activateEvents': [{ type: Output, args: ['activate',] },],\n    'deactivateEvents': [{ type: Output, args: ['deactivate',] },],\n};\nvar OutletInjector = (function () {\n    /**\n     * @param {?} route\n     * @param {?} childContexts\n     * @param {?} parent\n     */\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    OutletInjector.prototype.get = function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * \\@whatItDoes Provides a preloading strategy.\n *\n * \\@experimental\n * @abstract\n */\nvar PreloadingStrategy = (function () {\n    function PreloadingStrategy() {\n    }\n    /**\n     * @abstract\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadingStrategy.prototype.preload = function (route, fn) { };\n    return PreloadingStrategy;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * \\@howToUse\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * \\@experimental\n */\nvar PreloadAllModules = (function () {\n    function PreloadAllModules() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadAllModules.prototype.preload = function (route, fn) {\n        return _catch.call(fn(), function () { return of(null); });\n    };\n    return PreloadAllModules;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that does not preload any modules.\n *\n * \\@description\n *\n * This strategy is enabled by default.\n *\n * \\@experimental\n */\nvar NoPreloading = (function () {\n    function NoPreloading() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    NoPreloading.prototype.preload = function (route, fn) { return of(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * \\@stable\n */\nvar RouterPreloader = (function () {\n    /**\n     * @param {?} router\n     * @param {?} moduleLoader\n     * @param {?} compiler\n     * @param {?} injector\n     * @param {?} preloadingStrategy\n     */\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    ;\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.setUpPreloading = function () {\n        var _this = this;\n        var /** @type {?} */ navigations$ = filter.call(this.router.events, function (e) { return e instanceof NavigationEnd; });\n        this.subscription = concatMap.call(navigations$, function () { return _this.preload(); }).subscribe(function () { });\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.preload = function () {\n        var /** @type {?} */ ngModule = this.injector.get(NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n        var /** @type {?} */ res = [];\n        for (var _i = 0, routes_5 = routes; _i < routes_5.length; _i++) {\n            var route = routes_5[_i];\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                var /** @type {?} */ childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                // no config loaded, fetch the config\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n                // recurse into children\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return mergeAll.call(from(res));\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var /** @type {?} */ loaded$ = _this.loader.load(ngModule.injector, route);\n            return mergeMap.call(loaded$, function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            });\n        });\n    };\n    return RouterPreloader;\n}());\nRouterPreloader.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nRouterPreloader.ctorParameters = function () { return [\n    { type: Router, },\n    { type: NgModuleFactoryLoader, },\n    { type: Compiler, },\n    { type: Injector, },\n    { type: PreloadingStrategy, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Contains a list of directives\n * \\@stable\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * \\@whatItDoes Is used in DI to configure the router.\n * \\@stable\n */\nvar ROUTER_CONFIGURATION = new InjectionToken('ROUTER_CONFIGURATION');\n/**\n * \\@docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new InjectionToken('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            ApplicationRef, UrlSerializer, ChildrenOutletContexts, Location, Injector,\n            NgModuleFactoryLoader, Compiler, ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new Optional()], [RouteReuseStrategy, new Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\n/**\n * @return {?}\n */\nfunction routerNgProbeToken() {\n    return new NgProbeToken('Router', Router);\n}\n/**\n * \\@whatItDoes Adds router directives and providers.\n *\n * \\@howToUse\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@description\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n * \\@stable\n */\nvar RouterModule = (function () {\n    /**\n     * @param {?} guard\n     * @param {?} router\n     */\n    function RouterModule(guard, router) {\n    }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options:\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    RouterModule.forRoot = function (routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new Optional(), new SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterModule.forChild = function (routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    };\n    return RouterModule;\n}());\nRouterModule.decorators = [\n    { type: NgModule, args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] },\n];\n/**\n * @nocollapse\n */\nRouterModule.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ROUTER_FORROOT_GUARD,] },] },\n    { type: Router, decorators: [{ type: Optional },] },\n]; };\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * \\@whatItDoes Registers routes.\n *\n * \\@howToUse\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@stable\n * @param {?} routes\n * @return {?}\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var /** @type {?} */ router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var /** @type {?} */ dom_1 = ɵgetDOM();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + ((e.constructor)).name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = (function () {\n    /**\n     * @param {?} injector\n     */\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    RouterInitializer.prototype.appInitializer = function () {\n        var _this = this;\n        var /** @type {?} */ p = this.injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(function () {\n            var /** @type {?} */ resolve = ((null));\n            var /** @type {?} */ res = new Promise(function (r) { return resolve = r; });\n            var /** @type {?} */ router = _this.injector.get(Router);\n            var /** @type {?} */ opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return (of(null));\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n        var /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n        var /** @type {?} */ preloader = this.injector.get(RouterPreloader);\n        var /** @type {?} */ router = this.injector.get(Router);\n        var /** @type {?} */ ref = this.injector.get(ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(/** @type {?} */ ((null)));\n        this.resultOfPreactivationDone.complete();\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    return RouterInitializer;\n}());\nRouterInitializer.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nRouterInitializer.ctorParameters = function () { return [\n    { type: Injector, },\n]; };\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * \\@experimental\n */\nvar ROUTER_INITIALIZER = new InjectionToken('Router Initializer');\n/**\n * @return {?}\n */\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('4.3.5');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\nexport { RouterLink, RouterLinkWithHref, RouterLinkActive, RouterOutlet, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RoutesRecognized, RouteReuseStrategy, Router, ROUTES, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, RouterModule, provideRoutes, ChildrenOutletContexts, OutletContext, NoPreloading, PreloadAllModules, PreloadingStrategy, RouterPreloader, ActivatedRoute, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot, PRIMARY_OUTLET, convertToParamMap, UrlHandlingStrategy, DefaultUrlSerializer, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VERSION, ROUTER_PROVIDERS as ɵROUTER_PROVIDERS, flatten as ɵflatten, ROUTER_FORROOT_GUARD as ɵa, RouterInitializer as ɵg, getAppInitializer as ɵh, getBootstrapListener as ɵi, provideForRootGuard as ɵd, provideLocationStrategy as ɵc, provideRouterInitializer as ɵj, rootRoute as ɵf, routerNgProbeToken as ɵb, setupRouter as ɵe, Tree as ɵk, TreeNode as ɵl };\n//# sourceMappingURL=router.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/router/@angular/router.es5.js\n// module id = 52\n// module chunks = 1","import {\n    Component,\n    OnInit,\n    OnDestroy,\n    forwardRef,\n    ChangeDetectorRef,\n    Input,\n    Output,\n    EventEmitter,\n    ContentChild,\n    TemplateRef,\n    ViewEncapsulation,\n    HostListener,\n    HostBinding,\n    ViewChild,\n    ElementRef,\n    ChangeDetectionStrategy,\n    Optional,\n    Renderer2\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NgOptionTemplateDirective, NgLabelTemplateDirective } from './ng-templates.directive';\nimport { VirtualScrollComponent } from './virtual-scroll.component';\nimport { NgOption, KeyCode, NgSelectConfig } from './ng-select.types';\nimport { ItemsList } from './items-list';\nimport { Subject } from 'rxjs/Subject';\n\nconst NGB_ANG_SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgSelectComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'ng-select',\n    template: require('./ng-select.component.html'),\n    styles: [require('./ng-select.component.scss')],\n    providers: [NGB_ANG_SELECT_VALUE_ACCESSOR],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        'role': 'dropdown'\n    }\n})\nexport class NgSelectComponent implements OnInit, OnDestroy, ControlValueAccessor {\n\n    @ContentChild(NgOptionTemplateDirective, { read: TemplateRef }) optionTemplate: TemplateRef<any>;\n    @ContentChild(NgLabelTemplateDirective, { read: TemplateRef }) labelTemplate: TemplateRef<any>;\n\n    @ViewChild(VirtualScrollComponent) dropdownList: VirtualScrollComponent;\n    @ViewChild('filterInput') filterInput;\n\n    // inputs\n    @Input() bindLabel: string;\n    @Input() bindValue: string;\n    @Input() clearable = true;\n    @Input() placeholder: string;\n    @Input() notFoundText = 'No items found';\n    @Input() typeToSearchText = 'Type to search';\n    @Input() typeahead: Subject<string>;\n\n    @Input()\n    @HostBinding('class.as-multiple') multiple = false;\n\n    // output events\n    @Output('blur') onBlur = new EventEmitter();\n    @Output('focus') onFocus = new EventEmitter();\n    @Output('change') onChange = new EventEmitter();\n    @Output('open') onOpen = new EventEmitter();\n    @Output('close') onClose = new EventEmitter();\n    @Output('search') onSearch = new EventEmitter();\n\n    @HostBinding('class.as-single')\n    get single() {\n        return !this.multiple;\n    }\n\n    @HostBinding('class.opened') isOpen = false;\n    @HostBinding('class.focused') isFocused = false;\n    @HostBinding('class.disabled') isDisabled = false;\n\n    itemsList = new ItemsList([], false);\n    viewPortItems: NgOption[] = [];\n    isLoading = false;\n    filterValue: string = null;\n\n    private propagateChange = (_: NgOption) => {};\n    private disposeDocumentClickListener = () => {};\n\n    constructor(@Optional() config: NgSelectConfig,\n                private changeDetectorRef: ChangeDetectorRef,\n                private elementRef: ElementRef,\n                private renderer: Renderer2\n    ) {\n        this.mergeConfig(config);\n    }\n\n    @Input()\n    get items(): NgOption[] {\n        return this.itemsList.items;\n    }\n\n    set items(items: NgOption[]) {\n        this.itemsList = new ItemsList(items || [], this.multiple);\n\n        if (this.isTypeahead()) {\n            this.handleItemsChange();\n        }\n    }\n\n    get value(): NgOption | NgOption[] {\n        return this.itemsList.value;\n    }\n\n    ngOnInit() {\n        this.handleDocumentClick();\n        this.bindLabel = this.bindLabel || 'label';\n    }\n\n    ngOnDestroy() {\n        this.changeDetectorRef.detach();\n        this.disposeDocumentClickListener();\n    }\n\n    @HostListener('keydown', ['$event'])\n    handleKeyDown($event: KeyboardEvent) {\n        if (KeyCode[$event.which]) {\n            switch ($event.which) {\n                case KeyCode.ArrowDown:\n                    this.handleArrowDown($event);\n                    break;\n                case KeyCode.ArrowUp:\n                    this.handleArrowUp($event);\n                    break;\n                case KeyCode.Space:\n                    this.handleSpace($event);\n                    break;\n                case KeyCode.Enter:\n                    this.handleEnter($event);\n                    break;\n                case KeyCode.Tab:\n                    this.handleTab($event);\n                    break;\n                case KeyCode.Esc:\n                    this.close();\n                    break;\n                case KeyCode.Backspace:\n                    this.handleBackspace();\n                    break;\n            }\n        }\n    }\n\n    handleArrowClick($event: Event) {\n        $event.stopPropagation();\n        if (this.isOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    handleSelectClick($event: Event) {\n        $event.stopPropagation();\n        this.open();\n    }\n\n    handleClearClick($event: Event) {\n        $event.stopPropagation();\n        this.clear();\n    }\n\n    clear() {\n        if (!this.clearable) {\n            return;\n        }\n        this.itemsList.clearSelected();\n        this.clearSearch();\n        this.notifyModelChanged();\n    }\n\n    writeValue(value: any): void {\n        this.itemsList.clearSelected();\n        if (value) {\n            if (this.multiple) {\n                value.forEach(item => {\n                    this.selectWriteValue(item);\n                });\n            } else {\n                this.selectWriteValue(value);\n            }\n        }\n        this.detectChanges();\n    }\n\n    registerOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        // TODO: touch event\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.isDisabled = isDisabled;\n    }\n\n    open() {\n        if (this.isDisabled || this.isOpen) {\n            return;\n        }\n        this.isOpen = true;\n        this.itemsList.markItem();\n        this.scrollToMarked();\n        this.focusSearchInput();\n        this.onOpen.emit();\n    }\n\n    close() {\n        if (!this.isOpen) {\n            return;\n        }\n        this.isOpen = false;\n        this.clearSearch();\n        this.onClose.emit();\n    }\n\n    getLabelValue(value: NgOption) {\n        return value ? value[this.bindLabel] : '';\n    }\n\n    getDisplayTemplateContext() {\n        return this.itemsList.value ? { item: this.itemsList.value } : { item: {} };\n    }\n\n    toggle(item: NgOption) {\n        if (!item || item.disabled || this.isDisabled) {\n            return;\n        }\n\n        if (this.multiple && item.selected) {\n            this.unselect(item);\n        } else {\n            this.select(item);\n        }\n    }\n\n    select(item: NgOption) {\n        if (!item.selected) {\n            this.itemsList.select(item);\n            this.updateModel();\n        }\n\n        if (this.single) {\n            this.close();\n        }\n    }\n\n    unselect(item: NgOption) {\n        this.itemsList.unselect(item);\n        this.updateModel();\n    }\n\n    showPlaceholder() {\n        return this.placeholder && !this.isValueSet(this.value) && !this.filterValue;\n    }\n\n    showValue() {\n        return !this.filterValue && this.isValueSet(this.value);\n    }\n\n    showClear() {\n        return this.clearable && (this.isValueSet(this.value) || this.filterValue) && !this.isDisabled;\n    }\n\n    showFilter() {\n        return !this.isDisabled;\n    }\n\n    showNoItemsFound() {\n        const empty = this.itemsList.filteredItems.length === 0;\n        return (empty && !this.isTypeahead()) ||\n            (empty && this.isTypeahead() && this.filterValue && !this.isLoading);\n    }\n\n    showTypeToSearch() {\n        const empty = this.itemsList.filteredItems.length === 0;\n        return empty && this.isTypeahead() && !this.filterValue && !this.isLoading;\n    }\n\n    onFilter($event) {\n        if (!this.isOpen) {\n            this.open();\n        }\n\n        this.filterValue = $event.target.value;\n\n        if (this.isTypeahead()) {\n            this.isLoading = true;\n            this.typeahead.next(this.filterValue);\n        } else {\n            this.itemsList.filter(this.filterValue, this.bindLabel);\n        }\n    }\n\n    onInputFocus($event) {\n        this.isFocused = true;\n        this.onFocus.emit($event);\n    }\n\n    onInputBlur($event) {\n        this.isFocused = false;\n        this.onBlur.emit($event);\n    }\n\n    onItemHover(item: NgOption) {\n        if (item.disabled) {\n            return;\n        }\n        this.itemsList.markItem(item);\n    }\n\n    private handleDocumentClick() {\n        const handler = ($event) => {\n            // prevent close if clicked on select\n            if (this.elementRef.nativeElement.contains($event.target)) {\n                return;\n            }\n\n            // prevent close if clicked on dropdown menu\n            const dropdown = this.getDropdownMenu();\n            if (dropdown && dropdown.contains($event.target)\n            ) {\n                return;\n            }\n\n            if (this.isFocused) {\n                this.onInputBlur($event);\n            }\n\n            if (this.isOpen) {\n                this.close();\n            }\n        };\n\n        this.disposeDocumentClickListener = this.renderer.listen('document', 'click', handler);\n    }\n\n    private validateWriteValue(value: any) {\n        if (value instanceof Object && this.bindValue) {\n            throw new Error('Binding object with bindValue is not allowed.')\n        }\n    }\n\n    private handleItemsChange() {\n        this.isLoading = false;\n        this.itemsList.markItem();\n    }\n\n    private selectWriteValue(value: any) {\n        this.validateWriteValue(value);\n        let index = -1;\n        if (this.bindValue) {\n            index = this.itemsList.items.findIndex(x => x[this.bindValue] === value);\n        } else {\n            index = this.itemsList.items.indexOf(value);\n            index = index > -1 ? index :\n                this.itemsList.items.findIndex(x => x[this.bindLabel] === value[this.bindLabel])\n        }\n        if (index > -1) {\n            this.itemsList.select(this.itemsList.items[index]);\n        }\n    }\n\n    private updateModel() {\n        this.notifyModelChanged();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    private clearSearch() {\n        this.filterValue = null;\n        this.itemsList.clearFilter();\n    }\n\n    private focusSearchInput() {\n        setTimeout(() => {\n            this.filterInput.nativeElement.focus(); // TODO: this won't work on mobile\n        });\n    }\n\n    private scrollToMarked() {\n        this.dropdownList.scrollInto(this.itemsList.markedItem);\n    }\n\n    private handleTab($event: KeyboardEvent) {\n        if (this.isOpen) {\n            this.select(this.itemsList.markedItem);\n            if (this.multiple) {\n                this.close();\n            }\n        }\n    }\n\n    private handleEnter($event: KeyboardEvent) {\n        if (this.isOpen) {\n            this.toggle(this.itemsList.markedItem);\n        }\n        $event.preventDefault();\n    }\n\n    private handleSpace($event: KeyboardEvent) {\n        if (this.isOpen) {\n            return;\n        }\n        this.open();\n        $event.preventDefault();\n    }\n\n    private handleArrowDown($event: KeyboardEvent) {\n        if (!this.isOpen) {\n            this.open();\n        } else {\n            this.itemsList.markNextItem();\n            this.scrollToMarked();\n        }\n        $event.preventDefault();\n    }\n\n    private handleArrowUp($event: KeyboardEvent) {\n        this.itemsList.markPreviousItem();\n        this.scrollToMarked();\n        $event.preventDefault();\n    }\n\n    private handleBackspace() {\n        if (this.multiple) {\n            this.itemsList.unselectLastItem();\n            this.updateModel();\n        } else {\n            if (this.filterValue) {\n                return;\n            }\n            this.clear();\n        }\n    }\n\n    private notifyModelChanged() {\n        const value = this.itemsList.value;\n        if (!value) {\n            this.propagateChange(null);\n        } else if (this.bindValue) {\n            const bindValue = Array.isArray(value) ?\n                value.map(x => x[this.bindValue]) :\n                value[this.bindValue];\n            this.propagateChange(bindValue);\n        } else {\n            this.propagateChange(value);\n        }\n        this.onChange.emit(value);\n    }\n\n    private getDropdownMenu() {\n        if (!this.isOpen || !this.dropdownList) {\n            return null;\n        }\n        return <HTMLElement>this.elementRef.nativeElement.querySelector('.as-menu-outer');\n    }\n\n    private isTypeahead() {\n        return this.typeahead && this.typeahead.observers.length > 0;\n    }\n\n    private detectChanges() {\n        if (!(<any>this.changeDetectorRef).destroyed) {\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    private isValueSet(value: any): boolean {\n        if (this.multiple) {\n            return !!value && value.length > 0;\n        }\n        return !!value;\n    }\n\n    private mergeConfig(config: NgSelectConfig) {\n        if (!config) {\n            return;\n        }\n        this.notFoundText = config.notFoundText || this.notFoundText;\n        this.typeToSearchText = config.typeToSearchText || this.typeToSearchText;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/lib/src/ng-select.component.ts","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ng-option-tmp]' })\nexport class NgOptionTemplateDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n\n@Directive({ selector: '[ng-label-tmp]' })\nexport class NgLabelTemplateDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/lib/src/ng-templates.directive.ts","/**\n * The MIT License (MIT)\n * Copyright (c) 2016 Rinto Jose (rintoj)\n * Source code https://github.com/rintoj/angular2-virtual-scroll\n */\n\nimport {\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgModule, NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output, Renderer2,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nexport interface ChangeEvent {\n    start?: number;\n    end?: number;\n}\n\n@Component({\n    selector: 'virtual-scroll,[virtualScroll]',\n    exportAs: 'virtualScroll',\n    template: `\n        <div *ngIf=\"enabled\" class=\"total-padding\" [style.height]=\"scrollHeight + 'px'\"></div>\n        <div #content\n             [class.scrollable-content]=\"enabled\"\n             [style.transform]=\"enabled ? 'translateY(' + topPadding + 'px)' : 'none'\"\n             [style.webkitTransform]=\"enabled ? 'translateY(' + topPadding + 'px)' : 'none'\">\n            <ng-content></ng-content>\n        </div>\n    `,\n    host: {\n        '[style.overflow-y]': 'parentScroll ? \\'hidden\\' : \\'auto\\''\n    },\n    styles: [`\n        :host {\n            overflow: hidden;\n            position: relative;\n            display: block;\n            -webkit-overflow-scrolling: touch;\n        }\n\n        .scrollable-content {\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            position: absolute;\n        }\n\n        .total-padding {\n            width: 1px;\n            opacity: 0;\n        }\n    `]\n})\nexport class VirtualScrollComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    items: any[] = [];\n\n    @Input()\n    scrollbarWidth: number;\n\n    @Input()\n    scrollbarHeight: number;\n\n    @Input()\n    childWidth: number;\n\n    @Input()\n    childHeight: number;\n\n    @Input()\n    bufferAmount = 0;\n\n    @Output()\n    update: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n    @ViewChild('content', {read: ElementRef})\n    contentElementRef: ElementRef;\n\n    @ContentChild('container')\n    containerElementRef: ElementRef;\n\n    topPadding: number;\n    scrollHeight: number;\n\n    private previousStart: number;\n    private previousEnd: number;\n    private startupLoop = true;\n    private disposeScrollListener = () => {};\n\n    constructor(private element: ElementRef, private zone: NgZone, private renderer: Renderer2) {\n    }\n\n    get enabled() {\n        return this.items && this.items.length > 20;\n    }\n\n    handleScroll() {\n        const handler = () => {\n            if (!this.enabled) {\n                this.update.emit(this.items);\n                return;\n            }\n            this.refresh();\n        };\n        this.disposeScrollListener = this.renderer.listen(this.element.nativeElement, 'scroll', handler);\n    }\n\n    ngOnInit() {\n        this.handleScroll();\n        this.scrollbarWidth = 0; // this.element.nativeElement.offsetWidth - this.element.nativeElement.clientWidth;\n        this.scrollbarHeight = 0; // this.element.nativeElement.offsetHeight - this.element.nativeElement.clientHeight;\n    }\n\n    ngOnDestroy() {\n        this.disposeScrollListener();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.previousStart = undefined;\n        this.previousEnd = undefined;\n        const items = (changes as any).items || {};\n        if ((changes as any).items !== undefined && items.previousValue === undefined ||\n            (items.previousValue !== undefined && items.previousValue.length === 0)) {\n            this.startupLoop = true;\n        }\n        this.items = items.currentValue;\n        this.refresh();\n    }\n\n    refresh() {\n        if (!this.enabled) {\n            this.update.emit(this.items);\n            return;\n        }\n        this.zone.runOutsideAngular(() => {\n            requestAnimationFrame(() => this.calculateItems());\n        });\n    }\n\n    scrollInto(item: any) {\n        let el: Element = this.element.nativeElement;\n        let index: number = (this.items || []).indexOf(item);\n        if (index < 0 || index >= (this.items || []).length) {\n            return;\n        }\n\n        const d = this.calculateDimensions();\n        const buffer = Math.floor(d.viewHeight / d.childHeight) - 1;\n        el.scrollTop = (Math.floor(index / d.itemsPerRow) * d.childHeight)\n            - (d.childHeight * Math.min(index, buffer));\n        this.refresh();\n    }\n\n    private countItemsPerRow() {\n        let offsetTop;\n        let itemsPerRow;\n        let children = this.contentElementRef.nativeElement.children;\n        for (itemsPerRow = 0; itemsPerRow < children.length; itemsPerRow++) {\n            if (offsetTop !== undefined && offsetTop !== children[itemsPerRow].offsetTop) {\n                break;\n            }\n            offsetTop = children[itemsPerRow].offsetTop;\n        }\n        return itemsPerRow;\n    }\n\n    private getElementsOffset(): number {\n        let offsetTop = 0;\n        if (this.containerElementRef && this.containerElementRef.nativeElement) {\n            offsetTop += this.containerElementRef.nativeElement.offsetTop;\n        }\n        return offsetTop;\n    }\n\n    private calculateDimensions() {\n        let el: Element = this.element.nativeElement;\n        let items = this.items || [];\n        let itemCount = items.length;\n        let viewWidth = el.clientWidth - this.scrollbarWidth;\n        let viewHeight = el.clientHeight - this.scrollbarHeight;\n\n        let contentDimensions;\n        if (this.childWidth === undefined || this.childHeight === undefined) {\n            let content = this.contentElementRef.nativeElement;\n            if (this.containerElementRef && this.containerElementRef.nativeElement) {\n                content = this.containerElementRef.nativeElement;\n            }\n            contentDimensions = content.children[0] ? content.children[0].getBoundingClientRect() : {\n                width: viewWidth,\n                height: viewHeight\n            };\n        }\n        let childWidth = this.childWidth || contentDimensions.width;\n        let childHeight = this.childHeight || contentDimensions.height;\n\n        let itemsPerRow = Math.max(1, this.countItemsPerRow());\n        let itemsPerRowByCalc = Math.max(1, Math.floor(viewWidth / childWidth));\n        let itemsPerCol = Math.max(1, Math.floor(viewHeight / childHeight));\n        let scrollTop = Math.max(0, el.scrollTop);\n        if (itemsPerCol === 1 && Math.floor(scrollTop / this.scrollHeight * itemCount) + itemsPerRowByCalc >= itemCount) {\n            itemsPerRow = itemsPerRowByCalc;\n        }\n\n        return {\n            itemCount: itemCount,\n            viewWidth: viewWidth,\n            viewHeight: viewHeight,\n            childWidth: childWidth,\n            childHeight: childHeight,\n            itemsPerRow: itemsPerRow,\n            itemsPerCol: itemsPerCol,\n            itemsPerRowByCalc: itemsPerRowByCalc\n        };\n    }\n\n    private calculateItems() {\n        NgZone.assertNotInAngularZone();\n        let el = this.element.nativeElement;\n\n        let d = this.calculateDimensions();\n        let items = this.items || [];\n        let offsetTop = this.getElementsOffset();\n        this.scrollHeight = d.childHeight * d.itemCount / d.itemsPerRow;\n        if (el.scrollTop > this.scrollHeight) {\n            el.scrollTop = this.scrollHeight + offsetTop;\n        }\n\n        let scrollTop = Math.max(0, el.scrollTop - offsetTop);\n        let indexByScrollTop = scrollTop / this.scrollHeight * d.itemCount / d.itemsPerRow;\n        let end = Math.min(d.itemCount, Math.ceil(indexByScrollTop) * d.itemsPerRow + d.itemsPerRow * (d.itemsPerCol + 1));\n\n        let maxStartEnd = end;\n        const modEnd = end % d.itemsPerRow;\n        if (modEnd) {\n            maxStartEnd = end + d.itemsPerRow - modEnd;\n        }\n        let maxStart = Math.max(0, maxStartEnd - d.itemsPerCol * d.itemsPerRow - d.itemsPerRow);\n        let start = Math.min(maxStart, Math.floor(indexByScrollTop) * d.itemsPerRow);\n\n        this.topPadding = d.childHeight * Math.ceil(start / d.itemsPerRow) - (d.childHeight * Math.min(start, this.bufferAmount));\n\n        start = !isNaN(start) ? start : -1;\n        end = !isNaN(end) ? end : -1;\n        start -= this.bufferAmount;\n        start = Math.max(0, start);\n        end += this.bufferAmount;\n        end = Math.min(items.length, end);\n        if (start !== this.previousStart || end !== this.previousEnd) {\n\n            // update the scroll list\n            this.zone.run(() => {\n                this.update.emit(items.slice(start, end));\n            });\n\n            this.previousStart = start;\n            this.previousEnd = end;\n\n            if (this.startupLoop === true) {\n                this.refresh();\n            }\n\n        } else if (this.startupLoop === true) {\n            this.startupLoop = false;\n            this.refresh();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [VirtualScrollComponent],\n    declarations: [VirtualScrollComponent]\n})\nexport class VirtualScrollModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/lib/src/virtual-scroll.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { AppComponent } from './app.component';\nimport { SelectWithTemplatesComponent } from './select-with-templates.component';\nimport { SelectBindingsComponent } from './select-bindings.component';\nimport { SelectSearchComponent } from './select-search.component';\nimport { ReactiveFormsComponent } from './reactive-forms.component';\nimport { SelectEventsComponent } from './select-events.component';\nimport { SelectMultiComponent } from './select-multi.component';\nimport { SelectAutocompleteComponent } from './select-autocomplete.component';\n\nconst appRoutes: Routes = [\n    {\n        path: '',\n        redirectTo: '/forms',\n        pathMatch: 'full'\n    },\n    { path: 'forms', component: ReactiveFormsComponent, data: { title: 'Reactive forms' } },\n    { path: 'bindings', component: SelectBindingsComponent, data: { title: 'Custom bindings' } },\n    { path: 'filter-client', component: SelectSearchComponent },\n    { path: 'filter-server', component: SelectAutocompleteComponent },\n    { path: 'templates', component: SelectWithTemplatesComponent },\n    { path: 'multiselect', component: SelectMultiComponent },\n    { path: 'events', component: SelectEventsComponent },\n];\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        NgSelectModule.forRoot({notFoundText: 'No items found', typeToSearchText: 'Type to search'}),\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        RouterModule.forRoot(\n            appRoutes,\n            {\n                useHash: true\n            }\n        )\n    ],\n    declarations: [\n        AppComponent,\n        SelectWithTemplatesComponent,\n        SelectBindingsComponent,\n        SelectSearchComponent,\n        ReactiveFormsComponent,\n        SelectEventsComponent,\n        SelectMultiComponent,\n        SelectAutocompleteComponent\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/demo/app/app.module.ts"],"sourceRoot":""}